[
    {
        "id": "0",
        "valid_gpt_response": true,
        "query": "SELECT ?property ?propertyType ?propertyLabel ?propertyDescription WHERE {\n?property wikibase:propertyType ?propertyType .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ASC(xsd:integer(STRAFTER(STR(?property), 'P')))",
        "complexity_description": "Uses SERVICE, ORDER BY with function and property path",
        "complexity": "complex"
    },
    {
        "id": "1",
        "valid_gpt_response": true,
        "query": "SELECT ?id ?idLabel ?idDescription ?new{\n?id wikibase:directClaim ?pid .\nminus{?id wikibase:propertyType wikibase:ExternalId}\nBIND(Replace(STR(?id),\"http://www.wikidata.org/entity/P\",\" \") as ?new)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nORDER BY DESC(xsd:integer(?new))",
        "complexity_description": "Multiple patterns, minus clause, bind and service",
        "complexity": "complex"
    },
    {
        "id": "2",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?article) AS ?count)\nWHERE {\n?article wdt:P31/wdt:P279* wd:Q13442814\n}",
        "complexity_description": "Simple query with a single triple pattern and aggregation",
        "complexity": "simple"
    },
    {
        "id": "3",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(DISTINCT ?article) AS ?count)\nWHERE {?article wdt:P31/wdt:P279* wd:Q95074}",
        "complexity_description": "Single triple pattern with property path",
        "complexity": "simple"
    },
    {
        "id": "4",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?item) AS ?count)\nWHERE { ?item wdt:P625 [] }",
        "complexity_description": "Single pattern with count",
        "complexity": "simple"
    },
    {
        "id": "5",
        "valid_gpt_response": true,
        "query": "SELECT ?q ?langcode ?langLabel (COUNT(?label) AS ?count) WHERE {\nVALUES ?q {wd:Q43459}\n?q (rdfs:label|skos:altLabel) ?label\nBIND(LANG(?label) AS ?langcode)\n?lang wdt:P218 ?langcode\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?q ?langcode ?langLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple patterns, subqueries, and aggregation",
        "complexity": "complex"
    },
    {
        "id": "6",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?p ?pLabel ?pDescription WHERE {\n?p wdt:P31 wd:Q5;\nwdt:P21 wd:Q6581072;\n{?p wdt:P19 wd:Q145} # place of birth: UK\nUNION {?p wdt:P19 ?place.\n{ ?place wdt:P131?/wdt:P17 wd:Q145 } # places whose country is the UK\nUNION\n{ ?place wdt:P131*/wdt:P17?/wdt:P31 wd:Q3336843 } # places whose country is a constituent of the UK\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ?pLabel",
        "complexity_description": "Multiple UNIONs, nested queries, and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "7",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?p ?pLabel ?pDescription WHERE {\n?p wdt:P31 wd:Q5;\nwdt:P21 wd:Q6581072;\nwdt:P19 wd:Q145.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ?pLabel",
        "complexity_description": "Multiple triple patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "8",
        "valid_gpt_response": true,
        "query": "SELECT ?work ?title ?year ?english ?french WHERE {\n?work wdt:P50 wd:Q9068\nOPTIONAL{?work wdt:P577 ?pubdate}\nBIND(YEAR(?pubdate) as ?year)\nOPTIONAL{ ?english schema:about ?work ; schema:isPartOf <https://en.wikipedia.org/> }\nOPTIONAL{ ?french schema:about ?work ; schema:isPartOf <https://fr.wikipedia.org/> }\nOPTIONAL{ ?work rdfs:label ?title filter(lang(?title) = \"en\") }\n}",
        "complexity_description": "Multiple optional patterns, language filters and function usage",
        "complexity": "medium"
    },
    {
        "id": "9",
        "valid_gpt_response": true,
        "query": "SELECT ?workLabel ?pubdate ?pubdatePrecision ?image ?typelabel ?english\n(URI(CONCAT(\"https://tools.wmflabs.org/reasonator/?q=\", SUBSTR(STR(?work),32) )) as ?reasonator) #build a reasonator link\n(IF(BOUND(?english), ?english, ?reasonator) as ?link) # link to English Wikipedia article, if available\nWHERE {\n?work wdt:P50 wd:Q9068; # author: Voltaire\nwdt:P31 ?type; # What is the work? poem, play, historical work etc.?\np:P577/psv:P577 ?pubdateStatementNode\nMINUS {?work wdt:P31 wd:Q3331189} # exclude editions\nMINUS {?work wdt:P31 wd:Q105420} # exclude anthologies\n?pubdateStatementNode wikibase:timeValue ?pubdate ;\nwikibase:timePrecision ?pubdatePrecision # get precision of the publication date\nOPTIONAL {?work wdt:P18 ?image}\nOPTIONAL{ ?english schema:about ?work ; schema:isPartOf <https://en.wikipedia.org/> }\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"fr,en,de\"} # Prefer labels in French but fall back to English and German\n?type rdfs:label ?typelabel FILTER(lang(?typelabel) =\"en\") # English labels for the types\n}",
        "complexity_description": "Multiple filters, optional patterns, and service calls",
        "complexity": "complex"
    },
    {
        "id": "10",
        "valid_gpt_response": true,
        "query": "SELECT ?work ?workLabel (COUNT(DISTINCT ?sitelink) as ?linkcount) WHERE {\n?work wdt:P50 wd:Q9068. # works by Voltaire\nMINUS {?work wdt:P31 wd:Q39811647} # translations\nMINUS {?work wdt:P31 wd:Q3331189} # editions\nMINUS {?work wdt:P31 wd:Q105420} # anthologies\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,de\". }\nOPTIONAL{?sitelink schema:about ?work . # get Wikimedia pages about the work\nFILTER(CONTAINS(str(?sitelink), \".wikipedia.org/\")) } # only Wikipedia links\n} GROUP BY ?work ?workLabel ORDER BY DESC(?linkcount)",
        "complexity_description": "Multiple MINUS clauses, SERVICE and OPTIONAL patterns",
        "complexity": "complex"
    },
    {
        "id": "11",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person ?name ?birthplace ?birthyear ?coord ?layer WHERE {\n{?person wdt:P106 wd:Q188094} UNION {?person wdt:P101 wd:Q8134} MINUS {?person wdt:P106 wd:Q188094; wdt:P101 wd:Q8134}\n?person wdt:P570 ?dod;\nwdt:P19 ?place .\n?place wdt:P625 ?coord\nOPTIONAL { ?person wdt:P569 ?dob }\nBIND(YEAR(?dob) as ?birthyear)\nBIND(IF( (?birthyear < 1700), \"Pre-1700\", IF((?birthyear < 1751), \"1700-1750\", IF((?birthyear < 1801), \"1751-1800\", IF((?birthyear < 1851), \"1801-1850\", IF((?birthyear < 1901), \"1851-1900\", IF((?birthyear < 1951), \"1901-1950\", \"Post-1950\") ) ) ) )) AS ?layer )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".?person rdfs:label ?name. ?place rdfs:label ?birthplace }\n} ORDER BY ?birthyear",
        "complexity_description": "Multiple UNION, MINUS, OPTIONAL, BIND, and SERVICE clauses with nested conditional statements",
        "complexity": "complex"
    },
    {
        "id": "12",
        "valid_gpt_response": true,
        "query": "SELECT ?coord ?birthyear ?birthplace ?name ?person WHERE {\n{?person wdt:P106 wd:Q188094 } UNION {?person wdt:P101 wd:Q8134} MINUS {?person wdt:P106 wd:Q188094; wdt:P101 wd:Q8134}\n?person wdt:P19 ?place .\n?place wdt:P625 ?coord .\nOPTIONAL { ?person wdt:P569 ?dob }.\nMINUS { ?person wdt:P570 ?dod }.\nBIND(YEAR(?dob) as ?birthyear).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?person rdfs:label ?name. ?place rdfs:label ?birthplace}\n}",
        "complexity_description": "Multiple UNION, MINUS, OPTIONAL and SERVICE clauses",
        "complexity": "complex"
    },
    {
        "id": "13",
        "valid_gpt_response": true,
        "query": "SELECT ?name ?coord ?image ?workplace ?article WHERE {\n?person wdt:P166 wd:Q47170 ;\nwdt:P108 ?place .\n?place wdt:P625 ?coord\nOPTIONAL{ ?person wdt:P18 ?image }\nOPTIONAL{ ?article schema:about ?person ; schema:isPartOf <https://en.wikipedia.org/> }\nMINUS{ ?person wdt:P31/wdt:P279? wd:Q15632617 } # exclude fictional people\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?place rdfs:label ?workplace. ?person rdfs:label ?name}\n}",
        "complexity_description": "Multiple optional patterns, minus clause and service call",
        "complexity": "complex"
    },
    {
        "id": "14",
        "valid_gpt_response": true,
        "query": "SELECT ?name ?coord ?image ?almamater ?article WHERE {\n?person wdt:P166 wd:Q47170 ;\nwdt:P69 ?place .\n?place wdt:P625 ?coord\nOPTIONAL{ ?person wdt:P18 ?image }\nOPTIONAL{ ?article schema:about ?person ; schema:isPartOf <https://en.wikipedia.org/> }\nMINUS{ ?person wdt:P31/wdt:P279? wd:Q15632617 } # Exclude fictional people\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?place rdfs:label ?almamater. ?person rdfs:label ?name}\n}",
        "complexity_description": "Multiple optional patterns, minus clause and service call",
        "complexity": "complex"
    },
    {
        "id": "15",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?name ?field ?fieldname ?nationality WHERE {\n?person wdt:P101 ?field; #?field = Q39680 for macroeconomics # Q39072 for microeconomics\nwdt:P27 ?place .\n?field wdt:P279+ wd:Q8134 .\n?person rdfs:label ?name filter (lang(?name) = \"en\")\n?place rdfs:label ?nationality filter (lang(?nationality) = \"en\")\n?field rdfs:label ?fieldname filter (lang(?fieldname) = \"en\")\nMINUS{ ?person wdt:P31/wdt:P279? wd:Q15632617 } # exclude fictional people\n} ORDER BY ASC(?fieldname)",
        "complexity_description": "Multiple joins, filters and minus clause",
        "complexity": "complex"
    },
    {
        "id": "16",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person ?name ?birthyear ?deathyear ?enws ?quotes ?commonscat\n(URI(CONCAT(\"https://www.gutenberg.org/ebooks/author/\", ?gutenberg_id)) AS ?gutenberg)\n(URI(CONCAT(\"https://doi.org/10.1093/ref:odnb/\", ?odnb)) AS ?odnburl)\n(URI(CONCAT(\"http://onlinebooks.library.upenn.edu/webbin/book/lookupname?key=\", ?books)) AS ?booksurl)\n(URI(CONCAT(\"https://www.britannica.com/\", ?britannica)) AS ?britannicaurl) ?npg WHERE {\n{ ?person wdt:P106 wd:Q188094 }\nUNION\n{ ?person wdt:P101 wd:Q8134 }\nOPTIONAL {?person wdt:P1938 ?gutenberg_id}\nOPTIONAL { ?person wdt:P4629 ?books }\nOPTIONAL {\n?enws schema:about ?person;\nschema:isPartOf <https://en.wikisource.org/>\n}\nFILTER (BOUND(?enws) || BOUND(?gutenberg_id) || BOUND(?books))\nOPTIONAL { ?person wdt:P570 ?death }\nBIND(YEAR(?death) AS ?deathyear)\nOPTIONAL { ?person wdt:P569 ?birth }\nBIND(YEAR(?birth) AS ?birthyear)\nOPTIONAL { ?person wdt:P1417 ?britannica }\nOPTIONAL { ?person wdt:P1816 ?npg }\nOPTIONAL { ?person wdt:P373 ?commonscat }\nOPTIONAL {\n?quote schema:about ?person;\nschema:isPartOf <https://en.wikiquote.org/>\n}\nOPTIONAL { ?person wdt:P1415 ?odnb }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?person rdfs:label ?name }\n}\nORDER BY ?deathyear",
        "complexity_description": "Multiple UNION, OPTIONAL clauses, and FILTER with BOUND functions",
        "complexity": "complex"
    },
    {
        "id": "17",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person ?personLabel ?award ?awardLabel ?year WHERE {\n?person p:P166 ?statement.\n?statement ps:P166 ?award.\n?award wdt:P31 wd:Q17701409\nOPTIONAL { ?statement pq:P585 ?date. BIND(YEAR(?date) AS ?year) }\nMINUS{ ?person wdt:P31/wdt:P279? wd:Q15632617 } # exclude fictional people\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ASC(?awardLabel) ASC(?year)",
        "complexity_description": "Multiple joins, optional clause, minus clause and service call",
        "complexity": "complex"
    },
    {
        "id": "18",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person ?personLabel (COUNT(?award) AS ?awards) (GROUP_CONCAT(?awardLabel; separator=\", \") as ?list) WHERE {\n?person wdt:P166 ?award.\n?award wdt:P31 wd:Q17701409\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . ?award rdfs:label ?awardLabel . ?person rdfs:label ?personLabel }\n} GROUP BY ?person ?personLabel\nHAVING ( ?awards > 1 )\nORDER BY DESC(?awards)",
        "complexity_description": "Multiple joins, subqueries, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "19",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person ?personLabel ?award ?awardLabel ?year WHERE {\n?person p:P166 ?statement.\n?statement ps:P166 ?award.\n?award wdt:P31 wd:Q17701409\nMINUS { ?person wdt:P106 wd:Q188094 }\nMINUS{ ?person wdt:P31/wdt:P279? wd:Q15632617 } # exclude fictional people\nOPTIONAL { ?statement pq:P585 ?date. BIND(YEAR(?date) AS ?year) }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ASC(?awardLabel) ASC(?year)",
        "complexity_description": "Multiple joins, MINUS and OPTIONAL clauses",
        "complexity": "complex"
    },
    {
        "id": "20",
        "valid_gpt_response": true,
        "query": "SELECT ?countryLabel ?postLabel ?post WHERE {\n?post wdt:P279 wd:Q7614320;\nwdt:P17 ?country\nMINUS{ ?post wdt:P576 [] } # Exclude abolished posts\nOPTIONAL{ ?post wdt:P1001 ?jurisdiction }\nFILTER( !(BOUND(?jurisdiction) && ?jurisdiction != ?country) )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ?countryLabel",
        "complexity_description": "Multiple filters, optional clause and minus operation",
        "complexity": "complex"
    },
    {
        "id": "21",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?start ?end ?image ?link ?partyLabel WHERE {\n?item p:P39 ?s.?s ps:P39 wd:Q531471.\n?s pq:P580 ?start. OPTIONAL {?s pq:P582 ?end}\nOPTIONAL {?item wdt:P18 ?image}\nOPTIONAL {?item wdt:P1417 ?id}\nOPTIONAL {?item wdt:P102 ?party}\nBIND(IF(BOUND(?id), URI(CONCAT(\"https://www.britannica.com/\",?id)) , ?item) AS ?link)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?start",
        "complexity_description": "Multiple optional patterns, service call and conditional binding",
        "complexity": "complex"
    },
    {
        "id": "22",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?start ?end ?image ?link ?nominatedLabel WHERE {\n?item p:P39 ?s.?s ps:P39 wd:Q2666591.\n?s pq:P580 ?start. OPTIONAL {?s pq:P582 ?end}\nOPTIONAL {?item wdt:P18 ?image}\nOPTIONAL {?item wdt:P1417 ?id}\nOPTIONAL {?s pq:P4353 ?nominated}\nBIND(IF(BOUND(?id), URI(CONCAT(\"https://www.britannica.com/\",?id)) , ?item) AS ?link)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?start",
        "complexity_description": "Multiple optional patterns, service call and conditional binding",
        "complexity": "complex"
    },
    {
        "id": "23",
        "valid_gpt_response": true,
        "query": "SELECT ?c ?cLabel ?item ?itemLabel WHERE {\n?item wdt:P31 wd:Q5335686.\n?c wdt:P463 ?item\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?itemLabel",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "24",
        "valid_gpt_response": true,
        "query": "SELECT ?iso ?countryLabel (SUM(?stars) as ?stars) ?fertility WHERE {\n{SELECT DISTINCT ?country ?iso WHERE {\nVALUES ?countrytypes {wd:Q6256 wd:Q3624078} # country and sovereign state\n?country wdt:P31 ?countrytypes ; wdt:P298 ?iso\nMINUS {?country wdt:P576 []} # Not dissolved\n} }\n?country wdt:P163 ?flag.\nOPTIONAL{\n?flag p:P180 [ps:P180 ?feature ; pq:P1114 ?stars] . # quantity of feature\n?feature wdt:P279? wd:Q836708 # type of star polygon\n}\nOPTIONAL { ?country wdt:P4841 ?fertility }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?iso ?countryLabel ?fertility\nORDER BY DESC(?stars) ?countryLabel",
        "complexity_description": "Multiple subqueries, optional patterns, and aggregation",
        "complexity": "complex"
    },
    {
        "id": "25",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?web ?collegeLabel (IF(BOUND(?hq), ?hq, ?coord) as ?location) ?arms WHERE {\n{?college wdt:P31 wd:Q2581649} UNION {?college wdt:P31 wd:Q3338504}\nMINUS {?college wdt:P576 []}\nOPTIONAL { ?college p:P159/pq:P625 ?hq }\nOPTIONAL { ?college wdt:P625 ?coord }\n?college wdt:P94 ?arms;\nwdt:P856 ?web\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Multiple UNION, MINUS, OPTIONAL clauses and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "26",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?alum) AS ?count)\nWHERE\n{\n?alum wdt:P69 wd:Q34433.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Single pattern with service call",
        "complexity": "simple"
    },
    {
        "id": "27",
        "valid_gpt_response": true,
        "query": "SELECT ?college ?collegeLabel (COUNT(DISTINCT ?alum) AS ?count)\nWHERE {\n{?college wdt:P31 wd:Q2581649} UNION {?college wdt:P31 wd:Q3338504}. # college or private hall\n?alum wdt:P69 ?college.\nMINUS { ?alum wdt:P31 wd:Q15632617 } # Exclude fictional people\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?college rdfs:label ?collegeLabel }\n} GROUP BY ?college ?collegeLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple UNION, MINUS, SERVICE and aggregate function",
        "complexity": "complex"
    },
    {
        "id": "28",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?alum) AS ?count)\nWHERE {\n{ ?alum wdt:P69 wd:Q34433 }\nUNION { ?alum wdt:P69/wdt:P31 wd:Q2581649 }\n}",
        "complexity_description": "Union of two simple patterns",
        "complexity": "medium"
    },
    {
        "id": "29",
        "valid_gpt_response": true,
        "query": "SELECT ?alum ?alumLabel ?alumDescription ?college ?collegeLabel\nWHERE {\n?alum wdt:P31 wd:Q15632617\n{?alum wdt:P69 wd:Q34433 }\nUNION {?college wdt:P31 wd:Q2581649.\n?alum wdt:P69 ?college}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Union, multiple triple patterns, and service query",
        "complexity": "complex"
    },
    {
        "id": "30",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?alum ?alumLabel ?collegeLabel ?org ?orgLabel\nWHERE {\n{?alum wdt:P69 wd:Q34433 }\nUNION { {?college wdt:P31 wd:Q2581649} UNION {?college wdt:P31 wd:Q3338504}.\n?alum wdt:P69 ?college.}\n?org wdt:P112 ?alum.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ASC(?alumLabel)",
        "complexity_description": "Multiple UNIONs, SERVICE clause and ORDER BY",
        "complexity": "complex"
    },
    {
        "id": "31",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?personDescription ?englishwp WHERE {\n?person wdt:P31 wd:Q5; # human\nwdt:P21 wd:Q6581072; # sex or gender: female\nwdt:P69 wd:Q82606. # Educated at Pembroke College, Oxford\nOPTIONAL {?englishwp schema:about ?person; schema:isPartOf <https://en.wikipedia.org/> } # English Wikipedia page\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?personLabel",
        "complexity_description": "Multiple filters, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "32",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?alum ?alumLabel ?award ?awardLabel\nWHERE {\n{?alum wdt:P69 wd:Q34433 }\nUNION {?college wdt:P31 wd:Q2581649.\n?alum wdt:P69 ?college}\n?alum wdt:P166 ?award.\n?alum wdt:P21 wd:Q6581072 .\nMINUS { ?alum wdt:P27 wd:Q145 }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ASC(?awardLabel)",
        "complexity_description": "Multiple UNION, MINUS and SERVICE clauses",
        "complexity": "complex"
    },
    {
        "id": "33",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?alum ?alumLabel ?alumDescription ?image\nWHERE {\n{?alum wdt:P69 wd:Q34433 .}\nUNION {?college wdt:P31 wd:Q2581649.\n?alum wdt:P69 ?college.}\n?alum wdt:P21 wd:Q6581072 .\nMINUS { ?alum wdt:P27 wd:Q145 }.\nOPTIONAL {?alum wdt:P18 ?image }.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Multiple UNION, MINUS and OPTIONAL clauses",
        "complexity": "complex"
    },
    {
        "id": "34",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?alum ?alumLabel ?collegeLabel ?discovered ?discoveredLabel\nWHERE {\n{?alum wdt:P69 wd:Q34433 }\nUNION { { ?college wdt:P31 wd:Q2581649 } UNION { ?college wdt:P31 wd:Q3338504 }\n?alum wdt:P69 ?college }\n?discovered wdt:P61 ?alum\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ASC( ?alumLabel )",
        "complexity_description": "Multiple UNIONs, SERVICE clause and ORDER BY",
        "complexity": "complex"
    },
    {
        "id": "35",
        "valid_gpt_response": true,
        "query": "SELECT ?winner ?winnerLabel ?winnerDescription\nWHERE {\n?winner wdt:P166 wd:Q4936657.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "36",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?authorLabel ?publication ?publicationLabel ?date\nWHERE {\n{ ?author wdt:P108 wd:Q34433 } # Listed as employees of the university\nUNION { {?college wdt:P31 wd:Q2581649 } UNION { ?college wdt:P31 wd:Q3338504 }.\n?author wdt:P108 ?college } # Listed as employees of a college or hall\nMINUS{ ?author wdt:P570 ?date } # No death date\n?publication wdt:P50 ?author\nOPTIONAL { ?publication wdt:P577 ?date }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY DESC(?date)",
        "complexity_description": "Multiple UNION, MINUS and OPTIONAL clauses with SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "37",
        "valid_gpt_response": true,
        "query": "SELECT ?place ?placeLabel (SAMPLE(?loc) AS ?location) ?layer WHERE {\n?place wdt:P131 wd:Q34217;\nwdt:P31 ?type.\nMINUS { ?place wdt:P576 [] } # Not closed down\nOPTIONAL { ?place wdt:P625 ?coords }\nOPTIONAL { ?place p:P159/pq:P625 ?hqcoords }\nBIND (IF (BOUND(?coords), ?coords, ?hqcoords) AS ?loc)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?type rdfs:label ?layer.?place rdfs:label ?placeLabel }\n} GROUP BY ?place ?placeLabel ?layer",
        "complexity_description": "Multiple optional patterns, minus clause, and service call",
        "complexity": "complex"
    },
    {
        "id": "38",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel (SAMPLE(?img) AS ?image) (SAMPLE(?loc) AS ?location) ?placeLabel WHERE {\n?place wdt:P131 wd:Q34217;\nwdt:P138 ?person FILTER (?person != wd:Q34217).\nOPTIONAL { ?place wdt:P625 ?coords }\nOPTIONAL { ?place p:P159/pq:P625 ?hqcoords }\nBIND (IF (BOUND(?coords), ?coords, ?hqcoords) AS ?loc)\nOPTIONAL { ?person wdt:P18 ?img }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?person ?personLabel ?placeLabel",
        "complexity_description": "Multiple OPTIONAL clauses, FILTER, BIND, and SERVICE",
        "complexity": "complex"
    },
    {
        "id": "39",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?enws WHERE {\n?person wdt:P31 wd:Q5.\n?enws schema:about ?person;\nschema:isPartOf <https://en.wikisource.org/> FILTER CONTAINS(STR(?enws), \"Author:\")\n} ORDER BY ?enws",
        "complexity_description": "Filter and Order By",
        "complexity": "medium"
    },
    {
        "id": "40",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?thing ?thingLabel (GROUP_CONCAT(DISTINCT ?year; separator=\", \") as ?years) ?shelfmark (GROUP_CONCAT(DISTINCT ?langLabel ; separator=\", \") as ?languages) WHERE {\n{ ?thing wdt:P195 wd:Q82133} UNION { ?thing p:P217/pq:P195 wd:Q82133 } #wd:Q16147979\nOPTIONAL {?thing wdt:P217 ?shelfmark}\nOPTIONAL {?thing wdt:P571 ?date. BIND(YEAR(?date) AS ?year) }\nOPTIONAL {?thing wdt:P407 ?lang }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . ?thing rdfs:label ?thingLabel . ?lang rdfs:label ?langLabel }\n} GROUP BY ?thing ?thingLabel ?shelfmark\nORDER BY ?thingLabel",
        "complexity_description": "Multiple UNION, OPTIONAL, and SERVICE clauses with grouping and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "41",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?thing ?thingLabel ?image (URI(CONCAT(\"https://commons.wikimedia.org/wiki/Category:\",?cat) ) AS ?commons) WHERE {\n{ ?thing wdt:P195 wd:Q82133 } UNION { ?thing p:P217/pq:P195 wd:Q82133 }\n{ ?thing wdt:P31 wd:Q87167 } UNION { ?thing wdt:P31 wd:Q48498 }\nOPTIONAL { ?thing wdt:P18 ?image }\nOPTIONAL { ?thing wdt:P373 ?cat }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ?thingLabel",
        "complexity_description": "Multiple UNIONs, OPTIONAL clauses, and SERVICE usage",
        "complexity": "complex"
    },
    {
        "id": "42",
        "valid_gpt_response": true,
        "query": "SELECT ?alum ?alumLabel ?supervisee ?superviseeLabel ?fieldLabel\nWHERE {\n?alum wdt:P69 wd:Q160302.\n?supervisee wdt:P184 ?alum.\nOPTIONAL {?supervisee wdt:P101 ?field.}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Multiple joins, optional clause",
        "complexity": "medium"
    },
    {
        "id": "43",
        "valid_gpt_response": true,
        "query": "SELECT ?alum ?alumLabel ?award ?awardLabel\nWHERE {\n?alum wdt:P69 wd:Q160302;\nwdt:P21 wd:Q6581072;\nwdt:P166 ?award.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Three triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "44",
        "valid_gpt_response": true,
        "query": "SELECT ?alum ?alumLabel ?award ?awardLabel\nWHERE {\n?alum wdt:P108 wd:Q160302;\nwdt:P166 ?award.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "45",
        "valid_gpt_response": true,
        "query": "SELECT ?alum ?alumLabel ?org ?orgLabel\nWHERE\n{\n?alum wdt:P19 wd:Q23436.\n?org wdt:P112 ?alum.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "46",
        "valid_gpt_response": true,
        "query": "SELECT ?nationality ?nationalityLabel ?alum ?alumLabel ?alumDescription\nWHERE {\n?alum wdt:P69 wd:Q459506.\n?alum wdt:P27 ?nationality.\nMINUS { ?alum wdt:P27 wd:Q145 }\nOPTIONAL { ?alum schema:description ?alumDescription FILTER (lang(?alumDescription) = \"en\").}\nOPTIONAL { ?alum rdfs:label ?alumLabel FILTER (lang(?alumLabel) = \"en\").}\nOPTIONAL { ?nationality rdfs:label ?nationalityLabel FILTER (lang(?nationalityLabel) = \"en\")}\n}\nORDER BY ?nationalityLabel",
        "complexity_description": "Multiple optional patterns, minus clause and language filters",
        "complexity": "medium"
    },
    {
        "id": "47",
        "valid_gpt_response": true,
        "query": "SELECT ?alum ?alumLabel ?supervisee ?superviseeLabel ?fieldLabel\nWHERE\n{\n?alum wdt:P69 wd:Q459506.\n?supervisee wdt:P184 ?alum.\nOPTIONAL {?supervisee wdt:P101 ?field.}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "48",
        "valid_gpt_response": true,
        "query": "SELECT ?alum ?alumLabel ?supervisee ?superviseeLabel ?fieldLabel\nWHERE\n{\n?alum wdt:P108 wd:Q459506.\n?supervisee wdt:P184 ?alum.\nOPTIONAL {?supervisee wdt:P101 ?field.}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Multiple joins, optional clause",
        "complexity": "medium"
    },
    {
        "id": "49",
        "valid_gpt_response": true,
        "query": "SELECT ?alum ?alumLabel ?award ?awardLabel\nWHERE\n{\n?alum wdt:P69 wd:Q459506.\n?alum wdt:P166 ?award.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ?awardLabel",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "50",
        "valid_gpt_response": true,
        "query": "SELECT ?alum ?alumLabel ?award ?awardLabel\nWHERE\n{\n?alum wdt:P108 wd:Q459506.\n?alum wdt:P166 ?award.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ?awardLabel",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "51",
        "valid_gpt_response": true,
        "query": "SELECT ?alum ?alumLabel ?awardLabel WHERE {\n?alum wdt:P69 wd:Q1432632 .\n?alum wdt:P166 ?award .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?alumLabel",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "52",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel WHERE {\n?item p:P953 ?s. ?s ps:P953 ?url FILTER (CONTAINS( STR(?url), \"eprints.whiterose.ac.uk\") )\nMINUS {?s pq:P3274 wd:Q24753667 }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, FILTER and MINUS clauses",
        "complexity": "complex"
    },
    {
        "id": "53",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?paper ?paperLabel ?licenceLabel ?fulltext WHERE {\n?author wdt:P108 wd:Q503424. # Employee of University of Leeds\n?paper wdt:P31 wd:Q13442814; wdt:P50 ?author. # scholarly article by this author\nVALUES ?freelicence {wd:Q6905323 wd:Q6905942} # CC-BY or CC-BY-SA\n?paper wdt:P275 ?licence . ?licence wdt:P629? ?freelicence. # Article has this licence, or a specific edition such as CC-BY 3.0\n?paper wdt:P953 ?fulltext FILTER(CONTAINS(STR(?fulltext), \"whiterose.ac.uk\"))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\"}\n} ORDER BY ?paper",
        "complexity_description": "Multiple filters, joins and subqueries",
        "complexity": "complex"
    },
    {
        "id": "54",
        "valid_gpt_response": true,
        "query": "SELECT ?uni ?uniLabel ?loc ?link ?layer ?countyLabel WHERE {\nVALUES ?type {wd:Q875538 wd:Q902104 wd:Q3918}\n?uni wdt:P31 ?type;\nwdt:P17 wd:Q145;\nwdt:P856 ?link;\nwdt:P625 ?loc.\n?type rdfs:label ?layer FILTER(Lang(?layer)='en').\nMINUS {?uni wdt:P576 []}\nOPTIONAL {?uni wdt:P131 ?county}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Multiple filters, optional clause and minus clause",
        "complexity": "complex"
    },
    {
        "id": "55",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?museum ?museumLabel ?countryLabel (URI(CONCAT(\"https://www.facebook.com/\",?facebook)) AS ?facebooklink) (URI(CONCAT(\"https://www.instagram.com/\",?instagram)) AS ?instagramlink) (URI(CONCAT(\"https://twitter.com/\",?twitter)) AS ?twitterlink)\nWHERE {\n?museum wdt:P31/wdt:P279* wd:Q33506;\nwdt:P2002 ?twitter.\nOPTIONAL { ?museum wdt:P17 ?country}\nOPTIONAL { ?museum wdt:P2013 ?facebook}\nOPTIONAL { ?museum wdt:P2003 ?instagram}\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl,fr,de,es,pt,bg,be,ru,hu,uk,ja\"}\n} ORDER BY ?countryLabel ?museumLabel",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "56",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?museum ?museumLabel ?countryLabel ?named ?namedLabel ?namedDescription\nWHERE {\n?museum wdt:P31/wdt:P279* wd:Q33506;\nwdt:P138 ?named.\nOPTIONAL { ?museum wdt:P17 ?country}\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl,fr,de,es,pt,bg,be,ru,hu,uk,ja\"}\n} ORDER BY ?countryLabel ?museumLabel",
        "complexity_description": "Multiple triple patterns with OPTIONAL clause and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "57",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?museum ?museumLabel ?coord ?image ?web\nWHERE {\n?museum wdt:P31 wd:Q207694;\nwdt:P625 ?coord .\nOPTIONAL {?museum wdt:P18 ?image}.\nOPTIONAL {?museum wdt:P856 ?web}.\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl,fr,de,es,pt\"}\n}",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "58",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?web ?museum ?museumLabel (SAMPLE(?coord) AS ?coord) (SAMPLE(?image) AS ?image)\nWHERE {\n?museum wdt:P31/wdt:P279* wd:Q33506;\nwdt:P17 wd:Q145;\nwdt:P625 ?coord.\nOPTIONAL {?museum wdt:P856 ?web}\nOPTIONAL {?museum wdt:P18 ?image}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?web ?museum ?museumLabel",
        "complexity_description": "Multiple optional patterns, service call and group by",
        "complexity": "medium"
    },
    {
        "id": "59",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?obj ?objLabel ?objDescription ?nom ?nomLabel ?nomDescription\nWHERE {\n{?obj wdt:P31/wdt:P279* wd:Q318} UNION {?obj wdt:P31/wdt:P279* wd:Q523}\nUNION {?obj wdt:P31/wdt:P279* wd:Q1054444}\nUNION {?obj wdt:P31/wdt:P279* wd:Q168845}\n?obj wdt:P138 ?nom\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ASC(?objLabel)",
        "complexity_description": "Multiple UNIONs, SERVICE clause and property paths",
        "complexity": "complex"
    },
    {
        "id": "60",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?planet ?planetLabel ?planetDescription ?nom ?nomLabel ?nomDescription\nWHERE {\n?planet wdt:P31/wdt:P279* wd:Q3132741 .\n?planet wdt:P138 ?nom.\n?planet wdt:P397 ?parent.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }.\n} ORDER BY DESC(?parent)",
        "complexity_description": "Multiple triple patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "61",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?obj ?objLabel ?objDescription ?nom ?nomLabel ?nomDescription\nWHERE {\n{?obj wdt:P31/wdt:P279* wd:Q40218} # type of spacecraft\nUNION {?obj wdt:P31/wdt:P279* wd:Q13226541}. # or spaceflight programme\n?obj wdt:P138 ?nom #named after\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ASC(?objLabel)",
        "complexity_description": "Union, property paths, and service call",
        "complexity": "medium"
    },
    {
        "id": "62",
        "valid_gpt_response": true,
        "query": "SELECT ?discoverer ?discovererLabel\n(COUNT(DISTINCT ?star) as ?count)\n(GROUP_CONCAT(DISTINCT(?starLabel); separator=\", \") as ?stars)\nWHERE\n{\n?ppart wdt:P279* wd:Q523 .\n?star wdt:P31 ?ppart .\n?star wdt:P61 ?discoverer .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .\n?discoverer rdfs:label ?discovererLabel .\n?star rdfs:label ?starLabel\n}\n}\nGROUP BY ?discoverer ?discovererLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple joins, subqueries, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "63",
        "valid_gpt_response": true,
        "query": "SELECT ?discoverer ?discovererLabel ?instrument ?instrumentLabel\nWHERE {\n?instrument wdt:P31/wdt:P279* wd:Q3099911 ;\nwdt:P61 ?discoverer .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "64",
        "valid_gpt_response": true,
        "query": "SELECT ?wikidata_item ?biosphere_reserve_name ?biosphereURL ?image ?location\nWHERE {\n?wikidata_item wdt:P2520 ?biosphereURL ; # get a list of all biospheres\nwdt:P625 ?location # and location\nOPTIONAL{ ?wikidata_item wdt:P18 ?image }\nFILTER NOT EXISTS { ?enwp schema:about ?wikidata_item ; schema:isPartOf <https://en.wikipedia.org/> } # No article in English wikipedia\n?wikidata_item rdfs:label ?biosphere_reserve_name filter (lang(?biosphere_reserve_name) = \"en\")\n}",
        "complexity_description": "Multiple filters, optional clause and NOT EXISTS",
        "complexity": "medium"
    },
    {
        "id": "65",
        "valid_gpt_response": true,
        "query": "SELECT ?wikidata_item ?biosphere_reserve_name ?biosphereURL ?wikipedia_article ?image ?location\nWHERE {\n?wikidata_item wdt:P2520 ?biosphereURL ; # get a list of all biospheres\nwdt:P625 ?location # and location\nOPTIONAL{ ?wikidata_item wdt:P18 ?image }\n?wikipedia_article schema:about ?wikidata_item ;\nschema:isPartOf <https://en.wikipedia.org/>. # Must have an article in English wikipedia\n?wikidata_item rdfs:label ?biosphere_reserve_name filter (lang(?biosphere_reserve_name) = \"en\")\n}",
        "complexity_description": "Multiple joins, optional clause and filters",
        "complexity": "medium"
    },
    {
        "id": "66",
        "valid_gpt_response": true,
        "query": "SELECT ?wikidata_item ?biosphere_reserve_name ?biosphereURL\nWHERE {\n?wikidata_item wdt:P2520 ?biosphereURL . # get a list of all biospheres\nFILTER NOT EXISTS { ?wikidata_item wdt:P625 ?location.} # no location\n?wikidata_item rdfs:label ?biosphere_reserve_name filter (lang(?biosphere_reserve_name) = \"en\").\n}",
        "complexity_description": "Two triple patterns, one FILTER NOT EXISTS and a language filter",
        "complexity": "medium"
    },
    {
        "id": "67",
        "valid_gpt_response": true,
        "query": "SELECT ?player ?playerLabel ?article ?birthyear ?placeLabel\nWHERE {\n?player wdt:P1303 wd:Q180733.\nOPTIONAL {?player wdt:P569 ?born}.\nOPTIONAL {?player wdt:P19 ?place}.\nBIND(YEAR(?born) as ?birthyear).\nOPTIONAL{ ?article schema:about ?player. ?article schema:isPartOf <https://en.wikipedia.org/>. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nORDER BY ASC(?birthyear)",
        "complexity_description": "Multiple optional patterns, service call and bind function",
        "complexity": "medium"
    },
    {
        "id": "68",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?painter ?painterLabel ?birthplaceLabel ?geoloc where {\n?painting wdt:P31/wdt:P279* wd:Q3305213 ; # any painting (or type of painting)\nwdt:P195 wd:Q190804 ; # in collection Rijksmuseum\nwdt:P170 ?painter . # get painter\n?painter wdt:P19 ?birthplace . # get painter's birthplace\n?birthplace wdt:P625 ?geoloc . #latitude and longitude\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,es\"\n}\n}",
        "complexity_description": "Multiple joins with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "69",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?painting ?paintingLabel ?painterLabel ?image where {\n?painting wdt:P31/wdt:P279* wd:Q3305213 ; # any painting (or type of painting)\nwdt:P195 wd:Q190804 ; # in collection Rijksmuseum\nwdt:P170 ?painter ; # get painter\nwdt:P186 wd:Q296955 ; # Made with oil paint\nwdt:P18 ?image . # Image from Commons of the artwork\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,es\"\n}\n} LIMIT 160",
        "complexity_description": "Multiple filters and joins with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "70",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?personimage ?work ?workLabel ?workimage WHERE {\n?person wdt:P172 wd:Q49085 ; # African American\nwdt:P21 wd:Q6581072 ; # women\nwdt:P106/wdt:P279* wd:Q3391743 . # visual artists\nOPTIONAL{ ?person wdt:P18 ?personimage }\n?work wdt:P170 ?person . # and their work\nOPTIONAL{ ?work wdt:P18 ?workimage }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Multiple filters, optional patterns, and service call",
        "complexity": "medium"
    },
    {
        "id": "71",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person ?personLabel ?personimage ?field ?fieldLabel WHERE {\n{?person wdt:P21 wd:Q2449503 } UNION {?person wdt:P21 wd:Q1052281 } # trans men and women\n?person wdt:P106/wdt:P279* wd:Q483501 . # artist\n?person wdt:P106 ?field.\n?field wdt:P279* wd:Q483501\nMINUS {?field wdt:P279* wd:Q33999} # not actors\nOPTIONAL{ ?person wdt:P18 ?personimage }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Multiple UNION, MINUS and OPTIONAL clauses with property paths",
        "complexity": "complex"
    },
    {
        "id": "72",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?url ?coord WHERE {\nVALUES ?type {wd:Q15090615 wd:Q7062022} # Arts venues + not-for-profit arts organisations\n?item (wdt:P31/wdt:P279*) ?type.\n?item wdt:P17 wd:Q145. # in the UK\nMINUS {?item wdt:P31 wd:Q212198} # Exclude pubs\nOPTIONAL{?item wdt:P625 ?itemcoord}\nOPTIONAL {?item wdt:P131/wdt:P625 ?wherecoord}\nOPTIONAL {?item wdt:P856 ?url}\nBIND(IF(BOUND(?itemcoord), ?itemcoord, ?wherecoord) AS ?coord)\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n}\n}",
        "complexity_description": "Multiple filters and optional patterns with BIND function",
        "complexity": "complex"
    },
    {
        "id": "73",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?name ?place ?coord ?start ?end ?pointintime WHERE {\n?item (wdt:P31/wdt:P279*) wd:Q667276. # Art exhibitions\nOPTIONAL {?item wdt:P131 ?where}\nOPTIONAL {?item wdt:P580 ?start}\nOPTIONAL {?item wdt:P582 ?end}\nOPTIONAL {?item wdt:P585 ?pointintime}\nOPTIONAL {?item wdt:P625 ?coord}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,de,es,nl,ru\".\n?item rdfs:label ?name.\n?where rdfs:label ?place\n}\n}\nORDER BY ?place ?name",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "74",
        "valid_gpt_response": true,
        "query": "SELECT ?poem ?poemLabel ?languageLabel ?authorLabel ?year WHERE {\n?poem wdt:P31/wdt:P279? wd:Q5185279;\nOPTIONAL{?poem wdt:P577 ?pubdate}\nOPTIONAL{?poem wdt:P571 ?inception}\nOPTIONAL{?poem wdt:P50 ?author}\nOPTIONAL{?poem wdt:P407 ?language}\nBIND((IF (BOUND(?pubdate),?pubdate,?inception) ) AS ?date)\nBIND(YEAR(?date) AS ?year)\nFILTER (?year > 1699 && ?year < 1800)\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,de,fr,ru\"}\n} ORDER BY ?authorLabel ?year ?poemLabel",
        "complexity_description": "Multiple optional patterns, filters and service calls",
        "complexity": "complex"
    },
    {
        "id": "75",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?poem ?poemLabel ?authorLabel ?link WHERE {\n?poem wdt:P31/wdt:P279? wd:Q5185279;\nOPTIONAL{?poem wdt:P50 ?author}\nOPTIONAL{?poem wdt:P953 ?text}\nOPTIONAL{?wikisource schema:about ?poem; schema:isPartOf <https://en.wikisource.org/>}\nBIND((IF (BOUND(?text),?text,?wikisource) ) AS ?link)\nFILTER BOUND(?link)\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,de,fr,ru\"}\n} ORDER BY ?authorLabel",
        "complexity_description": "Multiple optional patterns, filter and service clause",
        "complexity": "medium"
    },
    {
        "id": "76",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person ?personLabel (URI(CONCAT(\"http://viaf.org/viaf/\",?viaf)) AS ?viaf_id) ?birthyear ?deathyear WHERE {\n?person wdt:P106 wd:Q49757;\nwdt:P27 wd:Q161885;\nwdt:P569 ?birthdate;\nwdt:P570 ?deathdate.\nFILTER (!isBLANK(?birthdate))\nFILTER (!isBLANK(?deathdate))\nOPTIONAL{ ?person wdt:P214 ?viaf}\nBIND(YEAR(?birthdate) AS ?birthyear)\nBIND(YEAR(?deathdate) AS ?deathyear)\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,de,fr,ru\"}\n} ORDER BY ?birthyear",
        "complexity_description": "Multiple filters, optional clause, and service call",
        "complexity": "medium"
    },
    {
        "id": "77",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?work ?workLabel ?author ?authorLabel ?article WHERE {\n?work wdt:P50 ?author ;\nwdt:P31/wdt:P279? wd:Q5185279. # ?work is a poem\n?article schema:about ?work;\nschema:isPartOf <https://en.wikipedia.org/> .\nMINUS {?author wdt:P106 wd:Q49757} # ?author is not listed as a poet\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ?authorLabel",
        "complexity_description": "Multiple triple patterns, MINUS clause, and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "78",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?work ?workLabel ?author ?authorLabel ?article WHERE {\n?work wdt:P50 ?author .\n?article schema:about ?work;\nschema:isPartOf <https://en.wikipedia.org/> .\n?author wdt:P106 wd:Q49757\nMINUS {?author wdt:P800 []}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ?authorLabel",
        "complexity_description": "Multiple joins, minus clause and service call",
        "complexity": "complex"
    },
    {
        "id": "79",
        "valid_gpt_response": true,
        "query": "SELECT ?work ?title ?firstline ?year ?enws ?enwp WHERE {\n?work wdt:P50 wd:Q5460603\nOPTIONAL{?work wdt:P577 ?pubdate}\nOPTIONAL{?work wdt:P1922 ?firstline}\nBIND(YEAR(?pubdate) as ?year)\nOPTIONAL{ ?enws schema:about ?work ; schema:isPartOf <https://en.wikisource.org/> }\nOPTIONAL{ ?enwp schema:about ?work ; schema:isPartOf <https://en.wikipedia.org/> }\nOPTIONAL{ ?work rdfs:label ?title filter(lang(?title) = \"en\") }\n}",
        "complexity_description": "Multiple optional patterns, bindings and filters",
        "complexity": "medium"
    },
    {
        "id": "80",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?title ?itemDescription\nWHERE {\n?item wdt:P31 wd:Q11424;\nwdt:P1476 ?title.\nBIND(LCASE(?title) AS ?normalised)\nFILTER (CONTAINS(?normalised, ' it ') || STRSTARTS(?normalised, 'it ') || STRENDS(?normalised, ' it'))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nORDER BY (?title)",
        "complexity_description": "Multiple filters and service call",
        "complexity": "medium"
    },
    {
        "id": "81",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?thing) AS ?count) ?typeLabel WHERE {\n?thing wdt:P1922 [];\nwdt:P31 ?type.\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,de,fr,ru\"}\n} GROUP BY ?typeLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, service call and grouping",
        "complexity": "medium"
    },
    {
        "id": "82",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?thing) AS ?count) ?langLabel ?langlineLabel WHERE {\n?thing wdt:P1922 ?line.\nBIND(lang(?line) AS ?langlinecode)\n?langline wdt:P218 ?langlinecode\nOPTIONAL { ?thing wdt:P364 ?lang }\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,de,fr,ru\"}\n} GROUP BY ?langLabel ?langlineLabel\nORDER BY ?langLabel DESC(?count)",
        "complexity_description": "Multiple joins, optional clause, and service call",
        "complexity": "complex"
    },
    {
        "id": "83",
        "valid_gpt_response": true,
        "query": "SELECT ?work ?workLabel ?authorLabel ?langLabel ?langlineLabel WHERE {\n?work wdt:P1922 ?line;\nwdt:P407 ?lang\nOPTIONAL {?work wdt:P50 ?author}\nBIND(lang(?line) AS ?langlinecode)\n?langline wdt:P218 ?langlinecode\nFILTER (?langline != ?lang)\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,de,fr,ru\"}\n} ORDER BY ?langLabel",
        "complexity_description": "Multiple triple patterns, optional clause, bind function, and filter",
        "complexity": "complex"
    },
    {
        "id": "84",
        "valid_gpt_response": true,
        "query": "SELECT ?ws ?wsLabel ?wsDescription ?statementcount\nWHERE {\n?article schema:about ?ws;\nschema:isPartOf <https://en.wikisource.org/>.\n?ws wikibase:statements ?statementcount\nMINUS {?ws wdt:P31 [] } # No \"instance of\" property\nMINUS {?ws wdt:P279 [] } # No \"subclass of\" property\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY DESC(?statementcount)\nLIMIT 200",
        "complexity_description": "Multiple filters, minus clauses and service call",
        "complexity": "complex"
    },
    {
        "id": "85",
        "valid_gpt_response": true,
        "query": "SELECT ?type ?typeLabel (COUNT(?ws) as ?count) (COUNT(?date) as ?have_date)\nWHERE {\n?article schema:about ?ws;\nschema:isPartOf <https://en.wikisource.org/>.\n?ws wdt:P31 ?type\nOPTIONAL {?ws wdt:P577 ?date}\nMINUS {?type wdt:P279+ wd:Q17442446}\nMINUS {?type wdt:P279 wd:Q14204246}\nMINUS {?type wdt:P279+ wd:Q17379835}\nOPTIONAL {?type rdfs:label ?typeLabel filter(lang(?typeLabel) = \"en\") }\n} GROUP BY ?type ?typeLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple MINUS clauses, OPTIONAL patterns, and aggregation with grouping",
        "complexity": "complex"
    },
    {
        "id": "86",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person ?personLabel ?personDescription ?language ?death (URI(CONCAT(\"https://www.gutenberg.org/ebooks/author/\", ?gutenberg)) AS ?gberglink) WHERE {\n?person wdt:P1938 ?gutenberg;\nwdt:P570 ?death. # Dead people only\nFILTER (?death <= \"1946-01-01T00:00:00Z\"^^xsd:dateTime)\nMINUS {\n?enws schema:about ?person;\nschema:isPartOf <https://en.wikisource.org/>\n}\nOPTIONAL {?person wdt:P1412 ?lang}.\nFILTER (!BOUND(?lang) {{!",
        "complexity_description": "Multiple filters, optional clause and minus operation",
        "complexity": "complex"
    },
    {
        "id": "87",
        "valid_gpt_response": true,
        "query": "SELECT ?author ?authorLabel ?authorDescription (COUNT(?letter) as ?count)\nWHERE {\n?letter wdt:P50 ?author;\nwdt:P31 wd:Q133492.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?author ?authorLabel ?authorDescription\nORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, service call, group by and order by",
        "complexity": "complex"
    },
    {
        "id": "88",
        "valid_gpt_response": true,
        "query": "SELECT ?recipient ?recipientLabel ?recipientDescription (COUNT(?letter) as ?count)\nWHERE {\n?letter wdt:P1817 ?recipient;\nwdt:P31 wd:Q133492.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?recipient ?recipientLabel ?recipientDescription\nORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, service call, group by and order by",
        "complexity": "complex"
    },
    {
        "id": "89",
        "valid_gpt_response": true,
        "query": "SELECT ?url ?ownerLabel ?station ?stationLabel ?location (SAMPLE(?image) AS ?image)\nWHERE {\n?station wdt:P31 wd:Q11997323;\nwdt:P625 ?location.\nOPTIONAL { ?station wdt:P18 ?image}\nOPTIONAL { ?station wdt:P127 ?owner}\nOPTIONAL { ?station wdt:P856 ?url }\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,no,sv,da,de\"}\n} GROUP BY ?station ?stationLabel ?location ?ownerLabel ?url",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "90",
        "valid_gpt_response": true,
        "query": "SELECT ?station ?stationLabel ?countryLabel\nWHERE {\n?station wdt:P31 wd:Q11997323;\nwdt:P17 ?country.\nMINUS {?station wdt:P625 ?location}\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,no,sv,da,de\"}\n} ORDER BY ?countryLabel",
        "complexity_description": "Multiple triple patterns with MINUS and SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "91",
        "valid_gpt_response": true,
        "query": "SELECT ?name (CONCAT(\"Born \",str(?born), \", \",?birthplace,\"; Died \", str(?died)) as ?dates) ?article WHERE {\n?person wdt:P19 ?place . # place of birth\n{?place wdt:P131* wd:Q23165 } UNION { ?place wdt:P131* ?county. ?county wdt:P47 wd:Q23165 }. # born in Oxfordshire or adjacent county\n?person wdt:P607 wd:Q361 . # involved in World War I\n# ?place wdt:P625 ?coord . # lat and long of birthplace\nMINUS { ?person wdt:P18 ?image }. #image\n?person wdt:P569 ?dob . #date of birth\nBIND(YEAR(?dob) as ?born).\nOPTIONAL { ?person wdt:P570 ?dod }. #date of death\nBIND(YEAR(?dod) as ?died).\n?person rdfs:label ?name filter (lang(?name) = \"en\")\n?place rdfs:label ?birthplace filter (lang(?birthplace) = \"en\")\nOPTIONAL{ ?article schema:about ?person. ?article schema:isPartOf <https://en.wikipedia.org/>. }\n} ORDER by ?birthplace",
        "complexity_description": "Multiple UNION, OPTIONAL, and FILTER clauses with several property paths",
        "complexity": "complex"
    },
    {
        "id": "92",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?image ?name (CONCAT(\"Born \",str(?born), \"; Died \", str(?died)) as ?dates) ?birthplace ?article WHERE {\n?person wdt:P19 ?place ; # place of birth\nwdt:P607 wd:Q361 ; # involved in World War I\nwdt:P18 ?image ; #image\nwdt:P569 ?dob #date of birth\n{?place wdt:P131* wd:Q48015 } UNION { ?place wdt:P131* ?county. ?county wdt:P47 wd:Q23169 } # born in SE England or adjacent county to Oxfordshire\nOPTIONAL { ?person wdt:P570 ?dod } #date of death\nBIND(YEAR(?dob) as ?born)\nBIND(YEAR(?dod) as ?died)\n?person rdfs:label ?name filter (lang(?name) = \"en\")\n?place rdfs:label ?birthplace filter (lang(?birthplace) = \"en\")\nOPTIONAL{ ?article schema:about ?person; schema:isPartOf <https://en.wikipedia.org/> }\n}",
        "complexity_description": "Multiple UNION, OPTIONAL, and BIND clauses with several filters",
        "complexity": "complex"
    },
    {
        "id": "93",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?thesis ?thesisLabel ?author ?authorLabel ?authorname ?institutionLabel ?year ?url WHERE {\n?thesis wdt:P31 wd:Q187685 # doctoral theses\nOPTIONAL {\n{ ?author wdt:P1026 ?thesis }\nUNION\n{ ?thesis wdt:P50 ?author }\n}\nOPTIONAL { ?thesis wdt:P4101 ?institution }\nOPTIONAL { ?thesis wdt:P953 ?url }\nOPTIONAL { ?thesis wdt:P2093 ?authorname }\nOPTIONAL { ?thesis wdt:P571 ?date } # inception\nBIND(YEAR(?date) AS ?year)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Multiple optional patterns, UNION and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "94",
        "valid_gpt_response": true,
        "query": "SELECT ?author ?authorLabel ?thesis ?typeLabel ?url WHERE {\n?author wdt:P1026 ?thesis .\n?thesis wdt:P31 ?type\nOPTIONAL { ?thesis wdt:P953 ?url }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\"\n}\n} ORDER BY ?typeLabel",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "95",
        "valid_gpt_response": true,
        "query": "SELECT ?thesis ?thesisDescription ?languageLabel WHERE {\n?thesis wdt:P31 wd:Q187685\nMINUS { [] wdt:P1026 ?thesis }\nMINUS { ?thesis wdt:P50 [] }\nOPTIONAL { ?thesis wdt:P364 ?language }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\"\n}\n}",
        "complexity_description": "Multiple MINUS clauses, OPTIONAL clause and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "96",
        "valid_gpt_response": true,
        "query": "SELECT ?thesis ?thesisDescription ?author ?authorLabel WHERE {\n?thesis wdt:P31 wd:Q187685;\nwdt:P50 ?author.\nMINUS { ?author wdt:P1026 [] }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\"\n}\n}",
        "complexity_description": "Multiple triple patterns, MINUS clause and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "97",
        "valid_gpt_response": true,
        "query": "SELECT ?thesis ?thesisDescription ?authorLabel ?authorwp ?ora_url WHERE {\n?thesis wdt:P31 wd:Q187685; # doctoral theses\nwdt:P4101 wd:Q34433; # submitted to University of Oxford\nwdt:P953 ?ora_url # with open access link\nOPTIONAL {?thesis wdt:P50 ?author\nOPTIONAL{ ?authorwp schema:about ?author. ?authorwp schema:isPartOf <https://en.wikipedia.org/> } }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY DESC(?authorwp)",
        "complexity_description": "Multiple filters, optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "98",
        "valid_gpt_response": true,
        "query": "SELECT ?prop ?propLabel ?count ?exampleLabel WHERE {\n{\nSELECT ?prop (COUNT(DISTINCT ?item) AS ?count) (SAMPLE(?id) AS ?example) WHERE {\nhint:Query hint:optimizer \"None\" .\n?classes wdt:P279* wd:Q1266946 .\n?item wdt:P31 ?classes .\n?item ?p ?id .\n?prop wikibase:directClaim ?p\n} GROUP BY ?prop\n}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\"\n}\n} ORDER BY DESC (?count)",
        "complexity_description": "Multiple subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "99",
        "valid_gpt_response": true,
        "query": "SELECT ?subject ?url ?qLabel ?attrib (YEAR(?inception) AS ?year) WHERE {\n?q wdt:P4101 wd:Q34433; wdt:P921 ?subject; wdt:P953 ?url.\nOPTIONAL {?q wdt:P50 ?author. ?author rdfs:label ?authorname FILTER(lang(?authorname)= \"en\") }\nOPTIONAL {?q wdt:P2093 ?authorstring}\nOPTIONAL {?q wdt:P571 ?inception}\nBIND(IF(BOUND(?authorname),?authorname, ?authorstring) AS ?attrib).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "complex"
    },
    {
        "id": "100",
        "valid_gpt_response": true,
        "query": "SELECT ?place ?placeLabel ?latlong (SAMPLE(?image) as ?image)\nWHERE\n{ ?place wdt:P31/wdt:P279* wd:Q839954; # Archaeological site (or type of)\nwdt:P625 ?latlong;\np:P625 ?statement . # coordinate-location statement\nOPTIONAL {?place wdt:P18 ?image }.\n?statement psv:P625 ?coord.\n?coord wikibase:geoLatitude ?lat .\n?coord wikibase:geoLongitude ?long .\nFILTER (ABS(?lat - 37.5) < 1.3).\nFILTER (ABS(?long - 14) < 1.5).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,it\" }\n} GROUP BY ?place ?placeLabel ?latlong",
        "complexity_description": "Multiple filters, optional patterns, and service calls",
        "complexity": "complex"
    },
    {
        "id": "101",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?thing ?name WHERE {\nVALUES ?prop {wdt:P279 wdt:P31}\n?thing ?prop wd:Q40998;\nrdfs:label ?name FILTER (lang(?name)=\"en\") FILTER STRENDS(?name, \" phonology\")\n} ORDER BY ?name",
        "complexity_description": "Multiple filters and VALUES clause",
        "complexity": "medium"
    },
    {
        "id": "102",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person ?en_name WHERE {\n{?person wdt:P2596 wd:Q11772. ?person wdt:P31 wd:Q5 } # Person & Culture: Ancient Greece\nUNION {?person wdt:P27/wdt:P31 wd:Q148837} # Citizen of a Polis\nUNION {?person wdt:P551/wdt:P31 wd:Q148837 } # Resident of a Polis\nOPTIONAL{ ?person rdfs:label ?en_name FILTER(lang(?en_name) = \"en\")}\n} ORDER BY ?en_name",
        "complexity_description": "Multiple UNIONs, OPTIONAL clause and filtering",
        "complexity": "medium"
    },
    {
        "id": "103",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person ?en_name ?name WHERE {\n{?person wdt:P2596 wd:Q11772} # Culture: Ancient Greece\nUNION {?person wdt:P27/wdt:P31 wd:Q148837} # Citizen of a Polis\nUNION {?person wdt:P551/wdt:P31 wd:Q148837 } # Resident of a Polis\n?person wdt:P1559 ?name;\nOPTIONAL{ ?person rdfs:label ?en_name FILTER(lang(?en_name) = \"en\")}\n} ORDER BY ?en_name",
        "complexity_description": "Multiple UNIONs, OPTIONAL clause, and FILTER",
        "complexity": "complex"
    },
    {
        "id": "104",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel (URI(CONCAT(\"http://cdli.ucla.edu/search/archival_view.php?ObjectID=\",?id)) AS ?cdli) ?enwp WHERE {\n?item wdt:P2474 ?id\nOPTIONAL{ ?enwp schema:about ?item; schema:isPartOf <https://en.wikipedia.org/> }\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\"}\n}",
        "complexity_description": "Multiple patterns, optional clause, and service call",
        "complexity": "medium"
    },
    {
        "id": "105",
        "valid_gpt_response": true,
        "query": "SELECT ?itemLabel (URI(CONCAT(\"https://tools.wmflabs.org/reasonator/?q=\", SUBSTR(STR(?item),32) )) as ?reasonator) WHERE {\n?item wdt:P2474 []\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\"}\n}",
        "complexity_description": "Uses URI concatenation, SUBSTR and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "106",
        "valid_gpt_response": true,
        "query": "SELECT ?id (lang(?label) AS ?lang) ?label WHERE {\n?item wdt:P2474 ?id;\nrdfs:label ?label.\n} ORDER BY ?id ?lang",
        "complexity_description": "Simple query with basic filtering and ordering",
        "complexity": "simple"
    },
    {
        "id": "107",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?id (URI(CONCAT(\"https://commons.wikimedia.org/wiki/Category:\",?commons)) AS ?images) WHERE {\n?item wdt:P2474 ?id\nOPTIONAL{ ?item wdt:P373 ?commons }\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\"}\n}",
        "complexity_description": "Optional clause, concatenation function, and service query",
        "complexity": "medium"
    },
    {
        "id": "108",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?itemDescription ?enwp WHERE {\n?item wdt:P31/wdt:P279? wd:Q738680 # instance of type of ancient Greek pottery\nOPTIONAL {?enwp schema:about ?item; schema:isPartOf <https://en.wikipedia.org/> }\nMINUS {?item wdt:P1080 []} # exclude fictional (Pandora's Box)\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,el,fr,de,pl,uk\"}\n}",
        "complexity_description": "Multiple triple patterns with OPTIONAL and MINUS clauses",
        "complexity": "medium"
    },
    {
        "id": "109",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?image WHERE {\n?item wdt:P31/wdt:P279? wd:Q738680; # instance of type of ancient Greek pottery\nwdt:P18 ?image\nMINUS {?item wdt:P1080 []} # exclude fictional (Pandora's Box)\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,el,fr,de,pl,uk\"}\n}",
        "complexity_description": "Multiple triple patterns with MINUS and SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "110",
        "valid_gpt_response": true,
        "query": "SELECT ?type ?typeLabel ?typeimage ?supertype ?supertypeLabel WHERE {\n?type wdt:P279+ wd:Q17379525;\nwdt:P279 ?supertype\nOPTIONAL{ ?type wdt:P18 ?typeimage }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\"\n}\n}",
        "complexity_description": "Medium complexity due to property path and optional clause",
        "complexity": "medium"
    },
    {
        "id": "111",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?obj ?objLabel ?objDescription ?char ?charLabel ?charDescription\nWHERE {\n?obj wdt:P138 ?char.\n?char wdt:P1441/wdt:P50 wd:Q692 # Present in a work written by William Shakespeare\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER By ASC(?work)",
        "complexity_description": "Join, filter and service",
        "complexity": "medium"
    },
    {
        "id": "112",
        "valid_gpt_response": true,
        "query": "SELECT ?sitelink ?itemLabel WHERE {\n?item wdt:P31 wd:Q6256.\n?sitelink schema:isPartOf <https://ru.wikipedia.org/>;\nschema:about ?item;\nwikibase:badge wd:Q17437796 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Multiple triple patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "113",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?enwp ?eswp WHERE {\n?item wdt:P31 wd:Q5 . # Human beings\n?eswp schema:isPartOf <https://es.wikipedia.org/>; # Spanish article exists\nschema:about ?item;\nwikibase:badge wd:Q17437798 . # Spanish article has Good Article badge\n?enwp schema:isPartOf <https://en.wikipedia.org/>; # English article exists\nschema:about ?item.\nMINUS {?enwp wikibase:badge []} # English article lacks any kind of badge\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,es\" }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple filters and joins with MINUS clause",
        "complexity": "medium"
    },
    {
        "id": "114",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?birthdate ?deathdate\nWHERE\n{ ?item wdt:P31 wd:Q5 ;\nwdt:P27 wd:Q183 ;\nwdt:P21 wd:Q6581072 ;\nwdt:P569 ?birthdate .\nOPTIONAL { ?item wdt:P570 ?deathdate }\nFILTER EXISTS { ?wen schema:about ?item ; schema:inLanguage \"en\" }\nFILTER NOT EXISTS { ?wde schema:about ?item ; schema:inLanguage \"de\" }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de,en\" }\n} ORDER BY ?birthdate",
        "complexity_description": "Multiple filters, optional clause and service call",
        "complexity": "complex"
    },
    {
        "id": "115",
        "valid_gpt_response": true,
        "query": "SELECT ?work ?workLabel ?year ?text ?wikisource\nWHERE {\n?work wdt:P50 wd:Q19543; # author: Hans Sachs\nwdt:P577 ?pubdate.\nBIND(YEAR(?pubdate) AS ?year)\nOPTIONAL{?wikisource schema:about ?work; schema:isPartOf <https://de.wikisource.org/>} # text of work in German Wikisource\nOPTIONAL{?work wdt:P953 ?text} # link for text of work\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de,en\"}\n} ORDER BY ?year",
        "complexity_description": "Multiple optional patterns, service call and bind function",
        "complexity": "medium"
    },
    {
        "id": "116",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?english ?afrik (SAMPLE(?workLabel) AS ?occupation) WHERE {\n?item wdt:P27 wd:Q258; wdt:P21 wd:Q6581072\nMINUS{ ?englishq schema:about ?item ; schema:isPartOf <https://en.wikiquote.org/> }\nMINUS{ ?afrikq schema:about ?item ; schema:isPartOf <https://af.wikiquote.org/> }\nOPTIONAL{ ?english schema:about ?item ; schema:isPartOf <https://en.wikipedia.org/> }\nOPTIONAL{ ?afrik schema:about ?item ; schema:isPartOf <https://af.wikipedia.org/> }\nOPTIONAL{?item wdt:P106 ?work}\nFILTER (BOUND(?english) || BOUND(?afrik))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?item rdfs:label ?itemLabel. ?work rdfs:label ?workLabel}\n} GROUP BY ?item ?itemLabel ?english ?afrik",
        "complexity_description": "Multiple MINUS and OPTIONAL clauses, SERVICE keyword, and FILTER with BOUND functions",
        "complexity": "complex"
    },
    {
        "id": "117",
        "valid_gpt_response": true,
        "query": "SELECT ?parliament ?parliamentLabel ?houseLabel (COUNT(?sen) AS ?members) (COUNT(?death) AS ?dead)\nWHERE {\n?parliament wdt:P279 wd:Q486839.\nOPTIONAL {?parliament wdt:P361 ?house }\n?sen wdt:P39 ?parliament.\nOPTIONAL {?sen wdt:P570 ?death}\nFILTER (?parliament NOT IN (wd:Q928764, wd:Q1055894, wd:Q928764) )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nGROUP BY ?parliament ?parliamentLabel ?houseLabel\nORDER BY DESC(?members)",
        "complexity_description": "Multiple optional patterns, filter, service and group by",
        "complexity": "complex"
    },
    {
        "id": "118",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?mp) AS ?mps) ?education ?educationLabel ?educationDescription\nWHERE {\n?mp wdt:P39 wd:Q16707842;\nwdt:P69 ?education.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?education ?educationLabel ?educationDescription\nORDER BY DESC(?mps)",
        "complexity_description": "Multiple triple patterns, service call, group by and order by",
        "complexity": "complex"
    },
    {
        "id": "119",
        "valid_gpt_response": true,
        "query": "SELECT ?con ?conLabel ?loc ?enwp\nWHERE { ?con wdt:P31 wd:Q27971968;\nwdt:P625 ?loc.\nFILTER NOT EXISTS {?con wdt:P576 ?end} # Not abolished\nOPTIONAL{ ?enwp schema:about ?con. ?enwp schema:isPartOf <https://en.wikipedia.org/>}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\"}\n} ORDER BY ?conLabel",
        "complexity_description": "Multiple filters, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "120",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?mp) AS ?mps) ?education ?educationLabel ?educationDescription\nWHERE {\n?mp wdt:P39 wd:Q4416090;\nwdt:P69 ?education.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?education ?educationLabel ?educationDescription\nORDER BY DESC(?mps)",
        "complexity_description": "Multiple triple patterns, service call, group by and order by",
        "complexity": "complex"
    },
    {
        "id": "121",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?mp) AS ?mps) ?education ?educationLabel ?educationDescription\nWHERE {\n?mp wdt:P39 wd:Q13218630;\nwdt:P69 ?education.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?education ?educationLabel ?educationDescription\nORDER BY DESC(?mps)",
        "complexity_description": "Multiple triple patterns, SERVICE clause, and aggregation",
        "complexity": "complex"
    },
    {
        "id": "122",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(DISTINCT ?mp) as ?mps) ?job ?jobLabel\nWHERE {\n?mp wdt:P31 wd:Q5; wdt:P39/wdt:P279? wd:Q16707842;\nwdt:P106 ?job.\nFILTER (?job not in (wd:Q82955, wd:Q486839) )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?job ?jobLabel\nORDER BY DESC(?mps)",
        "complexity_description": "Multiple filters, service call and group by",
        "complexity": "complex"
    },
    {
        "id": "123",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?sen) AS ?sens) ?job ?jobLabel\nWHERE {\n?sen wdt:P39 wd:Q4416090;\nwdt:P106 ?job.\nFILTER (?job not in (wd:Q82955, wd:Q4416090) )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?job ?jobLabel\nORDER BY DESC(?sen)",
        "complexity_description": "Multiple triple patterns, filter, service and group by",
        "complexity": "complex"
    },
    {
        "id": "124",
        "valid_gpt_response": true,
        "query": "select ?parliament ?parliamentLabel ?job ?jobLabel ?s\nWITH {\nSELECT (COUNT(?sen) AS ?sens) ?job ?parliament WHERE {\n?sen wdt:P39 ?parliament;\nwdt:P106 ?job.\n?parliament wdt:P279* wd:Q486839\nFILTER (?job != wd:Q82955)\n} GROUP BY ?job ?parliament HAVING (?sens > 1)\n} AS %subquery\nWHERE{\n{\nSELECT ?parliament (MAX(?sens) AS ?s) WHERE{\nINCLUDE %subquery\n} GROUP BY ?parliament\n}\nINCLUDE %subquery\nFILTER(?s = ?sens)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY DESC(?s)",
        "complexity_description": "Multiple subqueries, grouping, and filtering",
        "complexity": "complex"
    },
    {
        "id": "125",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?birthLabel ?deathLabel\nWHERE {\n?person wdt:P102 wd:Q108700\nOPTIONAL{ ?person wdt:P19 ?birth }\nOPTIONAL{ ?person wdt:P20 ?death }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER by ?personLabel",
        "complexity_description": "Multiple optional patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "126",
        "valid_gpt_response": true,
        "query": "SELECT ?place1 ?place1Label ?place2 ?place2Label ?refurl WHERE {\n?place1 p:P47 ?statement;\nwdt:P31 ?place1type.\n?statement ps:P47 ?place2;\nFILTER (?place1type IN (wd:Q180673, wd:Q1138494, wd:Q15979307, wd:Q202435, wd:Q15060255)).\nOPTIONAL {?statement prov:wasDerivedFrom/pr:P854 ?refurl}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Multiple triple patterns, filter with multiple values and optional clause",
        "complexity": "medium"
    },
    {
        "id": "127",
        "valid_gpt_response": true,
        "query": "SELECT ?park ?parkLabel ?coord ?image ?web WHERE {\n?park wdt:P127 wd:Q333515;\nwdt:P625 ?coord.\nOPTIONAL { ?park wdt:P18 ?image }\nOPTIONAL { ?park wdt:P856 ?web }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Multiple optional patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "128",
        "valid_gpt_response": true,
        "query": "SELECT ?park ?parkLabel ?parkDescription (SAMPLE(?image) AS ?image) WHERE {\n?park wdt:P127 wd:Q333515.\nMINUS {?park wdt:P31/wdt:P279* wd:Q4502142} # Remove artworks\nOPTIONAL { ?park wdt:P18 ?image }\nMINUS { ?park wdt:P856 [] }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?park ?parkLabel ?parkDescription\nORDER BY ?parkLabel",
        "complexity_description": "Multiple MINUS clauses, OPTIONAL pattern, SERVICE keyword and GROUP BY/ORDER BY",
        "complexity": "complex"
    },
    {
        "id": "129",
        "valid_gpt_response": true,
        "query": "SELECT ?park ?parkLabel (SAMPLE(?coord) AS ?coord) (SAMPLE(?image) AS ?image) ?web WHERE {\n?park wdt:P127 wd:Q333515.\nMINUS {?park wdt:P31/wdt:P279* wd:Q4502142} # Remove artworks\nOPTIONAL { ?park wdt:P625 ?coord }\nOPTIONAL { ?park wdt:P18 ?image }\nOPTIONAL { ?park wdt:P856 ?web }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?park ?parkLabel ?web\nORDER BY ?parkLabel",
        "complexity_description": "Multiple optional patterns, minus clause and service call",
        "complexity": "complex"
    },
    {
        "id": "130",
        "valid_gpt_response": true,
        "query": "SELECT ?place1 ?place1Label ?place2 ?place2Label ?refurl WHERE {\n?place1 p:P47 ?statement;\nwdt:P31 ?place1type.\n?statement ps:P47 ?place2;\nFILTER (?place1type IN (wd:Q27971968)).\nOPTIONAL {?statement prov:wasDerivedFrom/pr:P854 ?refurl}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Multiple triple patterns, filter and optional clause",
        "complexity": "medium"
    },
    {
        "id": "131",
        "valid_gpt_response": true,
        "query": "SELECT ?place1 ?place1Label ?place2 ?place2Label WHERE {\n?place1 wdt:P31 wd:Q35657;\nwdt:P47 ?place2.\n?place2 wdt:P31 wd:Q35657.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Two triple patterns with one service call",
        "complexity": "medium"
    },
    {
        "id": "132",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?item) AS ?count) ?type ?typeLabel WHERE {\n?item wdt:P3896 []; wdt:P31 ?type\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?type ?typeLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, service call, group by and order by",
        "complexity": "complex"
    },
    {
        "id": "133",
        "valid_gpt_response": true,
        "query": "SELECT ?countryLabel ?divisiontype ?divisiontypeLabel (COUNT(?division) AS ?total) (COUNT(?bordered) AS ?with_borders) WHERE {\n?division wdt:P31 ?divisiontype.\n?divisiontype wdt:P279 wd:Q10864048;\nwdt:P17 ?country.\nOPTIONAL {?division wdt:P47 ?bordered. ?bordered wdt:P31 ?divisiontype}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?countryLabel ?divisiontype ?divisiontypeLabel\nORDER BY ?countryLabel",
        "complexity_description": "Multiple joins, optional clause, and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "134",
        "valid_gpt_response": true,
        "query": "SELECT ?park ?parkLabel ?coord ?image ?web (URI(CONCAT(\"https://twitter.com/\",?tw)) AS ?twitter) WHERE {\n?park wdt:P31 wd:Q5408678; wdt:P625 ?coord; wdt:P18 ?image; wdt:P856 ?web\nOPTIONAL {?park wdt:P2002 ?tw}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ?parkLabel",
        "complexity_description": "Multiple triple patterns, optional clause, and service call",
        "complexity": "medium"
    },
    {
        "id": "135",
        "valid_gpt_response": true,
        "query": "SELECT ?park ?countryLabel ?parkLabel ?coord (SAMPLE(?image) AS ?image) ?web WHERE {\n?park wdt:P31/wdt:P279* wd:Q46169; wdt:P625 ?coord.\nOPTIONAL {?park wdt:P18 ?image}\nOPTIONAL {?park wdt:P856 ?web}\nOPTIONAL {?park wdt:P17 ?country}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?park ?countryLabel ?parkLabel ?coord ?web",
        "complexity_description": "Multiple optional patterns, service call and group by",
        "complexity": "complex"
    },
    {
        "id": "136",
        "valid_gpt_response": true,
        "query": "SELECT ?object ?objectLabel ?countryLabel ?inception ?service_entry WHERE {\n?object (wdt:P31/wdt:P279*) wd:Q134447;\nwdt:P17 ?country.\nOPTIONAL {?object wdt:P571 ?inception}\nOPTIONAL {?object wdt:P729 ?service_entry }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ?countryLabel",
        "complexity_description": "Multiple optional patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "137",
        "valid_gpt_response": true,
        "query": "SELECT ?city ?cityLabel ?image ?cityB\nWHERE {\n?cityB wdt:P31 wd:Q1637706 .\n?city wdt:P31 wd:Q1637706 ;\nwdt:P190 ?cityB ;\nwdt:P18 ?image\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "138",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?thing ?thingLabel ?city ?cityLabel ?distnum WHERE {\n?thing wdt:P131 ?city; wdt:P625 ?thingloc.\n?city wdt:P31 wd:Q515; wdt:P625 ?cityloc.\nBIND(geof:distance(?thingloc, ?cityloc) AS ?distnum)\nFILTER (?distnum > 60)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?distnum)",
        "complexity_description": "Multiple joins, filter and bind functions",
        "complexity": "complex"
    },
    {
        "id": "139",
        "valid_gpt_response": true,
        "query": "SELECT ?type ?typeLabel (COUNT(?thing) AS ?things) WHERE {\n?thing wdt:P2002 ?tw;\nwdt:P31 ?type.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?type ?typeLabel\nORDER BY DESC(?things)",
        "complexity_description": "Multiple triple patterns, service call, group by and order by",
        "complexity": "complex"
    },
    {
        "id": "140",
        "valid_gpt_response": true,
        "query": "SELECT ?type ?typeLabel (COUNT(?thing) AS ?things) WHERE {\n?thing wdt:P2003 [];\nwdt:P31 ?type.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?type ?typeLabel\nORDER BY DESC(?things)",
        "complexity_description": "Multiple triple patterns, service call, group by and order by",
        "complexity": "complex"
    },
    {
        "id": "141",
        "valid_gpt_response": true,
        "query": "SELECT ?type ?typeLabel ((COUNT(?tw)) AS ?twitter) (COUNT(?fb) AS ?facebook) WHERE {\n{?t wdt:P2002 ?tw} UNION {?t wdt:P2013 ?fb}\n?t wdt:P31 ?type.\nFILTER (?type != wd:Q5)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?type ?typeLabel\nORDER BY DESC(?twitter)\nLIMIT 80",
        "complexity_description": "Multiple COUNT, UNION, FILTER, SERVICE and GROUP BY clauses",
        "complexity": "complex"
    },
    {
        "id": "142",
        "valid_gpt_response": true,
        "query": "SELECT ?twit ?item ?itemLabel ?itemDescription ?id WHERE {\n?item wdt:P4033 ?id.\nOPTIONAL {?item wdt:P2002 ?twit}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?itemLabel",
        "complexity_description": "Optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "143",
        "valid_gpt_response": true,
        "query": "SELECT ?type ?typeLabel (COUNT(?character) AS ?count)\nWHERE {\n?character wdt:P31 ?type.\n?type wdt:P279* wd:Q95074\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?type ?typeLabel ORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, service call and aggregation",
        "complexity": "complex"
    },
    {
        "id": "144",
        "valid_gpt_response": true,
        "query": "SELECT ?wizard ?wizardLabel ?groupLabel ?group WHERE {\n?wizard wdt:P31 wd:Q15298259; # in Harry Potter universe\nwdt:P463 ?group\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Simple query with 2 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "145",
        "valid_gpt_response": true,
        "query": "SELECT ?group ?groupLabel ?wizardLabel ?wizard WHERE {\n?wizard wdt:P31 wd:Q15298259; # in Harry Potter universe\nwdt:P463 ?group.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Simple query with 2 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "146",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?fiction ?fictionLabel ?fictionDescription ?realLabel ?realDescription ?asLabel WHERE {\n?fiction p:P941 ?statement;\nwdt:P31/wdt:P279* wd:Q95074.\n?statement ps:P941 ?real.\n?real wdt:P31 wd:Q5\nOPTIONAL {?statement pq:P794 ?as}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ?fictionLabel",
        "complexity_description": "Multiple joins, optional clause and service call",
        "complexity": "complex"
    },
    {
        "id": "147",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?char ?charLabel ?charDescription ?after ?afterLabel ?afterDescription WHERE {\n?char wdt:P31/wdt:P279? wd:Q95074 ;\nwdt:P138 ?after .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ?charLabel",
        "complexity_description": "Two triple patterns, one service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "148",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?thing ?thingLabel ?thingDescription ?personLabel WHERE {\n?thing wdt:P144 ?person.\n?person wdt:P31 wd:Q5\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Simple query with 2 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "149",
        "valid_gpt_response": true,
        "query": "SELECT ?from ?fromLabel ?to ?toLabel ?rgb WHERE {\n{SELECT (?fictional_war AS ?from) (?universe AS ?to) (\"F7FF00\" as ?rgb) WHERE {\n?fictional_war wdt:P31 wd:Q17198419. OPTIONAL{?fictional_war wdt:P1080 ?narr_universe}\nOPTIONAL {?fictional_war wdt:P8345 ?franchise }\nOPTIONAL {?fictional_war wdt:P1441 ?work }\nBIND(COALESCE(?narr_universe, ?franchise, ?work, '') AS ?universe)\n} }\nUNION {SELECT (?participant AS ?from) (?fictional_war AS ?to) (\"7FFF00\" as ?rgb) WHERE {\n?fictional_war wdt:P31 wd:Q17198419.\nOPTIONAL { ?fictional_war wdt:P710 ?participant } } }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple UNION, OPTIONAL, and BIND clauses with nested queries",
        "complexity": "complex"
    },
    {
        "id": "150",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?serLabel\n(URI(CONCAT(\"https://random.tv.longair.net/series/\", SUBSTR(STR(?ser),32) )) as ?link)\nWHERE {\n?ser wdt:P31/wdt:P279? wd:Q5398426. # Television series, including miniseries etc.\n{?ser wdt:P272 wd:Q9531} UNION {?ser wdt:P449/wdt:P137 wd:Q9531 } # Produced by BBC or originally on channel owned by BBC\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?serLabel",
        "complexity_description": "Multiple filters, UNION and SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "151",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?p1 ?p1Label ?p1birth ?p2 ?p2Label ?p2birth ?diff WHERE {\n?p2 wdt:P184/wdt:P184/wdt:P184/wdt:P184/wdt:P184/wdt:P184/wdt:P184/wdt:P184/wdt:P184+ ?p1;\nwdt:P569 ?p2birth.\n?p1 wdt:P569 ?p1birth.\nBIND(YEAR(?p2birth) - YEAR(?p1birth) AS ?diff)\nFILTER ( ?diff > 700)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY DESC(?diff)",
        "complexity_description": "Multiple triple patterns, property paths, and filter with function",
        "complexity": "complex"
    },
    {
        "id": "152",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person2 ?person2Label ?person1 ?person1Label?p2birth WHERE {\nwd:Q22092846 wdt:P184* ?person2.\n?person1 wdt:P184* wd:Q3118446.\n?person2 wdt:P184 ?person1;\nwdt:P569 ?p2birth.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY DESC(?p2birth)",
        "complexity_description": "Multiple joins, filters and ordering",
        "complexity": "complex"
    },
    {
        "id": "153",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?group ?groupLabel (\"7FFF00\" as ?rgb)\nWHERE {\n?person wdt:P570 ?death FILTER (YEAR(?death) < 1800).\n?person wdt:P463 wd:Q123885. # That ?person is a person is implicit through membership\n?person wdt:P463 ?group FILTER (?group != wd:Q123885).\n?group wdt:P31/wdt:P279? wd:Q955824.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple filters, joins and subqueries",
        "complexity": "complex"
    },
    {
        "id": "154",
        "valid_gpt_response": true,
        "query": "SELECT ?personLabel ?enwp (URI(CONCAT(\"https://discovery.nationalarchives.gov.uk/details/c/\",?ukna)) AS ?uknalink) WHERE {\n?person wdt:P3029 ?ukna.\n?person wdt:P69 wd:Q34433.\n?enwp schema:about ?person; schema:isPartOf <https://en.wikipedia.org/>\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?personLabel",
        "complexity_description": "Multiple joins, filters and service call",
        "complexity": "medium"
    },
    {
        "id": "155",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?positionLabel ?date (URI(CONCAT(\"https://discovery.nationalarchives.gov.uk/details/c/\",?ukna)) AS ?url) WHERE {\n?person wdt:P3029 ?ukna; # person in UK National Archives\nwdt:P39 ?position . ?position wdt:P361 wd:Q112014. # held position in Cabinet of the UK\n?person wdt:P570 ?date # death date\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple filters, joins and service call",
        "complexity": "medium"
    },
    {
        "id": "156",
        "valid_gpt_response": true,
        "query": "SELECT ?personLabel ?personDescription (URI(CONCAT(\"https://discovery.nationalarchives.gov.uk/details/c/\",?ukna)) AS ?uknalink)\n(URI(CONCAT(\"https://catalog.archives.gov/id/\",?nara)) as ?naralink) WHERE {\n?person wdt:P3029 ?ukna; wdt:P1225 ?nara.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?personLabel",
        "complexity_description": "Multiple services, concatenation and ordering",
        "complexity": "medium"
    },
    {
        "id": "157",
        "valid_gpt_response": true,
        "query": "SELECT ?species ?speciesLabel ?sitelink\nWHERE {\n?species wdt:P171* wd:Q7377 # Sub-species of mammal\nFILTER NOT EXISTS { [] wdt:P171 ?species } # Leaf nodes only\n?sitelink schema:about ?species. # Page 'about' species: could be Wikipedia article or not\n?species rdfs:label ?speciesLabel filter (lang(?speciesLabel) = \"en\")\n}",
        "complexity_description": "Medium complexity due to multiple filters and joins",
        "complexity": "medium"
    },
    {
        "id": "158",
        "valid_gpt_response": true,
        "query": "SELECT ?taxon ?taxonLabel\nWHERE {\n?taxon wdt:P105 wd:Q37517 . # taxonomic rank: Class\n?taxon rdfs:label ?taxonLabel filter (lang(?taxonLabel) = \"en\")\n}",
        "complexity_description": "Two triple patterns with a language filter",
        "complexity": "simple"
    },
    {
        "id": "159",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?classLabel\nWHERE\n{\nwd:Q42196 wdt:P171* ?item .\n?item wdt:P105 ?class\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "160",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?item2Label ?item3Label ?item4Label ?item4rankLabel\nWHERE {\n?item wdt:P171+ wd:Q7377 .\nFILTER NOT EXISTS { [] wdt:P171 ?item } # Leaf nodes only\n?item wdt:P171 ?item2 .\n?item2 wdt:P171 ?item3 .\n?item3 wdt:P171 ?item4 .\n?item4 wdt:P105 ?item4rank\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ?item4Label ?item3Label",
        "complexity_description": "Multiple joins, filter and service call",
        "complexity": "complex"
    },
    {
        "id": "161",
        "valid_gpt_response": true,
        "query": "SELECT ?wd ?wdLabel ?ebird_id (COUNT(?sitelink) AS ?sites) WHERE {\n?wd wdt:P3444 ?ebird_id.\nOPTIONAL {?sitelink schema:about ?wd FILTER(CONTAINS(str(?link), \".wikipedia.org/\"))}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?wd ?wdLabel ?ebird_id",
        "complexity_description": "Uses OPTIONAL, FILTER, SERVICE and GROUP BY",
        "complexity": "medium"
    },
    {
        "id": "162",
        "valid_gpt_response": true,
        "query": "SELECT ?itemLabel ?item ?itemDescription ?sites WHERE {\nSERVICE wikibase:mwapi {\nbd:serviceParam wikibase:api \"EntitySearch\" .\nbd:serviceParam wikibase:endpoint \"www.wikidata.org\" .\nbd:serviceParam mwapi:search \"cancer\" .\nbd:serviceParam mwapi:language \"en\" .\n?item wikibase:apiOutputItem mwapi:item\n}\n?item wikibase:sitelinks ?sites.\nMINUS {?item wdt:P31 wd:Q4167410} # Exclude Wikimedia disambiguation pages\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\"}\n} ORDER BY DESC(?sites)",
        "complexity_description": "Multiple services, filters and ordering",
        "complexity": "complex"
    },
    {
        "id": "163",
        "valid_gpt_response": true,
        "query": "SELECT ?city ?name WHERE {\n?city wdt:P17 wd:Q142;\nwdt:P625 [].\n?city rdfs:label ?name FILTER (lang(?name)=\"fr\") FILTER ( REGEX(?name, \"ange$\", \"\") )\n}",
        "complexity_description": "Multiple filters and regex",
        "complexity": "medium"
    },
    {
        "id": "164",
        "valid_gpt_response": true,
        "query": "SELECT ?lang1 ?desc ?lang2 WHERE {\n?item wdt:P279 wd:Q2095.\n?item rdfs:label ?lang1 FILTER(lang(?lang1) = \"en\").\n?item schema:description ?desc FILTER(lang(?desc) = \"en\").\n?item rdfs:label ?lang2 FILTER(lang(?lang2) = \"ca\")\n} ORDER BY ?lang1",
        "complexity_description": "Multiple filters and language constraints",
        "complexity": "medium"
    },
    {
        "id": "165",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?url ?sites WHERE {\n?item p:P973 ?s. ?s ps:P973 ?url . ?s pq:P407 wd:Q1860 .\n?item wikibase:sitelinks ?sites\nFILTER NOT EXISTS{?item rdfs:label ?label FILTER(LANG(?label) = \"en\") }\n} ORDER BY DESC(?sites)",
        "complexity_description": "Multiple joins, filter and order by",
        "complexity": "complex"
    },
    {
        "id": "166",
        "valid_gpt_response": true,
        "query": "SELECT ?label ?subj (SAMPLE(?whereLabel) AS ?where) (SAMPLE(?countryLabel) as ?country) (SAMPLE(?orderLabel) AS ?order) WHERE\n{ ?subj wdt:P31/wdt:P279? ?type ;\nrdfs:label ?label filter (lang(?label) = \"en\")\n?type wdt:P279? wd:Q44613. # instance of monastery or subtype\nOPTIONAL { ?subj wdt:P17/rdfs:label ?countryLabel filter (lang(?countryLabel) = \"en\") }\nOPTIONAL { ?subj wdt:P131/rdfs:label ?whereLabel filter (lang(?whereLabel) = \"en\") }\nOPTIONAL { ?subj wdt:P611/rdfs:label ?orderLabel filter (lang(?orderLabel) = \"en\") }\nMINUS {?subj wdt:P17 wd:Q142 } # not France\nMINUS {?subj wdt:P17 wd:Q27 } # not Ireland\n?subj p:P625/psv:P625 ?loc. # coordinate-location statement\n?loc wikibase:geoLatitude ?lat .\n?loc wikibase:geoLongitude ?long .\nFILTER (?lat > 50) FILTER (?lat < 63)\nFILTER (?long > -10.5) FILTER (?long < 2.02)\n} GROUP BY ?label ?subj\nORDER BY ?label",
        "complexity_description": "Multiple optional patterns, filters and minus clauses",
        "complexity": "complex"
    },
    {
        "id": "167",
        "valid_gpt_response": true,
        "query": "SELECT ?thing ?thingLabel ?cat WHERE {\n?thing wdt:P373 ?cat;\nwdt:P31/wdt:P279* wd:Q39546\nMINUS { ?thing wdt:P18 [] }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} LIMIT 50",
        "complexity_description": "Multiple triple patterns, property paths, MINUS clause and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "168",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?en_name ?zh_name ?cbdb ?viaf WHERE {\n?item wdt:P497 ?cbdb;\nwdt:P214 ?viaf.\nOPTIONAL{ ?item rdfs:label ?en_name filter (lang(?en_name) = \"en\") }\nOPTIONAL{ ?item rdfs:label ?zh_name filter (lang(?zh_name) = \"zh\") }\n} ORDER BY ?cbdb",
        "complexity_description": "Multiple optional patterns, filtering and ordering",
        "complexity": "medium"
    },
    {
        "id": "169",
        "valid_gpt_response": true,
        "query": "SELECT ?cbdb ?idlabel ?value WITH {\nSELECT DISTINCT ?item ?cbdb WHERE {\n?item wdt:P497 ?cbdb\n}\n} AS %subquery WHERE {\nINCLUDE %subquery .\n?id wikibase:propertyType wikibase:ExternalId; wikibase:claim ?p; wikibase:statementProperty ?ps; wdt:P31/wdt:P279* wd:Q19595382 FILTER( ?id != wd:P497 ).\n?item ?p [ ?ps ?value ] .\n?id rdfs:label ?idlabel FILTER (lang(?idlabel) = \"en\").\n} ORDER BY ?idlabel",
        "complexity_description": "Multiple subqueries, joins and filters",
        "complexity": "complex"
    },
    {
        "id": "170",
        "valid_gpt_response": true,
        "query": "SELECT ?wd (CONCAT(\"http://db1.ihp.sinica.edu.tw/cbdbc/cbdbkmeng?~~AAA\",?cbdb) AS ?cbdb_url) ?period WHERE {\n?wd wdt:P497 ?cbdb.\nOPTIONAL {?wd wdt:P2348 ?period}\nMINUS {?wd wdt:P27 [] } # country\n}",
        "complexity_description": "Optional clause and MINUS pattern",
        "complexity": "medium"
    },
    {
        "id": "171",
        "valid_gpt_response": true,
        "query": "SELECT ?place ?placeLabel ?region ?regionLabel ?geonamesID WHERE {\n?place wdt:P31 wd:Q1149652;\nwdt:P17 wd:Q668.\nOPTIONAL{ ?place wdt:P131 ?region\nMINUS {?region wdt:P576 [] } # region not abolished\n}\nOPTIONAL {?place wdt:P1566 ?geonamesID }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?regionLabel ?placelabel",
        "complexity_description": "Multiple optional patterns, service call and filtering",
        "complexity": "medium"
    },
    {
        "id": "172",
        "valid_gpt_response": true,
        "query": "SELECT ?building ?buildingLabel ?place ?placeLabel WHERE {\nVALUES ?type { wd:Q32815 wd:Q16560 } # palaces, temples . mosques= wd:Q44539\n?building wdt:P31/wdt:P279* ?type;\nwdt:P17 wd:Q668. # in India\nOPTIONAL{ ?building wdt:P131 ?place }\nOPTIONAL{ ?building wdt:P625 ?coords }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,id\". }\n} ORDER BY ?regionLabel ?placelabel",
        "complexity_description": "Multiple optional patterns, property paths and service call",
        "complexity": "medium"
    },
    {
        "id": "173",
        "valid_gpt_response": true,
        "query": "SELECT ?thing ?thingLabel WHERE {\n{wd:Q37577 ?p1 ?thing} UNION {?thing ?p1 wd:Q37577} # calvin\n{wd:Q37621 ?p2 ?thing} UNION {?thing ?p2 wd:Q37621} # hobbes\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple unions and service call",
        "complexity": "medium"
    },
    {
        "id": "174",
        "valid_gpt_response": true,
        "query": "SELECT ?countryLabel (COUNT(?element) AS ?count) (GROUP_CONCAT(DISTINCT ?elementLabel) AS ?list) WHERE {\n?element wdt:P31 wd:Q11344; # chemical element\nwdt:P61/wdt:P27 ?country. # nationality of discoverer\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?country rdfs:label ?countryLabel. ?element rdfs:label ?elementLabel}\n} GROUP BY ?countryLabel\nORDER BY DESC (?count)",
        "complexity_description": "Multiple aggregations, subqueries and joins",
        "complexity": "complex"
    },
    {
        "id": "175",
        "valid_gpt_response": true,
        "query": "SELECT ?element ?elementLabel ?atomicno (GROUP_CONCAT(?discovererLabel; separator=\", \") AS ?discoverers) (MIN(YEAR(?discovery)) AS ?year) WHERE {\n?element wdt:P31 wd:Q11344; # chemical element\nwdt:P1086 ?atomicno\nOPTIONAL{?element wdt:P61 ?discoverer}\nOPTIONAL{?element wdt:P575 ?discovery}\nMINUS{?element wdt:P279|wdt:P31 wd:Q1299291} # Remove hypothetical elements\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?element rdfs:label ?elementLabel. ?discoverer rdfs:label ?discovererLabel }\n} GROUP BY ?element ?elementLabel ?atomicno\nORDER BY ?atomicno",
        "complexity_description": "Multiple optional patterns, group by, and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "176",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?storeLabel ?url (GROUP_CONCAT(DISTINCT ?typeLabel;separator=\", \") AS ?types) ?subjectLabel\nWHERE {\nVALUES ?type {wd:Q5227308 wd:Q22692845 wd:Q7689673 wd:Q4117139\nwd:Q5281480 wd:Q212805 wd:Q5570651}\n?store wdt:P31/wdt:P279* ?type;\nwdt:P856 ?url;\nwdt:P31 ?type\nMINUS {?store wdt:P576 []}\nOPTIONAL {?store wdt:P921 ?subject.}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?type rdfs:label ?typeLabel. ?store rdfs:label ?storeLabel. ?subject rdfs:label ?subjectLabel\n}\n} GROUP BY ?storeLabel ?url ?subjectLabel ORDER BY UCASE(?storeLabel)",
        "complexity_description": "Multiple joins, subqueries, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "177",
        "valid_gpt_response": true,
        "query": "SELECT ?store ?storeLabel ?typeLabel WHERE {\nVALUES ?type { wd:Q22692845 wd:Q7689673 wd:Q4117139 wd:Q5227308 wd:Q5570651 wd:Q5281480 wd:Q212805 }\n?store wdt:P31 ?type\nMINUS{ ?store wdt:P856 [] }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n}\n} ORDER BY ?typeLabel UCASE(?storeLabel)",
        "complexity_description": "Multiple values, minus clause, and service call",
        "complexity": "medium"
    },
    {
        "id": "178",
        "valid_gpt_response": true,
        "query": "SELECT ?id ?idlabel (round(?count*1000/?total)/10 AS ?percent)\nWITH {\nSELECT ?item WHERE {\n?item wdt:P31/wdt:P279? wd:Q5398426 .\n?arwp schema:about ?item ; schema:isPartOf <https://ary.wikipedia.org/>\n}\n} AS %list\nWITH {\nSELECT (COUNT(?item) AS ?total) WHERE {\ninclude %list\n}\n} AS %total\nWITH {\nSELECT ?id (COUNT(DISTINCT ?item) AS ?count) WHERE {\ninclude %list\n?item ?p [] .\n?id wikibase:claim ?p . FILTER(?p != p:P31)\nMINUS { ?id wikibase:propertyType wikibase:ExternalId }\n}\nGROUP BY ?id\n} AS %props\nWHERE {\ninclude %props\ninclude %total\n?id rdfs:label ?idlabel . FILTER (lang(?idlabel) = \"en\")\n}\nORDER BY DESC(?percent)\nLIMIT 50",
        "complexity_description": "Multiple subqueries, joins, and filters",
        "complexity": "complex"
    },
    {
        "id": "179",
        "valid_gpt_response": true,
        "query": "SELECT ?type ?typename (COUNT(?text) AS ?count)\nWHERE {\n?text wdt:P31 ?type.\n?type wdt:P279* wd:Q7725634.\n?type rdfs:label ?typename filter (lang(?typename) = \"en\")\n} GROUP BY ?type ?typename ORDER BY DESC(?count)\nLIMIT 100",
        "complexity_description": "Multiple joins, filtering, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "180",
        "valid_gpt_response": true,
        "query": "SELECT ?item1 ?image ?item1Label ?item2 ?image2 ?item2Label ?edgeLabel\nWITH { SELECT ?item1 WHERE {\nVALUES ?item1 {wd:Q43380186 wd:Q93343 wd:Q43380245 wd:Q31561 wd:Q1302047 wd:Q47152 wd:Q86440 wd:Q692 wd:Q82133 wd:Q60643108 wd:Q56676227}\n} } AS %item1\nWITH {SELECT (?item1 AS ?item2) WHERE {INCLUDE %item1} } AS %item2\nWHERE {\nINCLUDE %item1.\nINCLUDE %item2.\n?item1 ?prop ?item2.\n?edge wikibase:directClaim ?prop ; a wikibase:Property\nOPTIONAL {?item1 wdt:P18 ?image}\nOPTIONAL {?item2 wdt:P18 ?image2}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple WITH clauses, OPTIONAL patterns, and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "181",
        "valid_gpt_response": true,
        "query": "SELECT ?item1 ?image ?item1Label ?item2 ?image2 ?item2Label ?edgeLabel\nWITH { SELECT ?item1 WHERE {\nVALUES ?item1 {wd:Q636400 wd:Q50813061 wd:Q50819534 wd:Q27147621 wd:Q559425 wd:Q15928529 wd:Q50819542 wd:Q16666 wd:Q10875944 wd:Q2047427}\n} } AS %item1\nWITH {SELECT (?item1 AS ?item2) WHERE {INCLUDE %item1} } AS %item2\nWHERE {\nINCLUDE %item1.\nINCLUDE %item2.\n?item1 ?prop ?item2.\n?edge ?dummy ?prop ; rdf:type wikibase:Property\nOPTIONAL {?item1 wdt:P18 ?image}\nOPTIONAL {?item2 wdt:P18 ?image2}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple WITH clauses, OPTIONAL patterns, and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "182",
        "valid_gpt_response": true,
        "query": "SELECT ?item1 ?image ?item1Label ?item2 ?image2 ?item2Label ?edgeLabel\nWITH { SELECT ?item1 WHERE {\nVALUES ?item1 {wd:Q8279 wd:Q43459 wd:Q82133 wd:Q8462 wd:Q53676578 wd:Q3147516 wd:Q553204 wd:Q20737645 wd:Q507564 wd:Q60809157 wd:Q1601879 wd:Q5943957 wd:Q1459037}\n} } AS %item1\nWITH {SELECT (?item1 AS ?item2) WHERE {INCLUDE %item1} } AS %item2\nWHERE {\nINCLUDE %item1.\nINCLUDE %item2.\n?item1 ?prop ?item2.\n?edge ?dummy ?prop ; rdf:type wikibase:Property\nOPTIONAL {?item1 wdt:P18 ?image}\nOPTIONAL {?item2 wdt:P18 ?image2}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple WITH clauses, OPTIONAL patterns, and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "183",
        "valid_gpt_response": true,
        "query": "SELECT ?item1 ?image ?item1Label ?item2 ?image2 ?item2Label ?edgeLabel\nWITH { SELECT ?item1 WHERE {\nVALUES ?item1 {wd:Q3172160 wd:Q56024100 wd:Q524289 wd:Q55867318 wd:Q524289 wd:Q6941088 wd:Q55867319 wd:Q15109492 wd:Q56867532 wd:Q1646305}\n} } AS %item1\nWITH {SELECT (?item1 AS ?item2) WHERE {INCLUDE %item1} } AS %item2\nWHERE {\nINCLUDE %item1.\nINCLUDE %item2.?item1 ?prop ?item2.\n?edge ?dummy ?prop ; rdf:type wikibase:Property\nOPTIONAL {?item1 wdt:P18 ?image}\nOPTIONAL {?item2 wdt:P18 ?image2}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Multiple WITH clauses, OPTIONAL patterns, and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "184",
        "valid_gpt_response": true,
        "query": "SELECT ?item1 ?image ?item1Label ?item2 ?image2 ?item2Label ?edgeLabel\nWITH { SELECT ?item1 WHERE {\nVALUES ?item1 {wd:Q154619 wd:Q2071976 wd:Q7637 wd:Q83 wd:Q171 wd:Q28778432 wd:Q180 wd:Q6686945}\n} } AS %item1\nWITH {SELECT (?item1 AS ?item2) WHERE {INCLUDE %item1} } AS %item2\nWHERE {\nINCLUDE %item1.\nINCLUDE %item2.?item1 ?prop ?item2.\n?edge ?dummy ?prop ; rdf:type wikibase:Property\nOPTIONAL {?item1 wdt:P18 ?image}\nOPTIONAL {?item2 wdt:P18 ?image2}\n}",
        "complexity_description": "Multiple WITH clauses, OPTIONAL patterns, and property paths",
        "complexity": "complex"
    },
    {
        "id": "185",
        "valid_gpt_response": true,
        "query": "SELECT ?item1 ?image ?item1Label ?item2 ?image2 ?item2Label ?edgeLabel\nWITH { SELECT ?item1 WHERE {\nVALUES ?item1 {wd:Q233009 wd:Q55264 wd:Q18527930 wd:Q61412 wd:Q9061 wd:Q1170115 wd:Q1453055 wd:Q5541515 wd:Q5729524 wd:Q1138080 wd:Q82133 wd:Q20081025 wd:Q860807}\n} } AS %item1\nWITH {SELECT (?item1 AS ?item2) WHERE {INCLUDE %item1} } AS %item2\nWHERE {\nINCLUDE %item1.\nINCLUDE %item2.\n?item1 ?prop ?item2.\n?edge wikibase:directClaim ?prop ; a wikibase:Property\nOPTIONAL {?item1 wdt:P18 ?image}\nOPTIONAL {?item2 wdt:P18 ?image2}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Multiple WITH clauses, subqueries, and OPTIONAL patterns",
        "complexity": "complex"
    },
    {
        "id": "186",
        "valid_gpt_response": true,
        "query": "SELECT ?item1 ?image ?item1Label ?item2 ?image2 ?item2Label ?edgeLabel\nWITH { SELECT ?item1 WHERE {\nVALUES ?item1 {wd:Q26163 wd:Q28803 wd:Q334953 wd:Q118223 wd:Q28045325 wd:Q28045325 wd:Q3305213 wd:Q678539 wd:Q5326366 wd:Q6249175}\n} } AS %item1\nWITH {SELECT (?item1 AS ?item2) WHERE {INCLUDE %item1} } AS %item2\nWHERE {\nINCLUDE %item1.\nINCLUDE %item2.\n?item1 ?prop ?item2.\n?edge wikibase:directClaim ?prop ; a wikibase:Property\nOPTIONAL {?item1 wdt:P18 ?image}\nOPTIONAL {?item2 wdt:P18 ?image2}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Multiple WITH clauses, OPTIONAL patterns, and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "187",
        "valid_gpt_response": true,
        "query": "SELECT ?item1 ?image ?item1Label ?item2 ?edgeLabel WHERE {\nVALUES ?target {wd:Q47152}\n{?target ?prop1 ?item1} UNION {?item1 ?prop1 ?target} UNION {VALUES ?item1 {wd:Q47152} }. ?item1 wdt:P31 wd:Q5.\n{?target ?prop2 ?item2} UNION {?item2 ?prop2 ?target}. ?item2 wdt:P31 wd:Q5.\n?item1 ?prop ?item2.\n?edge ?dummy ?prop ; rdf:type wikibase:Property\nOPTIONAL {?item1 wdt:P18 ?image}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple UNIONs, multiple triple patterns, and OPTIONAL clause",
        "complexity": "complex"
    },
    {
        "id": "188",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?a ?aLabel WHERE {\n?a wdt:P31/wdt:P279? wd:Q11862829.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\"}\n} ORDER BY ?aLabel",
        "complexity_description": "Simple query with 1 triple pattern and 1 service call",
        "complexity": "simple"
    },
    {
        "id": "189",
        "valid_gpt_response": true,
        "query": "SELECT ?speciesname ?artistLabel ?url WHERE {\n?species wdt:P171 wd:Q101538; # Species' parent taxon is Trifolium\nwdt:P225 ?speciesname.\n?work wdt:P180 ?species; wdt:P170 ?artist; wdt:P953 ?url.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, service call",
        "complexity": "medium"
    },
    {
        "id": "190",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?typeLabel WHERE {\n?item wdt:P170 wd:Q79012; wdt:P31 ?type\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER by ?itemLabel",
        "complexity_description": "Simple query with 2 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "191",
        "valid_gpt_response": true,
        "query": "SELECT ?name ?taxon (COUNT(?item) as ?count) WHERE {\n?item wdt:P170 wd:Q79012. # work by Bauer\n?item wdt:P180 ?taxon. # depicting a species\n?taxon wdt:P225 ?name # taxon name of species\n} GROUP BY ?name ?taxon\nORDER by DESC(?count) ?name",
        "complexity_description": "Multiple joins, aggregation and ordering",
        "complexity": "complex"
    },
    {
        "id": "192",
        "valid_gpt_response": true,
        "query": "SELECT ?work ?workLabel ?page ?place ?placeLabel (URI(CONCAT(\"http://www.geonames.org/\",?geoname)) AS ?geoname_url) ?coords WHERE { ?work p:P361 [ps:P361 wd:Q54854779; pq:P304 ?page].\nOPTIONAL {?work wdt:P180 ?place\nOPTIONAL {?place wdt:P1566 ?geoname}\nOPTIONAL {?place wdt:P625 ?coords}\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n} ORDER by xsd:integer(?page)",
        "complexity_description": "Multiple optional patterns, service call and ordering",
        "complexity": "complex"
    },
    {
        "id": "193",
        "valid_gpt_response": true,
        "query": "SELECT ?work ?workLabel ?page ?coords ?itemLabel WHERE {\n?work p:P361 [ps:P361 wd:Q54854779; pq:P304 ?page].\n?work wdt:P180 ?item. ?item wdt:P625 ?coords\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Multiple triple patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "194",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?workLabel WHERE {\n?item wdt:P170 wd:Q79012.\nMINUS {?item wdt:P180 []}\nOPTIONAL {?item wdt:P1433 ?work} # Work published in\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER by ?itemLabel",
        "complexity_description": "Uses MINUS and OPTIONAL clauses, but still relatively simple",
        "complexity": "medium"
    },
    {
        "id": "195",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?url WHERE {\n?item wdt:P170 wd:Q79012; wdt:P953 ?url\nMINUS {?item wdt:P1433 [] }\nMINUS {?item wdt:P361 [] }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER by ?itemLabel",
        "complexity_description": "Multiple MINUS clauses, SERVICE keyword and ORDER BY",
        "complexity": "complex"
    },
    {
        "id": "196",
        "valid_gpt_response": true,
        "query": "SELECT ?item2 (\"P180\" as ?prop) ?species (\"S854\" as ?ref) ?cite WHERE {\n?item1 wdt:P170 wd:Q79012.\n?item2 wdt:P170 wd:Q79012.\n?item1 p:P180 [ps:P180 ?species; prov:wasDerivedFrom/pr:P854 ?cite]\nMINUS {?item2 wdt:P180 []}\n?item1 rdfs:label ?name.\n?item2 rdfs:label ?name\n}",
        "complexity_description": "Multiple joins, MINUS clause and property paths",
        "complexity": "complex"
    },
    {
        "id": "197",
        "valid_gpt_response": true,
        "query": "SELECT ?genus ?genusname (COUNT(?art) as ?count) WHERE {\n?art wdt:P1433 wd:Q5460305. # Artwork published in FG\n?art wdt:P180 ?species. # Artwork depicts species\n?species wdt:P171 ?genus. # parent taxon of species\n?genus wdt:P225 ?genusname. # taxon name of genus\n} GROUP BY ?genus ?genusname\nORDER BY ?genusname",
        "complexity_description": "Multiple joins, group by and order by",
        "complexity": "medium"
    },
    {
        "id": "198",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?commonname ?taxonname WHERE {\n?art wdt:P170 wd:Q79012; wdt:P180 ?item.\n?item wdt:P225 ?taxonname; wdt:P1843 ?commonname FILTER (lang(?commonname) = \"en\")\n} ORDER BY UCASE(?commonname)",
        "complexity_description": "Two triple patterns, one filter and ordering",
        "complexity": "medium"
    },
    {
        "id": "199",
        "valid_gpt_response": true,
        "query": "SELECT (SUBSTR(STR(?loc),32) AS ?q) ?locLabel (SAMPLE(?coords) AS ?latlong) (MONTH(?start) AS ?start_m) (YEAR(?start) AS ?start_y) (MONTH(?end) AS ?end_m) (YEAR(?end) AS ?end_y) WHERE {\nwd:Q52496052 p:P276 ?s.\n?s ps:P276 ?loc\nOPTIONAL {?s pq:P585 ?point}\nOPTIONAL {?s pq:P580 ?startpoint}\nBIND(COALESCE(?startpoint, ?point) AS ?start)\nOPTIONAL {?s pq:P582 ?end}\n?loc wdt:P625 ?coords.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?loc ?locLabel ?start ?end\nORDER BY ?start_y ?start_m ?end_y ?end_m",
        "complexity_description": "Multiple OPTIONAL patterns, BIND, COALESCE, and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "200",
        "valid_gpt_response": true,
        "query": "SELECT ?loc ?locLabel (SAMPLE(?coords) AS ?latlong) WHERE {\nwd:Q52496052 wdt:P276 ?loc.\nMINUS {?loc wdt:P625 ?coords}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?loc ?locLabel",
        "complexity_description": "Multiple patterns, minus clause, and group by",
        "complexity": "complex"
    },
    {
        "id": "201",
        "valid_gpt_response": true,
        "query": "SELECT ?layer ?loc ?placename ?coords WHERE {\n{ SELECT ?exp (COUNT(?loc) AS ?count) WHERE {\n?exp wdt:P31/wdt:P279* wd:Q2401485.\n?exp wdt:P276 ?loc.\n} GROUP BY ?exp }\nFILTER (?count > 1)\n?exp wdt:P276 ?loc.\n?loc wdt:P625 ?coords.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?exp rdfs:label ?layer. ?loc rdfs:label ?placename }\n}",
        "complexity_description": "Multiple subqueries, grouping and filtering",
        "complexity": "complex"
    },
    {
        "id": "202",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?name WHERE {\n?item wdt:P138 wd:Q936580; wdt:P225 ?name\n}",
        "complexity_description": "Two triple patterns with one variable",
        "complexity": "simple"
    },
    {
        "id": "203",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?name WHERE {\n?item wdt:P225 ?name FILTER (CONTAINS(?name, \" baueri\")).\nMINUS {?item wdt:P138 wd:Q936580}\n}",
        "complexity_description": "Filter and MINUS clause",
        "complexity": "medium"
    },
    {
        "id": "204",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?taxon WHERE {\n?item wdt:P170 wd:Q79012; wdt:P180/wdt:P171* ?taxon.\n?taxon wdt:P31 wd:Q16521\n}",
        "complexity_description": "Two triple patterns with one property path",
        "complexity": "medium"
    },
    {
        "id": "205",
        "valid_gpt_response": true,
        "query": "SELECT ?q ?name WHERE {\n?q wdt:P428 ?name FILTER(STRSTARTS(?name,\"H\"))\n} ORDER BY ?name",
        "complexity_description": "Single triple pattern with filter and order by",
        "complexity": "simple"
    },
    {
        "id": "206",
        "valid_gpt_response": true,
        "query": "SELECT ?b ?q ?qLabel WHERE {\n?q wdt:P428 ?b.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?b",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "207",
        "valid_gpt_response": true,
        "query": "SELECT ?b ?q ?qLabel (count(?s) AS ?sitelinks) WHERE {\n?q wdt:P428 ?b.\n?s schema:about ?q.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n} GROUP BY ?b ?q ?qLabel\nORDER BY DESC(?sitelinks)\nLIMIT 10",
        "complexity_description": "Multiple triple patterns, aggregation and ordering",
        "complexity": "medium"
    },
    {
        "id": "208",
        "valid_gpt_response": true,
        "query": "SELECT ?q ?qLabel (count(?s) AS ?taxa) WHERE {\n?s p:P225 [pq:P405 ?q].\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n} GROUP BY ?q ?qLabel\nORDER BY DESC(?taxa)\nLIMIT 10",
        "complexity_description": "Multiple clauses, aggregation and ordering",
        "complexity": "medium"
    },
    {
        "id": "209",
        "valid_gpt_response": true,
        "query": "SELECT ?b ?q ?qLabel (count(?t) AS ?taxa) (count(?o) AS ?other) WHERE {\n?q wdt:P428 ?b.\n?s wdt:P138 ?q\n{?s wdt:P31 wd:Q16521. BIND(1 AS ?t) } UNION { BIND(1 AS ?o). MINUS {?s wdt:P31 wd:Q16521} }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n} GROUP BY ?b ?q ?qLabel\nORDER BY DESC(?taxa + ?other)\nLIMIT 10",
        "complexity_description": "Multiple patterns, UNION, MINUS, SERVICE, BIND, GROUP BY, ORDER BY and LIMIT",
        "complexity": "complex"
    },
    {
        "id": "210",
        "valid_gpt_response": true,
        "query": "SELECT ?p ?pLabel ?aLabel (SAMPLE(?image) AS ?img) WHERE {\n?p wdt:P31 wd:Q3305213; wdt:P170 ?a; wdt:P136 wd:Q192110 ; wdt:P18 ?image. ?a wdt:P21 wd:Q6581072\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?p ?pLabel ?aLabel LIMIT 300",
        "complexity_description": "Multiple filters, joins and aggregations",
        "complexity": "complex"
    },
    {
        "id": "211",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?obj) AS ?count) WHERE {\n?obj p:P195 ?s.\n?s ps:P195 ?collection.\nMINUS { ?s pq:P582 [] }\n}",
        "complexity_description": "Multiple triple patterns, MINUS clause",
        "complexity": "medium"
    },
    {
        "id": "212",
        "valid_gpt_response": true,
        "query": "SELECT ?collection ?collectionLabel ?partofLabel ?countryLabel ?size ?partLabel WHERE {\n?collection p:P1436 ?s.\n?s ps:P1436 ?size\nOPTIONAL {?s pq:P518 ?part}\nOPTIONAL {?collection wdt:P361 ?partof . # Get the organisation the collection is part of\nMINUS{ ?partof wdt:P31 wd:Q13406463 } } # but not Wikimedia list articles\nOPTIONAL {?collection wdt:P17 ?country}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\nFILTER (?size > 100)\n} ORDER BY DESC(?size)",
        "complexity_description": "Multiple optional patterns, minus clause and filter",
        "complexity": "complex"
    },
    {
        "id": "213",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?countryLabel ?museum ?museumLabel (YEAR(?earliest) as ?year) WHERE {\n{ SELECT ?country (MIN(?inception) as ?earliest) WHERE {\n?museum wdt:P31/wdt:P279? wd:Q33506 ; wdt:P131?/wdt:P17 ?country; wdt:P571 ?inception\n} GROUP BY ?country }\n?museum wdt:P31/wdt:P279? wd:Q33506 ; wdt:P131?/wdt:P17 ?country; wdt:P571 ?earliest.\nMINUS {?country wdt:P576 []} # Exclude abolished countries like the Austrian Empire\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?countryLabel",
        "complexity_description": "Nested subqueries, grouping, and filtering",
        "complexity": "complex"
    },
    {
        "id": "214",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?obj) AS ?count) ?collection ?collectionLabel ?partofLabel WHERE {\n?obj p:P195 ?s.\n?s ps:P195 ?collection.\nMINUS { ?s pq:P582 [] }\nOPTIONAL { ?collection wdt:P361 ?partof }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?collection ?collectionLabel ?partofLabel\nORDER BY DESC(?count)\nLIMIT 100",
        "complexity_description": "Multiple joins, subqueries, and aggregation",
        "complexity": "complex"
    },
    {
        "id": "215",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?obj1) AS ?count) ?propertyLabel ?thingLabel ?thing WHERE {\n?obj1 wdt:P195 wd:Q430682. #Tate\nVALUES ?prop1 {wdt:P180 wdt:P170 wdt:P2348 wdt:P135 wdt:P136 wdt:P941 wdt:P186 wdt:P1071}\n?obj1 ?prop1 ?thing.\n?property ?ref ?prop1 ;\nrdf:type wikibase:Property .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?propertyLabel ?thingLabel ?thing ORDER BY DESC(?count) LIMIT 100",
        "complexity_description": "Multiple joins, subqueries, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "216",
        "valid_gpt_response": true,
        "query": "SELECT (?count1 AS ?in_Tate) (?count2 AS ?in_Smithsonian) (CONCAT(?propertyLabel,\": \",?thingLabel)AS ?attribute) WHERE {\n{ SELECT (COUNT(?obj1) AS ?count1) ?property ?thing WHERE {\n?obj1 wdt:P195 wd:Q430682. #Tate\nVALUES ?prop1 {wdt:P180 wdt:P170 wdt:P2348 wdt:P135 wdt:P136 wdt:P941 wdt:P186 wdt:P1071}\n?obj1 ?prop1 ?thing.\n?property ?ref ?prop1 ;\nrdf:type wikibase:Property .\n} GROUP BY ?property ?thing }\n{ SELECT (COUNT(?obj2) AS ?count2) ?property ?thing WHERE {\n?obj2 wdt:P195 wd:Q1192305. #Smithsonian\nVALUES ?prop1 {wdt:P180 wdt:P170 wdt:P2348 wdt:P135 wdt:P136 wdt:P941 wdt:P186 wdt:P1071}\n?obj2 ?prop1 ?thing.\n?property ?ref ?prop1 ;\nrdf:type wikibase:Property .\n} GROUP BY ?property ?thing }\nFILTER (?count2 >2 )\nFILTER (?count1 >2 )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?property rdfs:label ?propertyLabel .?thing rdfs:label ?thingLabel }\n}",
        "complexity_description": "Multiple subqueries, grouping, and filtering",
        "complexity": "complex"
    },
    {
        "id": "217",
        "valid_gpt_response": true,
        "query": "SELECT (?count1 AS ?in_Tate) (?count2 AS ?in_NPG) ?artist WHERE {\n{ SELECT (COUNT(?obj1) AS ?count1) ?creator WHERE {\n?obj1 wdt:P195 wd:Q430682. #Tate\n?obj1 wdt:P170 ?creator.\n} GROUP BY ?creator }\n{ SELECT (COUNT(?obj2) AS ?count2) ?creator WHERE {\n?obj2 wdt:P195 wd:Q238587. #National Portrait Gallery\n?obj2 wdt:P170 ?creator.\n} GROUP BY ?creator }\nFILTER (?creator != wd:Q4233718) # exclude anonymous works\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?creator rdfs:label ?artist }\n}",
        "complexity_description": "Multiple subqueries, grouping and filtering",
        "complexity": "complex"
    },
    {
        "id": "218",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?artist ?artistLabel ?genderLabel ?countryLabel (year(?death) as ?deathyear) #?birthyear ?flyear\nWHERE {\n?artist wdt:P31 wd:Q5 ; wdt:P106/wdt:P279? wd:Q1028181 .\n?artist wdt:P570 ?death FILTER(year(?death)<1800).\nOPTIONAL{?artist wdt:P21 ?gender}\nOPTIONAL{?artist wdt:P27 ?country}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?deathyear)",
        "complexity_description": "Multiple filters, optional patterns and service call",
        "complexity": "complex"
    },
    {
        "id": "219",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?artist ?artistLabel ?countryLabel ?links ?benezit_id ?grove_id WHERE {\n{ ?artist wdt:P2843 ?benezit_id } UNION { ?artist wdt:P8406 ?grove_id }\n?artist wikibase:sitelinks ?links FILTER (?links > 0).\n?artist wdt:P31 wd:Q5.\n?artist wdt:P27 ?country.\nFILTER NOT EXISTS{?enwp schema:about ?artist; schema:inLanguage \"en\"}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?links)",
        "complexity_description": "Multiple UNION, FILTER NOT EXISTS, SERVICE and ORDER BY clauses",
        "complexity": "complex"
    },
    {
        "id": "220",
        "valid_gpt_response": true,
        "query": "SELECT ?work ?workLabel ?artistLabel ?date ?datePrecision ?image WHERE {\n?work wdt:P31 wd:Q3305213 # paintings\n; wdt:P170 ?artist .\n?artist wdt:P27 wd:Q34266. # artist's nationality: Russian Empire\n?work p:P571/psv:P571 ?node .\n?node wikibase:timeValue ?date ; # date of painting\nwikibase:timePrecision ?datePrecision # precision of date (e.g. day, month, year)\nBIND(YEAR(?date) as ?year) FILTER(?year > 1905) FILTER(?year < 1930) #specify date range\nFILTER (?datePrecision > 8) # known year\n.?work wdt:P18 ?image # only show art that Commons has an image for\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,ru,et,de,fr\". }\n}",
        "complexity_description": "Multiple filters and joins with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "221",
        "valid_gpt_response": true,
        "query": "SELECT ?i ?iLabel ?iDescription ?collLabel ?image WHERE {\n?i wdt:P31 wd:Q3305213.\n?i wdt:P136 wd:Q191163 .\n?i wdt:P2048 ?height.\n?i wdt:P2049 ?width.\nFILTER (?height > ?width)\n?i wdt:P18 ?image.\n?i wdt:P195 ?coll.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple filters and services",
        "complexity": "medium"
    },
    {
        "id": "222",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel (SAMPLE(?img) AS ?image) WHERE {\n?item wdt:P195 wd:Q109893034 .\n?item wdt:P18 ?img\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nBIND(SHA512(CONCAT(STR(RAND()), STR(NOW()), STR(?item))) AS ?random)\n} GROUP BY ?item ?itemLabel\nORDER BY ?random\nLIMIT 20",
        "complexity_description": "Multiple triple patterns, SERVICE clause, BIND function, GROUP BY and ORDER BY clauses",
        "complexity": "complex"
    },
    {
        "id": "223",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?collectionLabel WHERE {\n?item wdt:P31 wd:Q56676227\nMINUS {?item wdt:P186 wd:Q296955}\nOPTIONAL {?item wdt:P195 ?collection}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, MINUS and OPTIONAL clauses",
        "complexity": "medium"
    },
    {
        "id": "224",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?model WHERE {\n?item wdt:P4896 ?model; wdt:P195 [].\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr\" }\n} ORDER BY ?itemLabel",
        "complexity_description": "Simple query with 2 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "225",
        "valid_gpt_response": true,
        "query": "SELECT ?depicted ?depictedLabel ?ashcount ?ashexample ?ashexampleLabel ?clevcount ?clevexample ?clevexampleLabel WHERE {\n{SELECT ?depicted (Sample(?itemash) AS ?ashexample) (COUNT(DISTINCT ?itemash) AS ?ashcount) (sample(?itemclev) as ?clevexample) (COUNT(DISTINCT ?itemclev) AS ?clevcount) WHERE {\n?itemclev wdt:P195 wd:Q657415; wdt:P180 ?depicted.\n?itemash wdt:P195 wd:Q636400 ; wdt:P180 ?depicted.\n} GROUP BY ?depicted }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?ashcount + ?clevcount)",
        "complexity_description": "Multiple subqueries, aggregation functions and grouping",
        "complexity": "complex"
    },
    {
        "id": "226",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?id ?img WHERE {\n?item p:P217 [ps:P217 ?id; pq:P195 wd:Q657415] .\n?item wdt:P5008 wd:Q60729883 .\nOPTIONAL { ?item wdt:P18 ?img } .\nMINUS { ?item wdt:P180 [] }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, optional clause, minus clause and service call",
        "complexity": "complex"
    },
    {
        "id": "227",
        "valid_gpt_response": true,
        "query": "SELECT ?link (MIN(?image) AS ?img) ?qLabel (COUNT(DISTINCT ?sitelink) AS ?linkcount) WHERE {\n?q (wdt:P31/wdt:P279*) wd:Q87167.\nFILTER (?q != wd:Q145780) # Exclude Dead Sea Scrolls: too broad\n?sitelink schema:about ?q.\n?q wdt:P18 ?image.\nBIND(URI(CONCAT(\"http://example.org/test/manuscripts/index.php?q=manuscript/\",SUBSTR(STR(?q),32))) AS ?link)\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?q rdfs:label ?qLabel.\n}\n}\nGROUP BY ?link ?qLabel\nORDER BY DESC(?linkcount)\nLIMIT 100",
        "complexity_description": "Multiple filters, subqueries, and functions",
        "complexity": "complex"
    },
    {
        "id": "228",
        "valid_gpt_response": true,
        "query": "SELECT ?q ?qLabel (GROUP_CONCAT(DISTINCT ?collectionLabel; separator=\"; \") AS ?where) ?enwp (GROUP_CONCAT(DISTINCT ?langLabel; separator=\", \") AS ?languages) ?linkcount\nWHERE { {SELECT ?q (COUNT(?sitelink) AS ?linkcount) WHERE { ?q (wdt:P31/wdt:P279*) wd:Q87167. ?sitelink schema:about ?q }\nGROUP BY ?q }\n?q p:P195 ?s. ?s ps:P195 ?collection . MINUS {?s pq:P582 []}.\nMINUS {?s ps:P195 wd:Q1322278 }\nOPTIONAL{ ?q wdt:P407 ?lang }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?q rdfs:label ?qLabel. ?collection rdfs:label ?collectionLabel . ?lang rdfs:label ?langLabel\n}\nOPTIONAL{?enwp schema:about ?q ; schema:isPartOf <https://en.wikipedia.org/> }\n# other props: inventory number; part of ; full work (P953); Commons cat; described at (P973)\n}\nGROUP BY ?q ?qLabel ?enwp ?linkcount\nORDER BY DESC(?linkcount)",
        "complexity_description": "Multiple subqueries, grouping, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "229",
        "valid_gpt_response": true,
        "query": "SELECT ?q ?qLabel (GROUP_CONCAT(DISTINCT ?collectionLabel; separator=\"; \") AS ?where)\n(URI(CONCAT('https://tools.wmflabs.org/mirador/?manifest=', STR(?iiif))) AS ?iiiflink)\nWHERE {\n?q (wdt:P31/wdt:P279*) wd:Q87167; wdt:P6108 ?iiif; wikibase:sitelinks ?sitecount FILTER(?sitecount > 0)\n?q p:P195 ?s. ?s ps:P195 ?collection . MINUS {?s pq:P582 []}.\nMINUS {?s ps:P195 wd:Q1322278 }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?q rdfs:label ?qLabel. ?collection rdfs:label ?collectionLabel\n}\n}\nGROUP BY ?q ?qLabel ?iiif ?sitecount\nORDER BY DESC(?sitecount)",
        "complexity_description": "Multiple joins, subqueries, and functions",
        "complexity": "complex"
    },
    {
        "id": "230",
        "valid_gpt_response": true,
        "query": "SELECT ?q ?qLabel (GROUP_CONCAT(DISTINCT ?collplusinv; separator=\" !!! \") AS ?where) (GROUP_CONCAT(DISTINCT ?lang; separator=\" \") AS ?languages) ?linkcount (SAMPLE(?image) AS ?image)\nWHERE { {SELECT ?q (COUNT(?sitelink) AS ?linkcount) WHERE { ?q (wdt:P31/wdt:P279*) wd:Q87167. OPTIONAL {?sitelink schema:about ?q} }\nGROUP BY ?q }\n?q p:P195 ?s. ?s ps:P195 ?collection . MINUS {?s pq:P582 []}.\nMINUS {?s ps:P195 wd:Q1322278 }\nOPTIONAL{ ?s pq:P217 ?inventory}\nOPTIONAL{ ?q wdt:P18 ?image }\nBIND( IF(BOUND(?inventory), CONCAT(STR(?collection),\" \",?inventory), STR(?collection)) AS ?collplusinv).\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en,fr,it,de,es,ru,bg,ca,cs,nl,zh,ja\".\n?q rdfs:label ?qLabel.\n}\nOPTIONAL{ ?q wdt:P407 ?lang }\n}\nGROUP BY ?q ?qLabel ?linkcount\nORDER BY DESC(?linkcount)",
        "complexity_description": "Multiple subqueries, grouping, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "231",
        "valid_gpt_response": true,
        "query": "SELECT ?collection ?l (GROUP_CONCAT(DISTINCT ?officialweb) AS ?webs) (COUNT(DISTINCT ?q) AS ?mcount)\nWHERE {\n?q (wdt:P31/wdt:P279*) wd:Q87167.\n?q p:P195 ?s. ?s ps:P195 ?collection. MINUS {?s pq:P582 []}.\nMINUS { ?s ps:P195 wd:Q1322278 }\nOPTIONAL{ ?collection wdt:P856 ?officialweb }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\".\n?collection rdfs:label ?l\n}\n}\nGROUP BY ?collection ?l\nORDER BY UCASE(?l)",
        "complexity_description": "Multiple joins, subqueries, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "232",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel (GROUP_CONCAT(?typeLabel; separator=\", \") AS ?thing) (YEAR(?date) AS ?year) ?image WHERE {\n?item wdt:P195 wd:Q1322278\nOPTIONAL {?item wdt:P31 ?type}\nOPTIONAL {?item wdt:P571 ?date}\nOPTIONAL {?item wdt:P18 ?image}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,hy\".\n?item rdfs:label ?itemLabel. ?type rdfs:label ?typeLabel}\n} GROUP BY ?item ?itemLabel ?date ?image\nORDER BY DESC(?image) ?year",
        "complexity_description": "Multiple optional patterns, grouping and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "233",
        "valid_gpt_response": true,
        "query": "SELECT ?lang ?langLabel ?langDescription (COUNT(DISTINCT ?q) AS ?mcount)\nWHERE {\n?q (wdt:P31/wdt:P279*) wd:Q87167.\n?q p:P195 ?s. ?s ps:P195 ?collection . MINUS {?s pq:P582 []}.\nMINUS { ?s ps:P195 wd:Q1322278 }\n?q wdt:P407 ?lang\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\"\n}\n}\nGROUP BY ?lang ?langLabel ?langDescription\nORDER BY UCASE(?langLabel)",
        "complexity_description": "Multiple filters, subqueries and grouping",
        "complexity": "complex"
    },
    {
        "id": "234",
        "valid_gpt_response": true,
        "query": "SELECT (SUBSTR(STR(?lang),32) AS ?wd) (COUNT(DISTINCT ?q) AS ?mcount)\nWHERE {\n?q (wdt:P31/wdt:P279*) wd:Q87167.\n?q p:P195 ?s. ?s ps:P195 ?collection . MINUS {?s pq:P582 []}.\nMINUS { ?s ps:P195 wd:Q1322278 }\n?q wdt:P407 ?lang\n}\nGROUP BY ?lang\nORDER BY DESC(?mcount)\nLIMIT 10",
        "complexity_description": "Multiple filters, subqueries and aggregations",
        "complexity": "complex"
    },
    {
        "id": "235",
        "valid_gpt_response": true,
        "query": "SELECT ?material ?l ?d (COUNT(DISTINCT ?q) AS ?mcount)\nWHERE {\n?q (wdt:P31/wdt:P279*) wd:Q87167.\n?q p:P195 ?s. ?s ps:P195 ?collection . MINUS {?s pq:P582 []}.\nMINUS { ?s ps:P195 wd:Q1322278 }\n?q wdt:P186 ?material\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\".\n?material rdfs:label ?l; schema:description ?d\n}\n}\nGROUP BY ?material ?l ?d",
        "complexity_description": "Multiple filters, subqueries and aggregations",
        "complexity": "complex"
    },
    {
        "id": "236",
        "valid_gpt_response": true,
        "query": "SELECT ?link ?collectionLabel ?coords\nWHERE {\n{SELECT DISTINCT ?collection ?coords WHERE {?q (wdt:P31/wdt:P279*) wd:Q87167;\nwdt:P195 ?collection .\n?collection wdt:P625 ?coords.\n} }\nBIND (URI(CONCAT(\"/collection/\",SUBSTR(STR(?collection),32))) AS ?link).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Multiple subqueries, BIND and SERVICE keywords used",
        "complexity": "complex"
    },
    {
        "id": "237",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?q ?qLabel ?qDescription ?enwp\nWHERE {\n?q (wdt:P31/wdt:P279*) wd:Q87167.\nMINUS { ?q wdt:P195 []}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n}\nOPTIONAL{?enwp schema:about ?q ; schema:isPartOf <https://en.wikipedia.org/> }\n}\nORDER BY DESC(?qLabel)",
        "complexity_description": "Multiple patterns, minus clause and optional clause",
        "complexity": "complex"
    },
    {
        "id": "238",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\n?item wdt:P31 wd:Q125576\n}",
        "complexity_description": "Single triple pattern",
        "complexity": "simple"
    },
    {
        "id": "239",
        "valid_gpt_response": true,
        "query": "SELECT ?thing ?thingLabel ?inv ?url WHERE {\nVALUES ?in {wd:Q82133 wd:Q2210813} # Bodleian and Sackler\n?thing p:P195 ?s; wdt:P953 ?url FILTER(CONTAINS(STR(?url),\"ox.ac.uk\")).\n?s ps:P195 ?in\nOPTIONAL { ?s pq:P217 ?inv }\nMINUS {?thing wdt:P1433 []}\nMINUS {?thing wdt:P361 []}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?thingLabel",
        "complexity_description": "Multiple filters, optional clause, minus patterns and service call",
        "complexity": "complex"
    },
    {
        "id": "240",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?url WHERE {\nVALUES ?in {wd:Q82133 wd:Q2210813} # Bodleian and Sackler\n?item wdt:P195 ?in; wdt:P953 ?url\nMINUS {?item wdt:P18 []}\nMINUS {?item wdt:P373 []}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple MINUS clauses, VALUES and SERVICE",
        "complexity": "medium"
    },
    {
        "id": "241",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?collectionLabel ?inventory ?url ?image WHERE {\n{?item wdt:P1574 wd:Q428 } UNION { ?item wdt:P1574/wdt:P31 wd:Q234262 } # Exemplar of Quran or of an individual Sura\n?item p:P217 [ps:P217 ?inventory; pq:P195 ?collection]\nOPTIONAL {?item wdt:P973 ?url}\nOPTIONAL {?item wdt:P18 ?image}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ?collectionLabel ?inventory",
        "complexity_description": "Multiple UNION, OPTIONAL clauses and SERVICE keyword usage",
        "complexity": "complex"
    },
    {
        "id": "242",
        "valid_gpt_response": true,
        "query": "SELECT ?type ?typeLabel (COUNT(?item) AS ?count) WHERE {\n?item wdt:P195 wd:Q636400;\nwdt:P31 ?type.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?type ?typeLabel ORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, service call and aggregation",
        "complexity": "medium"
    },
    {
        "id": "243",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?creator ?creatorLabel ?creatorDescription ?enwp ?ash_items (COUNT(?other) as ?other) WHERE {\n{ SELECT ?creator ?enwp (COUNT(?item) AS ?ash_items) WHERE {\n?item wdt:P195 wd:Q636400; # collection: Ashmolean\nwdt:P170 ?creator FILTER (?creator != wd:Q4233718) # Exclude anonymous\nOPTIONAL { ?enwp schema:about ?creator; schema:isPartOf <https://en.wikipedia.org/> }\n} GROUP BY ?creator ?enwp\n}\n?other wdt:P170 ?creator MINUS {?other wdt:P195 wd:Q636400} # objects by same creator but not in Ashmolean\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?creator ?creatorLabel ?creatorDescription ?enwp ?ash_items\nORDER BY DESC(?ash_items) DESC(?other)",
        "complexity_description": "Multiple subqueries, grouping, and filtering",
        "complexity": "complex"
    },
    {
        "id": "244",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?personDescription (SAMPLE(?image) AS ?img) (COUNT(?item) AS ?count) (YEAR(SAMPLE(?time)) AS ?year) WHERE {\n?item wdt:P195 wd:Q636400; wdt:P973 ?url FILTER (STRSTARTS(STR(?url),\"http://jameelcentre\") ).\n?item ?prop ?person.\n?person wdt:P31 wd:Q5.\nOPTIONAL {?person wdt:P18 ?image}\nOPTIONAL {?person wdt:P569 ?birth}\nOPTIONAL {?person wdt:P1317 ?fl}\nOPTIONAL {?person wdt:P2348/wdt:P580 ?erastart}\nBIND(IF(BOUND(?birth), ?birth, IF(BOUND(?fl), ?fl, ?erastart) ) AS ?time).\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"en\"}\n} GROUP BY ?person ?personLabel ?personDescription ORDER BY ?year",
        "complexity_description": "Multiple optional patterns, subqueries, and functions",
        "complexity": "complex"
    },
    {
        "id": "245",
        "valid_gpt_response": true,
        "query": "SELECT ?artist ?artistLabel (URI(CONCAT(\"http://oxfordindex.oup.com/view/10.1093/benz/9780199773787.article.\",?benezit)) AS ?benezit_link) (COUNT(?work) AS ?count) WHERE {\n?work wdt:P195 wd:Q636400; wdt:P170 ?artist FILTER (!ISBLANK(?artist)) .\n?artist wdt:P2843 ?benezit\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?artist ?artistLabel ?benezit\nORDER BY ?artistLabel",
        "complexity_description": "Multiple joins, filters, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "246",
        "valid_gpt_response": true,
        "query": "SELECT ?artist ?artistLabel (URI(CONCAT(\"http://vocab.getty.edu/page/ulan/\",?getty_id)) AS ?getty_link) (COUNT(?work) AS ?count) WHERE {\n?work wdt:P195 wd:Q636400; wdt:P170 ?artist FILTER (!ISBLANK(?artist)) .\n?artist wdt:P245 ?getty_id\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?artist ?artistLabel ?getty_id\nORDER BY ?artistLabel",
        "complexity_description": "Multiple joins, filters, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "247",
        "valid_gpt_response": true,
        "query": "SELECT ?languageLabel (COUNT(?sitelink) AS ?count) WITH { SELECT DISTINCT ?artist { ?work wdt:P195 wd:Q636400; wdt:P170 ?artist FILTER (!ISBLANK(?artist)) } } AS %artists WHERE {\nINCLUDE %artists.\n?sitelink schema:about ?artist; schema:inLanguage ?lang FILTER (CONTAINS(STR(?sitelink), \".wikipedia.org\"))\n?language wdt:P218 ?lang.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?languageLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, filters, and services",
        "complexity": "complex"
    },
    {
        "id": "248",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?personDescription (SAMPLE(?image) AS ?img) (COUNT(?item) AS ?count) WHERE {\n?item wdt:P195 wd:Q636400; wdt:P973 ?url FILTER (STRSTARTS(STR(?url),\"http://jameelcentre\") ).\n?item wdt:P180 ?person.\nMINUS {?person wdt:P625 []}\nOPTIONAL {?person wdt:P18 ?image}\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"en\". }\n} GROUP BY ?person ?personLabel ?personDescription ORDER BY UCASE(?personLabel)",
        "complexity_description": "Multiple filters, optional clause, minus clause, and service call",
        "complexity": "complex"
    },
    {
        "id": "249",
        "valid_gpt_response": true,
        "query": "SELECT (URI(CONCAT(\"http://glam-discovery.bodleian.ox.ac.uk/location/\",SUBSTR(STR(?place),32) ) ) as ?link) ?placeX ?placeLabel ?layer (SAMPLE(?coords) AS ?latlong)\nWHERE {\n?item wdt:P195 wd:Q636400;\nwdt:P973 ?url FILTER (STRSTARTS(STR(?url),\"http://jameelcentre\") ).\nVALUES ?property {wd:P180 wd:P1071} # wdt:P921 wdt:P189 wdt:P138\n?property wikibase:directClaim ?prop.\n?item ?prop ?place.\n?place wdt:P625 ?coords.\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"en\".\n?property rdfs:label ?layer. ?place rdfs:label ?placeLabel; schema:description ?placeX}\n} GROUP BY ?place ?placeLabel ?placeX ?layer",
        "complexity_description": "Multiple joins, filters, and subqueries",
        "complexity": "complex"
    },
    {
        "id": "250",
        "valid_gpt_response": true,
        "query": "SELECT ?prop ?item ?itemLabel ?inventory (GROUP_CONCAT(?typeLabel; separator=\", \") AS ?types) ?from (YEAR(?latest) AS ?to) ?precision WHERE {\n?item p:P195 [ps:P195 wd:Q636400; pq:P217 ?inventory].\n?item ?prop wd:Q48129717; wdt:P31 ?type.\nOPTIONAL {?item p:P571 [pq:P1319 ?earliest; pq:P1326 ?latest] }\nOPTIONAL {?item p:P571/psv:P571 [ wikibase:timePrecision ?precision; wikibase:timeValue ?year ] }\nBIND(IF (BOUND(?earliest), YEAR(?earliest), YEAR(?year)) AS ?from)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .\n?item rdfs:label ?itemLabel. ?type rdfs:label ?typeLabel }\n} GROUP BY ?prop ?item ?itemLabel ?inventory ?from ?latest ?precision\nORDER BY DESC(?prop) ?from ?to",
        "complexity_description": "Multiple optional patterns, grouping, and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "251",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?personDescription (SAMPLE(?image) AS ?img) (YEAR(SAMPLE(?time)) AS ?year) WHERE {\n?item wdt:P195 wd:Q636400; wdt:P973 ?url FILTER (STRSTARTS(STR(?url), \"http://jameelcentre\") ).\n?item ?prop ?person.\n?person wdt:P31 wd:Q5.\n?person ?prop2 wd:Q1490.\nOPTIONAL {?person wdt:P18 ?image}\nOPTIONAL {?person wdt:P569 ?birth}\nOPTIONAL {?person wdt:P1317 ?fl}\nOPTIONAL {?person wdt:P2348/wdt:P580 ?erastart}\nBIND(IF(BOUND(?birth), ?birth, IF(BOUND(?fl), ?fl, ?erastart) ) AS ?time).\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\"}\n} GROUP BY ?person ?personLabel ?personDescription ORDER BY ?year",
        "complexity_description": "Multiple optional patterns, nested IF-BOUND functions, and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "252",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT (SUBSTR(STR(?place),32) as ?link) ?propertyLabel ?placeLabel\nWHERE {\nwd:Q198984 ?prop ?place. ?place wdt:P625 [].\n?property ?ref ?prop; rdf:type wikibase:Property.\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\"}\n}",
        "complexity_description": "Multiple joins, subqueries and service calls",
        "complexity": "complex"
    },
    {
        "id": "253",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT (SUBSTR(STR(?place),32) as ?link) ?placeLabel\nWHERE {\nwd:Q1191 wdt:P625 ?loc2. #Starting point\n{ SELECT DISTINCT ?place ?coords WHERE\n{?item wdt:P195 wd:Q636400;\nwdt:P973 ?url FILTER (STRSTARTS(STR(?url),\"http://jameelcentre\") ).\nVALUES ?property {wd:P180 wd:P1071}\n?property wikibase:directClaim ?prop.\n?item ?prop ?place.\n?place wdt:P625 ?coords\n} }\nBIND(geof:distance(?coords, ?loc2) AS ?distNum).\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"en\".\n?place rdfs:label ?placeLabel}\n} ORDER BY ?distNum OFFSET 1 LIMIT 10",
        "complexity_description": "Multiple subqueries, filters, and services",
        "complexity": "complex"
    },
    {
        "id": "254",
        "valid_gpt_response": true,
        "query": "SELECT (SUBSTR(STR(?material), 32) as ?material) ?materialLabel ?materialDescription (COUNT(?item) AS ?count) WHERE {\n?item wdt:P195 wd:Q636400; wdt:P186 ?material;\nwdt:P973 ?url FILTER (STRSTARTS(STR(?url),\"http://jameelcentre\") ).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n} GROUP BY ?material ?materialLabel ?materialDescription ORDER BY UCASE(?materialLabel)",
        "complexity_description": "Multiple filters, subqueries and grouping",
        "complexity": "complex"
    },
    {
        "id": "255",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?inventory (GROUP_CONCAT(?typeLabel; separator=\", \") AS ?types) (YEAR(?earliest) AS ?from) (YEAR(?latest) AS ?to) WHERE {\n?item p:P195 [ps:P195 wd:Q636400; pq:P217 ?inventory].\n?item wdt:P186 wd:Q37681; wdt:P31 ?type;\nwdt:P973 ?url FILTER (STRSTARTS(STR(?url),\"http://jameelcentre\") ).\nOPTIONAL {?item p:P571 [pq:P1319 ?earliest; pq:P1326 ?latest] }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\".\n?item rdfs:label ?itemLabel. ?type rdfs:label ?typeLabel}\n} GROUP BY ?item ?itemLabel ?inventory ?earliest ?latest\nORDER BY ?from ?to ?itemLabel",
        "complexity_description": "Multiple joins, filters, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "256",
        "valid_gpt_response": true,
        "query": "SELECT (SUBSTR(STR(?type), 32) as ?type) ?typeLabel ?typeDescription (COUNT(?item) AS ?count) WHERE {\n?item wdt:P195 wd:Q636400; wdt:P31 ?type; wdt:P973 ?url FILTER (STRSTARTS(STR(?url),\"http://jameelcentre\") ).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?type ?typeLabel ?typeDescription ORDER BY UCASE(?typeLabel)",
        "complexity_description": "Multiple filters, subqueries and grouping",
        "complexity": "complex"
    },
    {
        "id": "257",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?inventory (YEAR(?earliest) AS ?from) (YEAR(?latest) AS ?to) WHERE {\n?item p:P195 [ps:P195 wd:Q636400; pq:P217 ?inventory].\n?item wdt:P31 wd:Q1066288; wdt:P973 ?url FILTER (STRSTARTS(STR(?url),\"http://jameelcentre\") ).\nOPTIONAL {?item p:P571 [pq:P1319 ?earliest; pq:P1326 ?latest] }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" .\n?item rdfs:label ?itemLabel }\n} ORDER BY ?from ?to ?itemLabel",
        "complexity_description": "Multiple filters, optional clause and service call",
        "complexity": "complex"
    },
    {
        "id": "258",
        "valid_gpt_response": true,
        "query": "SELECT ?item WHERE {\n?item wdt:P195 wd:Q636400.\nMINUS {?item rdfs:label []}\n}",
        "complexity_description": "Simple query with one triple pattern and a MINUS clause",
        "complexity": "simple"
    },
    {
        "id": "259",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?inventory WHERE {\n?item p:P195 [ps:P195 wd:Q636400; pq:P217 ?inventory].\nMINUS {?item wdt:P571 []}\nMINUS {?item wdt:P2348 []}\n}",
        "complexity_description": "Multiple MINUS clauses with property paths",
        "complexity": "medium"
    },
    {
        "id": "260",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?url WHERE {\n?item wdt:P195 wd:Q636400; wdt:P973 ?url\nMINUS {?item wdt:P180 []}\n?item rdfs:label ?itemLabel filter( lang(?itemLabel)=\"en\" ) filter( CONTAINS(?itemLabel, \"igure of \") )\n}",
        "complexity_description": "Multiple filters and MINUS clause",
        "complexity": "medium"
    },
    {
        "id": "261",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?url ?count WHERE {\n?item wdt:P195 wd:Q636400; wdt:P973 ?url FILTER (STRSTARTS(STR(?url),\"http://jameelcentre\") ).\n?item wikibase:statements ?count.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?count)\nLIMIT 20",
        "complexity_description": "Multiple filters, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "262",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?loc) as ?count) WHERE {\n?item wdt:P195 wd:Q636400; wdt:P973 ?url FILTER (STRSTARTS(STR(?url),\"http://jameelcentre\") ).\n?item ?prop ?loc. ?loc wdt:P625 [] FILTER (?loc != wd:Q636400)\n}",
        "complexity_description": "Multiple filters, joins and subqueries",
        "complexity": "complex"
    },
    {
        "id": "263",
        "valid_gpt_response": true,
        "query": "SELECT ?itemLabel ?inv ?languageLabel ?sitelink WHERE {\n?item wdt:P195 wd:Q636400; wdt:P217 ?inv # items in the Ashmolean and get their inventory number\nFILTER (?item != wd:Q1249435) . # exclude Oxyrhynchus Papyri\n?sitelink schema:about ?item; # Wikimedia links (usually Wikipedia articles)\nschema:inLanguage ?lang FILTER (?lang != 'en') FILTER (?lang != 'en-simple') . # exclude English language\n?language wdt:P305 ?lang # convert two-letter code to language item\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?inv",
        "complexity_description": "Multiple filters, joins and subqueries",
        "complexity": "complex"
    },
    {
        "id": "264",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?url WHERE {\n?item wdt:P195 wd:Q636400.\n?item wdt:P973 ?url FILTER( CONTAINS(STR(?url), \"www.ashmolean.org\") )\nMINUS {?item wdt:P6610 []}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple filters, minus clause and service call",
        "complexity": "medium"
    },
    {
        "id": "265",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?url WHERE {\n?item wdt:P195 wd:Q636400; # collection: Ashmolean\nwdt:P31 wd:Q3305213; # type: painting\nwdt:P186 wd:Q897 # material: gold\nMINUS {?item wdt:P186 ?mat FILTER (?mat != wd:Q897) } # no non-gold material\nOPTIONAL {?item wdt:P973 ?url}\n}",
        "complexity_description": "Multiple filters and optional clause",
        "complexity": "medium"
    },
    {
        "id": "266",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\n?i wdt:P6610 ?id1; wdt:P6610 ?id2 FILTER (?id1 > ?id2)\n}",
        "complexity_description": "Filter and two triple patterns",
        "complexity": "medium"
    },
    {
        "id": "267",
        "valid_gpt_response": true,
        "query": "SELECT ?extlink WHERE {\nSERVICE wikibase:mwapi {\nbd:serviceParam wikibase:api \"Generator\";\nwikibase:endpoint \"en.wikipedia.org\";\nmwapi:generator \"allpages\";\nmwapi:gapfrom \"Ashmolean_Museum\";\nmwapi:gapto \"Ashmolean_Museum\";\nmwapi:prop \"extlinks\".\n?extlink wikibase:apiOutput \"extlinks/el/text()\".\n}\n}",
        "complexity_description": "Uses SERVICE clause with multiple parameters and API calls",
        "complexity": "medium"
    },
    {
        "id": "268",
        "valid_gpt_response": true,
        "query": "SELECT ?artistpage ?extlink WHERE {\n{SELECT DISTINCT ?name ?artistpage WHERE {\n?item wdt:P195 wd:Q636400; wdt:P170 ?artist. # Artists in the Ashmolean\n?artistpage schema:about ?artist;\nschema:isPartOf <https://en.wikipedia.org/>; # ENWP articles about them\nschema:name ?name # Title of article\n}\n}\nOPTIONAL {SERVICE wikibase:mwapi { # External links from each article\nbd:serviceParam wikibase:api \"Generator\";\nwikibase:endpoint \"en.wikipedia.org\";\nmwapi:generator \"allpages\";\nmwapi:gapfrom ?name;\nmwapi:gapto ?name;\nmwapi:prop \"extlinks\".\n?extlink wikibase:apiOutput \"extlinks/el/text()\".\n}\nFILTER CONTAINS(?extlink, \"rkd.nl\")\n}\n} ORDER BY ?artistpage",
        "complexity_description": "Nested subqueries, optional service call, and filter",
        "complexity": "complex"
    },
    {
        "id": "269",
        "valid_gpt_response": true,
        "query": "SELECT ?itempage ?extlink ?url ?ash_id WHERE {\n{SELECT DISTINCT ?name ?item ?itempage WHERE {\n?item wdt:P195 wd:Q636400. # items in the Ashmolean\n?itempage schema:about ?item;\nschema:isPartOf <https://en.wikipedia.org/>; # ENWP articles about them\nschema:name ?name # Title of article\n}\n}\nOPTIONAL {SERVICE wikibase:mwapi { # External links from each article\nbd:serviceParam wikibase:api \"Generator\";\nwikibase:endpoint \"en.wikipedia.org\";\nmwapi:generator \"allpages\";\nmwapi:gapfrom ?name;\nmwapi:gapto ?name;\nmwapi:prop \"extlinks\";\nmwapi:ellimit 50 .\n?extlink wikibase:apiOutput \"extlinks/el/text()\".\n}\nFILTER CONTAINS(?extlink, \"ashmolean.org\")\n}\nOPTIONAL {?item wdt:P973 ?url FILTER CONTAINS(STR(?url), \"ashmolean.org\")\n}\nOPTIONAL {?item wdt:P6610 ?ash_id}\n} ORDER BY ?itempage",
        "complexity_description": "Multiple subqueries, optional patterns and filters",
        "complexity": "complex"
    },
    {
        "id": "270",
        "valid_gpt_response": true,
        "query": "SELECT ?image ?extlink WHERE {\nwd:Q4656096 wdt:P18 ?image.\nBIND(STRAFTER(STR(?image), \"FilePath/\") AS ?encoded_name)\nBIND(wikibase:decodeUri(?encoded_name) AS ?name)\nOPTIONAL { SERVICE wikibase:mwapi { # External links from each image\nbd:serviceParam wikibase:api \"Generator\";\nwikibase:endpoint \"commons.wikimedia.org\";\nmwapi:generator \"allimages\";\nmwapi:gaifrom ?name;\nmwapi:gaito ?name;\nmwapi:prop \"extlinks\";\nmwapi:ellimit \"500\".\n?extlink wikibase:apiOutput \"extlinks/el/text()\".\n} }\n} ORDER BY ?name",
        "complexity_description": "Uses BIND, OPTIONAL clause, and SERVICE keyword with multiple parameters",
        "complexity": "complex"
    },
    {
        "id": "271",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?work ?workLabel ?propertyLabel ?thingLabel (?jps AS ?japan_search_id) WHERE {\n?thing wdt:P6698 ?jps FILTER (!CONTAINS(?jps, \"nmoa-\")).\nVALUES ?prop {wdt:P170 wdt:P180}\n?work wdt:P195 wd:Q636400; ?prop ?thing.\n?property ?ref ?prop ;\nrdf:type wikibase:Property\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?thingLabel",
        "complexity_description": "Multiple filters, joins and subqueries",
        "complexity": "complex"
    },
    {
        "id": "272",
        "valid_gpt_response": true,
        "query": "SELECT (SUBSTR(STR(?thing),32) AS ?q) (SUBSTR(STR(?prop),37) as ?p) (SUBSTR(STR(?item),32) AS ?itemq) ?itemLabel ?fullwork (SUBSTR(STR(?coll),32) as ?collq) ?inventory ?url (GROUP_CONCAT(SUBSTR(STR(?artist),32);separator=\" \") AS ?artists)\n(GROUP_CONCAT(?typeLabel; separator=\", \") AS ?types) ?from (YEAR(?latest) AS ?to) ?precision WHERE {\nVALUES ?coll {wd:Q636400 wd:Q82133 wd:Q1456119 wd:Q6941088} # Ashmolean, Bodleian, PRM, MHS\n?item p:P195 [ps:P195 ?coll; pq:P217 ?inventory].\nVALUES ?prop {wdt:P180 wdt:P170 wdt:P1774 wdt:P138} # depicted, creator, school of, named after\n?item ?prop ?thing; wdt:P31 ?type.\nOPTIONAL {?item wdt:P973 ?url FILTER(CONTAINS(STR(?url), \".ox.ac.uk\") || CONTAINS(STR(?url), \"ashmolean.org\") )}\nOPTIONAL {?item wdt:P953 ?fullwork FILTER(CONTAINS(STR(?fullwork), \".ox.ac.uk\") || CONTAINS(STR(?fullwork), \"ashmolean.org\") )}\nFILTER (BOUND(?fullwork) || BOUND(?url) )\nOPTIONAL {?item wdt:P170 ?artist}\nOPTIONAL {?item p:P571 [pq:P1319 ?earliest; pq:P1326 ?latest] }\nOPTIONAL {?item p:P571/psv:P571 [ wikibase:timePrecision ?precision; wikibase:timeValue ?year ] }\nBIND(IF (BOUND(?earliest), YEAR(?earliest), YEAR(?year)) AS ?from)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" .\n?item rdfs:label ?itemLabel. ?type rdfs:label ?typeLabel }\n} GROUP BY ?thing ?prop ?item ?itemLabel ?fullwork ?inventory ?url ?coll ?from ?latest ?precision\nORDER BY DESC(?prop) ?from ?to",
        "complexity_description": "Multiple optional patterns, filters, and subqueries with grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "273",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?itemDescription WHERE {\n{?item wdt:P973 ?url FILTER (STRSTARTS(STR(?url), \".ox.ac.uk\")) }\nUNION {?item wdt:P953 ?fullwork FILTER (CONTAINS(STR(?fullwork), \".ox.ac.uk\")) }\n?item wdt:P195 ?coll FILTER( ?coll NOT IN (wd:Q636400, wd:Q82133, wd:Q1456119, wd:Q6941088, wd:Q52556635) ).\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Multiple filters and union",
        "complexity": "medium"
    },
    {
        "id": "274",
        "valid_gpt_response": true,
        "query": "SELECT (SUBSTR(STR(?item),32) AS ?wdq) (SUBSTR(STR(?prop),32) AS ?wdp) ?object ?url WHERE {\n?item wdt:P195 wd:Q1456119.\n?item wdt:P973 ?url FILTER CONTAINS(STR(?url), \"ox.ac.uk\").\n?item ?p ?statement.\n?prop wikibase:claim ?p; wikibase:statementProperty ?ps FILTER (?prop != wd:P973) FILTER (?prop != wd:P953)\nFILTER (?prop != wd:P18) FILTER (?prop != wd:P571).\n?statement ?ps ?object .\nFILTER NOT EXISTS {?statement prov:wasDerivedFrom ?derivedFrom}\n} ORDER BY ?item",
        "complexity_description": "Multiple filters, subqueries and joins",
        "complexity": "complex"
    },
    {
        "id": "275",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?personDescription (URI(CONCAT(\"https://viaf.org/viaf/\", ?viaf)) AS ?viaf_link)\n(URI(CONCAT(\"https://doi.org/10.1093/ref:odnb/\", ?odnb)) AS ?odnb_link) ?image ?url\nWHERE {\n?person p:P485 [ps:P485 wd:Q1456119; pq:P973 ?url]\nOPTIONAL {?person wdt:P214 ?viaf}\nOPTIONAL {?person wdt:P18 ?image}\nOPTIONAL {?person wdt:P1415 ?odnb}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Multiple optional patterns, service call and URI concatenation",
        "complexity": "medium"
    },
    {
        "id": "276",
        "valid_gpt_response": true,
        "query": "SELECT ?image ?personDescription ?personLabel ?prmlink\nWHERE {\n?person p:P485 [ps:P485 wd:Q1456119; pq:P973 ?prmlink].\n?person wdt:P18 ?image\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "277",
        "valid_gpt_response": true,
        "query": "SELECT ?dynastyLabel ?thing ?thingLabel (GROUP_CONCAT(DISTINCT ?typel; separator=\", \") AS ?what) (GROUP_CONCAT(DISTINCT ?matl; separator=\", \") AS ?materials) ?thingDescription ?collectionLabel ?inventoryNo WHERE {\n?dynasty wdt:P31 wd:Q50068795.\nVALUES ?prop {wdt:P2348 wdt:P17 wdt:P495}.\n?thing ?prop ?dynasty;\nwdt:P31 ?type;\nwdt:P195 ?collection.\n?type rdfs:label ?typel FILTER(lang(?typel) = \"en\").\nOPTIONAL {?thing wdt:P186 ?material. ?material rdfs:label ?matl FILTER(lang(?matl) = \"en\") }.\nOPTIONAL {?thing wdt:P217 ?inventoryNo }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?dynastyLabel ?thing ?thingLabel?thingDescription ?collectionLabel ?inventoryNo\nORDER BY ?dynastyLabel",
        "complexity_description": "Multiple joins, filters, and group by with optional patterns",
        "complexity": "complex"
    },
    {
        "id": "278",
        "valid_gpt_response": true,
        "query": "SELECT ?dynasty ?dynastyLabel ?start ?end (SAMPLE(?image) AS ?img) WHERE {\n?dynasty wdt:P31 wd:Q50068795;\nwdt:P571 ?start;\nwdt:P576 ?end.\nVALUES ?prop {wdt:P27 wdt:P2348}\nOPTIONAL {?dynasty wdt:P242 ?image}\nOPTIONAL {?thing wdt:P18 ?image;\n?prop ?dynasty}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?dynasty ?dynastyLabel ?start ?end\nORDER BY ?start ?end",
        "complexity_description": "Multiple optional patterns, service call and group by",
        "complexity": "complex"
    },
    {
        "id": "279",
        "valid_gpt_response": true,
        "query": "SELECT ?period ?periodLabel ?periodDescription (COUNT(?q) AS ?mcount)\nWHERE {\n?q wdt:P2348 ?period.\n?q p:P195 ?s. ?s ps:P195 ?collection . MINUS {?s pq:P582 []}.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n}\nOPTIONAL{?enwp schema:about ?collection; schema:isPartOf <https://en.wikipedia.org/> }\n}\nGROUP BY ?period ?periodLabel ?periodDescription\nORDER BY DESC(?mcount)",
        "complexity_description": "Multiple joins, subqueries, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "280",
        "valid_gpt_response": true,
        "query": "SELECT ?era ?eraLabel (YEAR(?start_time) AS ?start) (YEAR(?end_time) AS ?end) ?namedLabel ?namedDescription WHERE {\n?era wdt:P31 wd:Q11514315; wdt:P361 wd:Q130436; # eras of the history of Japan\nwdt:P580 ?start_time.\nMINUS {?era wdt:P2348 []}\nOPTIONAL { ?era wdt:P582 ?end_time }\nOPTIONAL { ?era wdt:P138 ?named }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ?start DESC(?end)",
        "complexity_description": "Multiple optional patterns, service call and aggregation function",
        "complexity": "complex"
    },
    {
        "id": "281",
        "valid_gpt_response": true,
        "query": "SELECT ?era ?eraLabel (YEAR(?start_time) AS ?start) (YEAR(?end_time) AS ?end) ?subera ?suberaLabel\n(YEAR(?sub_start_time) AS ?sub_start) (YEAR(?sub_end_time) AS ?sub_end) WHERE {\n?era wdt:P31 wd:Q11514315; wdt:P361 wd:Q130436; # eras of the history of Japan\nwdt:P580 ?start_time.\nMINUS { ?era wdt:P2348 []} # exclude sub-eras\nOPTIONAL { ?era wdt:P582 ?end_time }\nOPTIONAL { ?subera wdt:P2348 ?era; wdt:P361 wd:Q130436; wdt:P580 ?sub_start_time;\nwdt:P582 ?sub_end_time }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ?start DESC(?end)",
        "complexity_description": "Multiple optional patterns, subqueries and filters",
        "complexity": "complex"
    },
    {
        "id": "282",
        "valid_gpt_response": true,
        "query": "SELECT ?languageLabel ?count WHERE {\n{SELECT ?langcode (COUNT(?label) as ?count) WHERE {\n?thing wdt:P6698 ?jpsid; rdfs:label ?label.\nBIND(lang(?label) AS ?langcode)\n} GROUP BY ?langcode }\n?language wdt:P218 ?langcode\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, grouping and binding",
        "complexity": "complex"
    },
    {
        "id": "283",
        "valid_gpt_response": true,
        "query": "SELECT ?item (\"Den\" AS ?den) (CONCAT(\"painting by \", ?creatorLabel) as ?toadd) WHERE {\n?item wdt:P31 wd:Q3305213; wdt:P170 ?creator FILTER(?creator != wd:Q4233718) # exclude Anonymous\nMINUS {?item wdt:P31 ?other FILTER(?other != wd:Q3305213) } # painting is only type\nMINUS {?item schema:description ?engdesc FILTER (lang(?engdesc)=\"en\") } # No English description\n?creator rdfs:label ?creatorLabel FILTER (lang(?creatorLabel)=\"en\") # Artist label in English is known\n}",
        "complexity_description": "Multiple MINUS clauses, filters and language constraints",
        "complexity": "complex"
    },
    {
        "id": "284",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?category WHERE {\n?item wdt:P31 wd:Q3305213; wdt:P373 ?category\nMINUS{ ?item rdfs:label ?itemLabel FILTER (lang(?itemLabel)=\"en\") }\n}",
        "complexity_description": "Two triple patterns, one MINUS clause",
        "complexity": "medium"
    },
    {
        "id": "285",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?lang ?title WHERE {\n?item wdt:P31/wdt:P279* wd:Q571 ; # Q571 for book\nwdt:P1476 ?title .\nBIND(LANG(?title) as ?lang) FILTER (?lang != \"und\")\nFILTER (NOT EXISTS{ ?item rdfs:label ?itemLabel. FILTER(lang(?itemLabel) = ?lang) })\n}",
        "complexity_description": "Multiple filters, property paths and subqueries",
        "complexity": "complex"
    },
    {
        "id": "286",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?obj) AS ?count) WHERE {\n?obj wdt:P217 []\nMINUS {?obj wdt:P195 []}\n}",
        "complexity_description": "Uses MINUS and aggregation function",
        "complexity": "medium"
    },
    {
        "id": "287",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?obj) AS ?count) WHERE {\n?obj p:P217 ?s.\n?s pq:P195 ?collection\nMINUS {?obj wdt:P195 []}\n}",
        "complexity_description": "Uses MINUS and subqueries",
        "complexity": "medium"
    },
    {
        "id": "288",
        "valid_gpt_response": true,
        "query": "SELECT ?obj ?collection ?inventory WHERE {\n?obj p:P217 ?s.\n?s pq:P195 ?collection; ps:P217 ?inventory\nMINUS {?obj wdt:P195 []}\n}",
        "complexity_description": "Multiple triple patterns, MINUS clause",
        "complexity": "medium"
    },
    {
        "id": "289",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?name WHERE {\nVALUES ?rel {rdfs:label skos:altLabel}\nVALUES ?rel2 {rdfs:label skos:altLabel}\n?target ?rel \"Confucius\"@en;\n?rel2 ?name FILTER ( lang(?name)=\"en\" )\n}",
        "complexity_description": "Multiple VALUES clauses, DISTINCT and FILTER",
        "complexity": "medium"
    },
    {
        "id": "290",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?name WHERE {\n?sub wdt:P279+/rdfs:label \"coin\"@en.\n{?sub rdfs:label ?name} UNION {?sub skos:altLabel ?name} FILTER (lang(?name)=\"en\")\nFILTER ( !CONTAINS(?name, \"coin\") )\n}",
        "complexity_description": "Multiple filters and union",
        "complexity": "medium"
    },
    {
        "id": "291",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?related ?relatedLabel ?relatedDescription WHERE {\nVALUES ?target {wd:Q42}\n{ ?target ?prop ?related } UNION { ?related ?prop ?target }\nfilter (CONTAINS(STR(?related),'/entity/Q') ).\nSERVICE wikibase:label { bd:serviceParam wikibase:language 'en' }\n} ORDER BY UCASE(?relatedLabel)",
        "complexity_description": "Union, filter, and service clause",
        "complexity": "medium"
    },
    {
        "id": "292",
        "valid_gpt_response": true,
        "query": "SELECT ?item1 ?item1Label ?item2 ?item2Label WHERE {\nVALUES ?item1Label {\"Congressional Black Caucus\"@en\n\"Barack Obama\"@en\n\"Michelle Obama\"@en\n\"University of Chicago\"@en\n\"Time Person of the Year\"@en\n\"Democratic Party\"@en\n\"White House\"@en\n\"Hillary Clinton\"@en\n\"Aragorn\"@en\n\"C. S. Lewis\"@en\n\"J. R. R. Tolkien\"@en\n\"University of Oxford\"@en\n\"World War I\"@en\n\"Battle of the Somme\"@en\n\"British Army\"@en\n\"The Lord of the Rings\"@en}\nVALUES ?item2Label {\"Congressional Black Caucus\"@en\n\"Barack Obama\"@en\n\"Michelle Obama\"@en\n\"University of Chicago\"@en\n\"Time Person of the Year\"@en\n\"Democratic Party\"@en\n\"White House\"@en\n\"Hillary Clinton\"@en\n\"Aragorn\"@en\n\"C. S. Lewis\"@en\n\"J. R. R. Tolkien\"@en\n\"University of Oxford\"@en\n\"World War I\"@en\n\"Battle of the Somme\"@en\n\"British Army\"@en\n\"The Lord of the Rings\"@en}\n?item1 rdfs:label ?item1Label.\n?item2 rdfs:label ?item2Label.\n?item1 ?prop ?item2\n}",
        "complexity_description": "Simple query with VALUES and triple patterns",
        "complexity": "simple"
    },
    {
        "id": "293",
        "valid_gpt_response": true,
        "query": "SELECT ?collectionLabel ?inv ?url ?creatorLabel WHERE {\n?item wdt:P31/wdt:P361? wd:Q164992.\n?item wdt:P195 ?collection; wdt:P217 ?inv.\nOPTIONAL{?item wdt:P170 ?creator}\nOPTIONAL {?item wdt:P973 ?url}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?creatorLabel",
        "complexity_description": "Multiple triple patterns, optional blocks, and service call",
        "complexity": "complex"
    },
    {
        "id": "294",
        "valid_gpt_response": true,
        "query": "SELECT ?loc ?locLabel ?coords (COUNT(?item) as ?count) WHERE {\n?item wdt:P31/wdt:P361? wd:Q164992.\n?item wdt:P1071 ?loc. ?loc wdt:P625 ?coords.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?loc ?locLabel ?coords",
        "complexity_description": "Multiple joins, subqueries and grouping",
        "complexity": "complex"
    },
    {
        "id": "295",
        "valid_gpt_response": true,
        "query": "SELECT ?item (?thingLabel as ?itemLabel) ?d ?collectionLabel ?inception WHERE {\n?thing wdt:P31 wd:Q164992; wdt:P195 ?collection; wdt:P217 ?d; wdt:P571 ?inception\nOPTIONAL {?thing wdt:P973 ?url}\nBIND (IF(BOUND(?url),?url, URI(CONCAT(\"https://tools.wmflabs.org/reasonator/?q=\", substr(str(?thing),32))) ) AS ?item)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?thing rdfs:label ?thingLabel. ?collection rdfs:label ?collectionLabel}\n}",
        "complexity_description": "Multiple joins, optional clause, and complex binding functions",
        "complexity": "complex"
    },
    {
        "id": "296",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT (URI(CONCAT(\"https://tools.wmflabs.org/reasonator/?q=\", SUBSTR(STR(?creator),32) )) as ?reasonator) ?creatorLabel\n(GROUP_CONCAT(DISTINCT ?locLabel; separator=\", \") AS ?locations) ?countryLabel (COUNT(?item) AS ?count) WHERE {\n?item wdt:P31/wdt:P361? wd:Q164992.\nVALUES ?rel {wdt:P170 wdt:P1774}\n?item ?rel ?creator FILTER(!wikibase:isSomeValue(?creator))\nOPTIONAL {?creator wdt:P27 ?country }\nOPTIONAL {?creator wdt:P937 ?loc }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?loc rdfs:label ?locLabel. ?creator rdfs:label ?creatorLabel. ?country rdfs:label ?countryLabel }\n} GROUP BY ?creator ?creatorLabel ?countryLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple joins, subqueries, and functions",
        "complexity": "complex"
    },
    {
        "id": "297",
        "valid_gpt_response": true,
        "query": "SELECT ?materialLabel ?materialDescription (COUNT(?item) AS ?count) WHERE {\n?item wdt:P31/wdt:P361? wd:Q164992.\n?item wdt:P186 ?material\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?materialLabel ?materialDescription\nORDER BY DESC(?count) UCASE(?materialLabel)",
        "complexity_description": "Multiple patterns, service call, group by and order by",
        "complexity": "complex"
    },
    {
        "id": "298",
        "valid_gpt_response": true,
        "query": "SELECT ?image ?item ?itemLabel ?collectionLabel WHERE {\n?item wdt:P31/wdt:P361? wd:Q164992; wdt:P18 ?image; wdt:P195 ?collection.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Simple query with 3 variables and 3 triple patterns",
        "complexity": "simple"
    },
    {
        "id": "299",
        "valid_gpt_response": true,
        "query": "SELECT (SUBSTR(STR(?item),32) AS ?wdq) (SUBSTR(STR(?prop),32) AS ?wdp) ?object ?url WHERE {\n?item wdt:P31/wdt:P361? wd:Q164992 ; wdt:P195 wd:Q6941088.\n?item wdt:P973 ?url.\n?item ?p ?statement.\n?prop wikibase:claim ?p; wikibase:statementProperty ?ps FILTER (?prop != wd:P973)\nFILTER (?prop != wd:P18).\n?statement ?ps ?object .\nFILTER NOT EXISTS {?statement prov:wasDerivedFrom []}\n} ORDER BY ?item",
        "complexity_description": "Multiple filters, subqueries and joins",
        "complexity": "complex"
    },
    {
        "id": "300",
        "valid_gpt_response": true,
        "query": "SELECT (SUBSTR(STR(?q),32) AS ?wdq) (CONCAT(\"L\",?astrolabe_lang) AS ?lang) ?astrolabe_label WHERE {\n{SELECT ?astrolabe_lang ?astrolabe_label WHERE {\nwd:Q164992 rdfs:label ?astrolabe_label. BIND(lang(?astrolabe_label) AS ?astrolabe_lang)\n}\n}\n?q rdfs:label \"Astrolabe\"@en.\nFILTER(NOT EXISTS {\n?q rdfs:label ?label.\nFILTER(LANG(?label) = ?astrolabe_lang)\n})\n}",
        "complexity_description": "Multiple subqueries, FILTER NOT EXISTS, and language handling",
        "complexity": "complex"
    },
    {
        "id": "301",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person ?page ?image WHERE {\n?item wdt:P31 wd:Q164992; wdt:P195 wd:Q6941088.\n?item wdt:P170 ?person.\nOPTIONAL { ?item wdt:P18 ?image }\n?page schema:about ?person; schema:isPartOf <https://en.wikipedia.org/>\n} ORDER BY ?page",
        "complexity_description": "Multiple triple patterns, OPTIONAL clause, and ORDER BY",
        "complexity": "medium"
    },
    {
        "id": "302",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?description (lang(?description) as ?lang) WHERE {\n?item wdt:P195 wd:Q6941088.\n?item schema:description ?description\n}",
        "complexity_description": "Two triple patterns, one function",
        "complexity": "medium"
    },
    {
        "id": "303",
        "valid_gpt_response": true,
        "query": "SELECT (str(?item) as ?name) ?diam WHERE {\n?item wdt:P31 wd:Q164992; p:P2386/psv:P2386 ?valuenode. # astrolabes with a diameter property\n?valuenode wikibase:quantityAmount ?length; wikibase:quantityUnit ?unit.\nBIND(IF(?unit = wd:Q174728, ?length * 10,?length) as ?diam) # diameter in millimetres (unit is cm or mm)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?item rdfs:label ?itemLabel }\n} ORDER BY DESC(?diam)",
        "complexity_description": "Multiple joins, subqueries and conditional bindings",
        "complexity": "complex"
    },
    {
        "id": "304",
        "valid_gpt_response": true,
        "query": "SELECT (YEAR(SAMPLE(?date)) as ?year) (SAMPLE(?diam) as ?diam1) (CONCAT(?itemLabel,\" \",SUBSTR(str(?item),32) ) as ?name) WHERE {\n?item wdt:P31 wd:Q164992; wdt:P571 ?date; p:P2386/psv:P2386 ?valuenode. # astrolabes with a diameter property\n?valuenode wikibase:quantityAmount ?length; wikibase:quantityUnit ?unit.\nBIND(IF(?unit = wd:Q174728, ?length * 10,?length) as ?diam) # diameter in millimetres (unit is cm or mm)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?item rdfs:label ?itemLabel }\n} group by ?item ?itemLabel",
        "complexity_description": "Multiple subqueries, BIND, SERVICE and GROUP BY clauses",
        "complexity": "complex"
    },
    {
        "id": "305",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\n?item wdt:P31/wdt:P361? wd:Q164992; wdt:P528 \"150\"\n}",
        "complexity_description": "Simple query with 2 filters",
        "complexity": "simple"
    },
    {
        "id": "306",
        "valid_gpt_response": true,
        "query": "SELECT ?typeLabel (COUNT(?thing) AS ?count) WHERE {\n?thing wdt:P6108 ?iiif; wdt:P31 ?type\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?typeLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, service call, group by and order by",
        "complexity": "complex"
    },
    {
        "id": "307",
        "valid_gpt_response": true,
        "query": "SELECT ?collectionLabel (COUNT(?thing) AS ?count) WHERE {\n?thing wdt:P6108 []; wdt:P195 ?collection\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?collectionLabel\nORDER BY DESC(?count)",
        "complexity_description": "Uses aggregation, subquery and service call",
        "complexity": "complex"
    },
    {
        "id": "308",
        "valid_gpt_response": true,
        "query": "SELECT ?creator ?creatorLabel ?creatorDescription (COUNT(?art) AS ?count) WHERE {\n?art wdt:P6108 []; wdt:P170 ?creator.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?creator ?creatorLabel ?creatorDescription\nORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, service call, group by and order by",
        "complexity": "complex"
    },
    {
        "id": "309",
        "valid_gpt_response": true,
        "query": "SELECT ?placeholder ?image ?qLabel (GROUP_CONCAT(DISTINCT ?collectionLabel; separator=\"; \") AS ?where)\n(URI(CONCAT('https://tools.wmflabs.org/mirador/?manifest=', STR(?iiif))) AS ?iiiflink)\nWHERE {\n?q (wdt:P31/wdt:P279*) wd:Q87167; wdt:P6108 ?iiif; wikibase:sitelinks ?sitecount.\n?q p:P195 ?s. ?s ps:P195 ?collection . MINUS {?s pq:P582 []}.\nMINUS {?s ps:P195 wd:Q1322278 }\nOPTIONAL {?q wdt:P18 ?img}\nBIND (IF(BOUND(?img), ?img, <http://commons.wikimedia.org/wiki/Special:FilePath/No%20image%20available.svg>) AS ?image)\nBIND (IF(BOUND(?img), 0, 1) AS ?placeholder)\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?q rdfs:label ?qLabel. ?collection rdfs:label ?collectionLabel\n}\n}\nGROUP BY ?placeholder ?qLabel ?image ?iiif ?sitecount\nORDER BY ?placeholder DESC(?sitecount)",
        "complexity_description": "Multiple joins, subqueries, and functions",
        "complexity": "complex"
    },
    {
        "id": "310",
        "valid_gpt_response": true,
        "query": "SELECT ?qLabel ?image (GROUP_CONCAT(DISTINCT ?collectionLabel; separator=\"; \") AS ?where) (URI(CONCAT('https://tools.wmflabs.org/mirador/?manifest=', STR(?iiif))) AS ?q) WHERE {\n?q wdt:P6108 ?iiif; wdt:P18 ?image;\nwdt:P170 wd:Q5597; # creator: Raphael\np:P195 ?s. ?s ps:P195 ?collection . MINUS {?s pq:P582 []}.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?q rdfs:label ?qLabel. ?collection rdfs:label ?collectionLabel}\n} GROUP BY ?q ?qLabel ?iiif ?image\nORDER BY ?where",
        "complexity_description": "Multiple joins, subqueries, and functions",
        "complexity": "complex"
    },
    {
        "id": "311",
        "valid_gpt_response": true,
        "query": "SELECT ?thingLabel ?image ?placeholder (URI(CONCAT('https://tools.wmflabs.org/mirador/?manifest=', STR(?iiif))) AS ?iiiflink) WHERE {\n?thing wdt:P6108 ?iiif;\nwdt:P170 wd:Q159758. # creator: Turner\nOPTIONAL{ ?thing wdt:P18 ?img }\nBIND (IF(BOUND(?img), ?img, <http://commons.wikimedia.org/wiki/Special:FilePath/No%20image%20available.svg>) AS ?image)\nBIND (IF(BOUND(?img), 0, 1) AS ?placeholder)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?placeholder",
        "complexity_description": "Multiple optional patterns, service call and conditional bindings",
        "complexity": "complex"
    },
    {
        "id": "312",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?qLabel ?image ?placeholder (GROUP_CONCAT(DISTINCT ?collectionLabel; separator=\"; \") AS ?where)\n(URI(CONCAT('https://tools.wmflabs.org/mirador/?manifest=', STR(?iiif))) AS ?iiiflink)\nWHERE {\n?q wdt:P31 wd:Q3305213; # painting\nwdt:P136 wd:Q192110; # genre: self-portrait\nwdt:P6108 ?iiif. # IIIF manifest link on Wikidata\nOPTIONAL{ ?q wdt:P18 ?img } # Image on Commons\n?q p:P195 ?s. ?s ps:P195 ?collection . MINUS {?s pq:P582 []}.\nMINUS {?s ps:P195 wd:Q1322278 }\n# ?collection wdt:P17 wd:Q145 # collection in the UK\nBIND (IF(BOUND(?img), ?img, <http://commons.wikimedia.org/wiki/Special:FilePath/No%20image%20available.svg>) AS ?image)\nBIND (IF(BOUND(?img), 1, 0) AS ?placeholder)\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?q rdfs:label ?qLabel. ?collection rdfs:label ?collectionLabel\n}\n} GROUP BY ?q ?qLabel ?iiif ?image ?placeholder\nORDER BY DESC(?placeholder) ?where",
        "complexity_description": "Multiple joins, subqueries, and conditional bindings",
        "complexity": "complex"
    },
    {
        "id": "313",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?birthdate WHERE {\n?person wdt:P3429 ?ee.\n?person wdt:P21 wd:Q6581072.\n?person wdt:P106 wd:Q201788.\n?person wdt:P569 ?birthdate.\nFILTER ((YEAR(?birthdate) > 1729) && (YEAR(?birthdate) < 1740))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns with filter and service",
        "complexity": "medium"
    },
    {
        "id": "314",
        "valid_gpt_response": true,
        "query": "SELECT ?edition ?title ?year ?no ?pages (URI(CONCAT(\"http://estc.bl.uk/\",?estc)) AS ?estc_cit) ?text WHERE {\n?work wdt:P50 wd:Q538767. # work by Macaulay\n?edition wdt:P629 ?work; # edition of work\nwdt:P1476 ?title; # title of edition\nwdt:P3939 ?estc; # ESTC Citation number\nwdt:P577 ?pubdate.\nBIND(YEAR(?pubdate) as ?year) # publication year\nOPTIONAL{ ?edition wdt:P393 ?no } # edition number\nOPTIONAL{ ?edition wdt:P953 ?text } # work available at\nOPTIONAL { ?edition wdt:P1104 ?pages } # no of pages\n} ORDER BY ?year ?no",
        "complexity_description": "Multiple optional patterns, bindings and filters",
        "complexity": "medium"
    },
    {
        "id": "315",
        "valid_gpt_response": true,
        "query": "SELECT ?edition2 ?title ?year2 ?text2 ?this_is_no ?ota_has_no WHERE {\n?edition1 wdt:P629 ?work;\nwdt:P953 ?text1;\nwdt:P577 ?pubdate1.\nFILTER CONTAINS(STR(?text1),\"ota.ox.ac.uk\") # OTA scan of work\nBIND(YEAR(?pubdate1) as ?year) # publication year\n?edition2 wdt:P629 ?work; # edition of work\nwdt:P953 ?text2;\nwdt:P1476 ?title;\nwdt:P577 ?pubdate2.\nFILTER( ?edition1 != ?edition2 ) # non-OTA scan of work\nBIND(YEAR(?pubdate2) as ?year2) # publication year\nOPTIONAL{ ?edition1 wdt:P393 ?ota_has_no } # edition number\nOPTIONAL{ ?edition2 wdt:P393 ?this_is_no }\n}",
        "complexity_description": "Multiple filters, bindings, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "316",
        "valid_gpt_response": true,
        "query": "SELECT ?entry ?wslink WHERE {\n?entry wdt:P1433 wd:Q40901539. # published in Plomer DBP\nOPTIONAL{ ?wslink schema:about ?entry; schema:isPartOf <https://en.wikisource.org/> }\n}",
        "complexity_description": "Simple query with one triple pattern and an optional block",
        "complexity": "simple"
    },
    {
        "id": "317",
        "valid_gpt_response": true,
        "query": "SELECT ?name ?birthyear ?image (SAMPLE(?coord) AS ?coord) (URI(CONCAT(\"http://dx.doi.org/10.13051/ee:bio/\", ?ee)) AS ?eelink)\nWHERE {\n?person wdt:P3429 ?ee;\nwdt:P19 ?place;\nrdfs:label ?name filter (lang(?name) = \"en\").\n?place wdt:P625 ?coord\nOPTIONAL { ?person wdt:P569 ?dob }\nBIND(CONCAT(\"Born \", STR(YEAR(?dob))) as ?birthyear)\nOPTIONAL {?person wdt:P18 ?image }\n} GROUP BY ?name ?image ?ee ?birthyear",
        "complexity_description": "Multiple optional patterns, grouping and binding",
        "complexity": "complex"
    },
    {
        "id": "318",
        "valid_gpt_response": true,
        "query": "SELECT ?name (URI(CONCAT(\"http://dx.doi.org/10.13051/ee:bio/\", ?ee)) AS ?eelink) ?englishwp\nWHERE {\n?person wdt:P3429 ?ee;\nrdfs:label ?name filter (lang(?name) = \"en\")\n?englishwp schema:about ?person; schema:isPartOf <https://en.wikipedia.org/>\n} ORDER BY ?ee",
        "complexity_description": "Multiple filters, joins and functions",
        "complexity": "medium"
    },
    {
        "id": "319",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?personDescription (URI(CONCAT(\"http://dx.doi.org/10.13051/ee:bio/\", ?ee)) AS ?eelink)\n(GROUP_CONCAT(?otherwp) AS ?links)\nWHERE {\n?person wdt:P3429 ?ee.\nMINUS {?englishwp schema:about ?person; schema:isPartOf <https://en.wikipedia.org/> }\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,de\"}\n?otherwp schema:about ?person\nFILTER CONTAINS(STR(?otherwp),\"wikipedia\")\n} GROUP BY ?personLabel ?personDescription ?ee ?person ORDER BY ?ee",
        "complexity_description": "Multiple services, grouping, and filtering",
        "complexity": "complex"
    },
    {
        "id": "320",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?personDescription (URI(CONCAT(\"http://dx.doi.org/10.13051/ee:bio/\", ?ee)) AS ?eelink) ?sourcename ?ws\nWHERE {\n?person wdt:P3429 ?ee.\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,de\"}\nMINUS {?wp schema:about ?person; FILTER CONTAINS(STR(?wp),\"wikipedia\") }\nOPTIONAL { ?person p:P1343/ps:P1343 ?source. ?source rdfs:label ?sourcename filter (lang(?sourcename) = \"en\")\nOPTIONAL { ?ws schema:about ?source; schema:isPartOf <https://en.wikisource.org/> } }\n} ORDER BY ?ee",
        "complexity_description": "Multiple services, optional patterns, and filters",
        "complexity": "complex"
    },
    {
        "id": "321",
        "valid_gpt_response": true,
        "query": "SELECT ?personLabel ?personDescription ?image (URI(CONCAT(\"http://dx.doi.org/10.13051/ee:bio/\", ?ee)) AS ?eelink)\nWHERE {\n?person wdt:P3429 ?ee;\nwdt:P18 ?image\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,de,es,it,sv\"}\n} ORDER BY ?personLabel",
        "complexity_description": "Multiple triple patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "322",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?name ?ee (URI(CONCAT(\"http://www.npg.org.uk/collections/search/person/\", ?npg)) AS ?npglink)\nWHERE {\n?person wdt:P3429 ?ee.\nMINUS{?person wdt:P18 []} # no image\nOPTIONAL{?person wdt:P1816 ?npg}\n?person rdfs:label ?name filter (lang(?name) = \"en\")\n} ORDER BY ?name",
        "complexity_description": "Multiple triple patterns, MINUS and OPTIONAL clauses",
        "complexity": "medium"
    },
    {
        "id": "323",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?ee ?art ?artLabel ?image\nWHERE {\n?person wdt:P3429 ?ee;\nwdt:P31 wd:Q5\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,de,es,it,sv,ru,pl,nl\"}\n?art wdt:P180 ?person;\nwdt:P18 ?image\nMINUS { ?person wdt:P18 ?image }\n} ORDER BY ?personLabel",
        "complexity_description": "Multiple joins, minus clause and service call",
        "complexity": "complex"
    },
    {
        "id": "324",
        "valid_gpt_response": true,
        "query": "SELECT ?orgname (COUNT(?person) AS ?members)\nWHERE {\n?person wdt:P3429 [];\nwdt:P463 ?org.\n?org rdfs:label ?orgname filter (lang(?orgname) = \"en\")\n} GROUP BY ?orgname\nORDER BY DESC (?members)",
        "complexity_description": "Multiple triple patterns, aggregation and ordering",
        "complexity": "medium"
    },
    {
        "id": "325",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?orgLabel ?person ?personLabel ?ee\nWHERE {\n?person wdt:P3429 ?ee;\nwdt:P463 ?org\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\"}\n} ORDER BY ?orgLabel ?ee",
        "complexity_description": "Simple query with 2 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "326",
        "valid_gpt_response": true,
        "query": "SELECT ?jobname (COUNT(?person) AS ?members)\nWHERE {\n?person wdt:P3429 ?ee;\nwdt:P106 ?job.\n?job rdfs:label ?jobname filter (lang(?jobname) = \"en\")\n} GROUP BY ?jobname\nORDER BY DESC (?members)",
        "complexity_description": "Multiple triple patterns, grouping and aggregation",
        "complexity": "medium"
    },
    {
        "id": "327",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?personDescription ?ee\nWHERE {\n?person wdt:P3429 ?ee;\nwdt:P31 wd:Q5\nMINUS{?person wdt:P106 [] }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,de,es\" }\n} ORDER BY ?ee",
        "complexity_description": "Multiple triple patterns, MINUS clause and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "328",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?ee ?causeLabel WHERE {\n?person wdt:P3429 ?ee;\nwdt:P509 ?cause\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nORDER BY ?causeLabel",
        "complexity_description": "Simple query with 2 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "329",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?ee (URI(CONCAT(\"https://discovery.nationalarchives.gov.uk/details/c/\",?natarch)) AS ?natarchlink) WHERE {\n?person wdt:P3429 ?ee;\nwdt:P3029 ?natarch\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nORDER BY ?personLabel",
        "complexity_description": "Uses SERVICE clause, ORDER BY and CONCAT function",
        "complexity": "medium"
    },
    {
        "id": "330",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?ee (URI(CONCAT(\"https://www.gutenberg.org/ebooks/author/\", ?gutenberg)) AS ?gutenberglink) WHERE {\n?person wdt:P3429 ?ee;\nwdt:P1938 ?gutenberg\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nORDER BY ?personLabel",
        "complexity_description": "Uses SERVICE clause, ORDER BY and CONCAT function",
        "complexity": "medium"
    },
    {
        "id": "331",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?ee (URI(CONCAT(\"http://www.genealogics.org/getperson.php?tree=LEO&personID=\", ?gorg)) AS ?gorglink) WHERE {\n?person wdt:P3429 ?ee;\nwdt:P1819 ?gorg\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nORDER BY ?personLabel",
        "complexity_description": "Uses SERVICE clause, ORDER BY and URI function",
        "complexity": "medium"
    },
    {
        "id": "332",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?ee (URI(CONCAT(\"http://www.historyofparliamentonline.org/volume/\", ?parl)) AS ?parllink) WHERE {\n?person wdt:P3429 ?ee;\nwdt:P1614 ?parl\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nORDER BY ?personLabel",
        "complexity_description": "Uses SERVICE clause, ORDER BY and CONCAT function",
        "complexity": "medium"
    },
    {
        "id": "333",
        "valid_gpt_response": true,
        "query": "SELECT ?author ?authorLabel ?letter ?letterLabel ?ws\nWHERE {\n?letter wdt:P50 ?author;\nwdt:P31 wd:Q133492.\n?author wdt:P3429 []\nOPTIONAL {?ws schema:about ?letter; schema:isPartOf <https://en.wikisource.org/> }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ?authorLabel",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "334",
        "valid_gpt_response": true,
        "query": "SELECT ?recipient ?recipientLabel ?letter ?letterLabel ?ws\nWHERE {\n?letter wdt:P1817 ?recipient.\n?recipient wdt:P3429 []\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\nOPTIONAL {?ws schema:about ?letter; schema:isPartOf <https://en.wikisource.org/> }\n} ORDER BY ?recipientLabel",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "335",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?personDescription (COUNT(?ee) AS ?eelinks)\nWHERE {\n?person wdt:P3429 ?ee\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,de,es\" }\n} GROUP BY ?person ?personLabel ?personDescription\nORDER BY DESC(?eelinks) ?ee",
        "complexity_description": "Multiple clauses and aggregations",
        "complexity": "medium"
    },
    {
        "id": "336",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person ?personLabel (URI(CONCAT(\"http://emlo.bodleian.ox.ac.uk/profile/person/\",?emlo)) AS ?emlolink) ?birthyear (IF(isBLANK(?pob),\"unknown\",?pobLabel) AS ?birthplace) ?deathyear (IF(isBLANK(?pod),\"unknown\",?podLabel) AS ?deathplace)\nWHERE {\n?person wdt:P1802 ?emlo;\nOPTIONAL { ?person wdt:P569 ?dob }\nOPTIONAL { ?person wdt:P570 ?dod }\nOPTIONAL { ?person wdt:P19 ?pob }\nOPTIONAL { ?person wdt:P20 ?pod }\nBIND(YEAR(?dob) as ?birthyear)\nBIND(YEAR(?dod) as ?deathyear)\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,de,nl,es,pl\".\n?pob rdfs:label ?pobLabel.\n?pod rdfs:label ?podLabel.\n?person rdfs:label ?personLabel\n}\n} ORDER BY DESC(?birthyear)",
        "complexity_description": "Multiple OPTIONAL patterns, BIND operations, and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "337",
        "valid_gpt_response": true,
        "query": "SELECT ?name ?birthyear ?image (SAMPLE(?coord) AS ?coord) (URI(CONCAT(\"http://emlo.bodleian.ox.ac.uk/profile/person/\", ?emlo)) AS ?emlolink)\nWHERE {\n?person wdt:P1802 ?emlo;\nwdt:P19 ?place;\nrdfs:label ?name filter (lang(?name) = \"en\").\n?place wdt:P625 ?coord\nOPTIONAL { ?person wdt:P569 ?dob }\nBIND(CONCAT(\"Born \", STR(YEAR(?dob))) as ?birthyear)\nOPTIONAL {?person wdt:P18 ?image }\n} GROUP BY ?name ?image ?emlo ?birthyear",
        "complexity_description": "Multiple OPTIONAL clauses, BIND and SAMPLE functions",
        "complexity": "complex"
    },
    {
        "id": "338",
        "valid_gpt_response": true,
        "query": "SELECT ?orgname (COUNT(?person) AS ?members)\nWHERE {\n?person wdt:P1802 [];\nwdt:P463 ?org.\n?org rdfs:label ?orgname filter (lang(?orgname) = \"en\")\n} GROUP BY ?orgname\nORDER BY DESC (?members)",
        "complexity_description": "Multiple triple patterns, aggregation and filtering",
        "complexity": "medium"
    },
    {
        "id": "339",
        "valid_gpt_response": true,
        "query": "SELECT ?jobname (COUNT(?person) AS ?members)\nWHERE {\n?person wdt:P1802 ?emlo;\nwdt:P106 ?job.\n?job rdfs:label ?jobname filter (lang(?jobname) = \"en\")\n} GROUP BY ?jobname\nORDER BY DESC (?members)",
        "complexity_description": "Multiple triple patterns, aggregation and ordering",
        "complexity": "complex"
    },
    {
        "id": "340",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?birthDate ?birthPrecision ?deathDate ?deathPrecision ?pic ?occupation (URI(CONCAT(\"http://emlo.bodleian.ox.ac.uk/profile/person/\", SAMPLE(?emlo))) AS ?emlolink) ?gender\nWHERE\n{ ?item wdt:P1802 ?emlo;\nwdt:P463 wd:Q188771;\nwdt:P21 ?genderItem .\nOPTIONAL { ?item wdt:P18 ?pic }\nOPTIONAL {?item wdt:P106 ?occupationItem }\n?item p:P569/psv:P569 ?birthDateNode .\n?birthDateNode wikibase:timeValue ?birthDate .\n?birthDateNode wikibase:timePrecision ?birthPrecision .\nOPTIONAL {?item p:P570/psv:P570 ?deathDateNode .\n?deathDateNode wikibase:timeValue ?deathDate .\n?deathDateNode wikibase:timePrecision ?deathPrecision }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .\n?item rdfs:label ?itemLabel .\n?occupationItem rdfs:label ?occupation .\n?genderItem rdfs:label ?gender\n}\n} GROUP BY ?item ?itemLabel ?birthDate ?birthPrecision ?deathDate ?deathPrecision ?pic ?occupation ?gender",
        "complexity_description": "Multiple optional patterns, service call, and property paths",
        "complexity": "complex"
    },
    {
        "id": "341",
        "valid_gpt_response": true,
        "query": "SELECT ?personLabel ?work ?workLabel ?pubyear ?englishwp ?englishws (SAMPLE(?fulltext) AS ?fulltext)\nWHERE {\n?person wdt:P1802 ?emlo.\n?work wdt:P50 ?person.\nMINUS {?work wdt:P31 wd:Q3331189}\nOPTIONAL{?work wdt:P577 ?pubdate}\nBIND(YEAR(?pubdate) as ?pubyear)\nOPTIONAL{ ?englishwp schema:about ?work. ?englishwp schema:isPartOf <https://en.wikipedia.org/> }\nOPTIONAL{ ?englishws schema:about ?work. ?englishws schema:isPartOf <https://en.wikisource.org/> }\nOPTIONAL{ ?work wdt:P953 ?fulltext }\nFILTER (BOUND(?fulltext) {{!",
        "complexity_description": "Multiple optional patterns, minus clause and bind function",
        "complexity": "complex"
    },
    {
        "id": "342",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?birthDate ?birthPrecision ?deathDate ?deathPrecision ?pic ?groupLabel (URI(CONCAT(\"http://emlo.bodleian.ox.ac.uk/profile/person/\", SAMPLE(?emlo))) AS ?emlolink)\nWHERE\n{ ?item wdt:P1802 ?emlo;\nwdt:P463 ?group.\n{ ?group wdt:P31/wdt:P279? wd:Q955824 } UNION { ?group wdt:P31/wdt:P279? wd:Q748019 }\nOPTIONAL { ?item wdt:P18 ?pic }\n?item p:P569/psv:P569 ?birthDateNode .\n?birthDateNode wikibase:timeValue ?birthDate .\n?birthDateNode wikibase:timePrecision ?birthPrecision .\nOPTIONAL {?item p:P570/psv:P570 ?deathDateNode .\n?deathDateNode wikibase:timeValue ?deathDate .\n?deathDateNode wikibase:timePrecision ?deathPrecision }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\"\n}\n} GROUP BY ?item ?itemLabel ?birthDate ?birthPrecision ?deathDate ?deathPrecision ?pic ?groupLabel",
        "complexity_description": "Multiple UNION, OPTIONAL, and SERVICE clauses with complex property paths",
        "complexity": "complex"
    },
    {
        "id": "343",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?emlo ?causeLabel WHERE {\n?person wdt:P1802 ?emlo;\nwdt:P509 ?cause\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nORDER BY ?causeLabel",
        "complexity_description": "Simple query with 2 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "344",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel (URI(CONCAT(\"http://emlo.bodleian.ox.ac.uk/profile/person/\",?emlo1)) AS ?emlolink1) (URI(CONCAT(\"http://emlo.bodleian.ox.ac.uk/profile/person/\",?emlo2)) AS ?emlolink2)\nWHERE {\n?person wdt:P1802 ?emlo2;\nwdt:P1802 ?emlo1.\nFILTER (?emlo1 > ?emlo2)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nORDER BY ?personLabel",
        "complexity_description": "Multiple variables, filter, and service clause",
        "complexity": "medium"
    },
    {
        "id": "345",
        "valid_gpt_response": true,
        "query": "SELECT ?emlolink ?wp\nWHERE {\n?entity wdt:P1802 ?emlolink.\nOPTIONAL{?enwp schema:about ?entity; schema:isPartOf <https://en.wikipedia.org/>}\nOPTIONAL{?dewp schema:about ?entity; schema:isPartOf <https://de.wikipedia.org/>}\nOPTIONAL{?frwp schema:about ?entity; schema:isPartOf <https://fr.wikipedia.org/>}\nOPTIONAL{?itwp schema:about ?entity; schema:isPartOf <https://it.wikipedia.org/>}\nOPTIONAL{?ruwp schema:about ?entity; schema:isPartOf <https://ru.wikipedia.org/>}\nOPTIONAL{?svwp schema:about ?entity; schema:isPartOf <https://sv.wikipedia.org/>}\nBIND (IF(BOUND(?enwp),?enwp,IF(BOUND(?dewp),?dewp,IF(BOUND(?frwp),?frwp,IF(BOUND(?itwp),?itwp,IF(BOUND(?ruwp),?ruwp,IF(BOUND(?svwp),?svwp,\"\") ) ) ) ) ) AS ?wp)\nFILTER (?wp != \"\")\n}",
        "complexity_description": "Multiple optional patterns and nested IF statements",
        "complexity": "complex"
    },
    {
        "id": "346",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?emlolink) AS ?count) ?site\nWHERE {\n?entity wdt:P1802 ?emlolink.\n?page schema:about ?entity; schema:isPartOf ?site\n} GROUP BY ?site\nORDER BY DESC(?count)",
        "complexity_description": "Joins, aggregation and ordering",
        "complexity": "medium"
    },
    {
        "id": "347",
        "valid_gpt_response": true,
        "query": "SELECT ?personLabel ?personDescription ?emlo (URI(CONCAT(\"https://tools.wmflabs.org/reasonator/?q=\", SUBSTR(STR(?person),32) )) as ?reasonator)\nWHERE {\n?person wdt:P1802 ?emlo.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,de,es,po,nl\" }\n}\nORDER BY ?personLabel",
        "complexity_description": "Uses SERVICE clause and ORDER BY",
        "complexity": "medium"
    },
    {
        "id": "348",
        "valid_gpt_response": true,
        "query": "SELECT ?emlo ?idlabel ?value WITH {\nSELECT DISTINCT ?item ?emlo WHERE {\n?item wdt:P1802 ?emlo\n}\n} AS %subquery WHERE {\nINCLUDE %subquery .\n?id wikibase:propertyType wikibase:ExternalId; wikibase:claim ?p; wikibase:statementProperty ?ps; wdt:P31/wdt:P279* wd:Q19595382 FILTER( ?id != wd:P1802 ).\n?item ?p [ ?ps ?value ] .\n?id rdfs:label ?idlabel FILTER (lang(?idlabel) = \"en\").\n} ORDER BY ?idlabel",
        "complexity_description": "Multiple subqueries, joins and filters",
        "complexity": "complex"
    },
    {
        "id": "349",
        "valid_gpt_response": true,
        "query": "SELECT ?q ?qLabel ?qDescription ?emlo_loc WHERE {\n?q wdt:P4672 ?emlo_loc.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Simple query with one triple pattern and a service call",
        "complexity": "simple"
    },
    {
        "id": "350",
        "valid_gpt_response": true,
        "query": "SELECT ?label (SAMPLE(?coord) AS ?where) ?subj (?typeLabel AS ?layer) ?image (URI(CONCAT(\"https://hillforts.arch.ox.ac.uk/?query=Atlas_of_Hillforts_4166_0%2CMain_Atlas_Number%2C\",?atlas)) AS ?atlaslink) WHERE\n{ ?subj wdt:P31/wdt:P279? ?type ;\nwdt:P625 ?coord ;\nwdt:P31 ?type ;\nwdt:P4102 ?atlas ;\nrdfs:label ?label filter (lang(?label) = \"en\").\nOPTIONAL{ ?subj wdt:P18 ?image }\n?type wdt:P279? wd:Q744099 ;\nrdfs:label ?typeLabel filter (lang(?typeLabel) = \"en\")\n} GROUP BY ?label ?subj ?typeLabel ?image ?atlas",
        "complexity_description": "Multiple filters, optional clause, and grouping",
        "complexity": "complex"
    },
    {
        "id": "351",
        "valid_gpt_response": true,
        "query": "SELECT ?label (SAMPLE(?coord) AS ?where) ?subj (?typeLabel AS ?layer) ?image WHERE\n{ ?subj wdt:P31/wdt:P279? ?type ;\nwdt:P625 ?coord ;\nwdt:P31 ?type ;\nrdfs:label ?label filter (lang(?label) = \"en\").\nMINUS { ?subj wdt:P4102 ?atlas }\nOPTIONAL{ ?subj wdt:P18 ?image }\n?type wdt:P279? wd:Q744099 ;\nrdfs:label ?typeLabel filter (lang(?typeLabel) = \"en\").\n?subj p:P625/psv:P625 ?loc. # coordinate-location statement\n?loc wikibase:geoLatitude ?lat .\n?loc wikibase:geoLongitude ?long .\nFILTER (?lat > 49) FILTER (?lat < 63)\nFILTER (?long > -10.5) FILTER (?long < 2.02)\n} GROUP BY ?label ?subj ?typeLabel ?image",
        "complexity_description": "Multiple filters, optional clause, and grouping",
        "complexity": "complex"
    },
    {
        "id": "352",
        "valid_gpt_response": true,
        "query": "SELECT ?label (SAMPLE(?coord) AS ?where) ?subj (?typeLabel AS ?layer) ?image WHERE\n{ ?subj wdt:P31/wdt:P279? ?type ;\nwdt:P625 ?coord ;\nwdt:P31 ?type ;\nwdt:P18 ?image ;\nrdfs:label ?label filter (lang(?label) = \"en\").\n?type wdt:P279? wd:Q744099 ;\nrdfs:label ?typeLabel filter (lang(?typeLabel) = \"en\").\n?subj p:P625/psv:P625 ?loc. # coordinate-location statement\n?loc wikibase:geoLatitude ?lat .\n?loc wikibase:geoLongitude ?long .\nFILTER (?lat > 49) FILTER (?lat < 63)\nFILTER (?long > -10.5) FILTER (?long < 2.02)\n} GROUP BY ?label ?subj ?typeLabel ?image",
        "complexity_description": "Multiple filters, joins and subqueries",
        "complexity": "complex"
    },
    {
        "id": "353",
        "valid_gpt_response": true,
        "query": "SELECT ?label (SAMPLE(?coord) AS ?where) ?subj (?typeLabel AS ?layer) ?planimage WHERE\n{ ?subj wdt:P31/wdt:P279? ?type ;\nwdt:P625 ?coord ;\nwdt:P31 ?type ;\nwdt:P3311 ?planimage ;\nrdfs:label ?label filter (lang(?label) = \"en\").\n?type wdt:P279? wd:Q744099 ;\nrdfs:label ?typeLabel filter (lang(?typeLabel) = \"en\").\n?subj p:P625/psv:P625 ?loc. # coordinate-location statement\n?loc wikibase:geoLatitude ?lat .\n?loc wikibase:geoLongitude ?long .\nFILTER (?lat > 49) FILTER (?lat < 63)\nFILTER (?long > -10.5) FILTER (?long < 2.02)\n} GROUP BY ?label ?subj ?typeLabel ?planimage",
        "complexity_description": "Multiple filters, joins and subqueries",
        "complexity": "complex"
    },
    {
        "id": "354",
        "valid_gpt_response": true,
        "query": "SELECT ?label (SAMPLE(?coord) AS ?where) ?subj (?typeLabel AS ?layer) ?video WHERE\n{ ?subj wdt:P31/wdt:P279? ?type ;\nwdt:P625 ?coord ;\nwdt:P31 ?type ;\nwdt:P10 ?video ;\nrdfs:label ?label filter (lang(?label) = \"en\").\n?type wdt:P279? wd:Q744099 ;\nrdfs:label ?typeLabel filter (lang(?typeLabel) = \"en\").\n?subj p:P625/psv:P625 ?loc. # coordinate-location statement\n?loc wikibase:geoLatitude ?lat .\n?loc wikibase:geoLongitude ?long .\nFILTER (?lat > 49) FILTER (?lat < 63)\nFILTER (?long > -10.5) FILTER (?long < 2.02)\n} GROUP BY ?label ?subj ?typeLabel ?video",
        "complexity_description": "Multiple filters, joins and subqueries",
        "complexity": "complex"
    },
    {
        "id": "355",
        "valid_gpt_response": true,
        "query": "SELECT ?atlas ?image WHERE\n{ ?subj wdt:P4102 ?atlas ;\nwdt:P18 ?image .\n} ORDER BY ?atlas",
        "complexity_description": "Two triple patterns, one ORDER BY",
        "complexity": "simple"
    },
    {
        "id": "356",
        "valid_gpt_response": true,
        "query": "SELECT ?label (SAMPLE(?coord) AS ?where) ?subj (?typeLabel AS ?layer) WHERE\n{ ?subj wdt:P31/wdt:P279? ?type ;\nwdt:P625 ?coord ;\nwdt:P31 ?type ;\nrdfs:label ?label filter (lang(?label) = \"en\").\n?type wdt:P279? wd:Q744099 ;\nrdfs:label ?typeLabel filter (lang(?typeLabel) = \"en\").\nMINUS{?subj wdt:P18 []}\n?subj p:P625/psv:P625 ?loc. # coordinate-location statement\n?loc wikibase:geoLatitude ?lat .\n?loc wikibase:geoLongitude ?long .\nFILTER (?lat > 49) FILTER (?lat < 63)\nFILTER (?long > -10.5) FILTER (?long < 2.02)\n} GROUP BY ?label ?subj ?typeLabel",
        "complexity_description": "Multiple filters, subqueries and joins",
        "complexity": "complex"
    },
    {
        "id": "357",
        "valid_gpt_response": true,
        "query": "SELECT ?label (SAMPLE(?coord) AS ?where) ?subj (?typeLabel AS ?layer) ?commons WHERE\n{ ?subj wdt:P31/wdt:P279? ?type ;\nwdt:P625 ?coord ;\nwdt:P31 ?type ;\nwdt:P373 ?commons ;\nrdfs:label ?label filter (lang(?label) = \"en\").\n?type wdt:P279? wd:Q744099 ;\nrdfs:label ?typeLabel filter (lang(?typeLabel) = \"en\").\n?subj p:P625/psv:P625 ?loc. # coordinate-location statement\n?loc wikibase:geoLatitude ?lat .\n?loc wikibase:geoLongitude ?long .\nFILTER (?lat > 49) FILTER (?lat < 63)\nFILTER (?long > -10.5) FILTER (?long < 2.02)\n} GROUP BY ?label ?subj ?typeLabel ?commons",
        "complexity_description": "Multiple filters, joins and subqueries",
        "complexity": "complex"
    },
    {
        "id": "358",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?subj ?atlasID WHERE\n{ ?subj wdt:P4102 ?atlasID\n} ORDER BY ?atlasID",
        "complexity_description": "Single pattern, distinct values",
        "complexity": "simple"
    },
    {
        "id": "359",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?subj (URI(CONCAT(\"https://hillforts.arch.ox.ac.uk/?query=Atlas_of_Hillforts_4166_0%2CMain_Atlas_Number%2C\", ?atlasID)) AS ?atlas) ?english WHERE\n{ ?subj wdt:P31/wdt:P279? wd:Q744099 ;\nwdt:P4102 ?atlasID .\n?english schema:about ?subj ; schema:isPartOf <https://en.wikipedia.org/>\n} ORDER BY ?atlasID",
        "complexity_description": "Multiple joins, filters and functions",
        "complexity": "complex"
    },
    {
        "id": "360",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?subj (URI(CONCAT(\"https://hillforts.arch.ox.ac.uk/?query=Atlas_of_Hillforts_4166_0%2CMain_Atlas_Number%2C\", ?atlasID)) AS ?atlas) ?cymraeg WHERE\n{ ?subj wdt:P31/wdt:P279? wd:Q744099 ;\nwdt:P4102 ?atlasID .\n?cymraeg schema:about ?subj ; schema:isPartOf <https://cy.wikipedia.org/>\n} ORDER BY ?atlasID",
        "complexity_description": "Multiple joins, filters and functions",
        "complexity": "complex"
    },
    {
        "id": "361",
        "valid_gpt_response": true,
        "query": "SELECT ?type ?typeLabel ?typeDescription ?link WHERE\n{ ?type p:P279 ?s .\n?s ps:P279 wd:Q744099 ;\nprov:wasDerivedFrom/pr:P854 ?link\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\"}\n}",
        "complexity_description": "Multiple triple patterns, service call and property paths",
        "complexity": "medium"
    },
    {
        "id": "362",
        "valid_gpt_response": true,
        "query": "SELECT ?site1 ?site2 ?site1Label ?site2Label WHERE\n{ ?site1 wdt:P4102 ?atlas;\nwdt:P1216 ?scheduled.\n?site2 wdt:P1216 ?scheduled.\nMINUS{?site2 wdt:P4102 []}\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\"}\n}",
        "complexity_description": "Multiple triple patterns, MINUS clause and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "363",
        "valid_gpt_response": true,
        "query": "SELECT ?label (SAMPLE(?coord) AS ?where) ?subj ?image (URI(CONCAT(\"https://hillforts.arch.ox.ac.uk/?query=Atlas_of_Hillforts_4166_0%2CMain_Atlas_Number%2C\",?atlas)) AS ?atlaslink) WHERE\n{ ?subj wdt:P31 wd:Q92086 ;\nwdt:P625 ?coord ;\nwdt:P4102 ?atlas ;\nrdfs:label ?label filter (lang(?label) = \"en\").\nOPTIONAL{ ?subj wdt:P18 ?image }\n?subj p:P625/psv:P625 ?loc. # coordinate-location statement\n?loc wikibase:geoLatitude ?lat .\n?loc wikibase:geoLongitude ?long .\nFILTER (?lat > 49) FILTER (?lat < 63)\nFILTER (?long > -10.5) FILTER (?long < 2.02)\n} GROUP BY ?label ?subj ?image ?atlas",
        "complexity_description": "Multiple filters, optional clause, and grouping",
        "complexity": "complex"
    },
    {
        "id": "364",
        "valid_gpt_response": true,
        "query": "SELECT ?label ?subj ?atlas (GROUP_CONCAT(?typeLabel; separator=\", \") AS ?types) WHERE\n{ ?subj wdt:P4102 ?atlas ;\nwdt:P31 ?type ;\nrdfs:label ?label filter (lang(?label) = \"en\").\nMINUS{?type wdt:P279? wd:Q744099 }\n?type rdfs:label ?typeLabel filter (lang(?typeLabel) = \"en\").\n} GROUP BY ?label ?subj ?atlas ORDER BY ?types",
        "complexity_description": "Multiple filters, MINUS clause and aggregation function",
        "complexity": "complex"
    },
    {
        "id": "365",
        "valid_gpt_response": true,
        "query": "SELECT ?subj ?label WHERE\n{ ?subj wdt:P31/wdt:P279? wd:Q744099 ;\nrdfs:label ?label filter (lang(?label) = \"en\").\nFILTER(UCASE(?label) = ?label)\n}",
        "complexity_description": "Two triple patterns, one language filter and one case-sensitive filter",
        "complexity": "medium"
    },
    {
        "id": "366",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?subj ?coord ?label WHERE\n{ ?subj wdt:P31/wdt:P279? ?type ;\nwdt:P625 ?coord ;\nwdt:P4102 ?atlas ;\nrdfs:label ?label filter (lang(?label) = \"en\").\nFILTER (STRLEN(STR(?coord)) > 23)\n}",
        "complexity_description": "Multiple filters, property paths",
        "complexity": "medium"
    },
    {
        "id": "367",
        "valid_gpt_response": true,
        "query": "SELECT ?subj ?label ?atlasID (URI(CONCAT(\"http://dare.ht.lu.se/places/\",?roman,\".html\")) AS ?romanlink) WHERE\n{ ?subj wdt:P4102 ?atlasID ;\nwdt:P1936 ?roman ;\nrdfs:label ?label filter (lang(?label) = \"en\")\n} ORDER BY ?atlasID",
        "complexity_description": "Filter, URI construction, and ordering",
        "complexity": "medium"
    },
    {
        "id": "368",
        "valid_gpt_response": true,
        "query": "SELECT ?subj ?label WHERE\n{ ?subj wdt:P4102 ?atlasID ;\nrdfs:label ?label filter (lang(?label) = \"cy\")\n}",
        "complexity_description": "Simple query with 2 triple patterns and a language filter",
        "complexity": "simple"
    },
    {
        "id": "369",
        "valid_gpt_response": true,
        "query": "SELECT ?subj ?label WHERE\n{ ?subj wdt:P4102 ?atlasID ;\nrdfs:label ?label filter (lang(?label) = \"gd\")\n}",
        "complexity_description": "Simple query with 2 triple patterns and a language filter",
        "complexity": "simple"
    },
    {
        "id": "370",
        "valid_gpt_response": true,
        "query": "SELECT ?subj ?label WHERE\n{ ?subj wdt:P4102 ?atlasID ;\nrdfs:label ?label filter (lang(?label) = \"g1\")\n}",
        "complexity_description": "Simple query with 2 triple patterns and a language filter",
        "complexity": "simple"
    },
    {
        "id": "371",
        "valid_gpt_response": true,
        "query": "SELECT ?label ?loc ?subj\nWHERE\n{\n?subj wdt:P31/wdt:P279* wd:Q839954 ; # site or subtype\nwdt:P625 ?loc ; # location to plot on map\np:P625/psv:P625 ?coord; # coordinate-location statement\nrdfs:label ?label filter (lang(?label) = \"en\").\n?coord wikibase:geoLatitude ?lat .\n?coord wikibase:geoLongitude ?long .\nFILTER (?lat > 49) FILTER (?lat < 63)\nFILTER (?long > -10.5) FILTER (?long < 2.02)\n}",
        "complexity_description": "Multiple filters, joins and language filter",
        "complexity": "medium"
    },
    {
        "id": "372",
        "valid_gpt_response": true,
        "query": "SELECT ?label ?loc ?subj\nWHERE\n{\n{ ?subj wdt:P31/wdt:P279* wd:Q839954 } UNION { ?subj wdt:P31/wdt:P279* wd:Q57821 } # site or subtype / hillfort or subtype\n?subj wdt:P625 ?loc ; # location to plot on map\np:P625/psv:P625 ?coord; # coordinate-location statement\nrdfs:label ?label filter (lang(?label) = \"en\").\n?coord wikibase:geoLatitude ?lat .\n?coord wikibase:geoLongitude ?long .\nFILTER (?lat > 53.845) FILTER (?lat < 54.554)\nFILTER (?long > -5.17) FILTER (?long < -3.96)\n}",
        "complexity_description": "Multiple filters, unions and property paths",
        "complexity": "complex"
    },
    {
        "id": "373",
        "valid_gpt_response": true,
        "query": "SELECT ?personLabel ?personDescription ?person ?enwp ?image (YEAR(?birthdate) AS ?birthyear) WHERE {\nVALUES ?person {wd:Q234816 wd:Q62530 wd:Q234421 wd:Q231549 wd:Q246135 wd:Q101638 wd:Q15994440 wd:Q230120 wd:Q260378 wd:Q1377789 wd:Q5322139 wd:Q254858 wd:Q6766368 wd:Q7259 wd:Q4949015 wd:Q47152 wd:Q272077 wd:Q198984 wd:Q1284275 wd:Q651786 wd:Q460152 wd:Q230507 wd:Q3263690 wd:Q270855 wd:Q5362637 wd:Q23620545 wd:Q27728558 wd:Q17892 wd:Q36322 wd:Q57286 wd:Q18576000 wd:Q7207 wd:Q45410399\n}\nOPTIONAL{ ?enwp schema:about ?person ; schema:isPartOf <https://en.wikipedia.org/> }\nOPTIONAL{ ?person wdt:P18 ?image }\nOPTIONAL{ ?person wdt:P569 ?birthdate }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?birthyear",
        "complexity_description": "Multiple OPTIONAL clauses, VALUES clause with many items, and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "374",
        "valid_gpt_response": true,
        "query": "SELECT ?personLabel ?frwp ?dewp ?eswp ?jawp WHERE {\nVALUES ?person {wd:Q234816 wd:Q62530 wd:Q234421 wd:Q231549 wd:Q246135 wd:Q101638 wd:Q15994440 wd:Q230120 wd:Q260378 wd:Q1377789 wd:Q5322139 wd:Q254858 wd:Q6766368 wd:Q7259 wd:Q4949015 wd:Q47152 wd:Q272077 wd:Q198984 wd:Q1284275 wd:Q651786 wd:Q460152 wd:Q230507 wd:Q3263690 wd:Q270855 wd:Q5362637 wd:Q23620545 wd:Q27728558 wd:Q17892 wd:Q36322 wd:Q57286 wd:Q18576000 wd:Q7207 wd:Q45410399\n}\nOPTIONAL{ ?frwp schema:about ?person ; schema:isPartOf <https://fr.wikipedia.org/> }\nOPTIONAL{ ?dewp schema:about ?person ; schema:isPartOf <https://de.wikipedia.org/> }\nOPTIONAL{ ?eswp schema:about ?person ; schema:isPartOf <https://es.wikipedia.org/> }\nOPTIONAL{ ?jawp schema:about ?person ; schema:isPartOf <https://ja.wikipedia.org/> }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?personLabel",
        "complexity_description": "Multiple optional patterns with service call",
        "complexity": "medium"
    },
    {
        "id": "375",
        "valid_gpt_response": true,
        "query": "SELECT ?personLabel ?personDescription ?person ?image WHERE {\nVALUES ?person {wd:Q234816 wd:Q62530 wd:Q234421 wd:Q231549 wd:Q246135 wd:Q101638 wd:Q15994440 wd:Q230120 wd:Q260378 wd:Q1377789 wd:Q5322139 wd:Q254858 wd:Q6766368 wd:Q7259 wd:Q4949015 wd:Q47152 wd:Q272077 wd:Q198984 wd:Q1284275 wd:Q651786 wd:Q460152 wd:Q230507 wd:Q3263690 wd:Q270855 wd:Q5362637 wd:Q23620545 wd:Q27728558 wd:Q17892 wd:Q36322 wd:Q57286 wd:Q18576000 wd:Q7207 wd:Q45410399\n}\nOPTIONAL{ ?person wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple VALUES and OPTIONAL clause",
        "complexity": "medium"
    },
    {
        "id": "376",
        "valid_gpt_response": true,
        "query": "SELECT ?personLabel ?personDescription ?person ?image WHERE {\nVALUES ?person {wd:Q234816 wd:Q62530 wd:Q234421 wd:Q231549 wd:Q246135 wd:Q101638 wd:Q15994440 wd:Q230120 wd:Q260378 wd:Q1377789 wd:Q5322139 wd:Q254858 wd:Q6766368 wd:Q7259 wd:Q4949015 wd:Q47152 wd:Q272077 wd:Q198984 wd:Q1284275 wd:Q651786 wd:Q460152 wd:Q230507 wd:Q3263690 wd:Q270855 wd:Q5362637 wd:Q23620545 wd:Q27728558 wd:Q17892 wd:Q36322 wd:Q57286 wd:Q18576000 wd:Q7207 wd:Q45410399\n}\nOPTIONAL{ ?person wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr,[AUTO_LANGUAGE]\". }\n}",
        "complexity_description": "Multiple VALUES and OPTIONAL clause",
        "complexity": "medium"
    },
    {
        "id": "377",
        "valid_gpt_response": true,
        "query": "SELECT ?thing ?thingLabel ?thingDescription ?personLabel ?image WHERE {\nVALUES ?person {wd:Q234816 wd:Q62530 wd:Q234421 wd:Q231549 wd:Q246135 wd:Q101638 wd:Q15994440 wd:Q230120 wd:Q260378 wd:Q1377789 wd:Q5322139 wd:Q254858 wd:Q6766368 wd:Q7259 wd:Q4949015 wd:Q47152 wd:Q272077 wd:Q198984 wd:Q1284275 wd:Q651786 wd:Q460152 wd:Q230507 wd:Q3263690 wd:Q270855 wd:Q5362637 wd:Q23620545 wd:Q27728558 wd:Q17892 wd:Q36322 wd:Q57286 wd:Q18576000 wd:Q7207 wd:Q45410399\n}\n?thing wdt:P138 ?person.\nOPTIONAL {?thing wdt:P18 ?image}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?personLabel",
        "complexity_description": "Multiple VALUES, OPTIONAL clause, and SERVICE keyword usage",
        "complexity": "medium"
    },
    {
        "id": "378",
        "valid_gpt_response": true,
        "query": "SELECT ?enwp ?image (CONCAT(\"Born \",STR(YEAR(?birthdate)),\", \",?birthplaceLabel) AS ?born) ?loc ?personLabel WHERE {\nVALUES ?person {wd:Q234816 wd:Q62530 wd:Q234421 wd:Q231549 wd:Q246135 wd:Q101638 wd:Q15994440 wd:Q230120 wd:Q260378 wd:Q1377789 wd:Q5322139 wd:Q254858 wd:Q6766368 wd:Q7259 wd:Q4949015 wd:Q47152 wd:Q272077 wd:Q198984 wd:Q1284275 wd:Q651786 wd:Q460152 wd:Q230507 wd:Q3263690 wd:Q270855 wd:Q5362637 wd:Q23620545 wd:Q27728558 wd:Q17892 wd:Q36322 wd:Q57286 wd:Q18576000 wd:Q7207 wd:Q45410399\n}\nOPTIONAL{ ?enwp schema:about ?person ; schema:isPartOf <https://en.wikipedia.org/> }\nOPTIONAL{ ?person wdt:P18 ?image }\nOPTIONAL{ ?person wdt:P569 ?birthdate }\nOPTIONAL{ ?person wdt:P19 ?birthplace. ?birthplace wdt:P625 ?loc. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?birthplace rdfs:label ?birthplaceLabel.\n?person rdfs:label ?personLabel.\n}\n}",
        "complexity_description": "Multiple OPTIONAL clauses, VALUES clause with many values, and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "379",
        "valid_gpt_response": true,
        "query": "SELECT ?personLabel ?person ?enwp (SAMPLE(?image) AS ?img) ?birthdate ?birthdatePrecision ?deaddate ?deaddatePrecision WHERE {\nVALUES ?person {wd:Q234816 wd:Q62530 wd:Q234421 wd:Q231549 wd:Q246135 wd:Q101638 wd:Q15994440 wd:Q230120 wd:Q260378 wd:Q1377789 wd:Q5322139 wd:Q254858 wd:Q6766368 wd:Q7259 wd:Q4949015 wd:Q47152 wd:Q272077 wd:Q198984 wd:Q1284275 wd:Q651786 wd:Q460152 wd:Q230507 wd:Q3263690 wd:Q270855 wd:Q5362637 wd:Q23620545 wd:Q27728558 wd:Q17892 wd:Q36322 wd:Q57286 wd:Q18576000 wd:Q45410399 wd:Q7207} .\n?enwp schema:about ?person ; schema:isPartOf <https://en.wikipedia.org/>\nOPTIONAL{ ?person wdt:P18 ?image }\nOPTIONAL{ ?person p:P569/psv:P569 ?birthdateStatementNode .\n?birthdateStatementNode wikibase:timeValue ?birthdate .\n?birthdateStatementNode wikibase:timePrecision ?birthdatePrecision .}\nOPTIONAL{ ?person p:P570/psv:P570 ?deaddateStatementNode .\n?deaddateStatementNode wikibase:timeValue ?deaddate .\n?deaddateStatementNode wikibase:timePrecision ?deaddatePrecision .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?personLabel ?person ?enwp ?birthdate ?birthdatePrecision ?deaddate ?deaddatePrecision",
        "complexity_description": "Multiple optional patterns, grouping and aggregation",
        "complexity": "complex"
    },
    {
        "id": "380",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?dob\nWHERE\n{\n?person wdt:P31 wd:Q5;\nwdt:P569 ?dob.\nFILTER(\"2015-01-01\"^^xsd:dateTime <= ?dob && ?dob < \"2016-01-01\"^^xsd:dateTime)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Two triple patterns, one filter and a service call",
        "complexity": "medium"
    },
    {
        "id": "381",
        "valid_gpt_response": true,
        "query": "SELECT ?node ?predicate WHERE {\n?node ?predicate \"Wikidata\"\n}",
        "complexity_description": "Single triple pattern with a constant object",
        "complexity": "simple"
    },
    {
        "id": "382",
        "valid_gpt_response": true,
        "query": "SELECT ?node ?predicate WHERE {\n?node ?predicate \"Wikidata\"@en # @en is different from @en-gb and @en-ca\n}",
        "complexity_description": "Single triple pattern with a language filter",
        "complexity": "simple"
    },
    {
        "id": "383",
        "valid_gpt_response": true,
        "query": "SELECT ?value ?startDate ?endDate # ?r\nWHERE\n{\nwd:Q656 p:P1448 ?s.\n?s ps:P1448 ?value.\n?s pq:P580 ?startDate.\n?s pq:P582 ?endDate.\nFILTER(LANG(?value) = \"ru\")\n}",
        "complexity_description": "Multiple triple patterns with filter",
        "complexity": "medium"
    },
    {
        "id": "384",
        "valid_gpt_response": true,
        "query": "SELECT ?human ?label\nWHERE\n{\n?human wdt:P31 wd:Q15632617;\nrdfs:label ?label.\nFILTER(LANG(?label) = \"en\")\nFILTER(STRSTARTS(?label, \"Mr. \"))\n}",
        "complexity_description": "Two filters and two triple patterns",
        "complexity": "medium"
    },
    {
        "id": "385",
        "valid_gpt_response": true,
        "query": "SELECT ?property ?RDFNode (IF(isLiteral(?RDFNode), CONCAT(\"literal, datatype IRI:\", STR(DATATYPE(?RDFNode))), IF(isIRI(?RDFNode), \"IRI\", IF(isBlank(?RDFNode), \"blank node\", \"impossible?!!\"))) as ?kindOfRDFNode)\nWHERE\n{\n# prefixed subjects or their IRIs\n# <https://en.wikipedia.org/wiki/Mona%20Lisa>\n# <https://es.wikipedia.org/wiki/La%20Gioconda>\n# <https://www.wikidata.org/wiki/Wikidata:Introduction>\n# <https://ko.wikinews.org/wiki/%EC%9C%84%ED%82%A4%EB%89%B4%EC%8A%A4:%EC%86%8C%EA%B0%9C>\n# wd:Q12418 or <http://www.wikidata.org/entity/Q12418>\n# wd:P571 or <http://www.wikidata.org/entity/P571>\n# wds:Q12418-8EDF7B01-3F71-4DA7-8B52-8C26242F0293 or <http://www.wikidata.org/entity/statement/Q12418-8EDF7B01-3F71-4DA7-8B52-8C26242F0293>\n# wdref:8f08ac3e0839bdbc4c6eb8d671e772deb12ba423 or <http://www.wikidata.org/reference/8f08ac3e0839bdbc4c6eb8d671e772deb12ba423>\n# wdv:817fac0649608d9ebd295b60135818d4 QuantityValue <http://www.wikidata.org/value/817fac0649608d9ebd295b60135818d4>\n# wdv:804d3164e16f5c568523ef7b563ee1af QuantityValue, Normalized\n# wdv:800000d7a293881690f27762757ec940 wikibase:TimeValue\n# wdv:800fbeee96e1b9bd5d91c1f66b25365d wikibase:GlobecoordinateValue\nwdv:788f87d431fffec0fc34235813459708 ?property ?RDFNode.\n}",
        "complexity_description": "Uses IF conditional statements, CONCAT function and multiple RDF node types",
        "complexity": "medium"
    },
    {
        "id": "386",
        "valid_gpt_response": true,
        "query": "SELECT ?child ?childLabel ?p1 ?p2\nWHERE\n{\nBIND(<http://www.wikidata.org/entity/P22>/wikibase:directClaim as ?p1)\nBIND(<http://www.wikidata.org/entity/P25>/wikibase:directClaim as ?p2)\n?child ?p1 <http://www.wikidata.org/entity/Q1339>.\n?child ?p2 <http://www.wikidata.org/entity/Q57487>.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple triple patterns with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "387",
        "valid_gpt_response": true,
        "query": "SELECT ?pop WHERE {\nwd:Q2807 wdt:P1082 ?pop\n}",
        "complexity_description": "Single triple pattern",
        "complexity": "simple"
    },
    {
        "id": "388",
        "valid_gpt_response": true,
        "query": "SELECT ?pop WHERE {\nwd:Q2807 p:P1082 ?popNode . # will return every node\n?popNode rdf:type wikibase:BestRank . # will restrict it to \"best\" nodes, similar to wdt:\n?popNode ps:P1082 ?pop # extract value of node\n}",
        "complexity_description": "Simple query with 3 triple patterns",
        "complexity": "simple"
    },
    {
        "id": "389",
        "valid_gpt_response": true,
        "query": "SELECT ?grandChild ?grandChildLabel\nWHERE\n{\n[ wdt:P40 ?grandChild ] ^wdt:P40 wd:Q1339. # Someone who has a child ?grandChild was specified in P40 property of Bach Q1339\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Simple query with one triple pattern and one service call",
        "complexity": "simple"
    },
    {
        "id": "390",
        "valid_gpt_response": true,
        "query": "SELECT ?child ?childLabel\nWHERE\n{\n?child wdt:P22 wd:Q1339. # Child has father Johann Sebastian Bach.\n?child wdt:P25 wd:Q57487. # Child has mother Maria Barbara Bach.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Two triple patterns with a service call",
        "complexity": "medium"
    },
    {
        "id": "391",
        "valid_gpt_response": true,
        "query": "SELECT ?child ?childLabel\nWHERE\n{\n?child wdt:P22 wd:Q1339; # Child has father Johann Sebastian Bach and\nwdt:P25 wd:Q57487. # has mother Maria Barbara Bach.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Simple query with 2 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "392",
        "valid_gpt_response": true,
        "query": "SELECT ?child ?childLabel\nWHERE\n{\n?child wdt:P22 wd:Q1339;\nwdt:P25 wd:Q57487;\nwdt:P106 wd:Q36834; # has occupation composer and\nwdt:P106 wd:Q486748. # has occupation pianist.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple triple patterns with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "393",
        "valid_gpt_response": true,
        "query": "SELECT ?child ?childLabel\nWHERE\n{\n?child wdt:P22 wd:Q1339;\nwdt:P25 wd:Q57487;\nwdt:P106 wd:Q36834, # has occupation composer and\nwd:Q486748. # pianist.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple triple patterns with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "394",
        "valid_gpt_response": true,
        "query": "SELECT ?grandChild ?grandChildLabel\nWHERE\n{\nwd:Q1339 wdt:P40 ?child. # Bach has a child ?child.\n?child wdt:P40 ?grandChild. # ?child has a child ?grandChild.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "395",
        "valid_gpt_response": true,
        "query": "SELECT ?grandChild ?grandChildLabel\nWHERE\n{\nwd:Q1339 wdt:P40 [ wdt:P40 ?grandChild ]. # Bach has as child someone who has a child ?grandChild.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Single triple pattern with service call",
        "complexity": "simple"
    },
    {
        "id": "396",
        "valid_gpt_response": true,
        "query": "SELECT ?class ?property ?classLabel ?propertyLabel WHERE {\nwd:Q875538 wdt:P279* ?class .\n?class wdt:P1963 ?property .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "397",
        "valid_gpt_response": true,
        "query": "SELECT ?painting ?paintingLabel ?material ?materialLabel\nWHERE\n{\n?painting wdt:P31/wdt:P279* wd:Q3305213;\np:P186 [ ps:P186 ?material; pq:P518 wd:Q861259 ].\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple triple patterns, property paths and service call",
        "complexity": "medium"
    },
    {
        "id": "398",
        "valid_gpt_response": true,
        "query": "SELECT ?book ?title ?illustratorLabel ?publisherLabel ?published\nWHERE\n{\n?book wdt:P50 wd:Q35610;\nwdt:P1476 ?title;\nwdt:P110 ?illustrator;\nwdt:P123 ?publisher;\nwdt:P577 ?published.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple triple patterns with service call",
        "complexity": "medium"
    },
    {
        "id": "399",
        "valid_gpt_response": true,
        "query": "SELECT ?book ?title ?illustratorLabel ?publisherLabel ?published\nWHERE\n{\n?book wdt:P50 wd:Q35610. # required wdt:P50\nOPTIONAL { # match all or none from group:\n?book wdt:P1476 ?title; # required wdt:P1476\nwdt:P110 ?illustrator; # required wdt:P110\nwdt:P123 ?publisher; # required wdt:P123\nwdt:P577 ?published. # required wdt:P577\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Optional clause with multiple triple patterns and a service call",
        "complexity": "medium"
    },
    {
        "id": "400",
        "valid_gpt_response": true,
        "query": "SELECT ?book ?title ?illustratorLabel ?publisherLabel ?published\nWHERE\n{\n?book wdt:P50 wd:Q35610. # required wdt:P50\nOPTIONAL { ?book wdt:P1476 ?title } # optional wdt:P1476\nOPTIONAL { ?book wdt:P110 ?illustrator } # optional wdt:P110\nOPTIONAL { ?book wdt:P123 ?publisher } # optional wdt:P123\nOPTIONAL { ?book wdt:P577 ?published } # optional wdt:P577\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nLIMIT 42",
        "complexity_description": "Multiple OPTIONAL patterns, SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "401",
        "valid_gpt_response": true,
        "query": "SELECT ?film ?filmLabel ?kinopolis ?cineplex WHERE {\nOPTIONAL { ?film wdt:P2970 ?kinopolis } # should be after VALUES\nVALUES ?film {wd:Q188159 wd:Q316555 wd:Q338305 wd:Q426346 wd:Q586589 wd:Q912877 wd:Q1451714 wd:Q5887360 wd:Q10527185 wd:Q15621765 wd:Q15982441 wd:Q16251439 wd:Q16671761 wd:Q16729557 wd:Q16954098 wd:Q18067135 wd:Q18145311 wd:Q18356955 wd:Q18758160 wd:Q19320969 wd:Q19571557 wd:Q19787641 wd:Q19827977 wd:Q20001218 wd:Q20814649 wd:Q20899589 wd:Q20992425 wd:Q21404528 wd:Q21646479 wd:Q21647348 wd:Q21819857 wd:Q21931690 wd:Q21935502 wd:Q22671081 wd:Q23794225 wd:Q24082706 wd:Q24761792 wd:Q26262106 wd:Q26262105 wd:Q26262109 wd:Q59687}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Simple query with VALUES and OPTIONAL clause",
        "complexity": "simple"
    },
    {
        "id": "402",
        "valid_gpt_response": true,
        "query": "SELECT\n?president ?presidentLabel\n?termStart ?termEnd\n?spouse\n?relationshipStart ?relationshipEnd\nWHERE {\n?president wdt:P31 wd:Q5 .\n?president p:P39 ?position_held_statement .\n?position_held_statement ps:P39 wd:Q11696 .\n?position_held_statement pq:P580 ?termStart .\n# current presiden will always miss it\nOPTIONAL {\n?position_held_statement pq:P582 ?termEnd\n}\n# spouse is optional\nOPTIONAL {\n?president p:P26 ?spouseStatement .\n?spouseStatement ps:P26 ?spouse .\n?spouseStatement pq:P580 ?relationshipStart .\n# current spouse will always miss it\nOPTIONAL {\n?spouseStatement pq:P582 ?relationshipEnd\n}\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?termStart ?relationshipStart",
        "complexity_description": "Multiple optional patterns, multiple services and filters",
        "complexity": "complex"
    },
    {
        "id": "403",
        "valid_gpt_response": true,
        "query": "SELECT\n?president\n?relationshipEnd\nWHERE {\n?president wdt:P31 wd:Q5 . # required wdt:P31\n?president p:P39 ?position_held_statement . # required p:P39\n?position_held_statement ps:P39 wd:Q11696 . # required ps:P39\n?president p:P26/pq:P582 ?relationshipEnd # required p:P26 and pq:P582\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "404",
        "valid_gpt_response": true,
        "query": "SELECT ?work ?workLabel\nWHERE\n{\n?work wdt:P31 wd:Q838948. # instance of work of art\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "405",
        "valid_gpt_response": true,
        "query": "SELECT ?work ?workLabel\nWHERE\n{\n?work wdt:P31/wdt:P279* wd:Q838948. # one P31 and any number of P279 between the item and the class\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n} LIMIT 42",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "406",
        "valid_gpt_response": true,
        "query": "SELECT ?game ?date ?statementNodeType ?check0 ?check1 ?check2 ?check3\nWHERE\n{\nVALUES ?game {\nwd:Q4931588 # no value\nwd:Q1107793 # one value\nwd:Q18857304 # unknown value\nwd:Q2385 # multiple values\nwd:Q23647080 # no property\n}\nOPTIONAL\n{\n?game p:P577 ?statementNode\nOPTIONAL { ?statementNode ps:P577 ?date }\nOPTIONAL { ?statementNode rdf:type ?statementNodeType FILTER (?statementNodeType IN (wdno:P577)) }\n}\nBIND(IF(BOUND(?statementNode),true,false) as ?check0) # property is here?\nBIND(COALESCE(DATATYPE(?date) = xsd:dateTime , false) as ?check1) # real date?\nBIND(COALESCE((wdno:P577 = ?statementNodeType), false) as ?check2) # no value?\nBIND(COALESCE(isBlank(?date) , false) as ?check3) # unknown?\n}",
        "complexity_description": "Multiple optional patterns, data type checks and bound checks",
        "complexity": "complex"
    },
    {
        "id": "407",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?prefix ?valueorstatementnode ?typeOfStatementNode ?customText\nWHERE\n{\n#for selected items\nVALUES ?item {\nwd:Q86085\nwd:Q4233718\n}\n?item ?prefix ?valueorstatementnode.\nBIND(xsd:integer(IF(fn:starts-with(STR(?prefix), \"http://www.wikidata.org/prop/P\"), fn:replace(STR(?prefix), \"http://www.wikidata.org/prop/P\", \"\"), \"???\")) as ?pid)\nBIND(IRI(CONCAT(\"http://www.wikidata.org/prop/novalue/P\", STR(?pid))) as ?possibleWDNO)\nOPTIONAL\n{\n?valueorstatementnode rdf:type ?typeOfStatementNode. # information about \"no value\" stored as type\n}\nBIND(IF(isBlank(?valueorstatementnode), \"unknown value\", IF(?typeOfStatementNode = ?possibleWDNO, \"no value\", ?value)) as ?customText)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nORDER BY DESC(?customText)",
        "complexity_description": "Multiple binds, optional clause, and service call",
        "complexity": "complex"
    },
    {
        "id": "408",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?country ?countryLabel ?population ?ended\nWHERE\n{\n?country wdt:P31/wdt:P279* wd:Q3624078; #countries\nwdt:P1082 ?population; #with their population\nMINUS\n{\n?country wdt:P576 ?ended.\n} # exclude \"former\" countries\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC(?population) # most populous countries - descending population\nLIMIT 10",
        "complexity_description": "Multiple triple patterns, MINUS clause, and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "409",
        "valid_gpt_response": true,
        "query": "SELECT ?book ?bookLabel\nWHERE\n{\n?book wdt:P50 wd:Q35610.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "410",
        "valid_gpt_response": true,
        "query": "SELECT ?element ?elementLabel ?symbol ?number\nWHERE\n{\n?element wdt:P31 wd:Q11344;\nwdt:P246 ?symbol;\nwdt:P1086 ?number.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?number",
        "complexity_description": "Simple query with 3 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "411",
        "valid_gpt_response": true,
        "query": "SELECT ?e ?value WHERE {\nVALUES (?e ?value ?date) {\n(\"James\" \"Belgium\" \"70\")\n(\"Mary\" \"worldwide\" \"71\")\n(\"Mary\" \"worldwide\" \"72\")\n(\"Mary\" \"worldwide\" \"73\")\n(\"Mary\" \"France\" \"76\")\n}\n}",
        "complexity_description": "Simple query with VALUES clause",
        "complexity": "simple"
    },
    {
        "id": "412",
        "valid_gpt_response": true,
        "query": "SELECT ?material ?materialLabel (COUNT(?painting) AS ?count)\nWHERE\n{\n?painting wdt:P31/wdt:P279* wd:Q3305213;\np:P186 [ ps:P186 ?material; pq:P518 wd:Q861259 ].\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?material ?materialLabel # to prevent \"bad aggregate\"\nORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, service call, and aggregation",
        "complexity": "complex"
    },
    {
        "id": "413",
        "valid_gpt_response": true,
        "query": "SELECT ?manufacturer ?manufacturerLabel (SUM(?produced) AS ?produced)\nWHERE\n{\n?model wdt:P31?/wdt:P279* wd:Q12796;\nwdt:P176 ?manufacturer;\nwdt:P1092 ?produced.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?manufacturer ?manufacturerLabel\nORDER BY DESC(?produced)",
        "complexity_description": "Multiple triple patterns, aggregation and grouping",
        "complexity": "medium"
    },
    {
        "id": "414",
        "valid_gpt_response": true,
        "query": "SELECT ?publisher ?publisherLabel (AVG(?pages) AS ?avgPages)\nWHERE\n{\n?book wdt:P123 ?publisher;\nwdt:P1104 ?pages.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?publisher ?publisherLabel\nORDER BY DESC(?avgPages)",
        "complexity_description": "Multiple triple patterns, aggregation function, and grouping",
        "complexity": "medium"
    },
    {
        "id": "415",
        "valid_gpt_response": true,
        "query": "SELECT ?user ?userLabel ?Wikimedia_user_name ?userVoice WHERE\n{\n?user wdt:P4174 ?Wikimedia_user_name.\nOPTIONAL { ?user wdt:P990 ?userVoice. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "416",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel (COUNT(*) AS ?count)\nWHERE { ?item p:P990 []\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?item ?itemLabel HAVING(?count > 1) ORDER BY DESC(?count)",
        "complexity_description": "Multiple clauses, aggregation and filtering",
        "complexity": "medium"
    },
    {
        "id": "417",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel WHERE {\n?item wdt:P31 wd:Q5 .\n?item wdt:P734 wd:Q16479693 . # Family name Badger\n?item wdt:P735 ?name .\n?name rdfs:label ?nameLabel .\nFILTER (LANG(?nameLabel) = \"en\")\nFILTER (STRSTARTS(?nameLabel, \"E\")) # First initial\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple filters and service call",
        "complexity": "medium"
    },
    {
        "id": "418",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel\n{\n?item wdt:P2093 \"Bill Thompson\" .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "419",
        "valid_gpt_response": true,
        "query": "select ?lang ?label {\nwd:Q171497 rdfs:label ?label .\nbind (lang(?label) as ?lang) .\n} order by ?lang",
        "complexity_description": "Simple query with single triple pattern and bind function",
        "complexity": "simple"
    },
    {
        "id": "420",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel\n{\n?item wdt:P856 ?url.\nfilter(contains(str(?url),\"twitter.com\")) .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Filter and service clause",
        "complexity": "medium"
    },
    {
        "id": "421",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person ?personLabel ?twitterName\nWHERE {\n?person wdt:P2002 ?twitterName ;\nwdt:P106 ?occupation .\n?occupation wdt:P279* wd:Q864503 . # all subclasses of biologists\nFILTER NOT EXISTS { ?person wdt:P496 ?orcid }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple triple patterns, subclass traversal and filter",
        "complexity": "medium"
    },
    {
        "id": "422",
        "valid_gpt_response": true,
        "query": "SELECT ?frs ?frsLabel\nWHERE\n{\n?frs wdt:P31 wd:Q5.\n?frs p:P166 ?award.\n?award ps:P166 wd:Q15631401.\n?award pq:P585 ?year.\nFILTER (?year = \"2019-01-01T00:00:00Z\"^^xsd:dateTime) .\nMINUS { ?frs wdt:P496 [] . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Multiple joins, filter and minus clause",
        "complexity": "complex"
    },
    {
        "id": "423",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?orcid ?personLabel ?sitelink\n{\n?person wdt:P496 ?orcid.\n?sitelink schema:about ?person.\n?sitelink schema:isPartOf <https://he.wikipedia.org/>.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple joins, service call",
        "complexity": "medium"
    },
    {
        "id": "424",
        "valid_gpt_response": true,
        "query": "SELECT ?sitelink ?itemLabel ?orcid\n{\n?item wdt:P31 wd:Q5.\n?item wdt:P496 ?orcid.\n?sitelink schema:isPartOf <https://de.wikipedia.org/>;\nschema:about ?item;\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" } .\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple triple patterns, SERVICE clause and ORDER BY",
        "complexity": "medium"
    },
    {
        "id": "425",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?ORCID ?award ?awardLabel ?ddate WHERE\n{\n?person wdt:P166 ?award.\n?person wdt:P31 wd:Q5.\n?award wdt:P279* ?type.\n?type wdt:P31 wd:Q7191.\nOPTIONAL { ?person wdt:P496 ?ORCID. }\nOPTIONAL { ?person wdt:P570 ?ddate.\nFILTER(?ddate > \"2012-01-01T00:00:00Z\"^^xsd:dateTime) }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple joins, optional patterns and filter",
        "complexity": "medium"
    },
    {
        "id": "426",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?work ?workLabel ?typeLabel\nWHERE {\n?person wdt:P496 ?orcid . # person has an ORCID\nValues ?orcid { \"0000-0001-5882-6823\" }. # ...and the ORCID is...\n?work wdt:P50 ?person . # a work has this person as author\n?work wdt:P31 ?type . # what type is the work?\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Simple query with 4 triple patterns and a SERVICE clause",
        "complexity": "simple"
    },
    {
        "id": "427",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?ebird ?ababird WHERE {\n?item wdt:P3444 ?ebird.\n?item wdt:P4526 ?ababird .\nBIND(IF(?ebird != ?ababird, 'different', 'same') AS ?match) .\nFILTER(?match!='same').\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n}\n}",
        "complexity_description": "Multiple triple patterns, BIND and FILTER functions",
        "complexity": "medium"
    },
    {
        "id": "428",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?author ?authorLabel WHERE {\n?taxon p:P225/pq:P405 ?author.\n?author wdt:P31 wd:Q5.\nMINUS { ?author wdt:P570 ?dateOfDeath. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple triple patterns, MINUS clause and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "429",
        "valid_gpt_response": true,
        "query": "SELECT ?museum ?museumLabel WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?museum wdt:P31/wdt:P279* wd:Q33506.\n?museum wdt:P17 wd:Q252.\n}",
        "complexity_description": "Two triple patterns with a service call",
        "complexity": "medium"
    },
    {
        "id": "430",
        "valid_gpt_response": true,
        "query": "SELECT ?lexeme ?word WHERE {\n?lexeme a ontolex:LexicalEntry ; dct:language ?language ; ontolex:lexicalForm ?form .\n?form ontolex:representation ?word .\n?language wdt:P218 'en' .\nfilter(strlen(?word)=5)\nfilter(strstarts(ucase(?word),\"F\"))\n} order by ?word",
        "complexity_description": "Multiple filters, multiple joins",
        "complexity": "medium"
    },
    {
        "id": "431",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?value ?valueLabel\nWHERE\n{\nVALUES ?item {wd:Q116738730}\n?item p:P921/ps:P921 ?value.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Single triple pattern with VALUES clause and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "432",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel\nWHERE {\nhint:Query hint:optimizer \"None\".\nSERVICE wikibase:mwapi {\nbd:serviceParam wikibase:api \"Search\";\nwikibase:endpoint \"www.wikidata.org\";\nmwapi:srsearch \"OpenStreetMap haswbstatement:P31=Q13442814\".\n?title wikibase:apiOutput mwapi:title.\n}\nBIND(IRI(CONCAT(STR(wd:), ?title)) AS ?item)\nFILTER NOT EXISTS { ?item wdt:P921 wd:Q936. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple services, filters and bindings",
        "complexity": "complex"
    },
    {
        "id": "433",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?title\nWHERE\n{\n?item wdt:P31 wd:Q13442814 . # Scientific article\n?item wdt:P1476 ?title .\nFILTER (?title = UCASE(?title) && # Title doesn't change if converted to uppercase\n?title != LCASE(?title)) # Title does change if converted to lowercase (to sort out scripts which don't distinguish like e.g. Chinese)\n?item wdt:P577 ?publication_date. hint:Prior hint:rangeSafe true.\nFILTER (?publication_date >= \"2019-00-00\"^^xsd:dateTime && # Published in 2019\n?publication_date < \"2020-00-00\"^^xsd:dateTime)\n}",
        "complexity_description": "Multiple filters, multiple triple patterns",
        "complexity": "medium"
    },
    {
        "id": "434",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel\n{\n?item wdt:P31/wdt:P279* wd:Q35127 .\nMINUS { ?item wdt:P856 [] . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Medium complexity due to property path and minus clause",
        "complexity": "medium"
    },
    {
        "id": "435",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel where\n{\n?item p:P496 ?statement.\n?statement wikibase:rank wikibase:DeprecatedRank.\nfilter not exists {?statement pq:P2241 [].}\nSERVICE wikibase:label { bd:serviceParam wikibase:language 'en' }\n}",
        "complexity_description": "Multiple triple patterns, filter and service",
        "complexity": "medium"
    },
    {
        "id": "436",
        "valid_gpt_response": true,
        "query": "SELECT ?property ?propertyLabel ?propertyDescription ?datatype ?missingLbl ?missingDesc WHERE {\n?property wikibase:propertyType ?datatype .\nOPTIONAL { ?property rdfs:label ?missingLbl . FILTER(LANG(?missingLbl) = 'es') }\nOPTIONAL { ?property schema:description ?missingDesc . FILTER(LANG(?missingDesc) = 'es') }\nFILTER(!BOUND(?missingLbl)|| !BOUND(?missingDesc)) .\nSERVICE wikibase:label { bd:serviceParam wikibase:language 'en' }\n}",
        "complexity_description": "Multiple optional patterns, language filters and service query",
        "complexity": "medium"
    },
    {
        "id": "437",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?artist ?artistLabel\nWHERE\n{\n?item wdt:P31/wdt:P279* wd:Q3305213. #must have instance of painting or subclass thereof\n?item wdt:P136 wd:Q192110. #must have genre is self-portrait\nfilter not exists {?item wdt:P180 [] . } #depicts is absent\n?item wdt:P170 ?artist . #must have artist\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple filters and joins with a SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "438",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?itemDescription\nWHERE {\n?item wdt:P31/wdt:P279* wd:Q18616576 .\nMINUS { ?item wdt:P31/wdt:P279* wd:Q19847637 .}\nFILTER(NOT EXISTS {\n?item rdfs:label ?lang_label.\nFILTER(LANG(?lang_label) = \"af\")\n})\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,nl,fr,de,it,es,no,pt\". }\n}\nORDER BY ?itemLabel",
        "complexity_description": "Multiple filters and minus clause with service call",
        "complexity": "complex"
    },
    {
        "id": "439",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?item ?itemLabel with\n{\nselect distinct ?item where\n{ ?item wdt:P39/wdt:P279* wd:Q16707842 . }\n} as %i\nwhere\n{include %i\nfilter not exists {?article schema:about ?item ;\nschema:isPartOf <https://en.wikipedia.org/> .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple subqueries, filters and service calls",
        "complexity": "complex"
    },
    {
        "id": "440",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?item ?itemLabel ?npg ?date_of_birth with\n{\nselect distinct ?item where {\n{ ?item wdt:P39/wdt:P279* wd:Q16707842 . } union\n{ ?item wdt:P39/wdt:P279* wd:Q18018860 . } union\n{ ?item wdt:P39/wdt:P279* wd:Q18015642 . } union\n{ ?item wdt:P1614 ?hop } }\n} as %i\nwhere\n{include %i\nfilter not exists {?item wdt:P18 [] .}\n?item wdt:P1816 ?npg.\nOPTIONAL { ?item wdt:P569 ?date_of_birth. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple UNIONs, nested queries, and OPTIONAL clause",
        "complexity": "complex"
    },
    {
        "id": "441",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel WHERE {\n  ?item wdt:P108 ?employer.\n  FILTER(NOT EXISTS {\n    ?item ?wdt _:b2.\n    ?wdt (^wikibase:directClaim/wdt:P31/(wdt:P279*)) wd:Q18614948.\n    SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n  })\n  VALUES ?employer {\n    wd:Q1138080\n  }\n}",
        "complexity_description": "Multiple filters, EXISTS and NOT EXISTS clauses, and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "442",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?paper) AS ?countPapers) ?item ?nameString {\n?item wdt:P108 wd:Q1138080; #employer\nrdfs:label ?name .\nBIND(STR(?name) AS ?nameString)\nFILTER(LANG(?name)=\"en\")\nFILTER NOT EXISTS {\n?anotherPerson wdt:P31 wd:Q5;\nrdfs:label ?name .\nFILTER(?anotherPerson != ?item)\n}\n?paper wdt:P2093 ?nameString .\n}\nGROUP BY ?item ?nameString\nORDER BY DESC(?countPapers)",
        "complexity_description": "Multiple filters, subqueries and grouping",
        "complexity": "complex"
    },
    {
        "id": "443",
        "valid_gpt_response": true,
        "query": "SELECT ?Masonic_Lodge ?Masonic_LodgeLabel (sample(?Masonic_LodgeTitle) as ?wpTitle) WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?Masonic_Lodge wdt:P31 wd:Q1454597.\nOPTIONAL {\n?article schema:about ?Masonic_Lodge ;\nschema:name ?Masonic_LodgeTitle\n}\n} group by ?Masonic_Lodge ?Masonic_LodgeLabel",
        "complexity_description": "Multiple patterns, optional clause, and grouping",
        "complexity": "medium"
    },
    {
        "id": "444",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?date_of_birth ?GMC WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?person wdt:P27 wd:Q145;\nwdt:P106 wd:Q39631.\nOPTIONAL { ?person wdt:P569 ?date_of_birth. }\nOPTIONAL { ?person wdt:P8273 ?GMC. }\n}\nLIMIT 100",
        "complexity_description": "Multiple optional patterns, service call and filters",
        "complexity": "medium"
    },
    {
        "id": "445",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person ?personLabel ?personDescription ?language ?death (URI(CONCAT(\"https://www.gutenberg.org/ebooks/author/\", ?gutenberg)) AS ?gberglink) WHERE {\n?person wdt:P1938 ?gutenberg;\nwdt:P570 ?death. # Dead people only\nFILTER (?death <= \"1946-01-01T00:00:00Z\"^^xsd:dateTime)\nMINUS {\n?enws schema:about ?person;\nschema:isPartOf <https://en.wikisource.org/>\n}\nOPTIONAL {?person wdt:P1412 ?lang}.\nFILTER (!BOUND(?lang) || ?lang = wd:Q1860) # Language: English or absent\nBIND(IF(BOUND(?lang),\"English\",\"Not specified\") AS ?language\n)\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\"\n}\n}\nORDER BY ?death",
        "complexity_description": "Multiple filters, optional clause, minus pattern and service call",
        "complexity": "complex"
    },
    {
        "id": "446",
        "valid_gpt_response": true,
        "query": "SELECT ?spouse ?spouseLabel WHERE {\nwd:Q1744 wdt:P26 ?spouse.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "447",
        "valid_gpt_response": true,
        "query": "SELECT ?pres ?presLabel ?spouse ?spouseLabel WHERE {\n?pres wdt:P31 wd:Q5 .\n?pres wdt:P39 wd:Q11696 .\n?pres wdt:P26 ?spouse .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}",
        "complexity_description": "Simple query with 3 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "448",
        "valid_gpt_response": true,
        "query": "SELECT ?pres ?presLabel ?spouse ?spouseLabel WHERE {\n?pres wdt:P31 wd:Q5 .\n?pres p:P39 ?position_held_statement .\n?position_held_statement ps:P39 wd:Q11696 .\n?position_held_statement pq:P580 ?start .\n?pres wdt:P26 ?spouse .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n} ORDER BY ?start",
        "complexity_description": "Multiple triple patterns, property paths and service call",
        "complexity": "medium"
    },
    {
        "id": "449",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel WHERE {\nSERVICE wikibase:mwapi {\nbd:serviceParam wikibase:endpoint \"www.wikidata.org\";\nwikibase:api \"EntitySearch\";\nmwapi:search \"front matter\"; # Search for things named \"front matter\"\nmwapi:language \"en\".\n?item wikibase:apiOutputItem mwapi:item.\n}\nMINUS {\n?item wdt:P31 wd:Q13442814 . # but MINUS any of those things that are instances of scholarly article\n}\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"en\".}\n}",
        "complexity_description": "Multiple services, minus clause and filters",
        "complexity": "medium"
    },
    {
        "id": "450",
        "valid_gpt_response": true,
        "query": "SELECT ?class ?classname ?property ?propertyname WHERE {\n?tree0 (wdt:P279)* ?class .\nBIND (wd:Q875538 AS ?tree0)\n?class wdt:P1963 ?property .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n?class rdfs:label ?classname .\n?property rdfs:label ?propertyname .\n}\n}",
        "complexity_description": "Multiple triple patterns, service call and property paths",
        "complexity": "medium"
    },
    {
        "id": "451",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT (DISTINCT ?item) AS ?count)\nWHERE\n{\n?item wdt:P402 ?value\n# change P402 to another property\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Single triple pattern with service call",
        "complexity": "medium"
    },
    {
        "id": "452",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT (DISTINCT ?spouse) AS ?count) WHERE {\n?spouse wdt:P26 wd:Q1744 .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}",
        "complexity_description": "Single pattern with aggregation and service call",
        "complexity": "medium"
    },
    {
        "id": "453",
        "valid_gpt_response": true,
        "query": "SELECT ?property ?count\nWHERE {\nSELECT ?property (COUNT(?item) AS ?count)\nWHERE {\n?item ?statement wd:Q3324507 . # items pointing to Q3324507 through a statement\n?property wikibase:statementProperty ?statement . # property used for that statement\n} GROUP BY ?property # count usage for each property pointing to that entity\n} ORDER BY DESC(?count) # show in descending order of uses",
        "complexity_description": "Nested query with grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "454",
        "valid_gpt_response": true,
        "query": "SELECT ?prop ?propLabel ?count WHERE {\n{\nSELECT ?prop (COUNT(DISTINCT ?item) AS ?count) WHERE {\nhint:Query hint:optimizer \"None\" .\n?item wdt:P1367 ?yp_id .\n?item ?p ?id .\n?prop wikibase:directClaim ?p .\n{?prop wdt:P31 wd:Q19847637} # Wikidata property representing a unique identifier\nUNION\n{?prop wdt:P31 wd:Q19595382} # Wikidata property for authority control for people\n} GROUP BY ?prop\n}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n} ORDER BY DESC (?count)",
        "complexity_description": "Multiple subqueries, UNION operator, and SERVICE keyword usage",
        "complexity": "complex"
    },
    {
        "id": "455",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?property ?value WHERE {\n?item ?property ?value.\n?value pq:P2241 wd:Q1193907.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} LIMIT 200",
        "complexity_description": "Two triple patterns, one service call and a limit clause",
        "complexity": "medium"
    },
    {
        "id": "456",
        "valid_gpt_response": true,
        "query": "SELECT ?property ?propertyLabel (COUNT(DISTINCT ?statement) AS ?count) WHERE {\nhint:Query hint:optimizer \"None\" .\n?statement pq:P642 ?qualifier_value .\n?statement ?ps ?value .\n?property wikibase:statementProperty ?ps .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n} GROUP BY ?property ?propertyLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple joins, subqueries and grouping",
        "complexity": "complex"
    },
    {
        "id": "457",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(DISTINCT ?statement) AS ?count) ?property ?propertyLabel ?valueLabel WHERE {\nhint:Query hint:optimizer \"None\" .\n?statement pq:P642 [] .\n?statement ?ps ?value .\n?property wikibase:statementProperty ?ps .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?property ?propertyLabel ?value ?valueLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple joins, subqueries and grouping",
        "complexity": "complex"
    },
    {
        "id": "458",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel\nWHERE\n{\n?item p:P1433 ?statement . # Items with P1433\n?statement ps:P1433 wd:Q19020593 . # ... with statement: published in Q19020593\nFILTER NOT EXISTS { # ... filtering out\n?statement pq:P304 [] . # ... statements that have a P304 qualifier\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, filter not exists and service call",
        "complexity": "medium"
    },
    {
        "id": "459",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription WHERE {\n?item p:P166 ?award_statement .\n?award_statement ps:P166 wd:Q10855212 . # Commander of the Legion of Honour\nFILTER NOT EXISTS {\n?award_statement ?pq_pred ?pq_obj . # a triple involving the award statement ...\n?prop wikibase:qualifier ?pq_pred . # ... with a predicate ?pq_pred that is a qualifier\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, filter not exists and service call",
        "complexity": "medium"
    },
    {
        "id": "460",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel WHERE {\n?item p:P166 ?award_statement .\n?award_statement ps:P166 wd:Q10855212 . # Commander of the Legion of Honour\nFILTER NOT EXISTS {\n?award_statement prov:wasDerivedFrom ?ref\n}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\"\n}\n}",
        "complexity_description": "Multiple triple patterns, filter and service",
        "complexity": "medium"
    },
    {
        "id": "461",
        "valid_gpt_response": true,
        "query": "SELECT ?prop ?propLabel ?count WHERE {\n{\nSELECT ?prop (COUNT(?ref) AS ?count) WHERE {\n?prop wikibase:reference ?pr_pred . # the reference-specific form of a property\n?ref ?pr_pred ?pr_obj . # to be found in any triple (any such triples will apply to references)\n} GROUP BY ?pr_pred ?prop\n}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\"\n}\n} ORDER BY DESC (?count)",
        "complexity_description": "Multiple subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "462",
        "valid_gpt_response": true,
        "query": "SELECT ?a ?aLabel ?taxo_1 ?taxo_2 ?bLabel WHERE {\n?a wdt:P171* wd:Q14560 . # Cactaceae\n?a wdt:P171 ?b . # parent taxon\n{\nSELECT DISTINCT ?a WHERE {\n{ ?a p:P225/prov:wasDerivedFrom/pr:P248 wd:Q13520496 }\nUNION\n{ ?a p:P225/prov:wasDerivedFrom/pr:P248 wd:Q10695694 }\n}\n}\nOPTIONAL {\n?a p:P225 ?taxo_stmt .\n?taxo_stmt ps:P225 ?taxo_1 . # taxonomic name\n?taxo_stmt prov:wasDerivedFrom ?ref .\n?ref pr:P248 wd:Q13520496 . # Das grosse Kakteen-Lexikon\n}\nOPTIONAL {\n?a p:P225 ?taxo_stmt2 .\n?taxo_stmt2 ps:P225 ?taxo_2 . # taxonomic name\n?taxo_stmt2 prov:wasDerivedFrom ?ref2 .\n?ref2 pr:P248 wd:Q10695694 . # New Cactus Lexicon\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?aLabel",
        "complexity_description": "Multiple nested queries, unions, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "463",
        "valid_gpt_response": true,
        "query": "SELECT (count(?ref) as ?mentions) WHERE {\n?statement prov:wasDerivedFrom ?ref .\n?ref pr:P248 wd:Q216047 .\n?ref pr:P577 ?date .\n}",
        "complexity_description": "Three triple patterns with one variable",
        "complexity": "simple"
    },
    {
        "id": "464",
        "valid_gpt_response": true,
        "query": "SELECT ?ref ?refURL WHERE {\n?ref pr:P854 ?refURL .\nFILTER (CONTAINS(str(?refURL),'lefigaro.fr')) .\n} LIMIT 200",
        "complexity_description": "Single triple pattern with filter and limit",
        "complexity": "simple"
    },
    {
        "id": "465",
        "valid_gpt_response": true,
        "query": "SELECT ?statement ?subjectLabel ?subject ?propertyLabel ?property ?objectLabel ?object ?refURL WHERE {\nhint:Query hint:optimizer \"None\" .\n?ref pr:P854 ?refURL\nFILTER (CONTAINS(str(?refURL),'lefigaro.fr')) .\n?statement prov:wasDerivedFrom ?ref .\n?subject ?p ?statement .\n?property wikibase:claim ?p .\n?property wikibase:statementProperty ?ps .\n?statement ?ps ?object .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}",
        "complexity_description": "Multiple joins, filters and services",
        "complexity": "complex"
    },
    {
        "id": "466",
        "valid_gpt_response": true,
        "query": "SELECT ?country ?countryLabel ?article WHERE {\n?country wdt:P31 wd:Q3624078 . # sovereign state\n?article schema:about ?country .\n?article schema:isPartOf <https://en.wikipedia.org/>.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\"\n}\n}",
        "complexity_description": "Multiple triple patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "467",
        "valid_gpt_response": true,
        "query": "SELECT ?sitelink ?itemLabel WHERE {\n?item wdt:P31 wd:Q6256.\n?sitelink schema:isPartOf <https://ru.wikipedia.org/>;\nschema:about ?item;\nwikibase:badge wd:Q17437796 . # Sitelink is badged as a Featured Article\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" } .\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple triple patterns, service call and filter",
        "complexity": "medium"
    },
    {
        "id": "468",
        "valid_gpt_response": true,
        "query": "SELECT ?lang (COUNT(DISTINCT ?item) AS ?count) WHERE {\n?item wdt:P1367 ?yp_id . # BBC 'Your paintings' artist identifier\n?article schema:about ?item .\nFILTER (SUBSTR(str(?article), 11, 15) = \".wikipedia.org/\") .\n?article schema:inLanguage ?lang .\n} GROUP BY ?lang\nORDER BY DESC (?count)",
        "complexity_description": "Multiple filters and group by",
        "complexity": "medium"
    },
    {
        "id": "469",
        "valid_gpt_response": true,
        "query": "SELECT ?year (COUNT (DISTINCT ?a) AS ?count) WHERE {\n?a wdt:P119 wd:Q311 . # buried at Pere-Lachaise cemetery\n?a wdt:P570 ?date .\nBIND(year(?date) AS ?year)\n} GROUP BY ?year\nORDER BY ?year",
        "complexity_description": "Uses BIND, COUNT(DISTINCT), and GROUP BY",
        "complexity": "medium"
    },
    {
        "id": "470",
        "valid_gpt_response": true,
        "query": "SELECT ?a ?aLabel ?birth_date ?death_date WHERE {\n?a wdt:P27 wd:Q30 .\n?a wdt:P21 wd:Q6581097 .\n?a p:P569/psv:P569 ?birth_date_node .\n?birth_date_node wikibase:timePrecision \"9\"^^xsd:integer .\n?a p:P570/psv:P570 ?death_date_node .\n?death_date_node wikibase:timePrecision \"11\"^^xsd:integer .\n?birth_date_node wikibase:timeValue ?birth_date .\n?death_date_node wikibase:timeValue ?death_date .\nFILTER (year(?birth_date) > 1875) .\nFILTER (year(?birth_date) < 1930)\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}\nORDER BY ?birth_date ?aLabel",
        "complexity_description": "Multiple filters, service call and property paths",
        "complexity": "medium"
    },
    {
        "id": "471",
        "valid_gpt_response": true,
        "query": "SELECT ?subject ?subjectLabel ?subjectDescription (year(?date) as ?year) WHERE {\n?subject p:P569/psv:P569 ?date_node . # node for date of birth\n?date_node wikibase:timePrecision \"11\"^^xsd:integer . # date precision = day\n?date_node wikibase:timeValue ?date .\nFILTER (day(?date) = day(now())) . # day of birth date is day of current date\nFILTER (month(?date) = month(now())) . # month of birth date is month of current date\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?date\nLIMIT 100",
        "complexity_description": "Multiple filters, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "472",
        "valid_gpt_response": true,
        "query": "SELECT ?a ?aLabel ?lat ?long WHERE {\n?a wdt:P131+ wd:Q90 . # administrative territorial entity = Paris\n?a p:P625 ?statement . # coordinate-location statement\n?statement psv:P625 ?coordinate_node .\n?coordinate_node wikibase:geoLatitude ?lat .\n?coordinate_node wikibase:geoLongitude ?long .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}",
        "complexity_description": "Multiple joins, property paths and service call",
        "complexity": "medium"
    },
    {
        "id": "473",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?a) AS ?count) (MIN(?lat) AS ?min_lat) (MIN(?long) AS ?min_long) (MAX(?lat) AS ?max_lat) (MAX(?long) AS ?max_long) WHERE {\n?a wdt:P131+ wd:Q90 . # administrative territorial entity = Paris\n?a p:P625 ?statement . # coordinate-location statement\n?statement psv:P625 ?coordinate_node .\n?coordinate_node wikibase:geoLatitude ?lat .\n?coordinate_node wikibase:geoLongitude ?long .\n{\nSELECT ?a (COUNT(?a) AS ?count_stmt) WHERE {\n?a wdt:P131+ wd:Q90 .\n?a p:P625 ?statement\n} GROUP BY ?a HAVING (?count_stmt < 2)\n}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}",
        "complexity_description": "Multiple subqueries, aggregation functions and filters",
        "complexity": "complex"
    },
    {
        "id": "474",
        "valid_gpt_response": true,
        "query": "SELECT ?place ?placeLabel ?location WHERE\n{\nwd:Q64436 wdt:P625 ?arcLoc .\nSERVICE wikibase:around {\n?place wdt:P625 ?location .\nbd:serviceParam wikibase:center ?arcLoc .\nbd:serviceParam wikibase:radius \"1\" .\n}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}",
        "complexity_description": "Multiple services, geospatial query",
        "complexity": "medium"
    },
    {
        "id": "475",
        "valid_gpt_response": true,
        "query": "SELECT ?a ?aLabel ?lat ?long WHERE {\n?a wdt:P131+ wd:Q90 . # administrative territorial entity = Paris\n?a p:P625 ?statement . # coordinate-location statement\n?statement psv:P625 ?coordinate_node .\n?coordinate_node wikibase:geoLatitude ?lat .\n?coordinate_node wikibase:geoLongitude ?long .\nFILTER (ABS(?lat - 48.8738) < 0.01)\nFILTER (ABS(?long - 2.2950) < 0.01)\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n} ORDER BY DESC(?lat)",
        "complexity_description": "Multiple filters, joins and subqueries",
        "complexity": "complex"
    },
    {
        "id": "476",
        "valid_gpt_response": true,
        "query": "SELECT ?place ?placeLabel ?location WHERE {\nwd:Q64436 wdt:P625 ?Wloc .\nwd:Q19675 wdt:P625 ?Eloc .\nSERVICE wikibase:box {\n?place wdt:P625 ?location .\nbd:serviceParam wikibase:cornerWest ?Wloc .\nbd:serviceParam wikibase:cornerEast ?Eloc .\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple services, filters and joins",
        "complexity": "complex"
    },
    {
        "id": "477",
        "valid_gpt_response": true,
        "query": "SELECT ?place ?placeLabel ?location WHERE {\nSERVICE wikibase:box {\n?place wdt:P625 ?location .\nbd:serviceParam wikibase:cornerWest \"Point(2.295 48.8738)\"^^geo:wktLiteral .\nbd:serviceParam wikibase:cornerEast \"Point(2.33575 48.861088888)\"^^geo:wktLiteral .\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Two services, one language filter",
        "complexity": "medium"
    },
    {
        "id": "478",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\nwd:Q64 wdt:P625 ?berlinLoc .\nwd:Q1384 wdt:P625 ?newyorkLoc\nBIND(geof:distance(?berlinLoc, ?newyorkLoc) as ?dist)\n}",
        "complexity_description": "Two triple patterns with a geospatial function",
        "complexity": "medium"
    },
    {
        "id": "479",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription WHERE {\n?item wdt:P31 wd:Q5.\n?item wdt:P27 wd:Q31.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"nl,fr,en,de,it,es,no,pt\". }\nFILTER(NOT EXISTS {\n?item rdfs:label ?lang_label.\nFILTER(LANG(?lang_label) = \"it\")\n})\n}\nORDER BY ?itemLabel",
        "complexity_description": "Multiple filters and service call",
        "complexity": "medium"
    },
    {
        "id": "480",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?genderLabel ?occupationLabel ?domainLabel ?positionLabel ?itemDescription WHERE {\n?item wdt:P31 wd:Q5.\n?item wdt:P27 wd:Q31.\noptional{ ?item wdt:P21 ?gender.}\noptional{ ?item wdt:P106 ?occupation.}\noptional{ ?item wdt:P101 ?domain.}\noptional{ ?item wdt:P39 ?position.}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"nl,fr,en,de,it,es,pt,no\". }\nFILTER(NOT EXISTS {\n?item schema:description ?itemdesc.\nFILTER(LANG(?itemdesc) = \"nl\")\n})\n}\norder by ?itemLabel",
        "complexity_description": "Multiple optional patterns and filters with language constraints",
        "complexity": "complex"
    },
    {
        "id": "481",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel\nWHERE\n{\n?item wdt:P31 wd:Q146. # <translate><!--T:680--> Must be of a cat</translate>\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } # <translate><!--T:681--> Helps get the label in your language, if not, then en language</translate>\n}",
        "complexity_description": "Simple query with one triple pattern and a service call",
        "complexity": "simple"
    },
    {
        "id": "482",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel\nWHERE\n{\n?item wdt:P31 wd:Q2934.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "483",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?horse ?horseLabel ?mother ?motherLabel ?father ?fatherLabel (year(?birthdate) as ?birthyear) (year(?deathdate) as ?deathyear) ?genderLabel\nWHERE\n{\n?horse wdt:P31/wdt:P279* wd:Q726 . # Instance et sous-classes de Q726-Cheval\nOPTIONAL{?horse wdt:P25 ?mother .} # P25 : Mere\nOPTIONAL{?horse wdt:P22 ?father .} # P22 : Pere\nOPTIONAL{?horse wdt:P569 ?birthdate .} # P569 : Date de naissance\nOPTIONAL{?horse wdt:P570 ?deathdate .} # P570 : Date de deces\nOPTIONAL{?horse wdt:P21 ?gender .} # P21 : Sexe\nSERVICE wikibase:label { #BabelRainbow\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr,ar,be,bg,bn,ca,cs,da,de,el,en,es,et,fa,fi,he,hi,hu,hy,id,it,ja,jv,ko,nb,nl,eo,pa,pl,pt,ro,ru,sh,sk,sr,sv,sw,te,th,tr,uk,yue,vec,vi,zh\"\n}\n}\nORDER BY ?horse",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "484",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?pic\nWHERE\n{\n?item wdt:P31 wd:Q146 .\n?item wdt:P18 ?pic\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "485",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT * WHERE {\n?item wdt:P31/wdt:P279* wd:Q16917;\nwdt:P625 ?geo .\n}",
        "complexity_description": "Two triple patterns with a property path",
        "complexity": "medium"
    },
    {
        "id": "486",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT * WHERE {\n?item wdt:P31 wd:Q1032372;\nwdt:P625 ?geo .\n}",
        "complexity_description": "Two triple patterns with one variable",
        "complexity": "simple"
    },
    {
        "id": "487",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(*) AS ?count)\nWHERE {\n?item wdt:P31 wd:Q5 .\n}",
        "complexity_description": "Single pattern with a single triple and aggregation",
        "complexity": "simple"
    },
    {
        "id": "488",
        "valid_gpt_response": true,
        "query": "SELECT ?human ?humanLabel\nWHERE\n{\n?human wdt:P31 wd:Q5 . #find humans\n?human rdf:type wdno:P40 . #with at least one truthy P40 (child) statement defined to be \"no value\"\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "489",
        "valid_gpt_response": true,
        "query": "SELECT ?human ?humanLabel\nWHERE\n{\n?human wdt:P31 wd:Q5 . #find humans\n?human p:P40 ?childStatement . #with at least one P40 (child) statement\n?childStatement rdf:type wdno:P40 . #where the P40 (child) statement is defined to be \"no value\"\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}",
        "complexity_description": "Multiple triple patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "490",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?itemDescription ?sitelinks\nWHERE {\n?item wdt:P31 wd:Q5; # Any instance of a human\nwdt:P19/wdt:P131* wd:Q60; # Who was born in any value (eg. a hospital)\nwikibase:sitelinks ?sitelinks.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nORDER BY DESC(?sitelinks)",
        "complexity_description": "Multiple triple patterns, property paths and service call",
        "complexity": "medium"
    },
    {
        "id": "491",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?articlename ?itemLabel ?itemDescription ?sl\nWHERE {\nVALUES ?dod {\"+2001-08-25\"^^xsd:dateTime}\n?dod ^wdt:P570 ?item .\n?item wikibase:sitelinks ?sl .\n?item ^schema:about ?article .\n?article schema:isPartOf <https://en.wikipedia.org/>;\nschema:name ?articlename .\nSERVICE wikibase:label\n{\nbd:serviceParam wikibase:language \"en\" .\n?item rdfs:label ?itemLabel .\n?item schema:description ?itemDescription .\n}\nBIND(REPLACE(?itemLabel, \"^.*(?<! [Vv][ao]n| [Dd][aeiu]| [Dd][e][lns]| [Ll][ae]) (?!([SJ]r\\\\.?|[XVI]+)$)\", \"\") AS ?sortname)\n} ORDER BY ASC(UCASE(?sortname)) ASC(UCASE(?itemLabel))",
        "complexity_description": "Multiple joins, subqueries, and regex usage",
        "complexity": "complex"
    },
    {
        "id": "492",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?article\nWITH {\nSELECT *\nWHERE {\n?article schema:about ?item ;\nschema:isPartOf <https://species.wikimedia.org/> .\n}\nLIMIT 200\n} AS %i\nWHERE {\nINCLUDE %i\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}",
        "complexity_description": "Subquery, SERVICE clause, and LIMIT",
        "complexity": "complex"
    },
    {
        "id": "493",
        "valid_gpt_response": true,
        "query": "SELECT ?author ?authorLabel ?count\nWITH {\nSELECT ?author (COUNT(?paper) AS ?count)\nWHERE {\n?article schema:about ?author ;\nschema:isPartOf <https://species.wikimedia.org/> .\n?author wdt:P31 wd:Q5.\n?paper wdt:P50 ?author.\n}\nGROUP BY ?author\nORDER BY DESC(?count)\nLIMIT 200\n} AS %i\nWHERE {\nINCLUDE %i\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, grouping, ordering and limiting",
        "complexity": "complex"
    },
    {
        "id": "494",
        "valid_gpt_response": true,
        "query": "SELECT ?event ?eventLabel ?date\nWITH {\nSELECT DISTINCT ?event ?date\nWHERE {\n# find events\n?event wdt:P31/wdt:P279* wd:Q1190554.\n# with a point in time or start date\nOPTIONAL { ?event wdt:P585 ?date. }\nOPTIONAL { ?event wdt:P580 ?date. }\n# but at least one of those\nFILTER(BOUND(?date) && DATATYPE(?date) = xsd:dateTime).\n# not in the future, and not more than 31 days ago\nBIND(NOW() - ?date AS ?distance).\nFILTER(0 <= ?distance && ?distance < 31).\n}\nLIMIT 150\n} AS %i\nWHERE {\nINCLUDE %i\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}",
        "complexity_description": "Multiple optional patterns, filters and subqueries",
        "complexity": "complex"
    },
    {
        "id": "495",
        "valid_gpt_response": true,
        "query": "SELECT ?eyeColor ?eyeColorLabel ?rgb (COUNT(?human) AS ?count)\nWHERE\n{\n?human wdt:P31 wd:Q5.\n?human wdt:P1340 ?eyeColor.\nOPTIONAL { ?eyeColor wdt:P465 ?rgb. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?eyeColor ?eyeColorLabel ?rgb\nORDER BY DESC(?count)",
        "complexity_description": "Multiple joins, optional pattern and aggregation",
        "complexity": "medium"
    },
    {
        "id": "496",
        "valid_gpt_response": true,
        "query": "SELECT ?human ?humanLabel\nWHERE\n{\n?human wdt:P21 ?gender .\nFILTER wikibase:isSomeValue(?gender)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Simple query with filter and service",
        "complexity": "simple"
    },
    {
        "id": "497",
        "valid_gpt_response": true,
        "query": "SELECT ?wikipedia WHERE {\n?wikipedia wikibase:wikiGroup \"wikipedia\".\n}",
        "complexity_description": "Single triple pattern",
        "complexity": "simple"
    },
    {
        "id": "498",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?lang ?name WHERE {\n?article schema:about wd:Q5 . hint:Prior hint:runFirst true.\n?article schema:inLanguage ?lang ;\nschema:name ?name ;\nschema:isPartOf [ wikibase:wikiGroup \"wikipedia\" ] .\nFILTER(?lang in ('en', 'uz', 'ru', 'ko')) .\nFILTER (!CONTAINS(?name, ':')) .\n}",
        "complexity_description": "Multiple filters and language constraints",
        "complexity": "medium"
    },
    {
        "id": "499",
        "valid_gpt_response": true,
        "query": "SELECT\n?item ?itemLabel\n?value ?valueLabel\nWHERE\n{\n?item wdt:P1800 ?value\n# change P1800 to another property\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nLIMIT 10",
        "complexity_description": "Simple query with one triple pattern and a service call",
        "complexity": "simple"
    },
    {
        "id": "500",
        "valid_gpt_response": true,
        "query": "SELECT ?lemma ?item WHERE {\nVALUES ?lemma {\n\"Wikipedia\"@de\n\"Wikidata\"@de\n\"Berlin\"@de\n\"Technische Universitat Berlin\"@de\n}\n?sitelink schema:about ?item;\nschema:isPartOf <https://de.wikipedia.org/>;\nschema:name ?lemma.\n}",
        "complexity_description": "Simple query with VALUES clause and basic graph pattern",
        "complexity": "simple"
    },
    {
        "id": "501",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?area ?areaLabel (sum(?folkm_ngd) as ?total_folkm) # the first two variables can be removed\n# if only the number is needed\nWHERE {\n?item wdt:P361 wd:Q297853. # part of (P361) Oresund Region (Q297853)\n?item wdt:P1082 ?folkm_ngd. # population (P1082)\n?area wdt:P31 wd:Q1907114. # instance of (P31) metropolitan area (Q1907114)\n?area wdt:P527 ?item. # has part (P527)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?area ?areaLabel",
        "complexity_description": "Multiple joins, group by and aggregation",
        "complexity": "medium"
    },
    {
        "id": "502",
        "valid_gpt_response": true,
        "query": "SELECT ?image ?speciesLabel ?mayorLabel ?placeLabel WHERE {\n?species wdt:P279* wd:Q622852 .\n?mayor wdt:P31 ?species .\n?mayor p:P39 ?node .\n?node ps:P39 wd:Q30185 .\n?node pq:P642 ?place .\nOPTIONAL {?mayor wdt:P18 ?image}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, optional clause and service call",
        "complexity": "complex"
    },
    {
        "id": "503",
        "valid_gpt_response": true,
        "query": "SELECT ?lemma\nWHERE {\n?lexemeId dct:language wd:Q9027;\nwikibase:lemma ?lemma;\nwdt:P9660 wd:Q1935308.\n}",
        "complexity_description": "Three triple patterns with specific values",
        "complexity": "simple"
    },
    {
        "id": "504",
        "valid_gpt_response": true,
        "query": "SELECT ?form ?lemma\nWHERE {\n?lexemeId dct:language wd:Q9027;\nwikibase:lemma ?lemma;\nontolex:lexicalForm ?form.\nMINUS {\n?lexemeId p:P5831 ?statement.\n?statement ps:P5831 ?example;\npq:P6072 [];\npq:P5830 ?form_with_example.\n}\n}",
        "complexity_description": "Multiple triple patterns, MINUS clause with multiple filters",
        "complexity": "complex"
    },
    {
        "id": "505",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?l ?word ?lemma WHERE {\nVALUES ?word {'bought'@en}\n?l a ontolex:LexicalEntry ;\ndct:language wd:Q1860 ;\nwikibase:lemma ?lemma ;\nontolex:lexicalForm ?form .\n?form ontolex:representation ?word .\n}",
        "complexity_description": "Simple query with VALUES and property paths",
        "complexity": "simple"
    },
    {
        "id": "506",
        "valid_gpt_response": true,
        "query": "SELECT ?lexemeId ?lemma WHERE {\n?lexemeId dct:language wd:Q9027;\nwikibase:lemma ?lemma.\n?lexemeId wikibase:lexicalCategory wd:Q9788\n}\nORDER BY ?lemma",
        "complexity_description": "Two triple patterns with filtering",
        "complexity": "simple"
    },
    {
        "id": "507",
        "valid_gpt_response": true,
        "query": "SELECT ?l ?lemma WHERE {\n?l dct:language wd:Q9035; # Danish (Q9035)\nwikibase:lemma ?lemma;\nwikibase:lexicalCategory wd:Q184511. # idiom (Q184511)\n}",
        "complexity_description": "Two triple patterns with specific values",
        "complexity": "simple"
    },
    {
        "id": "508",
        "valid_gpt_response": true,
        "query": "SELECT ?l ?lemma ?form ?audio WHERE {\n?l dct:language wd:Q9027;\nwikibase:lemma ?lemma;\nontolex:lexicalForm ?form .\n?form ontolex:representation ?lemma .\nMINUS {?form wdt:P443 ?audio.}\n}",
        "complexity_description": "Multiple triple patterns, MINUS clause",
        "complexity": "medium"
    },
    {
        "id": "509",
        "valid_gpt_response": true,
        "query": "SELECT ?lexemeId ?lemma WHERE {\n?lexemeId dct:language wd:Q1860;\nwikibase:lemma ?lemma.\n# only those lemmas that begin with \"pota\", i.e. \"potato\"\nFILTER (regex(?lemma, '^pota.*'))\n}",
        "complexity_description": "Filter and regex",
        "complexity": "medium"
    },
    {
        "id": "510",
        "valid_gpt_response": true,
        "query": "SELECT ?lexemeId ?lemma ?example\nWHERE {\n?lexemeId <http://purl.org/dc/terms/language> wd:Q9027;\nwikibase:lemma ?lemma.\n?lexemeId p:P5831 ?statement.\n?statement ps:P5831 ?example;\npq:P6072 [];\npq:P5830 [].\n}",
        "complexity_description": "Multiple triple patterns, property paths and qualifiers",
        "complexity": "medium"
    },
    {
        "id": "511",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?lexemeId ?lemma ?q_concept ?q_conceptDescription ?picture\nWHERE {\n?lexemeId dct:language wd:Q1860;\nwikibase:lemma ?lemma;\nontolex:sense ?sense.\n?sense wdt:P5137 ?q_concept.\n?q_concept wdt:P18 ?picture.\n# if you wish to only browse certain items you can insert a FILTER\n# regular expression here, like in the example above.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY lcase(?lemma) # order a-z",
        "complexity_description": "Multiple joins and filters with ordering",
        "complexity": "medium"
    },
    {
        "id": "512",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?lexemeId ?lemma ?q_concept ?q_conceptDescription ?picture\nWHERE {\n?lexemeId dct:language wd:Q188; # change language here\nwikibase:lemma ?lemma;\nontolex:sense ?sense.\n?sense wdt:P5137 ?q_concept.\n?q_concept wdt:P18 ?picture.\n############\n# Exclusions\n############\n# Exclude out of scope concepts\nMINUS {?q_concept wdt:P31 wd:Q3624078.}. # countries\n# Exclude non suitable concepts\nVALUES ?minus {\nwd:Q47092 # rape\nwd:Q198 # war\nwd:Q124490 # violence\nwd:Q170382 # revolver\nwd:Q1576 #cigar\n#... add yours here\n}.\nMINUS {?sense wdt:P5137 ?minus.}.\n# Exclude senses not suitable for young children:\nVALUES ?filter {\nwd:Q8102\nwd:Q545779\nwd:Q1521634\nwd:Q184439}.\nFILTER NOT EXISTS {?sense wdt:P6191 ?filter.}.\n# if you wish to only browse certain items you can insert a FILTER\n# regular expression here, like in the example above.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"de,en\". }\n}\nORDER BY lcase(?lemma) # order a-z",
        "complexity_description": "Multiple joins, filters and exclusions with regex",
        "complexity": "complex"
    },
    {
        "id": "513",
        "valid_gpt_response": true,
        "query": "SELECT ?languageLabel (COUNT(?example) AS ?count ) WHERE {\n?l a ontolex:LexicalEntry; dct:language ?language.\n?l p:P5831 ?statement.\n?statement ps:P5831 ?example;\npq:P6072 [];\npq:P5830 [].\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?languageLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple joins, subqueries, and grouping",
        "complexity": "complex"
    },
    {
        "id": "514",
        "valid_gpt_response": true,
        "query": "SELECT ?l ?lemma ?languageLabel WHERE {\n?l a ontolex:LexicalEntry;\ndct:language ?language;\nwikibase:lemma ?lemma .\n?l wdt:P31 wd:Q376431.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?languageLabel",
        "complexity_description": "Multiple triple patterns, service call and filtering",
        "complexity": "medium"
    },
    {
        "id": "515",
        "valid_gpt_response": true,
        "query": "SELECT ?l ?sense ?lemma ?languageLabel WHERE {\n?l a ontolex:LexicalEntry ; # get from the special LexicalEntry\nontolex:sense ?sense ; # the sense\ndct:language ?language ; # the language\nwikibase:lemma ?lemma. # and the lemma\n?sense wdt:P5137 wd:Q29053744 .\n# change Q29053744 to anything you want\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY (LCASE(?languageLabel))",
        "complexity_description": "Multiple triple patterns, SERVICE clause and ORDER BY",
        "complexity": "medium"
    },
    {
        "id": "516",
        "valid_gpt_response": true,
        "query": "SELECT ?meaning ?meaningLabel ?count\nWITH {\nSELECT ?meaning (count(?l) as ?count)\nWHERE {\n?l a ontolex:LexicalEntry ;\nontolex:sense ?sense.\n?sense wdt:P5137 ?meaning.\n}\nGROUP BY ?meaning\nORDER BY desc(?count)\nLIMIT 100\n} AS %i\nWHERE {\nINCLUDE %i\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY desc(?count)",
        "complexity_description": "Multiple subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "517",
        "valid_gpt_response": true,
        "query": "SELECT ?l ?lemma ?demoPlaceLabel ?coords WHERE {\n?l a ontolex:LexicalEntry ;\ndct:language ?language ;\nwikibase:lemma ?lemma .\n?language wdt:P218 'sv'. # language\n?l ontolex:sense ?sense.\n?sense wdt:P6271 ?demoPlace.\n?demoPlace wdt:P625 ?coords\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, filters and service calls",
        "complexity": "complex"
    },
    {
        "id": "518",
        "valid_gpt_response": true,
        "query": "SELECT ?lexemeId ?lemma ?form ?word WHERE {\n?lexemeId dct:language wd:Q9288;\nwikibase:lexicalCategory wd:Q1084;\nwikibase:lemma ?lemma.\n?lexemeId ontolex:lexicalForm ?form .\n?form wikibase:grammaticalFeature wd:Q499327;\nwikibase:grammaticalFeature wd:Q1775415;\nontolex:representation ?word .\n}",
        "complexity_description": "Multiple triple patterns with filters",
        "complexity": "medium"
    },
    {
        "id": "519",
        "valid_gpt_response": true,
        "query": "SELECT * {\n?l dct:language [];\nwikibase:statements ?c.\n}\nORDER BY desc(?c) LIMIT 50",
        "complexity_description": "Simple query with basic filtering and ordering",
        "complexity": "simple"
    },
    {
        "id": "520",
        "valid_gpt_response": true,
        "query": "SELECT ?lexemeId ?lemma ?form ?word WHERE {\n?lexemeId dct:language wd:Q727694;\nwikibase:lemma ?lemma;\nontolex:lexicalForm ?form.\n?form ontolex:representation ?word.\nFILTER(NOT EXISTS { ?form wdt:P1721 ?o. })\n}",
        "complexity_description": "Multiple joins, filter with NOT EXISTS",
        "complexity": "medium"
    },
    {
        "id": "521",
        "valid_gpt_response": true,
        "query": "SELECT ?property2 ?property2Label ?property1 ?property1Label WHERE {\n?property1 rdf:type wikibase:Property. #not replaceable with wikibase:Item, wikibase:Statement, wikibase:Reference at WDQS\n#https://www.mediawiki.org/wiki/Wikibase/Indexing/RDF_Dump_Format#WDQS_data_differences\n?property1 wdt:P1647 ?property2.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "522",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?subProperties ?subPropertiesLabel WHERE {\n?subProperties wdt:P1647* wd:P276.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Simple query with one triple pattern and a service call",
        "complexity": "simple"
    },
    {
        "id": "523",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?property) as ?pcount ) ?wbtype WHERE {\n?property rdf:type wikibase:Property.\n?property wikibase:propertyType ?wbtype.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?wbtype\nORDER BY DESC(?pcount)",
        "complexity_description": "Multiple clauses, SERVICE keyword and GROUP BY",
        "complexity": "medium"
    },
    {
        "id": "524",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?propertyRel ?propertyItem ?propertyItemLabel WHERE\n{\n?item ?propertyRel ?standard.\n?standard wdt:P31 wd:Q317623.\n?propertyItem wikibase:directClaim ?propertyRel\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, filters and service call",
        "complexity": "medium"
    },
    {
        "id": "525",
        "valid_gpt_response": true,
        "query": "SELECT ?property ?propertyType ?propertyLabel ?propertyDescription ?propertyAltLabel WHERE {\n?property wikibase:propertyType ?propertyType .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ASC(xsd:integer(STRAFTER(STR(?property), 'P')))",
        "complexity_description": "Uses SERVICE, ORDER BY with function and property path",
        "complexity": "medium"
    },
    {
        "id": "526",
        "valid_gpt_response": true,
        "query": "SELECT ?p ?pLabel (count (*) as ?count) {\n?s ?pd ?o .\n?p wikibase:directClaim ?pd .\n?s wdt:P31/wdt:P279* wd:Q729 .\n?o wdt:P31/wdt:P279* wd:Q43501 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?p ?pLabel ORDER BY desc(?count)",
        "complexity_description": "Multiple joins, subqueries and grouping",
        "complexity": "complex"
    },
    {
        "id": "527",
        "valid_gpt_response": true,
        "query": "SELECT\n?p ?pLabel\n(SAMPLE(?url) as ?url_comp2)\nWHERE\n{\nhint:Query hint:optimizer \"None\".\nBIND( wd:Q4573 as ?comp1)\nBIND( wd:Q39666 as ?comp2)\n{\n?comp2 ?wdt ?v .\n?p wikibase:directClaim ?wdt ; wikibase:propertyType wikibase:ExternalId .\nFILTER NOT EXISTS { ?comp1 ?wdt [] }\nOPTIONAL { ?p wdt:P1630 ?f }\nBIND(uri(REPLACE(?f,\"\\\\$1\",?v)) as ?url)\n}\nUNION { BIND(wd:Q4573 as ?p) }\nUNION { BIND(wd:Q39666 as ?p) }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?p ?pLabel\nORDER BY ?url_comp2",
        "complexity_description": "Multiple UNIONs, OPTIONAL clause, FILTER NOT EXISTS, BIND, and SERVICE keyword usage",
        "complexity": "complex"
    },
    {
        "id": "528",
        "valid_gpt_response": true,
        "query": "SELECT ?root ?rootLabel ?item ?itemL ?itemImage ?item2 ?itemL2 ?itemImage2 ?item3 ?itemL3 ?itemImage3 ?item4 ?itemL4 ?itemImage4 ?item5 ?itemL5 ?itemImage5 ?item6 ?itemL6 ?itemImage6 ?item7 ?itemL7 ?itemImage7 WHERE {\nBIND(wd:Q18616576 AS ?root)\nBIND(wdt:P279 AS ?property)\n?item ?property ?root.\nOPTIONAL { ?item wdt:P18 ?itemImage. }\nOPTIONAL {\n?item2 ?property ?item.\nOPTIONAL { ?item2 wdt:P18 ?itemImage2. }\nOPTIONAL {\n?item3 ?property ?item2.\nOPTIONAL { ?item3 wdt:P18 ?itemImage3. }\nOPTIONAL {\n?item4 ?property ?item3.\nOPTIONAL { ?item4 wdt:P18 ?itemImage4. }\nOPTIONAL {\n?item5 ?property ?item4.\nOPTIONAL { ?item5 wdt:P18 ?itemImage5. }\nOPTIONAL {\n?item6 ?property ?item5.\nOPTIONAL { ?item6 wdt:P18 ?itemImage6. }\nOPTIONAL {\n?item7 ?property ?item6.\nOPTIONAL { ?item7 wdt:P18 ?itemImage7. }\n}\n}\n}\n}\n}\n}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,es,fr,de\".\n?root rdfs:label ?rootLabel.\n?item rdfs:label ?itemLabel;\nschema:description ?itemDescription.\n?item2 rdfs:label ?itemLabel2;\nschema:description ?itemDescription2.\n?item3 rdfs:label ?itemLabel3;\nschema:description ?itemDescription3.\n?item4 rdfs:label ?itemLabel4;\nschema:description ?itemDescription4.\n?item5 rdfs:label ?itemLabel5;\nschema:description ?itemDescription5.\n?item6 rdfs:label ?itemLabel6;\nschema:description ?itemDescription6.\n?item7 rdfs:label ?itemLabel7;\nschema:description ?itemDescription7.\n}\nBIND(CONCAT(?itemLabel, \": \", COALESCE(?itemDescription, \"\")) AS ?itemL)\nBIND(CONCAT(?itemLabel2, \": \", COALESCE(?itemDescription2, \"\")) AS ?itemL2)\nBIND(CONCAT(?itemLabel3, \": \", COALESCE(?itemDescription3, \"\")) AS ?itemL3)\nBIND(CONCAT(?itemLabel4, \": \", COALESCE(?itemDescription4, \"\")) AS ?itemL4)\nBIND(CONCAT(?itemLabel5, \": \", COALESCE(?itemDescription5, \"\")) AS ?itemL5)\nBIND(CONCAT(?itemLabel6, \": \", COALESCE(?itemDescription6, \"\")) AS ?itemL6)\nBIND(CONCAT(?itemLabel7, \": \", COALESCE(?itemDescription7, \"\")) AS ?itemL7)\n}\nORDER BY (?itemL) (?itemL2) (?itemL3) (?itemL4) (?itemL5) (?itemL6) (?itemL7)\nLIMIT 20000",
        "complexity_description": "Multiple nested OPTIONAL patterns, many variables and BIND operations",
        "complexity": "complex"
    },
    {
        "id": "529",
        "valid_gpt_response": true,
        "query": "SELECT ?property (GROUP_CONCAT(?propertyCategoryLabel; SEPARATOR = \"; \") AS ?categories) ?propertyLabel ?propertyDescription ?propertyAltLabel WHERE {\n{\nSELECT ?property ?propertyCategoryLabel ?propertyLabel ?propertyDescription ?propertyAltLabel WHERE {\n?property wikibase:propertyType wikibase:WikibaseItem.\nMINUS { ?property wdt:P2302 wd:Q21503250. }\nMINUS { ?property wdt:P2302 wd:Q53869507. }\nOPTIONAL { ?property wdt:P31 ?propertyCategory. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n}\n}\nGROUP BY ?property ?propertyLabel ?propertyDescription ?propertyAltLabel",
        "complexity_description": "Multiple MINUS clauses, OPTIONAL clause, and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "530",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?reference\nWHERE {\n?item wdt:P1343 wd:Q51955019 .\n?item p:P1343 [ prov:wasDerivedFrom [ pr:P958 ?reference ] ] .\n}",
        "complexity_description": "Two triple patterns with one property path",
        "complexity": "medium"
    },
    {
        "id": "531",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel WHERE {\n{\nSELECT ?item WHERE { ?item (wdt:P279/wdt:P279/(wdt:P279?)/(wdt:P279?)/(wdt:P279?)) wd:Q7048977, wd:Q112276019. }\nLIMIT 300\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,es,fr,de\". }\n}\nORDER BY (?itemLabel)",
        "complexity_description": "Multiple nested property paths and subqueries",
        "complexity": "complex"
    },
    {
        "id": "532",
        "valid_gpt_response": true,
        "query": "SELECT ?country ?countryLabel ?article WHERE {\n?country wdt:P31 wd:Q3624078 . # sovereign state\n?article schema:about ?country .\n?article schema:isPartOf <https://en.wikipedia.org/>.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\"\n}\n}",
        "complexity_description": "Multiple triple patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "533",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?cnt WHERE {\n{\nSELECT ?item (COUNT(?sitelink) AS ?cnt) WHERE {\n?item wdt:P27|wdt:P205|wdt:P17 wd:Q16 . #Canadian subjects.\nMINUS {?item wdt:P106 wd:Q488111 .} #Minus occupations that would be inappropriate in most situations.\nMINUS {?item wdt:P106 wd:Q3286043 .}\nMINUS {?item wdt:P106 wd:Q4610556 .}\n?sitelink schema:about ?item .\nFILTER NOT EXISTS {\n?article schema:about ?item .\n?article schema:isPartOf <https://en.wikipedia.org/> . #Targeting Wikipedia language where subjects has no article.\n}\n} GROUP BY ?item ORDER BY DESC (?cnt) LIMIT 1000 #Sorted by amount of articles in other languages. Result limited to 1000 lines to not have a timeout error.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,es,de\" } #Service to resolve labels in (fallback) languages: automatic user language, English, French, Spanish, German.\n} ORDER BY DESC (?cnt)",
        "complexity_description": "Multiple nested queries with filters and subqueries",
        "complexity": "complex"
    },
    {
        "id": "534",
        "valid_gpt_response": true,
        "query": "SELECT ?sitelink ?itemLabel WHERE {\n?item wdt:P31 wd:Q6256.\n?sitelink schema:isPartOf <https://ru.wikipedia.org/>;\nschema:about ?item;\nwikibase:badge wd:Q17437796 . # Sitelink is badged as a Featured Article\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" } .\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple triple patterns, service call and filter",
        "complexity": "medium"
    },
    {
        "id": "535",
        "valid_gpt_response": true,
        "query": "SELECT ?lang (COUNT(DISTINCT ?article) AS ?count) WHERE {\nhint:Query hint:optimizer \"None\".\n?item wdt:P1367 ?yp_id .\n?article schema:about ?item . # find articles about things with a BBC 'Your paintings' artist identifier\n?article schema:isPartOf / wikibase:wikiGroup \"wikipedia\" . # only Wikipedias articles\nhint:Prior hint:gearing \"forward\" .\n# This hint says to search the property chain above from left to right (\"forward\"),\n# i.e. it is checked if each previously found value for ?article is linked to a Wikipedia.\n# The default (\"reverse\") would be to search it from right to left, i.e. find all Wikipedia\n# articles first, and then select the intersection with the previously found values of ?article.\n?article schema:inLanguage ?lang .\n} GROUP BY ?lang\nORDER BY DESC (?count)",
        "complexity_description": "Multiple joins, grouping, and ordering",
        "complexity": "complex"
    },
    {
        "id": "536",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?LabelEN ?LabelUK ?page_titleRO WHERE {\n?item wdt:P31 wd:Q532 .\n?item wdt:P17 wd:Q212 .\n?article schema:about ?item ; schema:isPartOf <https://ro.wikipedia.org/> ; schema:name ?page_titleRO .\n?item rdfs:label ?LabelEN FILTER (lang(?LabelEN) = \"en\") .\n?item rdfs:label ?LabelUK FILTER (lang(?LabelUK) = \"uk\") .\n}\nLIMIT 300",
        "complexity_description": "Multiple filters, joins and language filters",
        "complexity": "medium"
    },
    {
        "id": "537",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?wikisourceSitelink ?wikisourceLanguage WHERE {\n?wikisourceSitelink schema:isPartOf [ wikibase:wikiGroup \"wikisource\" ];\nschema:inLanguage ?wikisourceLanguage;\nschema:about ?item.\n?paper wdt:P31 wd:Q13442814;\nwdt:P50 ?item.\n}\nORDER BY ?wikisourceLanguage\nLIMIT 300",
        "complexity_description": "Multiple triple patterns, joins and filters",
        "complexity": "medium"
    },
    {
        "id": "538",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?gtaa ?_articleEN ?_articleNL where {\n?item wdt:P1741 ?gtaa. # GTAA id\nOPTIONAL {\n?_articleEN schema:about ?item.\n?_articleNL schema:about ?item.\n?_articleEN schema:isPartOf <https://en.wikipedia.org/>.\n?_articleNL schema:isPartOf <https://nl.wikipedia.org/>.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl\". }\n}",
        "complexity_description": "Optional clause, SERVICE keyword and multiple triple patterns",
        "complexity": "medium"
    },
    {
        "id": "539",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?died ?sitelinks\nWITH {\nSELECT *\nWHERE {\n?person wdt:P31 wd:Q5;\nwdt:P570 ?died.\nFILTER (?died >= \"2018-01-01T00:00:00Z\"^^xsd:dateTime && ?died < \"2019-01-01T00:00:00Z\"^^xsd:dateTime)\n?person wikibase:sitelinks ?sitelinks.\n}\nORDER BY desc(?sitelinks)\nLIMIT 100\n} AS %i\nWHERE {\nINCLUDE %i\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY desc(?sitelinks)",
        "complexity_description": "Multiple filters, subqueries and ordering",
        "complexity": "complex"
    },
    {
        "id": "540",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?comm ?p373 ?cat WHERE {\n?item wdt:P131* wd:Q894107. # ... municipality ...\nOPTIONAL {?comm schema:about ?item ; schema:isPartOf <https://commons.wikimedia.org/> .}\nBIND(replace(wikibase:decodeUri(SUBSTR(STR(?comm), 45)),\"_\",\" \") AS ?comm_decode)\nOPTIONAL {?item wdt:P373 ?p373 .}\nbind(COALESCE(?comm_decode, ?p373) as ?cat) .\nVALUES ?trida { wd:Q1746392 wd:Q108325 wd:Q4989906 wd:Q10861631 wd:Q15077340 wd:Q1516537 wd:Q47008262} # chapel, small monument, memorial, belltower, memorial monument, technical monument, group of small monuments\n?item wdt:P31/wdt:P279* ?trida. # small monument\n}",
        "complexity_description": "Multiple optional patterns, property paths, and functions",
        "complexity": "complex"
    },
    {
        "id": "541",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?parentLabel ?linkcount WHERE {\n?parent wdt:P106 wd:Q182436 .\n?parent wdt:P40 ?person .\n?person wikibase:sitelinks ?linkcount .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,de,es,ar,fr\" }\n}\nGROUP BY ?linkcount ?person ?personLabel ?parent ?parentLabel\nORDER BY DESC(?linkcount)",
        "complexity_description": "Multiple joins and group by with order by",
        "complexity": "medium"
    },
    {
        "id": "542",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?lang_code ?itemLabel ?item\nWHERE\n{\n# ?lang is one of these options\nVALUES ?lang {\nwd:Q34770 # language\nwd:Q436240 # ancient language\nwd:Q1288568 # modern language\nwd:Q33215 # constructed language\n}\n?item wdt:P31 ?lang ;\n# get the language code\nwdt:P424 ?lang_code .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?lang_code",
        "complexity_description": "Uses VALUES clause, multiple triple patterns and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "543",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?website\nWHERE\n{\n#?item wdt:P31 wd:Q10876391.\n?item wdt:P856 ?website.\n?website wikibase:wikiGroup \"wikipedia\".\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "544",
        "valid_gpt_response": true,
        "query": "SELECT ?lang ?name ?itemLabel ?sitelink ?linkcount ?item WHERE {\n?item wikibase:sitelinks ?linkcount.\n?sitelink schema:name ?name;\nschema:inLanguage ?lang;\nschema:about ?item;\n# Sitelink is badged as a Featured Article\nwikibase:badge wd:Q17437796.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, filters and service calls",
        "complexity": "medium"
    },
    {
        "id": "545",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?country ?countryLabel ?capital ?capitalLabel\nWHERE\n{\n?country wdt:P31 wd:Q3624078 .\n#not a former country\nFILTER NOT EXISTS {?country wdt:P31 wd:Q3024240}\n#and no an ancient civilisation (needed to exclude ancient Egypt)\nFILTER NOT EXISTS {?country wdt:P31 wd:Q28171280}\nOPTIONAL { ?country wdt:P36 ?capital } .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nORDER BY ?countryLabel",
        "complexity_description": "Multiple filters, optional pattern and service call",
        "complexity": "medium"
    },
    {
        "id": "546",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?state WHERE {\n?state wdt:P31/wdt:P279* wd:Q3624078;\np:P463 ?memberOfStatement.\n?memberOfStatement a wikibase:BestRank;\nps:P463 wd:Q1065.\nMINUS { ?memberOfStatement pq:P582 ?endTime. }\nMINUS { ?state wdt:P576|wdt:P582 ?end. }\n}",
        "complexity_description": "Multiple MINUS clauses, property paths and filters",
        "complexity": "complex"
    },
    {
        "id": "547",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel_ol ?official_language ?itemLabel_en WHERE {\n?item wdt:P30 wd:Q15 ;\nwdt:P37 ?officiallanguage ;\nwdt:P31 wd:Q6256 .\n?officiallanguage wdt:P424 ?langcode .\n?item rdfs:label ?itemLabel_ol . FILTER(lang(?itemLabel_ol)=?langcode)\n?item rdfs:label ?itemLabel_en . FILTER(lang(?itemLabel_en)='en')\n?officiallanguage rdfs:label ?official_language . FILTER(lang(?official_language)='en')\n}\nORDER BY ?item ?itemLabel_ol ?official_language",
        "complexity_description": "Multiple filters, multiple labels, and joins",
        "complexity": "complex"
    },
    {
        "id": "548",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?language ?languageLabel ?wikipediaLabel where {\n?language wdt:P31 ?instance;\nwdt:P17 wd:Q55.\nFILTER (?instance in (wd:Q34770, wd:Q33384)).\nOPTIONAL {\n?wikipedia wdt:P31 wd:Q10876391;\nwdt:P407 ?language.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"nl,en\". }\n} GROUP BY ?language ?languageLabel ?wikipediaLabel",
        "complexity_description": "Multiple filters, optional clause and service call",
        "complexity": "complex"
    },
    {
        "id": "549",
        "valid_gpt_response": true,
        "query": "SELECT ?city ?cityLabel ?population ?OSM_relation_ID WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nVALUES ?town_or_city {\nwd:Q3957\nwd:Q515\n}\n?city (wdt:P31/(wdt:P279*)) ?town_or_city;\nwdt:P17 wd:Q35.\nOPTIONAL { ?city wdt:P1082 ?population. }\nOPTIONAL { ?city wdt:P402 ?OSM_relation_ID. }\n}\nLIMIT 100",
        "complexity_description": "Multiple optional patterns, values block and service call",
        "complexity": "medium"
    },
    {
        "id": "550",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?country ?countryLabel ?capital ?capitalLabel ?coordinates ?ended\nWHERE\n{\n  ?country p:P36 ?stat.\n  ?stat ps:P36 ?capital.\n  ?capital wdt:P625 ?coordinates.\n  OPTIONAL {\n    ?country wdt:P582|wdt:P576 ?ended.\n  }\n  OPTIONAL {\n    ?capital wdt:P582|wdt:P576 ?ended.\n  }\n  OPTIONAL {\n    ?stat pq:P582 ?ended.\n  }\n  FILTER(BOUND(?ended)).\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple optional patterns, multiple filters and service calls",
        "complexity": "complex"
    },
    {
        "id": "551",
        "valid_gpt_response": true,
        "query": "SELECT ?from ?to ?distGrp WHERE {\n{\nSELECT ?from ?to ?distNum ?mun ?mun2 WHERE {\n{ SELECT ?mun (SAMPLE(?loc) AS ?loc)\nWHERE { ?mun wdt:P31/wdt:P279* wd:Q15284;\nwdt:P131 wd:Q6308;\nwdt:P625 ?loc. }\nGROUP BY ?mun\n}\nOPTIONAL {\n{ SELECT (?mun AS ?mun2) (SAMPLE(?loc) AS ?loc2)\nWHERE { ?mun wdt:P31/wdt:P279* wd:Q15284;\nwdt:P131 wd:Q6308;\nwdt:P625 ?loc. }\nGROUP BY ?mun\n}\n}\nBIND(geof:distance(?loc, ?loc2) AS ?distNum).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?mun rdfs:label ?from.\n?mun2 rdfs:label ?to.\n}\n}\n}\nFILTER(CONCAT(?from,STR(?mun)) <= CONCAT(?to,STR(?mun2))).\n# BIND(IF(STR(?from) < STR(?to),CONCAT(?from,\" <--> \",?to),\n# CONCAT(?to,\" <--> \",?from)) AS ?distLabel).\nBIND(COALESCE(\nIF(?distNum >= 40, \"40 - .. km\", 1/0),\nIF(?distNum >= 30, \"30 - 40 km\", 1/0),\nIF(?distNum >= 20, \"20 - 30 km\", 1/0),\nIF(?distNum >= 10, \"10 - 20 km\", 1/0),\nIF(?distNum >= 5, \"05 - 10 km\", 1/0),\nIF(?distNum >= 1, \"01 - 05 km\", \"00 - 01 km\")) AS ?distGrp).\n}\nORDER BY ?from ?distGrp",
        "complexity_description": "Multiple nested subqueries with grouping and filtering",
        "complexity": "complex"
    },
    {
        "id": "552",
        "valid_gpt_response": true,
        "query": "SELECT ?from (?distGrp1 AS ?kilometers) ?to WHERE {\n{ SELECT ?mun (SAMPLE(?loc) AS ?loc)\nWHERE { ?mun wdt:P31/wdt:P279* wd:Q15284;\nwdt:P131 wd:Q6308;\nwdt:P625 ?loc. }\nGROUP BY ?mun\n}\nOPTIONAL {\n{ SELECT (?mun AS ?mun2) (SAMPLE(?loc) AS ?loc2)\nWHERE { ?mun wdt:P31/wdt:P279* wd:Q15284;\nwdt:P131 wd:Q6308;\nwdt:P625 ?loc. }\nGROUP BY ?mun\n}\n}\nBIND(geof:distance(?loc, ?loc2) AS ?distNum).\nBIND(STR(ROUND(?distNum)) AS ?distGrp0).\nBIND(CONCAT(SUBSTR(\"000\",STRLEN(?distGrp0)+1),?distGrp0,\".\",STR(ROUND((?distNum-FLOOR(?distNum))*10)),\" km\") AS ?distGrp1).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?mun rdfs:label ?from.\n?mun2 rdfs:label ?to.\n}\n}\nORDER BY ?from ?kilometers",
        "complexity_description": "Multiple subqueries, grouping, and binding functions",
        "complexity": "complex"
    },
    {
        "id": "553",
        "valid_gpt_response": true,
        "query": "SELECT ?from (?distNum AS ?kilometers) ?to WHERE {\n{ SELECT ?mun (SAMPLE(?loc) AS ?loc)\nWHERE { ?mun wdt:P31/wdt:P279* wd:Q15284;\nwdt:P131 wd:Q6308;\nwdt:P625 ?loc. }\nGROUP BY ?mun\n}\nOPTIONAL {\n{ SELECT (?mun AS ?mun2) (SAMPLE(?loc) AS ?loc2)\nWHERE { ?mun wdt:P31/wdt:P279* wd:Q15284;\nwdt:P131 wd:Q6308;\nwdt:P625 ?loc. }\nGROUP BY ?mun\n}\n}\nBIND(geof:distance(?loc, ?loc2) AS ?distNum).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?mun rdfs:label ?from.\n?mun2 rdfs:label ?to.\n}\n}\nORDER BY ?from ?kilometers",
        "complexity_description": "Multiple subqueries, grouping, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "554",
        "valid_gpt_response": true,
        "query": "SELECT ?from (?distNum AS ?kilometers) ?to (?from AS ?animation) WHERE {\n{ SELECT ?mun (SAMPLE(?loc) AS ?loc)\nWHERE { ?mun wdt:P31/wdt:P279* wd:Q15284;\nwdt:P131 wd:Q6308;\nwdt:P625 ?loc. }\nGROUP BY ?mun\n}\nOPTIONAL {\n{ SELECT (?mun AS ?mun2) (SAMPLE(?loc) AS ?loc2)\nWHERE { ?mun wdt:P31/wdt:P279* wd:Q15284;\nwdt:P131 wd:Q6308;\nwdt:P625 ?loc. }\nGROUP BY ?mun\n}\n}\nBIND(geof:distance(?loc, ?loc2) AS ?distNum).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?mun rdfs:label ?from.\n?mun2 rdfs:label ?to.\n}\n}\nORDER BY ?from ?kilometers",
        "complexity_description": "Multiple subqueries, grouping, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "555",
        "valid_gpt_response": true,
        "query": "SELECT ?from (?distNum AS ?kilometers) ?to (?to AS ?animation) WHERE {\n{ SELECT ?mun (SAMPLE(?loc) AS ?loc)\nWHERE { ?mun wdt:P31/wdt:P279* wd:Q15284;\nwdt:P131 wd:Q6308;\nwdt:P625 ?loc. }\nGROUP BY ?mun\n}\nOPTIONAL {\n{ SELECT (?mun AS ?mun2) (SAMPLE(?loc) AS ?loc2)\nWHERE { ?mun wdt:P31/wdt:P279* wd:Q15284;\nwdt:P131 wd:Q6308;\nwdt:P625 ?loc. }\nGROUP BY ?mun\n}\n}\nBIND(geof:distance(?loc, ?loc2) AS ?distNum).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?mun rdfs:label ?from.\n?mun2 rdfs:label ?to.\n}\n}\nORDER BY ?from ?kilometers",
        "complexity_description": "Multiple subqueries, grouping, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "556",
        "valid_gpt_response": true,
        "query": "SELECT ?from (?distNum AS ?kilometers) ?to (?distGrp AS ?animation) WHERE {\n{ SELECT ?mun (SAMPLE(?loc) AS ?loc)\nWHERE { ?mun wdt:P31/wdt:P279* wd:Q15284;\nwdt:P131 wd:Q6308;\nwdt:P625 ?loc. }\nGROUP BY ?mun\n}\nOPTIONAL {\n{ SELECT (?mun AS ?mun2) (SAMPLE(?loc) AS ?loc2)\nWHERE { ?mun wdt:P31/wdt:P279* wd:Q15284;\nwdt:P131 wd:Q6308;\nwdt:P625 ?loc. }\nGROUP BY ?mun\n}\n}\n#FILTER (STR(?mun) <= STR(?mun2)).\nBIND(geof:distance(?loc, ?loc2) AS ?distNum).\nBIND(COALESCE(\nIF(?distNum >= 40, \"40 km und mehr\", 1/0),\nIF(?distNum >= 30, \"30 - 40 km\", 1/0),\nIF(?distNum >= 20, \"20 - 30 km\", 1/0),\nIF(?distNum >= 10, \"10 - 20 km\", 1/0),\nIF(?distNum >= 5, \"05 - 10 km\", 1/0),\nIF(?distNum >= 1, \"01 - 05 km\", \"00 - 01 km\")) AS ?distGrp).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?mun rdfs:label ?from.\n?mun2 rdfs:label ?to.\n}\n}\nORDER BY ?animation ?from ?kilometers",
        "complexity_description": "Multiple subqueries, optional clause, and complex bindings",
        "complexity": "complex"
    },
    {
        "id": "557",
        "valid_gpt_response": true,
        "query": "SELECT ?from ?kilometers ?to ?rank_group\nWHERE {\n{\nSELECT (SAMPLE(?mun) AS ?mun) (SAMPLE(?mun2) AS ?mun2) (SAMPLE(?distNum) AS ?kilometers)\n(COUNT(*)-1 AS ?rg) (SUBSTR(\"00\",1+STRLEN(STR(?rg))) AS ?rgpad)\n(IF(FLOOR((?rg-(100*FLOOR(?rg/100)))/10)=1,0,?rg-(10*FLOOR(?rg/10))) AS ?rgmod)\n(IF(?rgmod=1,\"st\",IF(?rgmod=2,\"nd\",IF(?rgmod=3,\"rd\",\"th\"))) AS ?rgord)\n(CONCAT(?rgpad,STR(?rg),?rgord,\"-most farthest places\") AS ?rank_group)\nWHERE {\n{ SELECT ?mun (SAMPLE(?loc) AS ?loc)\nWHERE { ?mun wdt:P31/wdt:P279* wd:Q15284;\nwdt:P131 wd:Q6308;\nwdt:P625 ?loc. }\nGROUP BY ?mun\n}\nOPTIONAL {\n{ SELECT (?mun AS ?mun2) (SAMPLE(?loc) AS ?loc2)\nWHERE { ?mun wdt:P31/wdt:P279* wd:Q15284;\nwdt:P131 wd:Q6308;\nwdt:P625 ?loc. }\nGROUP BY ?mun\n}\n}\nOPTIONAL {\n{ SELECT (?mun AS ?mun3) (SAMPLE(?loc) AS ?loc3)\nWHERE { ?mun wdt:P31/wdt:P279* wd:Q15284;\nwdt:P131 wd:Q6308;\nwdt:P625 ?loc. }\nGROUP BY ?mun\n}\n}\nBIND(geof:distance(?loc, ?loc2) AS ?distNum).\nBIND(geof:distance(?loc, ?loc3) AS ?d).\nFILTER(?distNum >= ?d).\n} GROUP BY ?mun ?mun2 ?distNum\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?mun rdfs:label ?from.\n?mun2 rdfs:label ?to.\n}\n}\nORDER BY ?rank_group ?kilometers ?from",
        "complexity_description": "Multiple nested queries, subqueries, and complex calculations",
        "complexity": "complex"
    },
    {
        "id": "558",
        "valid_gpt_response": true,
        "query": "SELECT ?muni ?muniLabel where {\n?muni p:P31 [ps:P31 wd:Q2039348];\nwdt:P47 wd:Q213246.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"nl\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "559",
        "valid_gpt_response": true,
        "query": "SELECT ?border_city ?border_cityLabel ?countryLabel ?coords\nWHERE {\n?border_city wdt:P31 wd:Q902814.\nOPTIONAL { ?border_city wdt:P17 ?country. }\nOPTIONAL { ?border_city wdt:P625 ?coords. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?border_city rdfs:label ?border_cityLabel.\n?country rdfs:label ?countryLabel.}\n}\nGROUP BY ?border_city ?border_cityLabel ?countryLabel ?coords\nORDER BY ?countryLabel ?border_cityLabel",
        "complexity_description": "Multiple optional patterns, service call and grouping",
        "complexity": "medium"
    },
    {
        "id": "560",
        "valid_gpt_response": true,
        "query": "SELECT ?continent ?river ?continentLabel ?riverLabel\nWHERE\n{\n{\nSELECT ?continent (MAX(?length) AS ?length)\nWHERE\n{\n?river wdt:P31/wdt:P279* wd:Q355304;\nwdt:P2043 ?length;\nwdt:P30 ?continent.\n}\nGROUP BY ?continent\n}\n?river wdt:P31/wdt:P279* wd:Q355304;\nwdt:P2043 ?length;\nwdt:P30 ?continent.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?continentLabel",
        "complexity_description": "Multiple subqueries, grouping and filtering",
        "complexity": "complex"
    },
    {
        "id": "561",
        "valid_gpt_response": true,
        "query": "SELECT ?river ?riverLabel ?location\nWHERE\n{\n?river wdt:P31/wdt:P279* wd:Q355304; # watercourse; includes a few creeks - use wd:Q4022 for rivers only\nwdt:P30 wd:Q51.\nOPTIONAL { ?river wdt:P625 ?location. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Optional clause, property path and service query",
        "complexity": "medium"
    },
    {
        "id": "562",
        "valid_gpt_response": true,
        "query": "SELECT ?mouth (COUNT(?watercourse) AS ?count)\nWHERE\n{\n?watercourse wdt:P403+ ?mouth.\n}\nGROUP BY ?mouth\nORDER BY DESC(?count)\nLIMIT 10",
        "complexity_description": "Uses grouping, aggregation and ordering",
        "complexity": "medium"
    },
    {
        "id": "563",
        "valid_gpt_response": true,
        "query": "SELECT (SAMPLE(?bridge) AS ?bridge) (SAMPLE(?bridgeLabel) AS ?bridgeLabel)\n(SAMPLE(?watercourse) AS ?watercourse) (SAMPLE(?watercourseLabel) AS ?watercourseLabel)\n(SAMPLE(?loc) AS ?loc) (SAMPLE(?pic) AS ?pic)\n(CONCAT(SAMPLE(?sKey),\": \",STR(YEAR(SAMPLE(?s)))) AS ?start)\n(CONCAT(SAMPLE(?eKey),\": \",STR(YEAR(SAMPLE(?e)))) AS ?end)\n(SAMPLE(?article) AS ?article) (IF(BOUND(?article),CONCAT(?bridgeLabel,\" in Wikipedia\"),1/0) AS ?articleLabel)\nWHERE {\n{\nSELECT ?bridge ?watercourse WHERE {\n?bridge wdt:P31/wdt:P279* wd:Q12280; wdt:P177 ?watercourse.\n?watercourse wdt:P31/wdt:P279* wd:Q355304.\n# the following actually yields a perf penalty atm\n#?bridge wdt:P17 wd:Q183.\n#OPTIONAL { ?bridge wdt:P17 ?country. }. FILTER(!BOUND(?country) {{!",
        "complexity_description": "Multiple SAMPLE and CONCAT functions, nested queries, and OPTIONAL clause",
        "complexity": "complex"
    },
    {
        "id": "564",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?name ?coord ?lat ?lon ?globe\n{\n?item wdt:P31 wd:Q429088 ;\np:P625 [\npsv:P625 [\nwikibase:geoLatitude ?lat ;\nwikibase:geoLongitude ?lon ;\nwikibase:geoGlobe ?globe ;\n] ;\nps:P625 ?coord\n]\nFILTER ( ?globe != wd:Q2 )\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n?item rdfs:label ?name\n}\n}\nORDER BY ASC (?name)",
        "complexity_description": "Multiple filters, subqueries and services",
        "complexity": "complex"
    },
    {
        "id": "565",
        "valid_gpt_response": true,
        "query": "SELECT ?place ?placeLabel ?location WHERE {\nwd:Q933 wdt:P625 ?southPole. # coordinates of south pole\n?place wdt:P30 wd:Q51; # continent: antarctica\nwdt:P625 ?location.\nFILTER(geof:distance(?location, ?southPole) > 3000). # over 3000km away from south pole\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Filter with geospatial function and multiple triple patterns",
        "complexity": "medium"
    },
    {
        "id": "566",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?adjacent ?adjacentL ?coords\n{\n?item wdt:P31/wdt:P279* wd:Q928830 ;\nwdt:P81 wd:Q13224 ;\nwdt:P625 ?coords .\nOPTIONAL {\n?item p:P197 [ ps:P197 ?adjacent ; pq:P5051 wd:Q585752;\npq:P81 wd:Q13224] .\n?adjacent rdfs:label ?adjacentL FILTER (lang(?adjacentL) = \"en\")\n}\n?item wdt:P1619 ?founded_date. #needs existence\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple triple patterns, optional clause, and service call",
        "complexity": "complex"
    },
    {
        "id": "567",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?venue ?venueLabel ?coords {\n?venue wdt:P1217 ?IDBDB .\nwd:Q235065 wdt:P625 ?broadWayLoc .\nSERVICE wikibase:around {\n?venue wdt:P625 ?coords .\nbd:serviceParam wikibase:center ?broadWayLoc .\nbd:serviceParam wikibase:radius \"1.5\" .\n}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}",
        "complexity_description": "Multiple services, geospatial query",
        "complexity": "complex"
    },
    {
        "id": "568",
        "valid_gpt_response": true,
        "query": "SELECT ?state ?stateLabel ?borders\nWHERE\n{\n{\nSELECT ?state (COUNT(?otherState) as ?borders)\nWHERE\n{\n?state wdt:P31 wd:Q35657 .\n?otherState wdt:P47 ?state .\n?otherState wdt:P31 wd:Q35657 .\n}\nGROUP BY ?state\n}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .\n}\n}\nORDER BY DESC(?borders)",
        "complexity_description": "Subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "569",
        "valid_gpt_response": true,
        "query": "SELECT ?place ?location ?elev ?image\nWHERE\n{\n  ?place p:P2044/psv:P2044 ?placeElev.\n  ?placeElev wikibase:quantityAmount ?elev.\n  ?placeElev wikibase:quantityUnit ?unit.\n  bind(0.01 as ?km).\n  filter( (?elev < ?km*1000 && ?unit = wd:Q11573)\n       || (?elev < ?km*3281 && ?unit = wd:Q3710)\n       || (?elev < ?km      && ?unit = wd:Q828224) ).\n  ?place wdt:P625 ?location.\n  OPTIONAL { ?place wdt:P18 ?image }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Multiple filters, optional clause and service call",
        "complexity": "complex"
    },
    {
        "id": "570",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?inseeCode {\n?item wdt:P374 ?inseeCode .\nFILTER (?inseeCode in (\"75056\", \"69123\", \"13055\"))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Filter and service clause",
        "complexity": "medium"
    },
    {
        "id": "571",
        "valid_gpt_response": true,
        "query": "SELECT ?muni ?muniLabel ?location where {\n?muni p:P31 ?instanceOf; # Get statement because we need this later\nwdt:P625 ?location. # And location\n?instanceOf ps:P31 wd:Q2039348. # P31 should be 'municipality of the Netherlands'\nMINUS { ?muni wdt:P31 wd:Q7265977. } # Don't show former municipalities\nMINUS { ?instanceOf pq:P582 ?endTime. } # And don't show municipalities that have an end time\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"nl\". } # Show names in Dutch\n}",
        "complexity_description": "Multiple filters and minus clauses",
        "complexity": "medium"
    },
    {
        "id": "572",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?count\nWHERE\n{\n{\nSELECT ?item (COUNT(DISTINCT ?country) AS ?count) WHERE {\n?item wdt:P31/wdt:P279* wd:Q41176 .\n?item wdt:P17 ?country .\nFILTER NOT EXISTS { ?country wdt:P576 ?end }\n}\nGROUP BY ?item\n}\nFILTER ( ?count > 1 )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}\nORDER BY DESC(?count) ?itemL",
        "complexity_description": "Multiple subqueries, filters and group by",
        "complexity": "complex"
    },
    {
        "id": "573",
        "valid_gpt_response": true,
        "query": "SELECT ?atm ?geometry ?bank ?bankLabel WHERE {\nhint:Query hint:optimizer \"None\".\nSERVICE <http://linkedgeodata.org/sparql> {\n{ ?atm a lgdo:Bank; lgdo:atm true. }\nUNION { ?atm a lgdo:Atm. }\n?atm geom:geometry [geo:asWKT ?geometry];\nlgdo:operator ?operator.\nFILTER(bif:st_intersects(?geometry, bif:st_point(11.5746898, 48.1479876), 5)) # 5 km around Munich\n}\nBIND(STRLANG(?operator, \"de\") as ?bankLabel)\n?bank rdfs:label ?bankLabel.\n# bank is part of the Bankcard service network, either via an explicit statement or implicitly due to its legal form (unless explicitly excluded)\n{ ?bank wdt:P527 wd:Q806724. }\nUNION { ?bank wdt:P1454 wd:Q5349747. }\nMINUS { wd:Q806724 wdt:P3113 ?bank. }\n}",
        "complexity_description": "Multiple UNIONs, FILTER, BIND, and MINUS clauses with multiple triple patterns",
        "complexity": "complex"
    },
    {
        "id": "574",
        "valid_gpt_response": true,
        "query": "SELECT ?place ?location ?distance ?placeLabel WHERE {\nSERVICE wikibase:around {\n?place wdt:P625 ?location .\nbd:serviceParam wikibase:center \"Point(-122.402251 37.789246)\"^^geo:wktLiteral .\nbd:serviceParam wikibase:radius \"1\" .\nbd:serviceParam wikibase:distance ?distance .\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?distance LIMIT 100",
        "complexity_description": "Multiple services, filters and ordering",
        "complexity": "medium"
    },
    {
        "id": "575",
        "valid_gpt_response": true,
        "query": "SELECT ?island ?islandLabel ?islandImage\nWITH {\nSELECT DISTINCT *\nWHERE {\n# Instances of island (or of subclasses of island)\n?island (wdt:P31/wdt:P279*) wd:Q23442.\n# Optionally with an image\nOPTIONAL { ?island wdt:P18 ?islandImage. }\n# Get the area of the island\n# Use the psn: prefix to normalize the values to a common unit of area\n?island p:P2046/psn:P2046/wikibase:quantityAmount ?islandArea.\n}\nORDER BY DESC(?islandArea)\nLIMIT 10\n} AS %i\nWHERE {\nINCLUDE %i\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY DESC(?islandArea)",
        "complexity_description": "Multiple subqueries, optional patterns, and service calls",
        "complexity": "complex"
    },
    {
        "id": "576",
        "valid_gpt_response": true,
        "query": "SELECT ?town ?townLabel ?gate ?gateLabel where {\n# Municipalities within the province\n?muni wdt:P31 wd:Q2039348;\nwdt:P131 wd:Q705.\n# Instances of city gate located within any of the municipalities\n?gate wdt:P31 wd:Q82117;\nwdt:P131 ?muni;\n# The Location (usually Town) that the gate is in\nwdt:P276 ?town.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"nl\". }\n}",
        "complexity_description": "Multiple triple patterns, SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "577",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?coor ?area_sqkm ?area_scale_km\n{\n?item wdt:P31/wdt:P279* wd:Q35666 .\nOPTIONAL { ?item wdt:P625 ?coor }\nOPTIONAL { ?item p:P2046 [ a wikibase:BestRank; psn:P2046/wikibase:quantityAmount ?area_sqm ] .\nBIND( ROUND(?area_sqm/10000)/100 as ?area_sqkm)\nBIND( strlen(str(ROUND(?area_sqm/1000000))) as ?area_scale_km)\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple optional patterns, property paths, and calculations",
        "complexity": "complex"
    },
    {
        "id": "578",
        "valid_gpt_response": true,
        "query": "SELECT ?cc (COUNT(DISTINCT ?child) AS ?number) {\n?child wdt:P31 wd:Q5 ; # Looking for real humans and not fictional ones\nwdt:P39/wdt:P279* wd:Q83307 ;\n(wdt:P22|wdt:P25) [wdt:P39/wdt:P279* wd:Q83307] ;\nwdt:P27/wdt:P901 ?cc\n}\nGROUP BY ?cc\nORDER BY DESC(?number)",
        "complexity_description": "Multiple triple patterns, property paths, and aggregation",
        "complexity": "complex"
    },
    {
        "id": "579",
        "valid_gpt_response": true,
        "query": "SELECT ?building ?buildingLabel ?country ?countryLabel ?picture\nWHERE\n{\n?building wdt:P31 wd:Q7138926 .\n?building wdt:P18 ?picture .\nOPTIONAL { ?building wdt:P17 ?country } . #if available\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}\nORDER BY ?countryLabel\nLIMIT 188",
        "complexity_description": "Optional clause, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "580",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?disease) AS ?total) (SUM(?ref) AS ?byDO) (100*?byDO/?total AS ?percent)\nWHERE\n{\n{?disease wdt:P31 wd:Q12136 }\nUNION\n{?disease wdt:P279 wd:Q12136 .}\nOPTIONAL {\n?disease p:P699 ?statement.\nBIND(1 AS ?ref).\n}\n}",
        "complexity_description": "Union, optional pattern, and aggregate functions",
        "complexity": "complex"
    },
    {
        "id": "581",
        "valid_gpt_response": true,
        "query": "SELECT ?DiseaseLabel ((?min / 86400) AS ?Minimal_Incubation_Time) ((?max / 86400) AS ?Maximum_Incubation_Time)\nWHERE {\n?Disease wdt:P31/wdt:P279* wd:Q18123741 .\n?Disease p:P3488/psn:P3488/wikibase:quantityAmount ?min .\n?Disease p:P3487/psn:P3487/wikibase:quantityAmount ?max\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}\nORDER BY ?DiseaseLabel",
        "complexity_description": "Multiple joins, subqueries and aggregations",
        "complexity": "complex"
    },
    {
        "id": "582",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?ncbi_gene ?date_modified\nWHERE\n{\n?item wdt:P351 ?ncbi_gene ;\nwdt:P703 wd:Q15978631 ;\nschema:dateModified ?date_modified .\nBIND (now() - ?date_modified as ?date_range)\nFILTER (?date_range < 8)\n}",
        "complexity_description": "Filter and Bind functions",
        "complexity": "medium"
    },
    {
        "id": "583",
        "valid_gpt_response": true,
        "query": "SELECT ?variant_typeLabel (count(?variant_typeLabel) as ?counts)\nWHERE\n{\n?item wdt:P3329 ?civic_id ;\nwdt:P31 ?variant_type .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nGROUP BY ?variant_typeLabel\nORDER BY ?counts",
        "complexity_description": "Multiple triple patterns, SERVICE clause, GROUP BY and ORDER BY",
        "complexity": "medium"
    },
    {
        "id": "584",
        "valid_gpt_response": true,
        "query": "SELECT ?geneLabel ?variantLabel\nWHERE\n{\nVALUES ?disease {wd:Q188874}\n?variant wdt:P3358 ?disease ; # P3358 Positive prognostic predictor\nwdt:P3433 ?gene . # P3433 biological variant of\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Simple query with VALUES and SERVICE clause",
        "complexity": "simple"
    },
    {
        "id": "585",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?civic_id ?item ?itemLabel\nWHERE\n{\nVALUES ?property {\nwdt:P3356 # positive diagnostic predictor\nwdt:P3357 # negative diagnostic predictor\nwdt:P3358 # positive prognostic predicator\nwdt:P3359 # negative prognostic predictor\n}\n?item wdt:P3329 ?civic_id .\n{?item ?property wd:Q1164529.} # wd:Q1164529 = renal cell carcinoma\nUNION\n{?item p:P3354 ?o . # positive therapeutic predictor\n?o pq:P2175 wd:Q1164529 .}\nUNION\n{?item p:P3354 ?o . # negative therapeutic predictor\n?o pq:P2175 wd:Q1164529 .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Multiple UNION operators, VALUES clause, and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "586",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?reference ?referenceLabel ?pmid\nWHERE\n{\n?item wdt:P3329 ?civicId ;\n?property ?object .\n?object prov:wasDerivedFrom ?provenance .\n?provenance pr:P248 ?reference .\n?reference wdt:P31 wd:Q13442814 ;\nwdt:P698 ?pmid .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Multiple joins, filters and service call",
        "complexity": "complex"
    },
    {
        "id": "587",
        "valid_gpt_response": true,
        "query": "SELECT ?propertyLabel (count(?prognostic_type) as ?counts)\nWHERE\n{\nVALUES ?prognostic_type {wdt:P3354 wdt:P3355 wdt:P3356 wdt:P3357 wdt:P3358 wdt:P3359}\n?item wdt:P3329 ?civic_id ;\n?prognostic_type ?prognostic_value .\n?property wikibase:directClaim ?prognostic_type .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nGROUP BY ?propertyLabel ?prognostic_typeLabel\nORDER BY ?counts",
        "complexity_description": "Multiple joins, grouping and aggregation",
        "complexity": "complex"
    },
    {
        "id": "588",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?uniprotid ?tax_node\nWHERE\n{\n?item wdt:P352 ?uniprotid ;\nwdt:P703 wd:Q15978631 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Simple query with 2 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "589",
        "valid_gpt_response": true,
        "query": "SELECT ?compound ?compoundLabel ?speciesLabel ?sourceLabel ?doi ?wpid WHERE {\n?compound wdt:P31 wd:Q11173.\nMINUS { ?compound wdt:P31 wd:Q8054. }\n?compound p:P703 ?statement.\n?statement rdf:type wikibase:BestRank.\n?statement ps:P703 ?species.\nOPTIONAL {\n?statement (prov:wasDerivedFrom/pr:P248) ?source.\nOPTIONAL { ?source wdt:P2410 ?wpid. }\nOPTIONAL { ?source wdt:P356 ?doi. }\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ASC(?compound)",
        "complexity_description": "Multiple filters, optional patterns and service call",
        "complexity": "complex"
    },
    {
        "id": "590",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?wpid ?metaboliteLabel ?pKa ?pKa2 ?metabolite2Label ?wpid2\nWITH {\nSELECT ?wpid ?source_pathway ?metabolite ?pKa ?pKa2 ?metabolite2 ?wpid2\nWHERE {\n# VALUES ?wpid { \"WP550\" }\n?pathway wdt:P2410 ?wpid ;\nwdt:P527 ?metabolite ;\nwdt:P2888 ?source_pathway .\n?metabolite wdt:P1117 ?pKa .\nSERVICE <http://sparql.wikipathways.org/sparql> {\n?wp_mb1 wp:bdbWikidata ?metabolite .\n?wp_mb1 dcterms:isPartOf ?interaction .\n?interaction rdf:type wp:Interaction .\n?wp_mb2 dcterms:isPartOf ?interaction .\n?wp_mb2 wp:bdbWikidata ?metabolite2 .\nFILTER (?wp_mb1 != ?wp_mb2)\n}\n}\n} AS %result\nWHERE {\nINCLUDE %result\n?metabolite2 wdt:P1117 ?pKa2 .\n?pathway2 wdt:P2410 ?wpid2 ;\nwdt:P527 ?metabolite2 ;\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple services, subqueries, and filters",
        "complexity": "complex"
    },
    {
        "id": "591",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?pic ?linkTo\nWHERE\n{\nSERVICE gas:service {\ngas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.SSSP\" ;\ngas:in wd:Q1968598;\ngas:traversalDirection \"Reverse\" ;\ngas:out ?item ;\ngas:out1 ?depth ;\ngas:maxIterations 3 ;\ngas:linkType wdt:P171 .\n}\nOPTIONAL { ?item wdt:P171 ?linkTo }\nOPTIONAL { ?item wdt:P18 ?pic }\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Multiple services, optional patterns, and custom analytics program",
        "complexity": "complex"
    },
    {
        "id": "592",
        "valid_gpt_response": true,
        "query": "SELECT ?pathway ?pathwayLabel ?wpid WHERE {\n?pathway wdt:P2410 ?wpid ;\nwdt:P703 wd:Q15978631 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Simple query with 2 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "593",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?biomarkerLabel ?proteinLabel ?geneID ?WP_gene ?PathwayID ?PathwayName #results that are displayed.\nWHERE {\nVALUES ?biomarker {wd:Q420633 wd:Q27125809 wd:Q422462} #you can add more biomarkers here if needed, separated by a space.\n?biomarker wdt:P31 wd:Q11173. #Stating that all biomarkers have to be \"instance of\" \"chemical compound\" (you could ommit this, but query will probably take longer).\n?biomarker wdt:P638 ?pdbID . #Checking if a biomarker has a Protein Databank ID (PDB) -> meaning the metabolite can interact with a protein.\n?protein wdt:P31 wd:Q8054 . #Stating that all proteins are \"instance of\" \"protein\"\n?protein wdt:P638 ?pdbID . #Checking which proteins have a PDB ID, which we queried previously in relationship to the biomarkers.\n?protein wdt:P702 ?gene . #Connecting the protein to a gene (\"encoded by\" relationship) -> to get an identifier we can use later in federated WikiPathways query.\n?gene wdt:P703 wd:Q15978631 . #Now removing all genes that are not found in species \"Homo sapiens\". -> This info is not always available for proteins in WikiData.\n?gene wdt:P2888 ?geneID . #Getting the \"exact match\" identifier for the gene, related to the protein, related to the biomarker.\n##The IRI from Wikidata starts with http:// , where the one from WikiPathways starts with https:// , so we need to rewrite the IRI\nBIND( # Bind the created IRI into a new variable (called ?newIRI)\nIRI( # Convert the string back to an IRI\nCONCAT( # Concatenate item 1 and 2 together as one string\n\"https\", # First item to concat (more items can be added with a comma\n#Second item to concat:\nSUBSTR( # Obtain a substring\nSTR(?geneID), # Convert the geneID IRI from Wikidata to a string,\n5) # removing the first 5 characters (<http)\n)) AS ?newIRI # Name for the new variable\n)\nSERVICE <http://sparql.wikipathways.org/sparql> { #Connecting to the WikiPathways SPARQL endpoint.\n?WP_pathway a wp:Pathway . #Stating a ?WP_pathway is indeed a pathway in the WikiPathways RDF .\n?WP_pathway wp:organismName \"Homo sapiens\" . #Removing all PWs not for species Homo sapiens.\n?WP_pathway dc:identifier ?PathwayID . #Query the identifier of the pathway in WPs.\n?WP_pathway dc:title ?PathwayName . #Obtaining the name of the pathway.\n?WP_gene a wp:Protein . #Stating that a ?WP_gene is a Protein DataNode (you could ommit this, to also get all DataNodes modeled as GeneProducts out, but query will take longer).\n?WP_gene wp:bdbEntrezGene ?newIRI . #Connecting the previously queried \"exact match\" from WikiData to the NCBI/Entrez Gene ID in WPs.\n?WP_gene dcterms:isPartOf ?WP_pathway . #Connecting the WP_gene to the WP_pathway.\n}\nOPTIONAL {?biomarker rdfs:label ?biomarkerLabel. #Create a label (aka name) for the biomarkers in WikiData, without using the service query.\nFILTER(LANG(?biomarkerLabel) = \"en\").\n}\nOPTIONAL {?protein rdfs:label ?proteinLabel. #Create a label(aka name) for the proteins in WikiData, without using the service query.\nFILTER(LANG(?proteinLabel) = \"en\").\n}\n}\nORDER BY DESC (?biomarkerLabel) #Order results for biomarkers",
        "complexity_description": "Multiple joins, subqueries, and federated queries",
        "complexity": "complex"
    },
    {
        "id": "594",
        "valid_gpt_response": true,
        "query": "SELECT ?citation ?citationLabel (count(?pathway) as ?times_cited) WHERE {\n?pathway wdt:P2410 ?WikiPathwaysID ;\nwdt:P2860 ?citation .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?pathway ?citation ?citationLabel",
        "complexity_description": "Uses SERVICE, GROUP BY and aggregation function",
        "complexity": "medium"
    },
    {
        "id": "595",
        "valid_gpt_response": true,
        "query": "SELECT ?path ?genes ?metabolites ?pathway WHERE {\n{SELECT DISTINCT ?path (COUNT(?pwPart) AS ?genes) WHERE {\n?path wdt:P2410 ?WikipathsID.\n?path wdt:P527 ?pwPart.\n?pwPart wdt:P31 wd:Q7187.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?path ?genes\n}\n{SELECT DISTINCT ?path (COUNT(?pwPart) AS ?metabolites) WHERE {\n?path wdt:P2410 ?WikipathsID.\n?path wdt:P527 ?pwPart.\n?pwPart wdt:P31 wd:Q11173.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?path ?metabolites\n}\nOPTIONAL { ?path rdfs:label ?pathway. }\n}\nORDER BY DESC(?genes)",
        "complexity_description": "Multiple subqueries, grouping and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "596",
        "valid_gpt_response": true,
        "query": "SELECT ?pathway ?pathwayLabel ?WikiPathways ?Reactome (COUNT(DISTINCT ?protein) as ?count) WHERE {\nVALUES ?pathwayType { wd:Q4915012 wd:Q2996394 }\n?pathway wdt:P31 ?pathwayType .\n{ ?pathway wdt:P527/wdt:P688 ?protein . } UNION { ?pathway wdt:P527 ?protein . }\n?protein wdt:P638 ?PDBID .\nOPTIONAL { ?pathway wdt:P2410 ?WikiPathways }\nOPTIONAL { ?pathway wdt:P3937 ?Reactome }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?pathway ?pathwayLabel ?WikiPathways ?Reactome\nORDER BY DESC(?count)",
        "complexity_description": "Multiple UNION, OPTIONAL, and SERVICE clauses with grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "597",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?pathway ?pathwayLabel ?pwpart ?pwpartLabel ?variant ?variantLabel ?disease?diseaseLabel WHERE {\nVALUES ?predictor {p:P3354 p:P3355 p:P3356 p:P3357 p:P3358 p:P3359}\nVALUES ?predictorQualifier {pq:P2175}\nVALUES ?wpID {\"WP2828\"}\n?pathway wdt:P2410 ?wpID ; # Pathways has a Wikipathways identifier\nwdt:P527 ?pwpart . # which contains pathways parts\n?disease wdt:P279+ wd:Q504775 . # The disease is a subclass of urinary bladder cancer\n# based on annotations in the Disease ontology\n?variant wdt:P3329 ?civicID ; # a variant known in CIViC\n?predictor ?node ; # has a predicting relation with diseases\n# labeled as being a subclass of urinary bladder cancer\nwdt:P3433 ?pwpart . # variant is biological variant of\n{?node ?predictorStatement ?drug_label ;\n?predictorQualifier ?disease .}\nUNION\n{\n?node ?predictorStatement ?disease .\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple VALUES, UNION, and SERVICE clauses with several triple patterns",
        "complexity": "complex"
    },
    {
        "id": "598",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?interaction_type WHERE {\nVALUES ?wpid {\"WP716\"}\n?item wdt:P2410 ?wpid ;\nwdt:P2888 ?source_pathway .\nSERVICE <http://sparql.wikipathways.org/sparql> {\n?wp_pathway dc:identifier ?source_pathway .\n?s dcterms:isPartOf ?wp_pathway, ?interaction .\n?interaction rdf:type wp:Interaction .\n?interaction rdf:type ?interaction_type .\n?interaction wp:participants ?participants .\n}\n}",
        "complexity_description": "Multiple services, joins and filters",
        "complexity": "complex"
    },
    {
        "id": "599",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?pw_annotation WHERE {\nVALUES ?wpid {\"WP716\"}\n?item wdt:P2410 ?wpid ;\nwdt:P2888 ?source_pathway .\nSERVICE <http://sparql.wikipathways.org/sparql> {\n?wp_pathway dc:identifier ?source_pathway .\n?wp_pathway wp:ontologyTag ?pw_annotation .\n# ?pw_annotation rdfs:label ?annotation_label .\n}\n}",
        "complexity_description": "Multiple services, VALUES clause, and multiple triple patterns",
        "complexity": "medium"
    },
    {
        "id": "600",
        "valid_gpt_response": true,
        "query": "SELECT ?moleculeLabel ?formule ?picture ?molecule\nWHERE\n{\n?molecule wdt:P31 wd:Q12140\n; wdt:P274 ?formule\n; wdt:P117 ?picture\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, de\" . }\n}\nORDER BY ?moleculeLabel",
        "complexity_description": "Simple query with 3 filters and a service call",
        "complexity": "simple"
    },
    {
        "id": "601",
        "valid_gpt_response": true,
        "query": "SELECT ?organism_name\nWHERE\n{\n?organism_item wdt:P2974 wd:Q5880\n; rdfs:label ?organism_name .\n?gene wdt:P703 ?organism_item\n; wdt:P1056 wd:Q319541 .\nFILTER (LANG(?organism_name) = \"en\") .\n}",
        "complexity_description": "Multiple triple patterns, filter",
        "complexity": "medium"
    },
    {
        "id": "602",
        "valid_gpt_response": true,
        "query": "SELECT ?animal ?scientific_names ?common_names ?statusLabel where\n{\n# hint:Prior hint:runLast true\n{\nSELECT DISTINCT ?animal (GROUP_CONCAT(DISTINCT ?scientific_name; separator=\", \") as ?scientific_names) (GROUP_CONCAT(DISTINCT ?common_name; separator=\", \") as ?common_names) WHERE\n{\n?animal wdt:P141 ?status;\nwdt:P225 ?scientific_name;\nwdt:P1843 ?common_name.\nfilter( ?status\nIN (\nwd:Q11394, #Endangered\nwd:Q219127, #critcally endangered\nwd:Q278113 #vulnurable\n)\n).\n# Only return common names in English\nFILTER(LANGMATCHES(LANG(?common_name), \"en\"))\n}\nGROUP BY ?animal\n}.\n?animal wdt:P141 ?status.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple subqueries, grouping and filtering",
        "complexity": "complex"
    },
    {
        "id": "603",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?idExtension ?extension ?mediaType ?idExtensionLabel\nWHERE\n{\n?idExtension wdt:P31 wd:Q235557\n; wdt:P1195 ?extension .\nOPTIONAL { ?idExtension wdt:P1163 ?mediaType }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nORDER BY ?extension ?mediaType",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "604",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?standard ?standardLabel ?website\nWHERE\n{\n?standard wdt:P1462 wd:Q37033 .\nOPTIONAL{ ?standard wdt:P856 ?website }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nORDER BY ?standardLabel",
        "complexity_description": "Simple query with optional pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "605",
        "valid_gpt_response": true,
        "query": "SELECT ?software ?softwareLabel ?date (ROUND((NOW() - ?date)/365.2425) AS ?age)\n{\n?software wdt:P31/wdt:P139* wd:Q7397.\nOPTIONAL { ?software wdt:P571 ?date. }\nOPTIONAL { ?software p:P348/pq:P577 ?date. }\nFILTER(BOUND(?date)).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?date\nLIMIT 10",
        "complexity_description": "Multiple optional patterns, filter and service clause",
        "complexity": "medium"
    },
    {
        "id": "606",
        "valid_gpt_response": true,
        "query": "SELECT ?app ?appLabel (COUNT(?format) AS ?count)\nWHERE {\n?app (p:P31/ps:P31/wdt:P279) wd:Q7397 .\n?app wdt:P1072 ?format .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}\nGROUP BY ?app ?appLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, service call and aggregation",
        "complexity": "medium"
    },
    {
        "id": "607",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?mediaType (COUNT (?ff) as ?count)\nWHERE\n{\n?ff wdt:P31/wdt:P279* wd:Q235557.\n?ff wdt:P1163 ?mediaType.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nGROUP BY ?mediaType\nORDER BY DESC (?count)",
        "complexity_description": "Multiple triple patterns, service call and aggregation",
        "complexity": "medium"
    },
    {
        "id": "608",
        "valid_gpt_response": true,
        "query": "SELECT ?compound ?compoundLabel ?pKa ?source ?sourceLabel ?doi\nWHERE\n{\n?compound wdt:P31 wd:Q11173 ; p:P1117 ?statement .\n?statement rdf:type wikibase:BestRank ;\nps:P1117 ?pKa .\nOPTIONAL {\n?statement prov:wasDerivedFrom/pr:P248 ?source .\nOPTIONAL { ?source wdt:P356 ?doi . }\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } #English label\n}",
        "complexity_description": "Multiple joins, optional patterns and service call",
        "complexity": "complex"
    },
    {
        "id": "609",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?compound ?compoundLabel ?cas\nWHERE\n{\n?compound wdt:P231 ?cas .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Simple query with one triple pattern and a service call",
        "complexity": "simple"
    },
    {
        "id": "610",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?cas ?compound1 ?compound1Label ?compound2 ?compound2Label WHERE {\n?compound1 wdt:P231 ?cas .\n?compound2 wdt:P231 ?cas .\nFILTER (?compound1 != ?compound2)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Two triple patterns, one filter and a service call",
        "complexity": "medium"
    },
    {
        "id": "611",
        "valid_gpt_response": true,
        "query": "SELECT ?cas ?items\nWHERE\n{\n{SELECT DISTINCT ?cas (count(?compound) as ?items) WHERE {\n?compound wdt:P231 ?cas .\n}\nGROUP BY ?cas }\nFILTER (?items >1)\n}\nORDER BY desc(?items)",
        "complexity_description": "Subqueries, aggregation and filtering",
        "complexity": "complex"
    },
    {
        "id": "612",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?when (YEAR(?when) as ?date) ?pic\nWHERE {\n?item p:P166 ?awardStat . # ... with an awarded(P166) statement\n?awardStat ps:P166 wd:Q44585 . # ... that has the value Nobel Prize in Chemistry (Q35637)\n?awardStat pq:P585 ?when . # when did they receive the Nobel prize\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\nOPTIONAL { ?item wdt:P18 ?pic }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "613",
        "valid_gpt_response": true,
        "query": "SELECT ?compound ?compoundLabel ?image WHERE {\n?compound wdt:P279+|wdt:P31+ wd:Q421948 ;\nwdt:P18|wdt:P117 ?image .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple predicates, property paths and service call",
        "complexity": "medium"
    },
    {
        "id": "614",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?comp ?compLabel ?formula ?bp ?bpUnit ?bpUnitLabel WHERE {\n?comp wdt:P31/wdt:P279* wd:Q41581 ;\nwdt:P274 ?formula ;\np:P2102 [\nps:P2102 ?bp ;\npsv:P2102/wikibase:quantityUnit ?bpUnit\n] .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?bpUnit) ASC(?bp)",
        "complexity_description": "Multiple triple patterns, property paths, and service call",
        "complexity": "complex"
    },
    {
        "id": "615",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?chemical ?chemicalLabel ?value ?units ?unitsLabel ?solvent ?solventLabel ?temperature ?temperatureUnit ?temperatureUnitLabel ?source ?sourceLabel ?doi\nWITH {\nSELECT DISTINCT ?chemical ?value ?units ?source ?doi ?solvent ?temperature ?temperatureUnit WHERE {\n?chemical ?propp ?statement .\n?statement a wikibase:BestRank ;\n?proppsv [\nwikibase:quantityAmount ?value ;\nwikibase:quantityUnit ?units\n] .\nOPTIONAL {\n?statement prov:wasDerivedFrom/pr:P248 ?source .\nOPTIONAL { ?source wdt:P356 ?doi . }\n}\n?property wikibase:claim ?propp ;\nwikibase:statementValue ?proppsv ;\nwdt:P1629 wd:Q170731 ;\nwdt:P31 wd:Q21077852 .\nOPTIONAL {\n?statement pqv:P2076 ?temperatureNode .\n?temperatureNode wikibase:quantityAmount ?temperature ;\nwikibase:quantityUnit ?temperatureUnit .\n}\nOPTIONAL {\nwd:P2178 wikibase:qualifier ?qualifierS .\n?qualifierS a owl:ObjectProperty .\n?statement ?qualifierS ?solvent .\n}\n} GROUP BY ?chemical ?value ?units ?temperature ?temperatureUnit ?solvent ?source ?doi\n} AS %result\nWHERE {\nINCLUDE %result\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ASC(?propEntityLabel)",
        "complexity_description": "Multiple optional patterns, subqueries, and property paths",
        "complexity": "complex"
    },
    {
        "id": "616",
        "valid_gpt_response": true,
        "query": "SELECT ?discoverer ?discovererLabel ?count\nWITH {\nSELECT ?discoverer (COUNT(?asteroid) AS ?count)\nWHERE {\n?asteroid wdt:P31 wd:Q3863;\nwdt:P61 ?discoverer .\n}\nGROUP BY ?discoverer\nORDER BY DESC(?count)\nLIMIT 20\n} AS %i\nWHERE {\nINCLUDE %i\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, grouping, ordering and limiting",
        "complexity": "complex"
    },
    {
        "id": "617",
        "valid_gpt_response": true,
        "query": "SELECT\n?discoverer ?discovererLabel\n(COUNT(DISTINCT ?planet) as ?count)\n(GROUP_CONCAT(DISTINCT(?planetLabel); separator=\", \") as ?planets)\nWHERE\n{\n?ppart wdt:P279* wd:Q634 .\n?planet wdt:P31 ?ppart .\n?planet wdt:P61 ?discoverer .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n?discoverer rdfs:label ?discovererLabel .\n?planet rdfs:label ?planetLabel\n}\n}\nGROUP BY ?discoverer ?discovererLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple joins, subqueries, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "618",
        "valid_gpt_response": true,
        "query": "SELECT ?spaceProbeLabel ?date ?picture\nWHERE\n{\n?spaceProbe wdt:P31 wd:Q26529;\nwdt:P18 ?picture;\nwdt:P619 ?date . #mandatory\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"fr,en\" .\n}\n}\nORDER BY ?date\nLIMIT 88",
        "complexity_description": "Multiple triple patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "619",
        "valid_gpt_response": true,
        "query": "SELECT ?gender (count(DISTINCT ?human) as ?number)\nWHERE\n{\n?human wdt:P31 wd:Q5\n; wdt:P21 ?gender\n; wdt:P106/wdt:P279* wd:Q901 .\n}\nGROUP BY ?gender\nLIMIT 10",
        "complexity_description": "Multiple triple patterns, group by and aggregation function",
        "complexity": "medium"
    },
    {
        "id": "620",
        "valid_gpt_response": true,
        "query": "SELECT ?eponym ?eponymLabel ?count ?sample ?sampleLabel\nWHERE\n{\n{\nSELECT ?eponym (COUNT(?item) as ?count) (SAMPLE(?item) AS ?sample)\nWHERE\n{\n?item wdt:P138 ?eponym.\n?eponym wdt:P106 wd:Q170790.\n}\nGROUP BY ?eponym\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nORDER BY DESC(?count)",
        "complexity_description": "Subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "621",
        "valid_gpt_response": true,
        "query": "SELECT ?occupationLabel (count(DISTINCT ?author) as ?count)\nWHERE\n{\n?object wdt:P31 wd:Q13442814\n; wdt:P50 ?author .\n?author wdt:P106 ?occupation .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,fr\" }\n}\nGROUP BY ?occupationLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple joins, aggregation and ordering",
        "complexity": "complex"
    },
    {
        "id": "622",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?person ?personLabel ?_image ?award ?awardLabel\nWHERE {\n?person wdt:P166 ?award ; #person received an award\nwdt:P31 wd:Q5 . #person is instance of human\n?award wdt:P31/wdt:P279* wd:Q7191 . #award is a Nobel Prize\n?item wdt:P50 ?person ; #person is an author of item\nwdt:P31 wd:Q13442814 . #item is a scientific article\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\nOPTIONAL { ?person wdt:P18 ?_image. } #Wikimedia Commons has an image of person\n}",
        "complexity_description": "Multiple joins, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "623",
        "valid_gpt_response": true,
        "query": "SELECT ?entity ?entityLabel ?authorLabel WHERE {\nVALUES ?author {wd:Q18016466} #initialize \"?author with the Wikidata item \"Lydia Pintscher\"\n?entity wdt:P31 wd:Q13442814. #filter by scientific articles\n?entity wdt:P50 ?author.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Simple query with VALUES and SERVICE clause",
        "complexity": "simple"
    },
    {
        "id": "624",
        "valid_gpt_response": true,
        "query": "SELECT ?doi (COUNT (?entry) as ?entries)\n{\n?entry ?p ?statement .\n?statement prov:wasDerivedFrom/pr:P248/wdt:P356 ?doi .\n}\nGROUP BY ?doi\nORDER BY DESC(?entries)",
        "complexity_description": "Multiple triple patterns, grouping and aggregation",
        "complexity": "medium"
    },
    {
        "id": "625",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT (?statement) as ?statements)\nWHERE\n{\n?entry ?p ?statement .\n?statement prov:wasDerivedFrom/\n<http://www.wikidata.org/prop/reference/P248>/\nwdt:P356 ?doi .\n}",
        "complexity_description": "Two triple patterns, one property path",
        "complexity": "medium"
    },
    {
        "id": "626",
        "valid_gpt_response": true,
        "query": "SELECT ?entryRes ?entry ?statement\nWHERE\n{\n?entryRes ?p ?statement ;\nrdfs:label ?entry .\n?statement prov:wasDerivedFrom/\n<http://www.wikidata.org/prop/reference/P248>/\nwdt:P356 \"10.1021/JA01577A030\" .\nFILTER(lang(?entry) = \"en\")\n}",
        "complexity_description": "Multiple triple patterns, property path and filter",
        "complexity": "medium"
    },
    {
        "id": "627",
        "valid_gpt_response": true,
        "query": "SELECT ?English ?language ?label WHERE {\n?disease wdt:P699 \"DOID:399\";\nrdfs:label ?English;\nrdfs:label ?label .\nBIND(LANG(?label) as ?languageCode)\n?wdLanguage wdt:P424 ?languageCode;\nrdfs:label ?language .\nFILTER EXISTS {?wdLanguage wdt:P31?/wdt:P279+ wd:Q17376908}\nFILTER (LANG(?English)=\"en\")\nFILTER (LANG(?language)=\"en\")\n} ORDER BY ?language",
        "complexity_description": "Multiple filters, joins and language bindings",
        "complexity": "complex"
    },
    {
        "id": "628",
        "valid_gpt_response": true,
        "query": "SELECT\n?genderLabel\n?theorem\n?theoremLabel\n?nameLabel\n?death\n?formula\nWHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,de,pl\". }\n?theorem wdt:P31 wd:Q65943;\nwdt:P138 ?name.\n?name wdt:P570 ?death;\nwdt:P21 ?gender .\n# OPTIONAL{\n?theorem wdt:P2534 ?formula.\n# }\n}\nORDER BY DESC(?death)\nLIMIT 100",
        "complexity_description": "Multiple joins, optional clause and ordering",
        "complexity": "medium"
    },
    {
        "id": "629",
        "valid_gpt_response": true,
        "query": "SELECT ?object ?objectLabel ?mass WHERE {\n{\nSELECT ?object (MAX(?mass) AS ?mass) WHERE {\n?object p:P2067/psn:P2067/wikibase:quantityAmount ?mass.\nMINUS { ?object wdt:P31 wd:Q3647172. }\n}\nGROUP BY ?object\nORDER BY DESC(?mass)\nLIMIT 100\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC(?mass)",
        "complexity_description": "Multiple subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "630",
        "valid_gpt_response": true,
        "query": "SELECT ?p ?pLabel ?ppicture ?w ?wLabel ?wpicture WHERE {\nBIND(wd:Q30 AS ?country)\n?country (p:P6/ps:P6) ?p.\n?p wdt:P26 ?w.\nOPTIONAL {\n?p wdt:P18 ?ppicture.\n?w wdt:P18 ?wpicture.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, optional clause and service call",
        "complexity": "complex"
    },
    {
        "id": "631",
        "valid_gpt_response": true,
        "query": "SELECT ?h ?hLabel ?cause ?causeLabel (YEAR(?date) AS ?year) WHERE {\n?h wdt:P39 wd:Q11696;\nwdt:P509 ?cause;\nwdt:P570 ?date\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?year",
        "complexity_description": "Multiple triple patterns, service call and aggregation function",
        "complexity": "medium"
    },
    {
        "id": "632",
        "valid_gpt_response": true,
        "query": "SELECT ?cid ?cause (count(*) as ?count)\nWHERE\n{\n?pid wdt:P39 wd:Q11696 .\n?pid wdt:P509 ?cid .\nOPTIONAL {\n?cid rdfs:label ?cause FILTER (lang(?cause) = \"en\") .\n}\n}\nGROUP BY ?cid ?cause\nORDER BY DESC(?count) ASC(?cause)",
        "complexity_description": "Multiple triple patterns, optional clause, group by and order by",
        "complexity": "medium"
    },
    {
        "id": "633",
        "valid_gpt_response": true,
        "query": "SELECT ?politician ?cause ?politician_label ?cause_of_death_label\nWHERE\n{\n?politician wdt:P106 wd:Q82955 . # find items that have \"occupation (P106): politician (Q82955)\"\n?politician wdt:P509 ?cause . # with a P509 (cause of death) claim\n?cause wdt:P279* wd:Q12078 . # ... where the cause is a subclass of (P279*) cancer (Q12078)\n# ?politician wdt:P39 wd:Q11696 . # Uncomment this line to include only U.S. Presidents\nOPTIONAL {?politician rdfs:label ?politician_label FILTER (lang(?politician_label) = \"en\") .}\nOPTIONAL {?cause rdfs:label ?cause_of_death_label FILTER (lang(?cause_of_death_label) = \"en\").}\n}\nORDER BY ASC (?politician)",
        "complexity_description": "Multiple triple patterns, optional blocks and filtering",
        "complexity": "medium"
    },
    {
        "id": "634",
        "valid_gpt_response": true,
        "query": "SELECT ?link ?linkLabel ?picture ?age\nWHERE\n{\n?link wdt:P31 wd:Q5 ;\np:P39 [ ps:P39 wd:Q19546 ; pq:P580 ?startTime ] .\nOPTIONAL { ?link wdt:P569 ?dateOfBirth }\nOPTIONAL { ?link wdt:P18 ?picture }\nOPTIONAL { ?link wdt:P570 ?dateOfDeath }\nBIND(YEAR(?dateOfDeath) - YEAR(?dateOfBirth) as ?age)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr,en\" }\n}\nORDER BY DESC(?startTime)",
        "complexity_description": "Multiple optional patterns, service call and bind function",
        "complexity": "complex"
    },
    {
        "id": "635",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?h ?hLabel ?inception ?dissolved ?coor\nWHERE\n{\n  VALUES ?countryclass { wd:Q3024240 wd:Q6256 wd:Q3624078 }\n  ?h p:P31/ps:P31 ?countryclass .\n  ?h wdt:P571 ?inception .\n  OPTIONAL { ?h wdt:P576 ?dissolved } .\n  FILTER (?inception < \"1755-01-01T00:00:00Z\"^^xsd:dateTime)\n  FILTER (?dissolved >= \"1755-01-01T00:00:00Z\"^^xsd:dateTime || !Bound(?dissolved) )\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n  OPTIONAL { ?h wdt:P625 ?coor } .\n}\nORDER BY ?inception",
        "complexity_description": "Multiple filters, optional patterns and service call",
        "complexity": "complex"
    },
    {
        "id": "636",
        "valid_gpt_response": true,
        "query": "SELECT ?objectLabel (YEAR(?date) as ?year)\n?population (?objectLabel as ?Location)\nWHERE\n{\nwd:Q458 wdt:P150 ?object . # European Union contains administrative territorial entity\n?object p:P1082 ?populationStatement .\n?populationStatement ps:P1082 ?population\n; pq:P585 ?date .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\nFILTER (YEAR(?date) >= 1960)\n}\nORDER BY ?objectLabel ?year",
        "complexity_description": "Multiple joins, filters and service calls",
        "complexity": "complex"
    },
    {
        "id": "637",
        "valid_gpt_response": true,
        "query": "SELECT ?h ?hLabel ?location (CONCAT(\"injured: \",str(?injured)) as ?injuredl) (concat(\"dead: \",str(?dead)) as ?deadl) ?date ?image\nWHERE\n{\n?h wdt:P31 ?attack.\nvalues (?attack) {\n(wd:Q18493502)\n(wd:Q217327)\n}\nOPTIONAL { ?h wdt:P1339 ?injured . }\nOPTIONAL { ?h wdt:P1120 ?dead. }\nOPTIONAL { ?h wdt:P276?/wdt:P625 ?location }\nOPTIONAL { ?h wdt:P585 ?date }\nOPTIONAL { ?h wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Multiple optional patterns, values block and service call",
        "complexity": "medium"
    },
    {
        "id": "638",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?genderLabel (GROUP_CONCAT(DISTINCT ?occupationLabel; SEPARATOR=\", \") AS ?occupations) (GROUP_CONCAT(DISTINCT ?countryLabel; SEPARATOR=\", \") AS ?countries) ?death ?articles {\nVALUES ?target_country { wd:Q16 wd:Q142 wd:Q39 wd:Q31 wd:Q30 } . #countries: Canada, France, Switzerland, Belgium, USA. Removing this line to get worldwide may cause a query timeout.\nVALUES ?occ { wd:Q2500638 wd:Q20826540 wd:Q215627 } . #occupation: creator, erudite, person. These 3 occupations will also look for subclasses. Example: Alan Turing is a cryptographer, a subclass of cryptologist, a subclass of mathematician, a subclass of scientist, a subclass of erudite.\n?item wdt:P31 wd:Q5;\nwdt:P21 ?gender;\nwdt:P27 ?target_country;\nwdt:P27 ?country;\nwdt:P106/wdt:P279* ?occ ;\nwdt:P106 ?occupation;\nwikibase:sitelinks ?articles . #Service to count the number of articles in Wikipedia language versions. The higher the number, the greater the chances that the person is very notorious.\n?item wdt:P570 ?death . hint:Prior hint:rangeSafe true .\nFILTER( ?death >= \"1969-01-01T00:00:00\"^^xsd:dateTime && ?death < \"1970-01-01T00:00:00\"^^xsd:dateTime ) #death: public domain \"life+50 years\". Change both years to get a list in different legislation. Example for USA: life+70 years\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"fr,en\" . #Service to retrieve the labels of items, in order of language. Example: if the label does not exist in French, the service will take the English label\n?item rdfs:label ?itemLabel .\n?gender rdfs:label ?genderLabel .\n?occupation rdfs:label ?occupationLabel .\n?country rdfs:label ?countryLabel .\n} .\n} GROUP BY ?item ?itemLabel ?genderLabel ?death ?articles ORDER BY DESC (?articles) #Order by the number of articles in Wikipedia language versions. The most notorious people will be at the top of the list.",
        "complexity_description": "Multiple filters, group concat, and service calls",
        "complexity": "complex"
    },
    {
        "id": "639",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?start ?end WHERE {\n?person wdt:P31 wd:Q5;\np:P27 [\nrdf:type wdno:P27;\npq:P580 ?start;\npq:P582 ?end\n].\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?end - ?start)",
        "complexity_description": "Multiple triple patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "640",
        "valid_gpt_response": true,
        "query": "SELECT ?poet ?poetLabel WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],zh-hant,zh\". }\nwd:Q253774 wdt:P580 ?battleStartTime.\nwd:Q253774 wdt:P582 ?battleEndTime.\n?poet wdt:P106 wd:Q49757.\n?poet wdt:P497 ?cbdbId.\n?poet wdt:P569 ?birthDate.\nFILTER(?birthDate < ?battleStartTime).\n?poet wdt:P570 ?deathDate.\nFILTER(?deathDate > ?battleEndTime).\n}",
        "complexity_description": "Multiple filters, multiple triple patterns",
        "complexity": "medium"
    },
    {
        "id": "641",
        "valid_gpt_response": true,
        "query": "SELECT ?era ?eraLabel (YEAR(?start_time) AS ?start) (YEAR(?end_time) AS ?end) ?namedLabel ?namedDescription WHERE {\n?era wdt:P31 wd:Q11514315; wdt:P361 wd:Q130436; # eras of the history of Japan\nwdt:P580 ?start_time.\nMINUS { ?era wdt:P2348/wdt:P361 wd:Q130436 } # exclude sub-eras\nOPTIONAL { ?era wdt:P582 ?end_time } # optional end-time to make sure we include the current era\nOPTIONAL { ?era wdt:P138 ?named }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ?start DESC(?end)",
        "complexity_description": "Multiple filters, optional patterns and service call",
        "complexity": "complex"
    },
    {
        "id": "642",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?dateofbirth WHERE {\nwd:Q154952 (wdt:P22|wdt:P25)* ?item .\nOPTIONAL { ?item wdt:P569 ?dateofbirth } .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "643",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel\nWHERE\n{\n?item p:P585/ps:P585 \"2001-09-11T00:00:00Z\"^^xsd:dateTime\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Single pattern with service call",
        "complexity": "medium"
    },
    {
        "id": "644",
        "valid_gpt_response": true,
        "query": "SELECT (GROUP_CONCAT(?classLabel; SEPARATOR = \"; \") AS ?classes) ?propLabel ?i ?iLabel ?iDescription WHERE {\n{\nSELECT ?i ?prop ?class WHERE {\n{\nSELECT ?prop ?p WHERE {\n?prop wikibase:directClaim ?p;\n(wdt:P31/(wdt:P279*)) wd:Q18636219.\n}\n}\n?i ?p \"2001-5-11\"^^xsd:dateTime.\nOPTIONAL { ?i wdt:P31 ?class }\n}\nLIMIT 1000\n}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?class rdfs:label ?classLabel.\n?prop rdfs:label ?propLabel.\n?i rdfs:label ?iLabel;\nschema:description ?iDescription.\n}\n}\nGROUP BY ?propLabel ?i ?iLabel ?iDescription",
        "complexity_description": "Multiple nested subqueries, optional patterns, and grouping",
        "complexity": "complex"
    },
    {
        "id": "645",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?placeLabel ?coords ?image\nWHERE\n{\n?item wdt:P31 wd:Q2977 .\n?item wdt:P131 ?place .\n?place wdt:P131 wd:Q90 .\nOPTIONAL { ?item wdt:P625 ?coords . }\nOPTIONAL { ?item wdt:P18 ?image . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" . }\n} ORDER BY ?placeLabel ?itemLabel",
        "complexity_description": "Multiple joins, optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "646",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?pbLabel (SAMPLE(?cat) AS ?cat) (SAMPLE(?coord) AS ?coord) (SAMPLE(?img) AS ?img)\nWHERE {\nwd:Q75849591 wdt:P527 [ wdt:P527 ?item; wdt:P361 ?pb ].\n?pb wdt:P31 wd:Q76598130.\n?item wdt:P625 ?coord.\nOPTIONAL { ?item wdt:P373 ?cat. }\nOPTIONAL { ?item wdt:P18 ?img. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"de\". }\n} GROUP BY ?item ?itemLabel ?pbLabel",
        "complexity_description": "Multiple joins, optional patterns and service call",
        "complexity": "complex"
    },
    {
        "id": "647",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?museumLabel ?museumDescription ?villeId ?villeIdLabel (?villeIdLabel AS ?ville) ?coord ?lat ?lon\nWHERE\n{\n?museum wdt:P539 ?museofile. # french museofile Id\n?museum wdt:P131* wd:Q12130. # in Brittany\n?museum wdt:P131 ?villeId. #city of the museum\n# ?object wdt:P166 wd:Q2275045 # that have french label \"musees de France\"\nOPTIONAL {?museum wdt:P856 ?link.} # official website\nOPTIONAL {?museum wdt:P625 ?coord .} # geographic coord\nOPTIONAL {\n?museum p:P625 ?statement.\n?statement psv:P625 ?node.\n?node wikibase:geoLatitude ?lat.\n?node wikibase:geoLongitude ?lon.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\". } #french label\n}\nORDER BY ?villeIdLabel",
        "complexity_description": "Multiple optional patterns, property paths and service calls",
        "complexity": "complex"
    },
    {
        "id": "648",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?name ?coord ?lat ?lon\nWHERE\n{\nhint:Query hint:optimizer \"None\" .\n?item wdt:P131* wd:Q1492 .\n?item wdt:P31/wdt:P279* wd:Q33506 .\n?item wdt:P625 ?coord .\n?item p:P625 ?coordinate .\n?coordinate psv:P625 ?coordinate_node .\n?coordinate_node wikibase:geoLatitude ?lat .\n?coordinate_node wikibase:geoLongitude ?lon .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"ca\" .\n?item rdfs:label ?name\n}\n}\nORDER BY ASC (?name)",
        "complexity_description": "Multiple joins, subqueries and filters",
        "complexity": "complex"
    },
    {
        "id": "649",
        "valid_gpt_response": true,
        "query": "SELECT ?human ?humanLabel ?yob ?yod ?picture\nWHERE\n{\n?human wdt:P31 wd:Q5\n; wdt:P106 wd:Q33999 .\n?human wdt:P18 ?picture .\nOPTIONAL { ?human wdt:P569 ?dob . ?human wdt:P570 ?dod }.\nBIND(YEAR(?dob) as ?yob) . #if available: year\nBIND(YEAR(?dod) as ?yod) .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}\nLIMIT 88",
        "complexity_description": "Multiple triple patterns, OPTIONAL clause, BIND functions, and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "650",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?actor ?actorLabel ?characterLabel ?movie1Label ?movie2Label WHERE {\n?movie1 p:P161 [\nps:P161 ?actor;\npq:P453 ?character\n];\nwdt:P577 ?movie1Publication.\n?movie2 p:P161 [\nps:P161 ?actor;\npq:P453 ?character\n];\nwdt:P577 ?movie2Publication.\nMINUS{?movie1 wdt:P31/wdt:P279? wd:Q24856} # Not a series\nMINUS{?movie2 wdt:P31/wdt:P279? wd:Q24856} # Not a series\nFILTER(?character != wd:Q18086706). # Not as \"themselves\"\nFILTER(?movie1Publication + \"P40Y\"^^xsd:duration < ?movie2Publication) # 40 years between them\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple filters, minus clauses and service calls",
        "complexity": "complex"
    },
    {
        "id": "651",
        "valid_gpt_response": true,
        "query": "SELECT ?film ?filmLabel ?genere ?d WHERE {\n{\nSELECT ?film (GROUP_CONCAT(DISTINCT ?gL; SEPARATOR = \", \") AS ?genere) (MIN(YEAR(?date)) AS ?d) WHERE {\n?sitelink schema:about ?director;\nschema:isPartOf <https://en.wikipedia.org/>;\nschema:name \"Steven Spielberg\"@en. # Edit this with different director's name to see their films. Use the English Wikipedia title only.\n?film wdt:P31 wd:Q11424;\nwdt:P136 ?g, ?g.\n?g rdfs:label ?gL.\n?film wdt:P57 ?director;\nwdt:P577 ?date.\nFILTER((LANG(?gL)) = \"en\")\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?film\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC (?d)",
        "complexity_description": "Multiple subqueries, grouping, and filtering",
        "complexity": "complex"
    },
    {
        "id": "652",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?awardLabel ?time\n{\n?item wdt:P106/wdt:P279* wd:Q3455803 ; # Items with the Occupation(P106) of Director(Q3455803) or a subclass(P279)\np:P166 ?awardStat . # ... with an awarded(P166) statement\n?awardStat pq:P805 ?award ; # Get the award (which is \"subject of\" XXth Academy Awards)\nps:P166 wd:Q103360 . # ... that has the value Academy Award for Best Director(Q103360)\n?award wdt:P585 ?time . # the \"point of time\" of the Academy Award\nSERVICE wikibase:label { # ... include the labels\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\"\n}\n}\nORDER BY DESC(?time)",
        "complexity_description": "Multiple joins, subqueries and filters",
        "complexity": "complex"
    },
    {
        "id": "653",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?Person ?PersonLabel ?NobelPrizeLabel ?AcademyAwardLabel WHERE {\n?NobelPrize wdt:P279?/wdt:P31? wd:Q7191 . # <- subtypes of nobel prize\n?AcademyAward wdt:P279?/wdt:P31? wd:Q19020 . # <- subtypes of academy award\n?Person wdt:P166? ?NobelPrize . # <- people awarded a nobel prize\n?Person wdt:P166? ?AcademyAward . # <- people awarded an academy award\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .\n}\n}",
        "complexity_description": "Multiple triple patterns, service call and property paths",
        "complexity": "medium"
    },
    {
        "id": "654",
        "valid_gpt_response": true,
        "query": "SELECT ?awardCount ?award ?awardLabel WHERE {\n{\nSELECT (COUNT(?award) AS ?awardCount) ?award\nWHERE\n{\n{\nSELECT (SAMPLE(?human) AS ?human) ?award ?awardWork (SAMPLE(?director) AS ?director) (SAMPLE(?awardEdition) AS ?awardEdition) (SAMPLE(?time) AS ?time) WHERE {\n?award wdt:P31 wd:Q19020 . # All items that are instance of(P31) of Academy awards (Q19020)\n{\n?human p:P166 ?awardStat . # Humans with an awarded(P166) statement\n?awardStat ps:P166 ?award . # ... that has any of the values of ?award\n?awardStat pq:P805 ?awardEdition . # Get the award edition (which is \"subject of\" XXth Academy Awards)\n?awardStat pq:P1686 ?awardWork . # The work they have been awarded for\n?human wdt:P31 wd:Q5 . # Humans\n} UNION {\n?awardWork wdt:P31 wd:Q11424 . # Films\n?awardWork p:P166 ?awardStat . # ... with an awarded(P166) statement\n?awardStat ps:P166 ?award . # ... that has any of the values of ?award\n?awardStat pq:P805 ?awardEdition . # Get the award edition (which is \"subject of\" XXth Academy Awards)\n}\nOPTIONAL {\n?awardEdition wdt:P585 ?time . # the \"point of time\" of the Academy Award\n?awardWork wdt:P57 ?director .\n}\n}\nGROUP BY ?awardWork ?award # We only want every movie once for a category (a 'random' person is selected)\n}\n} GROUP BY ?award\nORDER BY ASC(?awardCount)\n}\nSERVICE wikibase:label { # ... include the labels\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .\n}\n}",
        "complexity_description": "Multiple nested subqueries, UNION operator, and OPTIONAL clause",
        "complexity": "complex"
    },
    {
        "id": "655",
        "valid_gpt_response": true,
        "query": "SELECT ?director ?director_label ?films ?sitelinks ((?films * ?sitelinks) as ?rank)\nWHERE {\n{SELECT ?director (count(DISTINCT ?film) as ?films) (count(DISTINCT ?sitelink) as ?sitelinks)\nWHERE {\n?director wdt:P106 wd:Q2526255 . # has \"film director\" as occupation\n?film wdt:P57 ?director . # get all films directed by the director\n?sitelink schema:about ?director . # get all the sitelinks about the director\n} GROUP BY ?director }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". # Get label if it exists\n?director rdfs:label ?director_label }\n} ORDER BY DESC(?rank)\nLIMIT 100",
        "complexity_description": "Multiple subqueries, aggregation functions and service calls",
        "complexity": "complex"
    },
    {
        "id": "656",
        "valid_gpt_response": true,
        "query": "SELECT ?show ?showLabel ?seasonNumber ?episode ?episodeLabel\nWHERE {\nBIND(wd:Q886 as ?show) .\n?season wdt:P361 ?show;\nwdt:P527 ?episode;\np:P179 [pq:P1545 ?seasonNumber] .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nORDER BY xsd:integer(?seasonNumber)",
        "complexity_description": "Uses BIND, SERVICE, and ORDER BY with multiple triple patterns",
        "complexity": "medium"
    },
    {
        "id": "657",
        "valid_gpt_response": true,
        "query": "SELECT (SAMPLE(?seasonNumber) AS ?seasonNumber) (SAMPLE(?episodeNumber) AS ?episodeNumber) (SAMPLE(?title) AS ?title) (MIN(?pubDate) AS ?pubDate) ?episode\n{\n# All episodes should be instance of episode with series Law & Order.\n?episode wdt:P31 wd:Q21191270;\nwdt:P179 wd:Q321423.\n# Many of them also have the season as series, so we can get episode and season number from qualifiers there.\nOPTIONAL {\n?episode p:P179 [\n# the season also has series Law & Order\nps:P179/p:P179 [\nps:P179 wd:Q321423;\npq:P1545 ?seasonNumber\n] ;\npq:P1545 ?episodeNumber\n]\n}\nOPTIONAL { ?episode wdt:P1476 ?title. }\nOPTIONAL { ?episode wdt:P577 ?pubDate. }\n}\nGROUP BY ?episode # make sure we return each episode only once - a few have multiple publication dates, for example\nORDER BY IF(BOUND(?seasonNumber), xsd:integer(?seasonNumber), 1000) xsd:integer(?episodeNumber) ?title",
        "complexity_description": "Multiple optional patterns, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "658",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?episode ?ordinal ?episodeLabel ?subject ?subjectLabel\nWHERE {\n?episode wdt:P31/wdt:P279* wd:Q1983062;\np:P179 ?statement.\nOPTIONAL{ ?episode wdt:P921 ?subject }\n?statement ps:P179 wd:Q3577037;\npq:P1545 ?ordinal\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY xsd:integer(?ordinal)",
        "complexity_description": "Multiple triple patterns, optional clause, and service call",
        "complexity": "complex"
    },
    {
        "id": "659",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel (MIN(?date) AS ?firstReleased) ?_image\nWHERE {\n?item wdt:P161 wd:Q221074;\nwdt:P577 ?date\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nOPTIONAL { ?item wdt:P18 ?_image. }\n} GROUP BY ?item ?itemLabel ?_image\nORDER BY (?date)",
        "complexity_description": "Multiple triple patterns, optional clause, and aggregation function",
        "complexity": "medium"
    },
    {
        "id": "660",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription (SAMPLE(?img) AS ?image) (SAMPLE(?dob) AS ?dob) ?sl\nWHERE {\n?item wdt:P106 wd:Q33999 ;\nwdt:P27 wd:Q668 ;\nwdt:P21 wd:Q6581072 .\nMINUS { ?item wdt:P570 [] }\nOPTIONAL { ?item wdt:P18 ?img }\nOPTIONAL { ?item wdt:P569 ?dob }\nOPTIONAL { ?item wikibase:sitelinks ?sl }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\"}\n} GROUP BY ?item ?itemLabel ?itemDescription ?sl\nORDER BY DESC(?sl)",
        "complexity_description": "Multiple OPTIONAL clauses, MINUS and SERVICE keywords",
        "complexity": "complex"
    },
    {
        "id": "661",
        "valid_gpt_response": true,
        "query": "SELECT ?sitelink\nWHERE\n{\n# gender = female\n?item wdt:P21 wd:Q6581072 .\n# country = Pakistan (Q25)\n{ ?item wdt:P27 wd:Q843 }\n# occupation = actress (Q33999)\n{ ?item wdt:P106 wd:Q33999 }\n# look for articles (sitelinks) in Punjabi (\"pa\")\n{ ?sitelink schema:about ?item . ?sitelink schema:inLanguage \"pa\" }\n# humans only\n?item wdt:P31 wd:Q5 .\n}\nLIMIT 5000",
        "complexity_description": "Multiple filters and joins with language constraint",
        "complexity": "medium"
    },
    {
        "id": "662",
        "valid_gpt_response": true,
        "query": "SELECT ?doctor ?doctorLabel ?ordinal ?performer ?performerLabel\nWHERE {\n?doctor wdt:P31 wd:Q47543030 .\nOPTIONAL { ?doctor wdt:P1545 ?ordinal }\nOPTIONAL { ?doctor p:P175 / ps:P175 ?performer }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nORDER BY ASC(xsd:integer(?ordinal) )",
        "complexity_description": "Multiple optional patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "663",
        "valid_gpt_response": true,
        "query": "SELECT ?movie ?movieLabel ?narrative_location ?narrative_locationLabel ?coordinates WHERE {\n?movie wdt:P840 ?narrative_location ;\nwdt:P31 wd:Q11424 .\n?narrative_location wdt:P625 ?coordinates .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Simple query with 3 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "664",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel WHERE {\n?item wdt:P31 wd:Q11424.\n?item wdt:P577 ?pubdate.\nFILTER((?pubdate >= \"2017-01-01T00:00:00Z\"^^xsd:dateTime) && (?pubdate <= \"2017-12-31T00:00:00Z\"^^xsd:dateTime))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns, one filter and a service call",
        "complexity": "medium"
    },
    {
        "id": "665",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?writer ?place ?linkcount\nWHERE\n{\n{?s wdt:P106 wd:Q36180 .} UNION { ?s wdt:P106 wd:Q482980 . } UNION { ?s wdt:P106 wd:Q49757 . }\n?s wdt:P27 ?pl .\n?s wikibase:sitelinks ?linkcount .\nOPTIONAL {\n?s rdfs:label ?writer FILTER (lang(?writer) = \"en\").\n}\nOPTIONAL {\n?pl rdfs:label ?place FILTER (lang(?place) = \"en\").\n}\n} GROUP BY ?place ?writer ?linkcount HAVING (?linkcount > 10) ORDER BY DESC(?linkcount)",
        "complexity_description": "Multiple UNIONs, OPTIONAL clauses, and FILTERs with language conditions",
        "complexity": "complex"
    },
    {
        "id": "666",
        "valid_gpt_response": true,
        "query": "SELECT ?subj ?subjLabel ?place ?placeLabel ?coord ?birthyear\nWHERE {\n?subj wdt:P106 wd:Q49757 .\n?subj wdt:P19 ?place .\n?place wdt:P17 wd:Q183 .\n?place wdt:P625 ?coord .\nOPTIONAL { ?subj wdt:P569 ?dob }\nBIND(YEAR(?dob) as ?birthyear)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Multiple joins, optional clause and function usage",
        "complexity": "medium"
    },
    {
        "id": "667",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?label ?coord ?place\nWHERE\n{\nVALUES ?type {wd:Q571 wd:Q7725634} # book or literary work\n?item wdt:P31 ?type .\n?item wdt:P577 ?date FILTER (?date < \"1830-01-01T00:00:00Z\"^^xsd:dateTime) .\n?item rdfs:label ?label FILTER (lang(?label) = \"en\")\nOPTIONAL {\n?item (wdt:P291|wdt:P840) ?place . # publication or narration place is ?place\n?place wdt:P625 ?coord\n}\n}",
        "complexity_description": "Multiple filters, optional clause and property paths",
        "complexity": "medium"
    },
    {
        "id": "668",
        "valid_gpt_response": true,
        "query": "SELECT ?s ?desc (COUNT(DISTINCT ?label) as ?labelcount)\nWHERE\n{\n?s wdt:P31 wd:Q7725634 .\n?s rdfs:label ?label .\nOPTIONAL {\n?s rdfs:label ?desc FILTER (lang(?desc) = \"en\").\n}\n} GROUP BY ?s ?desc ORDER BY DESC(?labelcount)",
        "complexity_description": "Optional clause, aggregation and filtering",
        "complexity": "medium"
    },
    {
        "id": "669",
        "valid_gpt_response": true,
        "query": "SELECT ?s ?desc\nWHERE\n{\n?s wdt:P279 wd:Q7725634 .\nOPTIONAL {\n?s rdfs:label ?desc FILTER (lang(?desc) = \"en\").\n}\n}",
        "complexity_description": "Simple query with one triple pattern and an optional block",
        "complexity": "simple"
    },
    {
        "id": "670",
        "valid_gpt_response": true,
        "query": "SELECT ?s ?desc (COUNT(DISTINCT ?label) as ?labelcount)\nWHERE\n{\n?s wdt:P31 wd:Q37484 .\n?s rdfs:label ?label .\nOPTIONAL {\n?s rdfs:label ?desc FILTER (lang(?desc) = \"en\").\n}\n} GROUP BY ?s ?desc ORDER BY DESC(?labelcount)",
        "complexity_description": "Optional clause, aggregation and filtering",
        "complexity": "medium"
    },
    {
        "id": "671",
        "valid_gpt_response": true,
        "query": "SELECT ?s ?desc ?linkcount\nWHERE\n{\n?s wdt:P31 wd:Q37484 .\n?s wikibase:sitelinks ?linkcount .\nOPTIONAL {\n?s rdfs:label ?desc FILTER (lang(?desc) = \"en\").\n}\n} GROUP BY ?s ?desc ?linkcount ORDER BY DESC(?linkcount)",
        "complexity_description": "Multiple triple patterns, optional clause, group by and order by",
        "complexity": "medium"
    },
    {
        "id": "672",
        "valid_gpt_response": true,
        "query": "SELECT ?s ?desc ?linkcount\nWHERE\n{\n?s wdt:P31 wd:Q571 .\n?s wikibase:sitelinks ?linkcount .\nOPTIONAL {\n?s rdfs:label ?desc FILTER (lang(?desc) = \"en\").\n}\n} GROUP BY ?s ?desc ?linkcount ORDER BY DESC(?linkcount)",
        "complexity_description": "Multiple triple patterns, optional clause, and group by/order by",
        "complexity": "medium"
    },
    {
        "id": "673",
        "valid_gpt_response": true,
        "query": "SELECT ?poetLabel ?image ?yob ?yod ?start ?end ?monarchLabel\nWHERE\n{\n?poet p:P39 ?positionStat.\n?positionStat ps:P39 wd:Q877838;\npq:P580 ?start;\npq:P748 ?monarch.\nOPTIONAL {\n?positionStat pq:P582 ?end.\n}\nOPTIONAL {\n?poet wdt:P18 ?image;\nwdt:P569 ?dob;\nwdt:P570 ?dod.\n}\nBIND(YEAR(?dob) AS ?yob).\nBIND(YEAR(?dod) AS ?yod).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nORDER BY ?start DESC(?monarchLabel)",
        "complexity_description": "Multiple optional patterns, service call and bind operations",
        "complexity": "complex"
    },
    {
        "id": "674",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?website\nWHERE {\n?item wdt:P31/wdt:P279* wd:Q212805 # digital libraries or subtypes\nOPTIONAL { ?item wdt:P856 ?website } # Official URL if known\nMINUS { ?item wdt:P576 [] } # Exclude those that have shut down\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, es, ca, fr, de, pl, uk, ru, he\" }\n}\nORDER BY ?itemLabel",
        "complexity_description": "Multiple patterns with OPTIONAL and MINUS clauses",
        "complexity": "medium"
    },
    {
        "id": "675",
        "valid_gpt_response": true,
        "query": "SELECT ?library ?libraryLabel ?coords WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr\". }\n?library (wdt:P31/wdt:P279*) wd:Q7075.\n?library wdt:P17 wd:Q16.\n?library wdt:P625 ?coords.\n}",
        "complexity_description": "Multiple triple patterns with service call",
        "complexity": "medium"
    },
    {
        "id": "676",
        "valid_gpt_response": true,
        "query": "SELECT ?nominee ?nomineeLabel (SAMPLE(?citizenshipLabel) AS ?country) (COUNT(DISTINCT ?year) as ?timesNominated)\nWHERE\n{\nBIND( wd:Q37922 as ?prize )\n?nominee p:P1411 [ ps:P1411 ?prize; pq:P585 ?time ]\nBIND( year(?time) as ?year )\nOPTIONAL {\n?nominee wdt:P27 [ rdfs:label ?citizenshipLabel ] FILTER (lang(?citizenshipLabel) = \"en\") .\n}\nFILTER NOT EXISTS { ?nominee wdt:P166 ?prize . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nGROUP BY ?nominee ?nomineeLabel\nORDER BY DESC(?timesNominated) ?nomineeLabel",
        "complexity_description": "Multiple filters, optional clause, and group by/order by",
        "complexity": "complex"
    },
    {
        "id": "677",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item WHERE\n{\n?item wdt:P31 wd:Q5 ;\nwdt:P106/wdt:P279* wd:Q482980 .\n?item wdt:P570 ?time0 .\nFILTER((?time0 >= \"1945-01-01T00:00:00Z\"^^xsd:dateTime) && (?time0 <= \"1946-01-01T00:00:00Z\"^^xsd:dateTime))\n}",
        "complexity_description": "Multiple triple patterns, property paths and filter",
        "complexity": "medium"
    },
    {
        "id": "678",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel\nWHERE\n{\n?item wdt:P31 wd:Q5. #instance of (P31) human (Q5)\n?item wdt:P27 wd:Q30. #country of citizenship (P27) is United States (Q30)\n?item wdt:P106 wd:Q36180. #occupation (P106) is writer (Q36180)\nMINUS { ?item wdt:P2963 [] } .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple filters with MINUS clause",
        "complexity": "medium"
    },
    {
        "id": "679",
        "valid_gpt_response": true,
        "query": "SELECT ?translator ?translatorLabel ?work ?workLabel ?author ?authorLabel {\n?work wdt:P655 ?translator;\nwdt:P50 ?author.\n?author wdt:P2533 ?wid;\nwdt:P21 wd:Q6581072;\nwdt:P569 ?birth;\nFILTER (?birth > \"1800-01-01\"^^xsd:dateTime && ?birth < \"1900-01-01\"^^xsd:dateTime)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl,fr\". }\n}",
        "complexity_description": "Multiple triple patterns with filter and service",
        "complexity": "medium"
    },
    {
        "id": "680",
        "valid_gpt_response": true,
        "query": "SELECT ?char ?charName (GROUP_CONCAT(DISTINCT ?typeLabel;separator=\", \") AS ?types) (GROUP_CONCAT(DISTINCT ?universeLabel;separator=\", \") AS ?universes)\nWHERE {\n?char wdt:P1080 wd:Q931597;\nwdt:P31 ?type ;\nwdt:P1080 ?universe .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?char rdfs:label ?charName .\n?universe rdfs:label ?universeLabel .\n?type rdfs:label ?typeLabel .}\n} GROUP BY ?char ?charName",
        "complexity_description": "Multiple group concat, service call and multiple joins",
        "complexity": "complex"
    },
    {
        "id": "681",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?character ?characterLabel ?birth ?death WITH {\n  # Fictional character subclasses as a named subquery\n  SELECT ?fictiontype WHERE {\n    ?fictiontype wdt:P279* wd:Q95074. hint:Prior hint:gearing \"forward\".\n  }\n} AS %i\nWHERE\n{\n  INCLUDE %i\n  ?character wdt:P31 ?fictiontype.\n  # Date of birth\n  { ?character wdt:P569 ?birth . }\n  # Date of death\n  UNION { ?character wdt:P570 ?death . }\n  # Get actual decade to compare with dates\n  BIND(xsd:integer(YEAR(NOW())/10) as ?actual_decade).\n  # Only show characters born or deceased in the current decade\n  FILTER(xsd:integer(YEAR(?birth)/10) = ?actual_decade || xsd:integer(YEAR(?death)/10) = ?actual_decade)\n  SERVICE wikibase:label {\n    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .\n  }\n} ORDER BY ?birth ?death",
        "complexity_description": "Multiple subqueries, UNION, BIND, FILTER and SERVICE clauses",
        "complexity": "complex"
    },
    {
        "id": "682",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?_coordinates ?_image WHERE {\n?item wdt:P106 wd:Q36834; # occupation: composer\nwdt:P18 ?_image; # with an image depicting them\nwdt:P19/wdt:P625 ?_coordinates # their birthplace, specifically the coordinates of their birthplace\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" } # labels in English\n}",
        "complexity_description": "Multiple filters and joins with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "683",
        "valid_gpt_response": true,
        "query": "SELECT ?composerLabel ?tonalityLabel ?count\nWHERE\n{\n{\n# 4. Group again, this time just by the composer.\n# We also select the highest count of a tonality.\n# Notice that we don't know what tonality this count is associated with - we'll get to that.\n# So now we have each composer, along with how often they used whatever tonality they used most.\nSELECT ?composer (MAX(?count) AS ?count_)\nWHERE\n{\n{\n# 2. Group by composer and tonality, so that for each composer and tonality, we get a count of how often the composer used this tonality.\nSELECT ?composer ?tonality (COUNT(?composition) AS ?count)\nWHERE\n{\n# 1. Extremely straightforward: the ?composition has the composer ?composer and the tonality ?tonality.\n# (I'm not bothering with any \"instance of\" because the presence of these two properties is a sufficient indicator of ?composition being a composition.)\n?composition wdt:P86 ?composer;\nwdt:P826 ?tonality.\n}\nGROUP BY ?composer ?tonality\nHAVING(?count > 1) # 3. Limit that to counts > 1, because using a tonality once is hardly \"most used\".\n}\n}\nGROUP BY ?composer\n}\n{\n# 6. Identical to 2.\nSELECT ?composer ?tonality (COUNT(?composition) AS ?count)\nWHERE\n{\n# 5. Identical to 1.\n?composition wdt:P86 ?composer;\nwdt:P826 ?tonality.\n}\nGROUP BY ?composer ?tonality\nHAVING(?count > 1) # 7. Identical to 3.\n}\n# 8. That's it. Wait, what?\n# From 4, we now have ?composer, any composer, and ?count, the count of how often they used whatever tonality they used most.\n# From 6, we also have a ?composer, as well as a ?tonality, and the count of how often they used that particular tonality.\n# The trick is that ?composer and ?count are the same variable in each subquery, and so now, when the two subqueries are joined,\n# we select only that ?tonality from 6 where the ?composer and the ?count are identical to those from 4 -\n# that is, where this tonality was used as often as the composer's most-used tonality.\n# In other words, this must *be* the composer's most-used tonality (except when there are multiple tonalities with the same count).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC(?count) # 9. Order by count (highest first), because the result isn't very meaningful for low counts (many compositions aren't on Wikidata or don't have a tonality statement).",
        "complexity_description": "Nested subqueries with grouping, filtering and joining",
        "complexity": "complex"
    },
    {
        "id": "684",
        "valid_gpt_response": true,
        "query": "SELECT ?band ?bandLabel\nWHERE\n{\n?band wdt:P31 wd:Q5741069 .\n?band rdfs:label ?bandLabel .\nFILTER(LANG(?bandLabel) = \"en\") .\nFILTER(STRSTARTS(?bandLabel, 'M')) .\n}",
        "complexity_description": "Two filters and two triple patterns",
        "complexity": "medium"
    },
    {
        "id": "685",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?human ?humanLabel\nWHERE\n{\nVALUES ?professions {wd:Q177220 wd:Q639669}\n?human wdt:P31 wd:Q5 .\n?human wdt:P106 ?professions .\n?human wdt:P136 ?genre .\n?human wikibase:statements ?statementcount .\n?genre rdfs:label ?genreLabel .\nFILTER CONTAINS(?genreLabel, \"rock\") .\nFILTER (?statementcount > 50 ) .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nORDER BY ?humanLabel\nLIMIT 50",
        "complexity_description": "Multiple filters, joins and subqueries",
        "complexity": "complex"
    },
    {
        "id": "686",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?dob ?dod (xsd:integer(?age_) as ?age)\nwhere {\n# We do a subquery here, because otherwise we'll get a timeout because of the labels\n{\nSELECT DISTINCT ?person ?dob ?dod ?age_\nwhere {\n?person wdt:P31 wd:Q5; # Get all humans\nwdt:P106/wdt:P279* wd:Q639669; # That have a musician or a subclass thereof as their occupation\np:P569 ?dob_st; # death of birth\np:P570 ?dod_st. # death of death\n?dob_st psv:P569 [ wikibase:timeValue ?dob; wikibase:timePrecision ?dob_prec ];\na wikibase:BestRank.\n?dod_st psv:P570 [ wikibase:timeValue ?dod; wikibase:timePrecision ?dod_prec ];\na wikibase:BestRank.\n# Only accept date precisions of a day or better, so it doesn't cause problems when we calculate age\nFILTER(?dob_prec >= 11 && ?dod_prec >= 11)\n# Time differences in Blazegraph are counted as days and is xsd:double\n# We then calculate the age by dividing this by the orbital period of Earth\n# This is a shortcut, but it is accurate enough for our purposes\nbind((?dod - ?dob) / 365.2564 as ?age_)\n# And filter by age\nfilter(?age_ >= 27.0 && ?age_ < 28.0)\n}\n#LIMIT 1000\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY desc(?dod) # Order by most recent",
        "complexity_description": "Multiple subqueries, filters and calculations",
        "complexity": "complex"
    },
    {
        "id": "687",
        "valid_gpt_response": true,
        "query": "SELECT ?label ?coord ?subj\nWHERE\n{\n?subj wdt:P170 wd:Q5593 .\nOPTIONAL {?subj wdt:P276 ?loc .\n?loc wdt:P625 ?coord } .\n?subj rdfs:label ?label FILTER (lang(?label) = \"en\")\n}",
        "complexity_description": "Optional clause, filter and multiple joins",
        "complexity": "medium"
    },
    {
        "id": "688",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?instanceLabel ?creatorLabel (YEAR(?date) as ?year) ?image\nWHERE\n{\n?item wdt:P180 wd:Q243 .\n?item wdt:P31 ?instance .\nOPTIONAL { ?item wdt:P170 ?creator }\nOPTIONAL { ?item wdt:P571 ?date }\nOPTIONAL { ?item wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}\nORDER BY ?itemLabel",
        "complexity_description": "Multiple optional patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "689",
        "valid_gpt_response": true,
        "query": "SELECT *\nWHERE\n{\n?item wdt:P31 wd:Q3305213 .\n?item wdt:P170 wd:Q34661 .\n?item wdt:P18 ?pic .\n}",
        "complexity_description": "Three simple triple patterns",
        "complexity": "simple"
    },
    {
        "id": "690",
        "valid_gpt_response": true,
        "query": "SELECT ?locationLabel ?coord (count(*) as ?count)\nWHERE\n{\n?painting wdt:P31 wd:Q3305213 .\n?painting wdt:P276 ?location .\n?location wdt:P625 ?coord\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nGROUP BY ?locationLabel ?coord",
        "complexity_description": "Multiple joins, group by and aggregation",
        "complexity": "medium"
    },
    {
        "id": "691",
        "valid_gpt_response": true,
        "query": "SELECT\n?item\n(SAMPLE (?itemL) AS ?title)\n(SAMPLE (?y) AS ?year)\n(SAMPLE (?typeL) AS ?type)\n(group_concat(DISTINCT ?materialL ; separator = \", \") as ?materials)\n(SAMPLE (?collectionL) AS ?collection)\n(SAMPLE (?img) AS ?image)\n{\nSELECT ?item ?itemL (YEAR(?date) AS ?y) ?typeL ?collectionL ?img ?materialL\nWHERE {\n?item wdt:P179 wd:Q471379 .\n?item wdt:P18 ?img .\n?item wdt:P571 ?date .\n?item wdt:P31 ?instance .\n?item rdfs:label ?itemL FILTER (lang(?itemL) = \"en\").\n?instance rdfs:label ?typeL FILTER (lang(?typeL) = \"en\").\nOPTIONAL {\n?item wdt:P195 ?collection .\n?collection rdfs:label ?collectionL FILTER (lang(?collectionL) = \"en\").\n}\nOPTIONAL {\n?item wdt:P186 ?material .\n?material rdfs:label ?materialL FILTER (lang(?materialL) = \"en\").\n}\n}\n}\nGROUP BY ?item\nORDER BY ?year ?item ?itemLabel",
        "complexity_description": "Multiple subqueries, OPTIONAL clauses, and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "692",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?depicts (SAMPLE(?dL) AS ?depictsLabel) (COUNT(DISTINCT ?item) AS ?count)\nWHERE\n{\n?item wdt:P180 ?depicts .\nOPTIONAL { ?depicts rdfs:label ?dL FILTER (lang(?dL) = \"en\") }\n}\nGROUP BY ?depicts\nORDER BY DESC(?count) ?depictsLabel",
        "complexity_description": "Uses GROUP BY, OPTIONAL clause and aggregate functions",
        "complexity": "medium"
    },
    {
        "id": "693",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?countryLabel ?placeLabel (YEAR(?date) as ?year) ?coords ?image\nWHERE\n{\n?item wdt:P31/wdt:P279* wd:Q860861 .\n?item wdt:P170 wd:Q123454 .\nOPTIONAL { ?item wdt:P17 ?country . }\nOPTIONAL { ?item wdt:P131 ?place . }\nOPTIONAL { ?item wdt:P571 ?date . }\nOPTIONAL { ?item wdt:P625 ?coords . }\nOPTIONAL { ?item wdt:P18 ?image . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}\nORDER BY ?itemLabel ?placeLabel",
        "complexity_description": "Multiple optional patterns, multiple variables, and a service call",
        "complexity": "medium"
    },
    {
        "id": "694",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?itemDescription ?image ?collection WHERE {\n    ?item wdt:P31 wd:Q3305213 ; # Get items that are instances of painting\n          wdt:P170 wd:Q5598 ; # By creator Rembrandt\n          wdt:P195/wdt:P361* ?collection . # That are in some collection\n\n    # Only return results where 'collection' is either Rijkmuseum or Louvre\n    FILTER ( ?collection = wd:Q190804 || ?collection = wd:Q19675 )\n\n    OPTIONAL { ?item wdt:P18 ?image } # Optionally with an image\n\n    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\" }\n}",
        "complexity_description": "Multiple filters, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "695",
        "valid_gpt_response": true,
        "query": "SELECT ?propertyLabel ?propertyDescription (COUNT(?propertyclaim) AS ?count) WHERE {\n?item wdt:P31 wd:Q3305213 .\n?property wikibase:propertyType wikibase:ExternalId .\n?property wdt:P31 wd:Q44847669 .\n?property wikibase:claim ?propertyclaim .\n?item ?propertyclaim [] .\nSERVICE wikibase:label { # ... include the labels\nbd:serviceParam wikibase:language \"en\" .\n}\n} GROUP BY ?propertyLabel ?propertyDescription ORDER BY DESC (?count)\nLIMIT 100",
        "complexity_description": "Multiple joins, subqueries and aggregations",
        "complexity": "complex"
    },
    {
        "id": "696",
        "valid_gpt_response": true,
        "query": "SELECT ?propertyLabel ?propertyDescription ?count WHERE {\n{\nSELECT ?propertyclaim (COUNT(*) AS ?count) where {\n?item wdt:P106 wd:Q1028181 .\n?item wdt:P31 wd:Q5 .\n?item ?propertyclaim [] .\n} GROUP BY ?propertyclaim\n}\n?property wikibase:propertyType wikibase:ExternalId .\n?property wdt:P31 wd:Q19595382 .\n?property wikibase:claim ?propertyclaim .\nSERVICE wikibase:label { # ... include the labels\nbd:serviceParam wikibase:language \"en\" .\n}\n} ORDER BY DESC (?count)\nLIMIT 100",
        "complexity_description": "Multiple subqueries, joins and filters",
        "complexity": "complex"
    },
    {
        "id": "697",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?image (MD5(CONCAT(str(?item),str(RAND()))) as ?random) WHERE {\n?item wdt:P31 wd:Q3305213.\n?item wdt:P18 ?image.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\"}\n} ORDER BY ?random\nLIMIT 10",
        "complexity_description": "Multiple triple patterns, service call, and aggregate function",
        "complexity": "medium"
    },
    {
        "id": "698",
        "valid_gpt_response": true,
        "query": "SELECT ?creatorqualifierLabel (COUNT(?creatorqualifier) AS ?count) WHERE {\n?item wdt:P31 wd:Q3305213 .\n?item wdt:P170 wd:Q4233718 .\nOPTIONAL { ?item p:P170 ?creatorstatement .\n?creatorstatement rdf:type wikibase:BestRank .\n?creatorstatement ?qualifier ?creatorqualifier .\n?qualifierproperty wikibase:qualifier ?qualifier }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n} GROUP BY ?creatorqualifierLabel\nHAVING (?count > 2)\nLIMIT 20000",
        "complexity_description": "Multiple triple patterns, optional clause, and aggregation with grouping",
        "complexity": "complex"
    },
    {
        "id": "699",
        "valid_gpt_response": true,
        "query": "SELECT ?qualifierpropertyLabel (COUNT(?creatorqualifier) AS ?count) WHERE {\n?item wdt:P31 wd:Q3305213 .\n?item wdt:P170 wd:Q4233718 .\nOPTIONAL { ?item p:P170 ?creatorstatement .\n?creatorstatement rdf:type wikibase:BestRank .\n?creatorstatement ?qualifier ?creatorqualifier .\n?qualifierproperty wikibase:qualifier ?qualifier }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n} GROUP BY ?qualifierpropertyLabel\nHAVING (?count > 2)\nLIMIT 2000",
        "complexity_description": "Multiple triple patterns, optional clause, service call, group by and having clause",
        "complexity": "complex"
    },
    {
        "id": "700",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?image ?rkdurl WHERE {\nwd:P350 wdt:P1630 ?formatterurl .\n?item wdt:P31 wd:Q3305213 .\n?item wdt:P18 ?image .\n?item wdt:P350 ?rkdid .\nBIND(IRI(REPLACE(?rkdid, '^(.+)$', ?formatterurl)) AS ?rkdurl).\n} LIMIT 10",
        "complexity_description": "Multiple triple patterns and BIND function",
        "complexity": "medium"
    },
    {
        "id": "701",
        "valid_gpt_response": true,
        "query": "SELECT ?painting ?paintingLabel ?location ?image where {\n?painting wdt:P276 ?collection;\nwdt:P170 wd:Q41264;\nwdt:P18 ?image.\n?collection wdt:P625 ?location.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, service call",
        "complexity": "medium"
    },
    {
        "id": "702",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?painter ?painterLabel (count (DISTINCT ?exhibition) as ?exhibition_count)\n(group_concat(DISTINCT ?exhibitionLabel; separator=\", \") as ?exhibitions)\nWHERE {\n?painter wdt:P106 wd:Q1028181 . #give me all people with occupation (P106) painter (Q1028181)\n?painter wdt:P135 wd:Q40415 . #who belonged to the impressionist (Q40415) movement (P135)\n?painting wdt:P170 ?painter . #the paintings created by (P170) the painter\n?painting wdt:P608 ?exhibition . #have an exhibition history (P608) at an exhibition\n?exhibition rdfs:label ?exhibitionLabel . #give me the english Labels of these exhibitions, if possible\nFILTER (lang(?exhibitionLabel) = \"en\")\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"en\".}\n} GROUP BY ?painter ?painterLabel",
        "complexity_description": "Multiple joins, filters, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "703",
        "valid_gpt_response": true,
        "query": "SELECT ?play ?playLabel\nWHERE\n{\n?play wdt:P31 wd:Q25379 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,es,pt,de,fr,ja,zh\" . }\n}\nLIMIT 1000",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "704",
        "valid_gpt_response": true,
        "query": "SELECT\n?item\n(SAMPLE (?titleL) AS ?title)\n(group_concat(DISTINCT ?creatorL ; separator = \", \") as ?creator)\n(group_concat(DISTINCT ?genreL ; separator = \", \") as ?genre)\n(group_concat(DISTINCT ?placeL ; separator = \", \") as ?place)\n(group_concat(DISTINCT ?arr ; separator = \", \") as ?arrondissement)\n(SAMPLE (?img) AS ?image)\n(SAMPLE (?coord) AS ?coordinates) {\n{\nSELECT DISTINCT ?item { {\n?item wdt:P136 wd:Q557141 ; # genre: public art\nwdt:P131 wd:Q90 # located in: Paris\n} UNION { # or\n?item wdt:P136 wd:Q557141 ; # genre: public art\nwdt:P131/wdt:P131* wd:Q90 # located in an arrondissement of Paris\n} }\n}\n# title\nOPTIONAL { ?item rdfs:label ?titleL FILTER (lang(?titleL) = \"fr\") }\n# creators\nOPTIONAL { ?item wdt:P170 [rdfs:label ?creatorL] FILTER (lang(?creatorL) = \"fr\") }\n#genre\nOPTIONAL {\n{\n?item wdt:P136 ?g FILTER (STR(?g) != 'http://www.wikidata.org/entity/Q557141')\n} UNION {\n?item wdt:P31 ?g .\n}\n?g rdfs:label ?genreL FILTER (lang(?genreL) = \"fr\") .\n}\n# place\nOPTIONAL {\n?item wdt:P276 [rdfs:label ?placeL] FILTER (lang(?placeL) = \"fr\") .\n}\n# arrondissement\nOPTIONAL {\n?item wdt:P131 [wdt:P131 wd:Q90 ; rdfs:label ?arrL] FILTER (lang(?arrL) = \"fr\").\nBIND(REPLACE(?arrL, '^([0-9]+).*$', \"$1\", \"si\") AS ?arr)\n}\n# image\nOPTIONAL { ?item wdt:P18 ?img }\n# coordinates\nOPTIONAL { ?item wdt:P625 ?coord }\n} GROUP BY ?item",
        "complexity_description": "Multiple UNION, OPTIONAL clauses and complex FILTERs",
        "complexity": "complex"
    },
    {
        "id": "705",
        "valid_gpt_response": true,
        "query": "SELECT ?work ?title\nWHERE\n{\n?work wdt:P31/wdt:P279* wd:Q838948;\nwdt:P1476 ?title.\nFILTER(REGEX(?title, \"^\\\\w*(\\\\w{3})(\\\\W+\\\\w*\\\\1)+$\", \"i\") && !REGEX(?title, \"^(\\\\w+)(\\\\W+\\\\1)+$\", \"i\")).\n}\nORDER BY STR(?title)",
        "complexity_description": "Multiple triple patterns with regex filters and ordering",
        "complexity": "complex"
    },
    {
        "id": "706",
        "valid_gpt_response": true,
        "query": "SELECT ?work ?title\nWHERE\n{\n?work wdt:P31/wdt:P279* wd:Q838948;\nwdt:P1476 ?title.\nFILTER(REGEX(STR(?title), \"^(\\\\p{L})\\\\w+(?:\\\\W+\\\\1\\\\w+){2,}$\", \"i\")).\n}\nORDER BY STR(?title)",
        "complexity_description": "Multiple triple patterns with regex filter and ordering",
        "complexity": "complex"
    },
    {
        "id": "707",
        "valid_gpt_response": true,
        "query": "SELECT ?place ?placeLabel (COUNT(*) AS ?count) WHERE {\n?item wdt:P136 wd:Q557141 .\n?item wdt:P131 ?place .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}\nGROUP BY ?place ?placeLabel\nORDER BY DESC(?count) ?placeLabel",
        "complexity_description": "Multiple triple patterns, service call and aggregation",
        "complexity": "medium"
    },
    {
        "id": "708",
        "valid_gpt_response": true,
        "query": "SELECT ?creator ?creatorLabel ?placebirthLabel ?geoloc where {\n?item wdt:P31/wdt:P279* wd:Q838948 . # oeuvre d'art et ss-classe\n?item wdt:P608 wd:Q20980830 . # du projet Europeana 280\n?item wdt:P170 ?creator . # createur\n?creator wdt:P19 ?placebirth . # lieu de naissance\n?placebirth wdt:P625 ?geoloc . #coordonnees geo\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"fr,es,en\" .\n}\n}",
        "complexity_description": "Multiple joins and filters with a SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "709",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?women ?womenLabel\nWHERE\n{\n?women wdt:P31 wd:Q5 .\n?women wdt:P21 wd:Q6581072 .\n?women wdt:P106/wdt:P279* wd:Q483501 . # artists\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"fr,en\" }\n}\nLIMIT 500",
        "complexity_description": "Multiple triple patterns, service call and language filter",
        "complexity": "medium"
    },
    {
        "id": "710",
        "valid_gpt_response": true,
        "query": "SELECT ?q ?qLabel\nWHERE\n{\n?q wdt:P31 wd:Q15841920.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "711",
        "valid_gpt_response": true,
        "query": "SELECT ?rettore ?rettoreLabel ?starttime ?endtime WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?rettore p:P106 [\nps:P106 wd:Q212071; # is a Rector\npq:P642 wd:Q193510; # of Padua Univerity\npq:P580 ?starttime;\npq:P582 ?endtime\n].\n}\nORDER BY ?starttime",
        "complexity_description": "Uses SERVICE, property paths and ORDER BY",
        "complexity": "medium"
    },
    {
        "id": "712",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?statements WHERE\n{\n?item wdt:P31 wd:Q24634210. # Instance of: podcast\n?item wikibase:statements ?statements. # Number of statements\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY desc(?statements) # Sort by number of statements\nLIMIT 100 # Only the top 100 items",
        "complexity_description": "Simple query with filtering and sorting",
        "complexity": "simple"
    },
    {
        "id": "713",
        "valid_gpt_response": true,
        "query": "SELECT ?breweryLabel ?breweryDescription ?coord\nWHERE\n{\n?brewery wdt:P31/wdt:P279* wd:Q131734 ;\nwdt:P17 wd:Q183 ;\nwdt:P625 ?coord .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en, de\" .\n}\n}",
        "complexity_description": "Multiple triple patterns with service call",
        "complexity": "medium"
    },
    {
        "id": "714",
        "valid_gpt_response": true,
        "query": "SELECT ?l\nWHERE {\nwd:Q5571382 ?p wd:Q223243 .\n?property ?ref ?p .\n?property rdf:type wikibase:Property .\n?property rdfs:label ?l FILTER (lang(?l) = \"en\")\n}",
        "complexity_description": "Multiple joins, filter and language constraint",
        "complexity": "medium"
    },
    {
        "id": "715",
        "valid_gpt_response": true,
        "query": "SELECT ?doi (count(?doi) as ?counts) WHERE {\n?statement prov:wasDerivedFrom ?ref .\n?ref pr:P356 ?doi .\nFILTER (CONTAINS(lcase(?doi), \"figshare\"))\n}\nGROUP BY ?doi\nORDER BY DESC(?counts)",
        "complexity_description": "Filter, grouping and aggregation",
        "complexity": "medium"
    },
    {
        "id": "716",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?wikiciteLabel ?doi WHERE {\n?wikicite p:P356/ps:P356 ?doi .\n?statement prov:wasDerivedFrom ?ref .\n?ref pr:P356 ?doi .\nFILTER (CONTAINS(lcase(?doi), \"figshare\"))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, filter and service",
        "complexity": "medium"
    },
    {
        "id": "717",
        "valid_gpt_response": true,
        "query": "SELECT DISTiNCT ?item ?itemLabel WHERE {\n?item ?p ?statement.\n?statement prov:wasDerivedFrom ?ref .\n?ref ?prop wd:Q28061352 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "718",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?DOI ?PMID\nWITH {\nSELECT * WHERE {\nBIND (\"zika\" AS ?searchfor)\n}\n} AS %p\nWITH {\nSELECT ?item\nWHERE {\nINCLUDE %p\nBIND (CONCAT(\"haswbstatement:P31=Q13442814 \", ?searchfor) AS ?searchstr)\nSERVICE wikibase:mwapi {\nbd:serviceParam wikibase:endpoint \"www.wikidata.org\" .\nbd:serviceParam wikibase:api \"Generator\" .\nbd:serviceParam mwapi:generator \"search\" .\nbd:serviceParam mwapi:gsrsearch ?searchstr .\nbd:serviceParam mwapi:gsrlimit \"max\" .\nbd:serviceParam mwapi:gsrnamespace \"0\" .\nbd:serviceParam mwapi:gsrprop \"\" .\n?item wikibase:apiOutputItem mwapi:title .\n}\n}\n} AS %i\nWHERE {\nINCLUDE %i\nINCLUDE %p\n?item rdfs:label ?itemLabel .\nFILTER (LANG(?itemLabel)=\"en\")\nFILTER(CONTAINS(LCASE(?itemLabel), ?searchfor))\nOPTIONAL { ?item wdt:P698 ?PMID. }\nOPTIONAL { ?item wdt:P356 ?DOI. }\n}",
        "complexity_description": "Multiple subqueries, service calls, and filters",
        "complexity": "complex"
    },
    {
        "id": "719",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?pmid ?citation ?citationLabel\nWHERE\n{\nVALUES ?predictor {p:P3354 p:P3355 p:P3356 p:P3357 p:P3358 p:P3359 }\n?item p:P3329 ?civicId ;\n?predictor ?predictor_value .\n?civicId ps:P3329 ?id .\n?predictor_value prov:wasDerivedFrom ?reference .\n?reference pr:P248 ?citation .\n?citation wdt:P698 ?pmid ;\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Multiple joins, VALUES clause, and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "720",
        "valid_gpt_response": true,
        "query": "SELECT ?id ?item ?itemLabel ?referenceLabel\nWHERE\n{\n{?item wdt:P3937 ?id } UNION\n{?item wdt:P2410 ?id }\n?item wdt:P2860 ?reference .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Union and service call",
        "complexity": "medium"
    },
    {
        "id": "721",
        "valid_gpt_response": true,
        "query": "SELECT ?wpid ?item ?itemLabel ?referenceLabel\nWHERE\n{\n?item wdt:P2410 ?wpid ;\nwdt:P2860 ?reference ;\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Simple query with 2 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "722",
        "valid_gpt_response": true,
        "query": "SELECT ?reactome_id ?item ?itemLabel ?referenceLabel\nWHERE\n{\n?item wdt:P3937 ?reactome_id ;\nwdt:P2860 ?reference ;\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Simple query with 2 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "723",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?_PubMed_ID\nWHERE\n{\n?item wdt:P31 wd:Q13442814 ;\nrdfs:label ?itemLabel .\nFILTER(CONTAINS(LCASE(?itemLabel), \"suriname\"))\nOPTIONAL { ?item wdt:P698 ?_PubMed_ID. }\n}",
        "complexity_description": "Filter and optional clause",
        "complexity": "medium"
    },
    {
        "id": "724",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?scientific_name ?common_name ?length ?life_expectency ?height ?wing_span ?mass WHERE {\n?item wdt:P225 ?scientific_name;\nwdt:P1843 ?common_name.\nOPTIONAL { ?item wdt:P2043 ?length. }\nOPTIONAL { ?item wdt:P2250 ?life_expectency. }\nOPTIONAL { ?item wdt:P2048 ?height. }\nOPTIONAL { ?item wdt:P2050 ?wing_span. }\n# Adult mass only. Excludes birth mass\nOPTIONAL {\n?item p:P2067 ?mass_statement_node.\n?mass_statement_node pq:P642 wd:Q78101716;\nps:P2067 ?mass.\n}\n# Only return common names in English\nFILTER(LANGMATCHES(LANG(?common_name), \"en\"))\n# List of animals. All lowercase to avoid capitalisation issues\nFILTER(lcase(str(?scientific_name)) IN (\n\"mustela erminea\",\n\"aquila adalberti\",\n\"vespula germanica\",\n\"accipiter nisus\",\n\"buteo buteo\"\n))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple optional patterns, filters and service call",
        "complexity": "complex"
    },
    {
        "id": "725",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?kkod1 ?kkod2 ?svwp_artikel WHERE\n{\n?item wdt:P525 ?kkod1 .\n?item wdt:P525 ?kkod2 .\nFILTER ( ?kkod1<?kkod2 )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"sv\". }\nOPTIONAL { ?svwp_artikel schema:about ?item; schema:isPartOf <https://sv.wikipedia.org/> }\n}\nORDER BY ?itemLabel",
        "complexity_description": "Multiple triple patterns, filter and optional clause",
        "complexity": "medium"
    },
    {
        "id": "726",
        "valid_gpt_response": true,
        "query": "SELECT ?child\nWHERE\n{\n?child wdt:P22 wd:Q1339.\n}",
        "complexity_description": "Single triple pattern",
        "complexity": "simple"
    },
    {
        "id": "727",
        "valid_gpt_response": true,
        "query": "SELECT ?child ?childLabel\nWHERE\n{\n?child wdt:P22 wd:Q1339.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "728",
        "valid_gpt_response": true,
        "query": "SELECT ?child ?childLabel\nWHERE\n{\n?child wdt:P22 wd:Q1339.\n?child wdt:P25 wd:Q57487.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "729",
        "valid_gpt_response": true,
        "query": "SELECT ?child ?childLabel\nWHERE\n{\n?child wdt:P22 wd:Q1339;\nwdt:P25 wd:Q57487.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}",
        "complexity_description": "Simple query with 2 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "730",
        "valid_gpt_response": true,
        "query": "SELECT ?child ?childLabel\nWHERE\n{\n?child wdt:P22 wd:Q1339;\nwdt:P25 wd:Q57487;\nwdt:P106 wd:Q36834;\nwdt:P106 wd:Q486748.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}",
        "complexity_description": "Multiple triple patterns with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "731",
        "valid_gpt_response": true,
        "query": "SELECT ?child ?childLabel\nWHERE\n{\n?child wdt:P22 wd:Q1339;\nwdt:P25 wd:Q57487;\nwdt:P106 wd:Q36834,\nwd:Q486748.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}",
        "complexity_description": "Multiple triple patterns with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "732",
        "valid_gpt_response": true,
        "query": "SELECT ?child ?childLabel\nWHERE\n{\n?child wdt:P22 wd:Q1339;\nwdt:P25 wd:Q57487;\nwdt:P106 wd:Q36834, wd:Q486748.\n# both occupations in one line\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}",
        "complexity_description": "Simple query with multiple triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "733",
        "valid_gpt_response": true,
        "query": "SELECT ?child ?childLabel\nWHERE\n{\n?child wdt:P22 wd:Q1339;\nwdt:P25 wd:Q57487;\nwdt:P106 wd:Q36834,\nwd:Q486748.\n# no indentation; makes it hard to distinguish between ; and ,\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}",
        "complexity_description": "Multiple triple patterns with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "734",
        "valid_gpt_response": true,
        "query": "SELECT ?grandChild ?grandChildLabel\nWHERE\n{\nwd:Q1339 wdt:P40 ?child.\n?child wdt:P40 ?grandChild.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "735",
        "valid_gpt_response": true,
        "query": "SELECT ?grandChild ?grandChildLabel\nWHERE\n{\nwd:Q1339 wdt:P40 [ wdt:P40 ?grandChild ].\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "736",
        "valid_gpt_response": true,
        "query": "SELECT ?work ?workLabel\nWHERE\n{\n?work wdt:P31 wd:Q838948. # instance of work of art\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "737",
        "valid_gpt_response": true,
        "query": "SELECT ?work ?workLabel\nWHERE\n{\n?work wdt:P31/wdt:P279* wd:Q838948. # instance of any subclass of work of art\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "738",
        "valid_gpt_response": true,
        "query": "SELECT ?descendant ?descendantLabel\nWHERE\n{\nwd:Q1339 wdt:P40+ ?descendant.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "739",
        "valid_gpt_response": true,
        "query": "SELECT ?descendant ?descendantLabel\nWHERE\n{\n?descendant (wdt:P22{{!",
        "complexity_description": "Simple query with single triple pattern",
        "complexity": "simple"
    },
    {
        "id": "740",
        "valid_gpt_response": true,
        "query": "SELECT ?painting ?paintingLabel ?material ?materialLabel\nWHERE\n{\n?painting wdt:P31/wdt:P279* wd:Q3305213;\np:P186 [ ps:P186 ?material; pq:P518 wd:Q861259 ].\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}",
        "complexity_description": "Multiple triple patterns, property paths and service call",
        "complexity": "medium"
    },
    {
        "id": "741",
        "valid_gpt_response": true,
        "query": "SELECT ?country ?countryLabel ?population\nWHERE\n{\n?country wdt:P31/wdt:P279* wd:Q3624078;\nwdt:P1082 ?population.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC(?population)\nLIMIT 10",
        "complexity_description": "Multiple triple patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "742",
        "valid_gpt_response": true,
        "query": "SELECT ?book ?bookLabel\nWHERE\n{\n?book wdt:P50 wd:Q35610.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "743",
        "valid_gpt_response": true,
        "query": "SELECT ?element ?elementLabel ?symbol ?number\nWHERE\n{\n?element wdt:P31 wd:Q11344;\nwdt:P246 ?symbol;\nwdt:P1086 ?number.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}\nORDER BY ?number",
        "complexity_description": "Simple query with 3 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "744",
        "valid_gpt_response": true,
        "query": "SELECT ?river ?riverLabel\nWHERE\n{\n?river wdt:P403 wd:Q1497.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "745",
        "valid_gpt_response": true,
        "query": "SELECT ?river ?riverLabel\nWHERE\n{\n?river wdt:P403+ wd:Q1497.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "746",
        "valid_gpt_response": true,
        "query": "SELECT ?book ?bookLabel\nWHERE\n{\n?book wdt:P50 wd:Q35610.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "747",
        "valid_gpt_response": true,
        "query": "SELECT ?book ?title ?illustratorLabel ?publisherLabel ?published\nWHERE\n{\n?book wdt:P50 wd:Q35610;\nwdt:P1476 ?title;\nwdt:P110 ?illustrator;\nwdt:P123 ?publisher;\nwdt:P577 ?published.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}",
        "complexity_description": "Simple query with 5 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "748",
        "valid_gpt_response": true,
        "query": "SELECT ?book ?title ?illustratorLabel ?publisherLabel ?published\nWHERE\n{\n?book wdt:P50 wd:Q35610.\nOPTIONAL { ?book wdt:P1476 ?title. }\nOPTIONAL { ?book wdt:P110 ?illustrator. }\nOPTIONAL { ?book wdt:P123 ?publisher. }\nOPTIONAL { ?book wdt:P577 ?published. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}",
        "complexity_description": "Multiple optional patterns with service call",
        "complexity": "medium"
    },
    {
        "id": "749",
        "valid_gpt_response": true,
        "query": "SELECT ?book ?title ?illustratorLabel ?publisherLabel ?published\nWHERE\n{\n?book wdt:P50 wd:Q35610.\nOPTIONAL {\n?book wdt:P1476 ?title;\nwdt:P110 ?illustrator;\nwdt:P123 ?publisher;\nwdt:P577 ?published.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Optional clause with multiple triple patterns and a service call",
        "complexity": "medium"
    },
    {
        "id": "750",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?dob\nWHERE\n{\n?person wdt:P31 wd:Q5;\nwdt:P569 ?dob.\nFILTER(\"2015-01-01\"^^xsd:dateTime <= ?dob && ?dob < \"2016-01-01\"^^xsd:dateTime).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}",
        "complexity_description": "Two triple patterns, one filter and a service call",
        "complexity": "medium"
    },
    {
        "id": "751",
        "valid_gpt_response": true,
        "query": "SELECT ?human ?humanLabel\nWHERE\n{\n?human wdt:P31 wd:Q15632617.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n#This FILTER does not work!\nFILTER(STRSTARTS(?humanLabel, \"Mr. \")).\n}",
        "complexity_description": "Simple query with one triple pattern and a filter",
        "complexity": "simple"
    },
    {
        "id": "752",
        "valid_gpt_response": true,
        "query": "SELECT ?human ?label\nWHERE\n{\n?human wdt:P31 wd:Q15632617;\nrdfs:label ?label.\nFILTER(LANG(?label) = \"[AUTO_LANGUAGE]\").\nFILTER(STRSTARTS(?label, \"Mr. \")).\n}",
        "complexity_description": "Two filters and two triple patterns",
        "complexity": "medium"
    },
    {
        "id": "753",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?bblid\nWHERE {\n?item wdt:P2580 ?bblid .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\nFILTER(!REGEX(STR(?bblid), \"[\\\\.q]\"))\n}",
        "complexity_description": "Filter and service usage",
        "complexity": "medium"
    },
    {
        "id": "754",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?bblid\nWHERE {\n?item wdt:P2580 ?bblid .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\nFILTER(!REGEX(STR(?bblid), \"^[A-Za-z][-.0-9A-Za-z]{1,}$\"))\n}",
        "complexity_description": "Filter and service usage",
        "complexity": "medium"
    },
    {
        "id": "755",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?age\nWHERE\n{\n?person wdt:P31 wd:Q5;\nwdt:P569 ?born;\nwdt:P570 ?died;\nwdt:P1196 wd:Q8454.\nBIND(?died - ?born AS ?ageInDays).\nBIND(?ageInDays/365.2425 AS ?ageInYears).\nBIND(FLOOR(?ageInYears) AS ?age).\n# or, as one expression:\n#BIND(FLOOR((?died - ?born)/365.2425) AS ?age).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}",
        "complexity_description": "Multiple triple patterns, BIND operations and SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "756",
        "valid_gpt_response": true,
        "query": "SELECT ?woman ?womanLabel\nWHERE\n{\n?woman wdt:P31 wd:Q5;\nwdt:P21 wd:Q6581072;\nwdt:P106 wd:Q42603.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}",
        "complexity_description": "Three triple patterns with a service call",
        "complexity": "medium"
    },
    {
        "id": "757",
        "valid_gpt_response": true,
        "query": "SELECT ?woman ?womanLabel\nWHERE\n{\nBIND(wdt:P31 AS ?instanceOf).\nBIND(wd:Q5 AS ?human).\nBIND(wdt:P21 AS ?sexOrGender).\nBIND(wd:Q6581072 AS ?female).\nBIND(wdt:P106 AS ?occupation).\nBIND(wd:Q42603 AS ?priest).\n?woman ?instanceOf ?human;\n?sexOrGender ?female;\n?occupation ?priest.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}",
        "complexity_description": "Multiple bindings and triple patterns with a SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "758",
        "valid_gpt_response": true,
        "query": "SELECT ?writer ?label\nWHERE\n{\n# French writer born in the second half of the 18th century\n?writer wdt:P31 wd:Q5;\nwdt:P27 wd:Q142;\nwdt:P106 wd:Q36180;\nwdt:P569 ?dob.\nFILTER(\"1751-01-01\"^^xsd:dateTime <= ?dob && ?dob < \"1801-01-01\"^^xsd:dateTime).\n# get the English label\n?writer rdfs:label ?writerLabel.\nFILTER(LANG(?writerLabel) = \"en\").\n# get the pseudonym, if it exists\nOPTIONAL { ?writer wdt:P742 ?pseudonym. }\n# bind the pseudonym, or if it doesn't exist the English label, as ?label\nBIND(IF(BOUND(?pseudonym),?pseudonym,?writerLabel) AS ?label).\n}",
        "complexity_description": "Multiple filters and optional clause",
        "complexity": "medium"
    },
    {
        "id": "759",
        "valid_gpt_response": true,
        "query": "SELECT ?astronaut ?astronautLabel\nWHERE\n{\n?astronaut wdt:P31 wd:Q5;\nwdt:P106 wd:Q11631.\nOPTIONAL {\n?astronaut wdt:P450 ?mission.\n?mission wdt:P31 wd:Q495307.\n}\nOPTIONAL {\n?astronaut wdt:P450 wd:Q182252.\nBIND(wd:Q182252 AS ?mission).\n}\nFILTER(BOUND(?mission)).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}",
        "complexity_description": "Multiple optional patterns, filter and service",
        "complexity": "complex"
    },
    {
        "id": "760",
        "valid_gpt_response": true,
        "query": "SELECT ?country ?city ?population\nWHERE\n{\n?city wdt:P31/wdt:P279* wd:Q515;\nwdt:P17 ?country;\nwdt:P1082 ?population.\n}\nORDER BY ?country",
        "complexity_description": "Multiple triple patterns with property paths",
        "complexity": "medium"
    },
    {
        "id": "761",
        "valid_gpt_response": true,
        "query": "SELECT ?country (MAX(?population) AS ?maxPopulation)\nWHERE\n{\n?city wdt:P31/wdt:P279* wd:Q515;\nwdt:P17 ?country;\nwdt:P1082 ?population.\n}\nGROUP BY ?country",
        "complexity_description": "Uses aggregation function and grouping",
        "complexity": "medium"
    },
    {
        "id": "762",
        "valid_gpt_response": true,
        "query": "SELECT ?material ?painting\nWHERE\n{\n?painting wdt:P31/wdt:P279* wd:Q3305213;\np:P186 [ ps:P186 ?material; pq:P518 wd:Q861259 ].\n}",
        "complexity_description": "Multiple triple patterns, property paths and qualifiers",
        "complexity": "medium"
    },
    {
        "id": "763",
        "valid_gpt_response": true,
        "query": "SELECT ?material (COUNT(?painting) AS ?count)\nWHERE\n{\n?painting wdt:P31/wdt:P279* wd:Q3305213;\np:P186 [ ps:P186 ?material; pq:P518 wd:Q861259 ].\n}\nGROUP BY ?material",
        "complexity_description": "Multiple triple patterns, property paths, and aggregation",
        "complexity": "complex"
    },
    {
        "id": "764",
        "valid_gpt_response": true,
        "query": "SELECT ?material ?materialLabel (COUNT(?painting) AS ?count)\nWHERE\n{\n?painting wdt:P31/wdt:P279* wd:Q3305213;\np:P186 [ ps:P186 ?material; pq:P518 wd:Q861259 ].\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}\nGROUP BY ?material ?materialLabel",
        "complexity_description": "Multiple triple patterns, service call and aggregation",
        "complexity": "medium"
    },
    {
        "id": "765",
        "valid_gpt_response": true,
        "query": "SELECT ?material ?materialLabel (COUNT(?painting) AS ?count)\nWHERE\n{\n?painting wdt:P31/wdt:P279* wd:Q3305213;\np:P186 [ ps:P186 ?material; pq:P518 wd:Q861259 ].\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}\nGROUP BY ?material ?materialLabel",
        "complexity_description": "Multiple triple patterns, service call and aggregation",
        "complexity": "medium"
    },
    {
        "id": "766",
        "valid_gpt_response": true,
        "query": "SELECT ?material ?materialLabel (COUNT(?painting) AS ?count)\nWHERE\n{\n?painting wdt:P31/wdt:P279* wd:Q3305213;\np:P186 [ ps:P186 ?material; pq:P518 wd:Q861259 ].\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}\nGROUP BY ?material ?materialLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, service call, and aggregation",
        "complexity": "complex"
    },
    {
        "id": "767",
        "valid_gpt_response": true,
        "query": "SELECT ?manufacturer ?manufacturerLabel (SUM(?produced) AS ?totalProduced)\nWHERE\n{\n?model wdt:P31?/wdt:P279* wd:Q12796;\nwdt:P176 ?manufacturer;\nwdt:P1092 ?produced.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}\nGROUP BY ?manufacturer ?manufacturerLabel\nORDER BY DESC(?produced)",
        "complexity_description": "Multiple triple patterns, aggregation and grouping",
        "complexity": "complex"
    },
    {
        "id": "768",
        "valid_gpt_response": true,
        "query": "SELECT ?publisher ?publisherLabel (AVG(?pages) AS ?avgPages)\nWHERE\n{\n?book wdt:P123 ?publisher;\nwdt:P1104 ?pages.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}\nGROUP BY ?publisher ?publisherLabel\nORDER BY DESC(?avgPages)",
        "complexity_description": "Multiple triple patterns, aggregation function and grouping",
        "complexity": "medium"
    },
    {
        "id": "769",
        "valid_gpt_response": true,
        "query": "SELECT ?publisher ?publisherLabel (AVG(?pages) AS ?avgPages)\nWHERE\n{\n?book wdt:P123 ?publisher;\nwdt:P1104 ?pages.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}\nGROUP BY ?publisher ?publisherLabel\nHAVING(COUNT(?book) > 1)\nORDER BY DESC(?avgPages)",
        "complexity_description": "Multiple triple patterns, aggregation, grouping and filtering",
        "complexity": "complex"
    },
    {
        "id": "770",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?mother ?motherLabel WHERE {\nVALUES ?item { wd:Q937 wd:Q1339 }\nOPTIONAL { ?item wdt:P25 ?mother. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Simple query with VALUES and OPTIONAL clause",
        "complexity": "simple"
    },
    {
        "id": "771",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?mother ?motherLabel ?ISNI WHERE {\nVALUES ?ISNI { \"0000 0001 2281 955X\" \"0000 0001 2276 4157\" }\n?item wdt:P213 ?ISNI.\nOPTIONAL { ?item wdt:P25 ?mother. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Uses VALUES, OPTIONAL clause and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "772",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?customItemLabel ?mother ?motherLabel WHERE {\nVALUES (?item ?customItemLabel) { (wd:Q937 \"Einstein\") (wd:Q1339 \"Bach\") }\nOPTIONAL { ?item wdt:P25 ?mother. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Uses VALUES clause and OPTIONAL pattern",
        "complexity": "medium"
    },
    {
        "id": "773",
        "valid_gpt_response": true,
        "query": "select distinct ?movie ?movieLabel ?actorLabel (year(?date) as ?year)\nwhere {\n?movie wdt:P31/wdt:P279* wd:Q11424 . #film\n?movie wdt:P577 ?date .\n?movie p:P161 ?actorS . #avec des acteurs\n?actorS ps:P161 ?actor .\n?actorS pq:P453/wdt:P144* wd:Q3266236 #role : Dracula ou succedanes\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"fr,en\"\n}\n} ORDER BY ?date",
        "complexity_description": "Multiple joins, filters and subqueries",
        "complexity": "complex"
    },
    {
        "id": "774",
        "valid_gpt_response": true,
        "query": "select distinct ?movie ?movieLabel (year(?date) as ?year) ?Commons ?InternetArchive ?Youtube ?url\nwhere {\n{ ?movie wdt:P31/wdt:P279* wd:Q11424 . ?movie wdt:P10 ?Commons .}\nUNION { ?movie wdt:P31/wdt:P279* wd:Q11424 . ?movie wdt:P724 ?InternetArchive .}\nUNION { ?movie wdt:P31/wdt:P279* wd:Q11424 . ?movie wdt:P1651 ?Youtube .}\nUNION { ?movie wdt:P31/wdt:P279* wd:Q11424 . ?movie wdt:P963 ?url .}\nOPTIONAL {?movie wdt:P577 ?date.}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"fr,en\"\n}\n} ORDER BY ?date",
        "complexity_description": "Multiple UNIONs, OPTIONAL clause, and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "775",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel WHERE {\n?item wdt:P31 wd:Q5 .\n?item wdt:P27 wd:Q142 .\nFILTER EXISTS { ?wen schema:about ?item . ?wen schema:inLanguage \"en\" }\nFILTER NOT EXISTS { ?wfr schema:about ?item . ?wfr schema:inLanguage \"fr\" }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"fr\" .\n}\n}",
        "complexity_description": "Multiple filters, service call and language constraints",
        "complexity": "complex"
    },
    {
        "id": "776",
        "valid_gpt_response": true,
        "query": "SELECT ?item WHERE {\n?item wdt:P31 wd:Q3305213 .\nOPTIONAL { ?item wdt:P2049 ?dummy0 }\nFILTER(!bound(?dummy0))\nOPTIONAL { ?item wdt:P2048 ?dummy1 }\nFILTER(!bound(?dummy1))\n}",
        "complexity_description": "Multiple optional patterns with filters",
        "complexity": "medium"
    },
    {
        "id": "777",
        "valid_gpt_response": true,
        "query": "select distinct ?item ?itemLabel ?instanceOfLabel ?DateofBirth ?Inception\nwhere {\n{ ?item wdt:P569 ?DateofBirth. #P569 date of birth\nFILTER (month(?DateofBirth) = 10 && day(?DateofBirth) = 29)\n}UNION\n{ ?item wdt:P571 ?Inception. #P571 inception/date of creation\nFILTER (month(?Inception) = 10 && day(?Inception) = 29)\n}\n?item wdt:P31 ?instanceOf. #P31 instance of\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en,ar,be,bg,bn,ca,cs,da,de,el,es,et,fa,fi,fr,he,hi,hu,hy,id,it,ja,jv,ko,nb,nl,eo,pa,pl,pt,ro,ru,sh,sk,sr,sv,sw,te,th,tr,uk,yue,vec,vi,zh\"\n}\n}",
        "complexity_description": "Multiple filters and unions with multiple triple patterns",
        "complexity": "medium"
    },
    {
        "id": "778",
        "valid_gpt_response": true,
        "query": "SELECT ?numberLabel ?value WHERE {\n?number wdt:P31 wd:Q12916 .\nOPTIONAL {\n?number wdt:P1181 ?value .\n}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n} order by desc(?value)",
        "complexity_description": "Optional clause, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "779",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?episode ?episodeLabel ?number WHERE {\n?episode wdt:P31 wd:Q838795 .\n?episode wdt:P361 wd:Q13915 .\n?episode wdt:P433 ?number .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n} ORDER BY xsd:integer(?number)",
        "complexity_description": "Multiple triple patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "780",
        "valid_gpt_response": true,
        "query": "SELECT ?country ?name {\n?country wdt:P31 wd:Q6256 .\n?country wdt:P1549 ?name .\nFILTER ( lang(?name)='en')\n}",
        "complexity_description": "Two triple patterns with a language filter",
        "complexity": "medium"
    },
    {
        "id": "781",
        "valid_gpt_response": true,
        "query": "SELECT ?whichLincoln ?whichLincolnLabel ?place ?placeLabel ?cc WHERE {\n?place wdt:P17 ?country .\n?country wdt:P984 ?cc\nFILTER(CONTAINS(?placeLabel, 'Lincoln')) .\nFILTER(CONTAINS(?whichLincolnLabel, 'Lincoln')) .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n?place rdfs:label ?placeLabel .\n}\n?place wdt:P138 ?whichLincoln\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n?whichLincoln rdfs:label ?whichLincolnLabel .\n}\n} ORDER BY ?whichLincolnLabel",
        "complexity_description": "Multiple filters, services and joins",
        "complexity": "medium"
    },
    {
        "id": "782",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?high ?highl ?high_elevation ?low ?lowl ?low_elevation ?span WHERE {\n#?item wdt:P31 wd:Q160016 .\n?item wdt:P610 ?high .\n?item p:P610 ?high_statement .\n{ ?high wdt:P2044 ?high_elevation } UNION { ?high_statement pq:P2044 ?high_elevation }\nOPTIONAL { ?high rdfs:label ?highl filter (lang(?highl) = \"en\") . }\n?item wdt:P1589 ?low .\n?item p:P1589 ?low_statement .\n?low_statement pq:P2044 ?low_elevation .\nOPTIONAL { ?low rdfs:label ?lowl filter (lang(?lowl) = \"en\") . }\nBIND( ?high_elevation - ?low_elevation as ?span )\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n} ORDER BY DESC(?span) DESC(?low_elevation) DESC(?high_elevation) ?high ?itemLabel",
        "complexity_description": "Multiple joins, unions, and optional patterns with filters",
        "complexity": "complex"
    },
    {
        "id": "783",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?last_time WHERE {\n{\nSELECT ?item (MAX(?time0) AS ?last_time) WHERE {\n?item wdt:P31 wd:Q5 .\n?item wdt:P570 ?time0 .\nFILTER ( ?time0 >= \"1945-01-01T00:00:00Z\"^^xsd:dateTime && ?time0 <= \"1945-12-31T00:00:00Z\"^^xsd:dateTime ) .\n} GROUP BY ?item\n}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n} ORDER BY ASC (?last_time)",
        "complexity_description": "Nested query with aggregation, filtering and service call",
        "complexity": "complex"
    },
    {
        "id": "784",
        "valid_gpt_response": true,
        "query": "select distinct ?item ?itemLabel ?creaLabel ?workLabel (year(?date)as ?year)\nwhere {\n{?item wdt:P170 ?crea .} # P170/creator\nUNION {?item wdt:P50 ?crea .} # P50/author\n#UNION {?item wdt:P86 ?crea .} # P86/composer\n#UNION {?item wdt:P87 ?crea .} # P87/librettist\n#UNION {?item wdt:P110 ?crea .} # P110/illustrator\n#UNION {?item wdt:P655 ?crea .} # P655/translator\n#UNION {?item wdt:P676 ?crea .} # P676/lyrics by\n?crea wdt:P21 wd:Q6581072 . # P21/sex or gender - Q6581072/female\n?crea wdt:P570 ?time0 .\nFILTER ( ?time0 >= \"1945-01-01T00:00:00Z\"^^xsd:dateTime && ?time0 <= \"1945-12-31T00:00:00Z\"^^xsd:dateTime ) # P570/date of death in 1945\nOPTIONAL {{?item wdt:P571 ?date} UNION {?item wdt:P577 ?date }} # P571/inception - P571/publication date\n?item wdt:P31 ?work\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en,ar,be,bg,bn,ca,cs,da,de,el,es,et,fa,fi,fr,he,hi,hu,hy,id,it,ja,jv,ko,nb,nl,eo,pa,pl,pt,ro,ru,sh,sk,sr,sv,sw,te,th,tr,uk,yue,vec,vi,zh\" #BabelRainbow\n}\n}ORDER BY ?creaLabel",
        "complexity_description": "Multiple UNIONs, FILTER, OPTIONAL and SERVICE clauses",
        "complexity": "complex"
    },
    {
        "id": "785",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?age ?country ?countryLabel ?hgovernmentLabel WHERE {\n?country wdt:P31 wd:Q3624078 .\nFILTER NOT EXISTS {?country wdt:P31 wd:Q3024240}\n?country p:P6 ?statement .\n?statement ps:P6 ?hgovernment .\nFILTER NOT EXISTS { ?statement pq:P582 ?x }\n?hgovernment wdt:P569 ?dob . BIND(YEAR(now())-YEAR(?dob) as ?age)\nFILTER(?age>=65)\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"{{int:lang}},en\" .\n}\n}\nORDER BY DESC(?age)",
        "complexity_description": "Multiple filters, subqueries and joins",
        "complexity": "complex"
    },
    {
        "id": "786",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?cheval ?chevalLabel ?mere ?pere (year(?naissance) as ?Naissance) (year(?deces) as ?Deces) ?sexe\nwhere {\n{?cheval wdt:P31/wdt:P279* wd:Q726 .} # Instance et sous-classes de Q726-Cheval\nOPTIONAL{?cheval wdt:P25 ?mere .} # P25 : Mere\nOPTIONAL{?cheval wdt:P22 ?pere .} # P22 : Pere\nOPTIONAL{?cheval wdt:P569 ?naissance .} # P569 : Date de naissance\nOPTIONAL{?cheval wdt:P571 ?deces .} # P571 : Date de deces\nOPTIONAL{?cheval wdt:P21 ?sexe .} # P21 : Sexe\nSERVICE wikibase:label { #BabelRainbow\nbd:serviceParam wikibase:language \"fr,ar,be,bg,bn,ca,cs,da,de,el,en,es,et,fa,fi,he,hi,hu,hy,id,it,ja,jv,ko,nb,nl,eo,pa,pl,pt,ro,ru,sh,sk,sr,sv,sw,te,th,tr,uk,yue,vec,vi,zh\"\n}\n} ORDER BY ?cheval",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "787",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?value WHERE {\n?item wdt:P31 wd:Q21199 .\nOPTIONAL { ?item wdt:P1181 ?value }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?value ?itemLabel",
        "complexity_description": "Optional clause, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "788",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?location ?locationL ?coords ?partof ?partofL ?pointintime ?starttime ?endtime WHERE {\n?item wdt:P31/wdt:P279* wd:Q178561 .\nOPTIONAL {\n?item wdt:P276 ?location .\n?location rdfs:label ?locationL filter (lang(?locationL) = \"en\") .\nOPTIONAL { ?location wdt:P625 ?coords . }\n}\nOPTIONAL {\n?item wdt:P361 ?partof .\n?partof rdfs:label ?partofL filter (lang(?partofL) = \"en\") .\n}\nOPTIONAL { ?item wdt:P585 ?pointintime . }\nOPTIONAL { ?item wdt:P580 ?starttime . }\nOPTIONAL { ?item wdt:P582 ?endtime . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple optional patterns, multiple filters and service call",
        "complexity": "complex"
    },
    {
        "id": "789",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?positionLabel ?as ?start ?end ?days WHERE {\n?item wdt:P31 wd:Q5 .\n?item p:P39 ?position_statement .\n?position_statement ps:P39 ?position .\n?position wdt:P279* wd:Q15135541 .\n?position_statement pq:P580 ?start FILTER (?start >= \"1815-01-01T00:00:00Z\"^^xsd:dateTime) .\nOPTIONAL { ?position_statement pq:P582 ?x }\nOPTIONAL {\n?position_statement pq:P794 ?ast .\n?ast rdfs:label ?as filter (lang(?as) = \"en\") .\n}\nbind(if(bound(?x), ?x, NOW()) as ?end )\nBIND(FLOOR(?end - ?start) as ?days)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY DESC(?days) ?itemLabel",
        "complexity_description": "Multiple joins, filters, and optional patterns with date calculations",
        "complexity": "complex"
    },
    {
        "id": "790",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?adjacent ?adjacentL ?coords WHERE {\n?item wdt:P31/wdt:P279* wd:Q928830 .\n?item wdt:P81 wd:Q13224 .\n?item wdt:P625 ?coords .\nOPTIONAL {\n?item p:P197 ?adjacent_statement .\n?adjacent_statement ps:P197 ?adjacent .\n?adjacent_statement pq:P560 wd:Q585752 .\n?adjacent rdfs:label ?adjacentL filter (lang(?adjacentL) = \"en\")\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple triple patterns, optional clause, and service call",
        "complexity": "medium"
    },
    {
        "id": "791",
        "valid_gpt_response": true,
        "query": "SELECT ?director ?director_label (count(distinct ?film) as ?films) (count(distinct ?sitelink) as ?sitelinks) ((?films * ?sitelinks) as ?rank)\nWHERE\n{\n?director wdt:P106 wd:Q2526255 . # has \"film director\" as occupation\n?film wdt:P57 ?director . # get all films directed by the director\n?sitelink schema:about ?director . # get all the sitelinks about the director\nOPTIONAL {?director rdfs:label ?director_label # get the label of the director (if it exists)\nFILTER (lang(?director_label) = \"en\") # filter for only English labels\n}\n}\nGROUP BY ?director ?director_label\nORDER BY DESC(?rank)\nLIMIT 100",
        "complexity_description": "Multiple joins, subqueries, and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "792",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?name ?coord ?lat ?lon WHERE {\n?item wdt:P131* wd:Q1492 .\n?item wdt:P31/wdt:P279* wd:Q33506 .\n?item wdt:P625 ?coord .\n?item p:P625 ?coordinate .\n?coordinate psv:P625 ?coordinate_node .\n?coordinate_node wikibase:geoLatitude ?lat .\n?coordinate_node wikibase:geoLongitude ?lon .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"ca\" .\n?item rdfs:label ?name\n}\n}\nORDER BY ASC (?name)",
        "complexity_description": "Multiple joins, property paths and service calls",
        "complexity": "complex"
    },
    {
        "id": "793",
        "valid_gpt_response": true,
        "query": "select distinct ?musher ?musherLabel\nwhere {\n{ ?musher wdt:P31 wd:Q5 .\n?musher wdt:P106 wd:Q500097 .\n?musher wdt:P21 wd:Q6581072}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"fr,en\" . }\n}",
        "complexity_description": "Three triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "794",
        "valid_gpt_response": true,
        "query": "select distinct ?women ?womenLabel\nwhere {\n?women wdt:P31 wd:Q5 .\n?women wdt:P21 wd:Q6581072 .\n?women wdt:P106/wdt:P279* wd:Q901 . # scientists\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"fr,en\" .\n}\n}",
        "complexity_description": "Multiple triple patterns with a SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "795",
        "valid_gpt_response": true,
        "query": "select distinct ?women ?womenLabel\nwhere {\n?women wdt:P31 wd:Q5 .\n?women wdt:P21 wd:Q6581072 .\n?women wdt:P106/wdt:P279* wd:Q483501 . # artists\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"fr,en\" .\n}\n} LIMIT 500",
        "complexity_description": "Multiple triple patterns, property paths and service call",
        "complexity": "medium"
    },
    {
        "id": "796",
        "valid_gpt_response": true,
        "query": "SELECT ?label ?coord ?place WHERE {\n?subj wdt:P31 wd:Q744913 .\n?subj wdt:P625 ?coord .\n?subj rdfs:label ?label filter (lang(?label) = \"en\")\n}",
        "complexity_description": "Three triple patterns with a language filter",
        "complexity": "medium"
    },
    {
        "id": "797",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?personLabel ?twitterName ?pic WHERE {\n?person wdt:P2002 ?twitterName ;\nwdt:P106 ?occupation .\nOPTIONAL { ?person wdt:P18 ?pic . }\n?occupation wdt:P279* wd:Q864503 . # all subclasses of biologists\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "798",
        "valid_gpt_response": true,
        "query": "SELECT ?thing ?thingLabel WHERE {\n?thing wdt:P366 wd:Q132781.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "799",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT\n?item\n(SAMPLE (?titleL) AS ?title)\n(group_concat(distinct ?creatorL ; separator = \", \") as ?creator)\n(group_concat(distinct ?genreL ; separator = \", \") as ?genre)\n(group_concat(distinct ?placeL ; separator = \", \") as ?place)\n(group_concat(distinct ?arr ; separator = \", \") as ?arrondissement)\n(SAMPLE (?img) AS ?image)\n(SAMPLE (?coord) AS ?coordinates)\n{\nSELECT ?item ?titleL ?creatorL ?genreL ?placeL ?arr ?img ?coord\nWHERE {\n# selecting items...\n{\n# items in Paris...\n?item wdt:P131 wd:Q90 .\n} UNION {\n# ...or in an arrondissement of Paris\n?item wdt:P131/wdt:P131* wd:Q90 .\n}\n# genre: public art\n?item wdt:P136 wd:Q557141 .\n# creators\nOPTIONAL {\n?item wdt:P170 ?c.\n?c rdfs:label ?creatorL filter (lang(?creatorL) = \"fr\") .\n}\n#genre\nOPTIONAL {\n{\n?item wdt:P136 ?g .\nFILTER ( STR(?g) != 'http://www.wikidata.org/entity/Q557141')\n} UNION {\n?item wdt:P31 ?g .\n}\n?g rdfs:label ?genreL filter (lang(?genreL) = \"fr\") .\n}\n# place\nOPTIONAL {\n?item wdt:P276 ?p .\n?p rdfs:label ?placeL filter (lang(?placeL) = \"fr\") .\n}\n# arrondissement\nOPTIONAL {\n?item wdt:P131 ?a .\n?a wdt:P131 wd:Q90 .\n?a rdfs:label ?arrL filter (lang(?arrL) = \"fr\").\nBIND(REPLACE(?arrL, '^([0-9]+).*$', \"$1\", \"si\") AS ?arr)\n}\n# image\nOPTIONAL {?item wdt:P18 ?img.}\n# coordinates\nOPTIONAL {?item wdt:P625 ?coord.}\n# title\nOPTIONAL {?item rdfs:label ?titleL filter (lang(?titleL) = \"fr\") .}\n} ORDER BY xsd:integer(?arr) ?titleL ?genreL ?createurL ?lieuL\n}\nGROUP BY ?item\nORDER BY xsd:integer(REPLACE(?arrondissement,'^([0-9]+),.*$', \"$1\", \"si\")) ?place ?title",
        "complexity_description": "Multiple UNION, OPTIONAL, and FILTER clauses with complex patterns",
        "complexity": "complex"
    },
    {
        "id": "800",
        "valid_gpt_response": true,
        "query": "SELECT ?label ?coord ?subj WHERE {\n?subj wdt:P170 wd:Q5593 .\nOPTIONAL {?subj wdt:P276 ?loc .\n?loc wdt:P625 ?coord } .\n?subj rdfs:label ?label filter (lang(?label) = \"en\")\n}",
        "complexity_description": "Optional clause, multiple triple patterns",
        "complexity": "medium"
    },
    {
        "id": "801",
        "valid_gpt_response": true,
        "query": "SELECT ?place ?placeLabel (COUNT(*) AS ?count) WHERE {\n?item wdt:P136 wd:Q557141 .\n?item wdt:P131 ?place .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}\nGROUP BY ?place ?placeLabel\nORDER BY DESC(?count) ?placeLabel",
        "complexity_description": "Multiple triple patterns, service call and aggregation",
        "complexity": "medium"
    },
    {
        "id": "802",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?journal ?name WHERE {\n?journal wdt:P31 wd:Q5633421 . # is scientific journal\n{\n{ ?journal wdt:P921 wd:Q199655 } # with topic library science\nUNION { ?journal wdt:P921 wd:Q16387 } # and/or topic information science\nUNION { ?journal wdt:P921 wd:Q13420675 } # and/or topic library and information science\n}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n?journal rdfs:label ?name .\n}\n}",
        "complexity_description": "Multiple UNIONs, SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "803",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT (?statement) as ?statements) WHERE {\n?entry ?p ?statement .\n?statement prov:wasDerivedFrom/\n<http://www.wikidata.org/prop/reference/P248>/\nwdt:P356 ?doi .\n}",
        "complexity_description": "Two triple patterns with a property path",
        "complexity": "medium"
    },
    {
        "id": "804",
        "valid_gpt_response": true,
        "query": "SELECT ?q ?qLabel\nWHERE\n{\n?q wdt:P31 wd:Q187931.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "805",
        "valid_gpt_response": true,
        "query": "SELECT ?q ?qLabel\nWHERE\n{\n?q wdt:P31 wd:Q15841920.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "806",
        "valid_gpt_response": true,
        "query": "SELECT ?eponym (COUNT(?item) AS ?count) (SAMPLE(?item) AS ?sample)\nWHERE { ?item wdt:P138 ?eponym. }\nGROUP BY ?eponym\nORDER BY DESC(?count)",
        "complexity_description": "Aggregation, grouping and ordering",
        "complexity": "medium"
    },
    {
        "id": "807",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?item ?itemLabel (?end - ?start as ?duration)\nWHERE {\n?item (wdt:P361)* wd:Q362 .\n?item wdt:P31/wdt:P279* wd:Q178561 .\n?item wdt:P580 ?start .\n?item wdt:P582 ?end .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}",
        "complexity_description": "Multiple triple patterns, property paths and service call",
        "complexity": "medium"
    },
    {
        "id": "808",
        "valid_gpt_response": true,
        "query": "SELECT ?s ?desc (COUNT(DISTINCT ?sitelink) as ?linkcount) WHERE {\n?s wdt:P31 wd:Q5 .\n?s wdt:P21 wd:Q6581072 .\n?s wdt:P569 ?born .\nFILTER (?born > \"1920-01-01T00:00:00Z\"^^xsd:dateTime) .\n?sitelink schema:about ?s .\nOPTIONAL {\n?s wdt:P18 ?dummy\n}\nFILTER ( !bound(?dummy) ) .\nOPTIONAL {\n?s rdfs:label ?desc filter (lang(?desc) = \"en\").\n}\n} GROUP BY ?s ?desc ORDER BY DESC(?linkcount) LIMIT 50",
        "complexity_description": "Multiple filters, optional patterns, and aggregation",
        "complexity": "complex"
    },
    {
        "id": "809",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?depicts (SAMPLE(?dL) AS ?depictsLabel) (COUNT(DISTINCT ?item) AS ?count) WHERE {\n?item wdt:P180 ?depicts .\nOPTIONAL { ?depicts rdfs:label ?dL filter (lang(?dL) = \"en\") . }\n}\nGROUP BY ?depicts\nORDER BY DESC(?count) ?depictsLabel",
        "complexity_description": "Multiple clauses, aggregation and ordering",
        "complexity": "complex"
    },
    {
        "id": "810",
        "valid_gpt_response": true,
        "query": "SELECT ?eponymLabel ?count ?sampleLabel\n{\n{\nSELECT ?eponym (COUNT(?item) as ?count) (SAMPLE(?item) AS ?sample)\nWHERE\n{\n?item wdt:P138 ?eponym.\n?eponym wdt:P106 wd:Q170790.\n}\nGROUP BY ?eponym\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nORDER BY DESC(?count)",
        "complexity_description": "Subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "811",
        "valid_gpt_response": true,
        "query": "SELECT ?label ?lang ?item ?shape\nWHERE\n{\n{\nSELECT ?shape (SAMPLE(LANG(?label)) AS ?lang)\nWHERE\n{\n?item wdt:P1419 ?shape.\n?item rdfs:label ?label.\n?shape rdfs:label ?label.\nFILTER(LANG(?label) IN (\"en\", \"fr\")). # this doesn't change the result - if you comment it out, you'll get the same four items, just with different languages\n}\nGROUP BY ?shape\n}\n?item wdt:P1419 ?shape.\n?item rdfs:label ?label.\n?shape rdfs:label ?label.\nFILTER(LANG(?label) = ?lang).\n}",
        "complexity_description": "Nested query with grouping and filtering",
        "complexity": "complex"
    },
    {
        "id": "812",
        "valid_gpt_response": true,
        "query": "SELECT ?event ?eventLabel ?date\nWHERE\n{\n# find events\n?event wdt:P31/wdt:P279* wd:Q1190554.\n# with a point in time or start date\nOPTIONAL { ?event wdt:P585 ?date. }\nOPTIONAL { ?event wdt:P580 ?date. }\n# but at least one of those\nFILTER(BOUND(?date) && DATATYPE(?date) = xsd:dateTime).\n# not in the future, and not more than 31 days ago\nBIND(NOW() - ?date AS ?distance).\nFILTER(0 <= ?distance && ?distance < 31).\n# and get a label as well\nOPTIONAL\n{\n?event rdfs:label ?eventLabel.\nFILTER(LANG(?eventLabel) = \"en\").\n}\n}\n# limit to 10 results so we don't timeout\nLIMIT 10",
        "complexity_description": "Multiple optional patterns, filters and bindings",
        "complexity": "complex"
    },
    {
        "id": "813",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?title ?seats ?jurisdiction (YEAR(?inception) AS ?start) (YEAR(?dissolution) AS ?end) WHERE {\n?item wdt:P31/wdt:P279* wd:Q1752346 .\nOPTIONAL { ?item wdt:P1342 ?seats . }\nOPTIONAL {\n?item wdt:P1001 ?j .\n?j rdfs:label ?jurisdiction filter (lang(?jurisdiction) = \"en\") .\n}\nOPTIONAL { ?item wdt:P571 ?inception . }\nOPTIONAL { ?item wdt:P576 ?dissolution . }\nOPTIONAL { ?item rdfs:label ?title filter (lang(?title) = \"en\") . }\n} ORDER BY DESC(?seats) ?title",
        "complexity_description": "Multiple optional patterns, filters and functions",
        "complexity": "complex"
    },
    {
        "id": "814",
        "valid_gpt_response": true,
        "query": "SELECT ?character ?characterLabel (COUNT(?actor) AS ?count)\nWHERE {\n{\nSELECT DISTINCT ?character ?actor\nWHERE {\n?film p:P161 [\nps:P161 ?actor;\npq:P453 ?character\n].\n#?character wdt:P31 wd:Q5. # uncomment to filter for real people\n}\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?character ?characterLabel\nORDER BY DESC(?count)\nLIMIT 25",
        "complexity_description": "Subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "815",
        "valid_gpt_response": true,
        "query": "SELECT ?song ?songLabel ?code\nWHERE\n{\n?song wdt:P1236 ?code.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC(STRLEN(REPLACE(?code, \" \", \"\")))\nLIMIT 10",
        "complexity_description": "Uses SERVICE clause and ORDER BY with function",
        "complexity": "medium"
    },
    {
        "id": "816",
        "valid_gpt_response": true,
        "query": "SELECT ?dedicatee (SAMPLE(?dedicateeLabel) AS ?label) (COUNT(?work) AS ?count)\nWHERE\n{\n?work wdt:P31/wdt:P279* wd:Q838948.\n?work wdt:P825 ?dedicatee.\n?dedicatee rdfs:label ?dedicateeLabel.\nFILTER(LANG(?dedicateeLabel) = \"en\").\n}\nGROUP BY ?dedicatee\nORDER BY DESC(?count)\nLIMIT 20",
        "complexity_description": "Multiple triple patterns, filter, group by and order by",
        "complexity": "medium"
    },
    {
        "id": "817",
        "valid_gpt_response": true,
        "query": "SELECT\n?item\n(SAMPLE (?itemL) AS ?title)\n(SAMPLE (?y) AS ?year)\n(SAMPLE (?typeL) AS ?type)\n(group_concat(distinct ?materialL ; separator = \", \") as ?materials)\n(SAMPLE (?collectionL) AS ?collection)\n(SAMPLE (?img) AS ?image)\n{\nSELECT ?item ?itemL (YEAR(?date) AS ?y) ?typeL ?collectionL ?img ?materialL\nWHERE {\n?item wdt:P179 wd:Q471379 .\n?item wdt:P18 ?img .\n?item wdt:P571 ?date .\n?item wdt:P31 ?instance .\n?item rdfs:label ?itemL filter (lang(?itemL) = \"en\").\n?instance rdfs:label ?typeL filter (lang(?typeL) = \"en\").\nOPTIONAL {\n?item wdt:P195 ?collection .\n?collection rdfs:label ?collectionL filter (lang(?collectionL) = \"en\").\n}\nOPTIONAL {\n?item wdt:P186 ?material .\n?material rdfs:label ?materialL filter (lang(?materialL) = \"en\").\n}\n}\n}\nGROUP BY ?item\nORDER BY ?year ?item ?itemLabel",
        "complexity_description": "Multiple subqueries, OPTIONAL clauses, and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "818",
        "valid_gpt_response": true,
        "query": "SELECT ?item (COUNT(?stat) AS ?count)\nWHERE\n{\n?item p:P348 ?stat.\n}\nGROUP BY ?item\nORDER BY DESC(?count)\nLIMIT 10",
        "complexity_description": "Aggregation and sorting",
        "complexity": "medium"
    },
    {
        "id": "819",
        "valid_gpt_response": true,
        "query": "SELECT ?software ?softwareLabel ?date (ROUND((NOW() - ?date)/365.2425) AS ?age)\nWHERE\n{\n?software wdt:P31/wdt:P139* wd:Q7397.\nOPTIONAL { ?software wdt:P571 ?date. }\nOPTIONAL { ?software p:P348 [ pq:P577 ?date ]. }\nFILTER(BOUND(?date)).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?date\nLIMIT 10",
        "complexity_description": "Multiple optional patterns, filter and service clause",
        "complexity": "medium"
    },
    {
        "id": "820",
        "valid_gpt_response": true,
        "query": "SELECT ?stationLabel ?coord\nWHERE {\n?station wdt:P81 wd:Q99691 .\n?station wdt:P625 ?coord\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"de\" }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "821",
        "valid_gpt_response": true,
        "query": "SELECT ?occup ?occupLabel ?count\nWHERE\n{\n{\nSELECT ?occup (COUNT(?person) as ?count)\nWHERE\n{\n?person wdt:P106 ?occup\n}\nGROUP BY ?occup\nORDER BY DESC(?count)\nLIMIT 1000\n}\nOPTIONAL {?occup rdfs:label ?label1 filter(lang(?label1) = \"lv\")}\nFILTER(!BOUND(?label1))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,es,pl,ja,zh,ru\" }\n}\nORDER BY DESC(?count)\nLIMIT 50",
        "complexity_description": "Multiple subqueries, grouping, ordering and filtering",
        "complexity": "complex"
    },
    {
        "id": "822",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?name ?coord ?place ?birthplace ?birthyear WHERE {\n{?person wdt:P106 wd:Q188094 .} UNION {?person wd:P101 wd:Q8134.}. MINUS {?person wdt:P106 wd:Q188094. ?person wd:P101 wd:Q8134.}\n?person wdt:P19 ?place .\n?place wdt:P625 ?coord .\nOPTIONAL { ?person wdt:P569 ?dob .}.\nBIND(YEAR(?dob) as ?birthyear).\n?person rdfs:label ?name filter (lang(?name) = \"en\")\n?place rdfs:label ?birthplace filter (lang(?birthplace) = \"en\")\n}",
        "complexity_description": "Multiple UNION and OPTIONAL clauses, BIND function, and FILTERs",
        "complexity": "complex"
    },
    {
        "id": "823",
        "valid_gpt_response": true,
        "query": "SELECT ?locationLabel ?coord (count(*) as ?count)\nWHERE {\n?painting wdt:P31 wd:Q3305213 .\n?painting wdt:P276 ?location .\n?location wdt:P625 ?coord\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nGROUP BY ?locationLabel ?coord",
        "complexity_description": "Multiple joins, group by and aggregation",
        "complexity": "medium"
    },
    {
        "id": "824",
        "valid_gpt_response": true,
        "query": "SELECT\n# Q#s\n?paper\n?author1\n?author2\n# title (either from title statement or label)\n(IF(BOUND(?title), ?title, ?paperLabel) AS ?title)\n# author labels (should be names) and their Erdos numbers\n?author1Label\n?erdos1\n?author2Label\n?erdos2\n# distance between Erdos numbers\n?distance\nWHERE\n{\n# paper, instance of or subclass of scientific article; also has two authors\n?paper wdt:P31/wdt:P279* wd:Q13442814;\nwdt:P50 ?author1, ?author2.\n# if it has a title, we'll grab that as well, but it's also okay if there's no title\nOPTIONAL { ?paper wdt:P1476 ?title. }\n# grab Erdos numbers of the two authors\n?author1 wdt:P2021 ?erdos1.\n?author2 wdt:P2021 ?erdos2.\n# introduce a new variable for the difference of the Erdos numbers\nBIND(?erdos2 - ?erdos1 AS ?distance).\n# select those cases where the distance is > 1\n# (note: by *not* taking the absolute value of the distance, we avoid getting duplicated cases because the author variables might be swapped)\nFILTER(?distance > 1).\n# get *Label variables automagically\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\n# sort by distance first (descending), then by first author, then by second author\nORDER BY DESC(?distance) ?author1Label ?author2Label",
        "complexity_description": "Multiple joins, filters and calculations",
        "complexity": "complex"
    },
    {
        "id": "825",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?placeLabel ?countryLabel WHERE {\n?item wdt:P39 wd:Q3044918 .\n?item wdt:P19 ?place .\n?place wdt:P17 ?country .\nFILTER NOT EXISTS { ?place wdt:P17 wd:Q142 . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" . }\n} ORDER BY ?countryLabel ?itemLabel",
        "complexity_description": "Multiple joins, filter and service",
        "complexity": "medium"
    },
    {
        "id": "826",
        "valid_gpt_response": true,
        "query": "SELECT ?proof ?proofLabel\nWHERE\n{\n?proof wdt:P31 wd:Q11538.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "827",
        "valid_gpt_response": true,
        "query": "SELECT ?work (COUNT(?depicted) AS ?count)\nWHERE\n{\n?work wdt:P180 ?depicted.\n}\nGROUP BY ?work\nORDER BY DESC(?count)\nLIMIT 10",
        "complexity_description": "Aggregation and sorting",
        "complexity": "medium"
    },
    {
        "id": "828",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?length WHERE {\n?item wdt:P31/wdt:P279* wd:Q4022 .\n?item wdt:P2043 ?length .\nFILTER ( ?length >= 1000 )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY DESC(?length) ?itemLabel",
        "complexity_description": "Multiple triple patterns, filter and service",
        "complexity": "medium"
    },
    {
        "id": "829",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?ed ?edLabel ?auteurLabel (year(?dateCreation) as ?AnneeCreation) ?lieuLabel ?coord ?lien where {\n?item wdt:P136 wd:Q1164267 . # genre :recit de voyage\n?item wdt:P31 wd:Q571 . # nature : livre\nOPTIONAL{\n?item wdt:P50 ?auteur . # [option] auteur\n}\nOPTIONAL{\n?item wdt:P571 ?dateCreation. # [option] date de creation\n}\n?item wdt:P840 ?lieu . # lieu de l'action\nMINUS {?item wdt:P840 wd:Q933} # (bug du Pole Sud)\n?lieu wdt:P625 ?coord . # coordonnees geographiques du lieu\n{\n?item wdt:P953 ?lien . # URL, texte integral disponible sur\n?item wdt:P364 wd:Q150 # langue originale : francais\n}UNION{\n?ed wdt:P629 ?item . # edition du livre\n?ed wdt:P953 ?lien . # URL, texte integral disponible sur\n?ed wdt:P407 wd:Q150 # langue de l'oeuvre : francais\n}\nSERVICE wikibase:label { #BabelRainbow\nbd:serviceParam wikibase:language \"fr,ar,be,bg,bn,ca,cs,da,de,el,en,es,et,fa,fi,he,hi,hu,hy,id,it,ja,jv,ko,nb,nl,eo,pa,pl,pt,ro,ru,sh,sk,sr,sv,sw,te,th,tr,uk,yue,vec,vi,zh\"\n}\n} ORDER BY ?dateCreation",
        "complexity_description": "Multiple optional patterns, unions, and filters with multiple conditions",
        "complexity": "complex"
    },
    {
        "id": "830",
        "valid_gpt_response": true,
        "query": "SELECT ?place ?placeLabel ?location WHERE {\nwd:Q24041662 wdt:P625 ?loc00 .\nSERVICE wikibase:around {\n?place wdt:P625 ?location .\nbd:serviceParam wikibase:center ?loc00 .\nbd:serviceParam wikibase:radius \"0.001\" .\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}\nORDER BY ?placeLabel",
        "complexity_description": "Multiple services, geospatial query with radius",
        "complexity": "complex"
    },
    {
        "id": "831",
        "valid_gpt_response": true,
        "query": "SELECT ?subj ?label ?coord ?elev ?picture\nWHERE\n{\n?subj wdt:P2044 ?elev filter(?elev > 4000) .\n?subj wdt:P625 ?coord .\n?subj wdt:P17 wd:Q38 .\n?subj wdt:P18 ?picture .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"it\" . ?subj rdfs:label ?label }\n}",
        "complexity_description": "Multiple triple patterns, filter and service",
        "complexity": "medium"
    },
    {
        "id": "832",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?date\nWHERE\n{\n?person wdt:P31 wd:Q5;\nwdt:P509 wd:Q468455;\nwdt:P570 ?date.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?date",
        "complexity_description": "Three triple patterns, one service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "833",
        "valid_gpt_response": true,
        "query": "SELECT ?age (COUNT (DISTINCT ?a) AS ?count) WHERE {\n?a wdt:P31 wd:Q5 . #instance of human\n?a wdt:P106/wdt:P279 wd:Q639669 . #occupation a subclass of musician\n?a p:P569/psv:P569 ?birth_date_node .\n?a p:P570/psv:P570 ?death_date_node .\n?birth_date_node wikibase:timeValue ?birth_date .\n?death_date_node wikibase:timeValue ?death_date .\nFILTER(?age > 10 && ?age < 100) . #ignore outlyers, several of which are probably errors\nBIND( year(?death_date) - year(?birth_date) - if(month(?death_date)<month(?birth_date) || (month(?death_date)=month(?birth_date) && day(?death_date)<day(?birth_date)),1,0) as ?age )\n# calculate the age, precisely to the day (times and timezones ignored)\n}\nGROUP BY ?age\nORDER BY ?age",
        "complexity_description": "Multiple filters, binds, and subqueries with aggregation",
        "complexity": "complex"
    },
    {
        "id": "834",
        "valid_gpt_response": true,
        "query": "SELECT ?lang ?langLabel ?human ?humanLabel ?educatedat ?educatedatLabel ?coords WHERE {\n?lang wdt:P31/wdt:P279* wd:Q9143 .\n?human wdt:P31 wd:Q5 .\n{ ?lang wdt:P287 ?human } UNION { ?lang wdt:P170 ?human } UNION { ?lang wdt:P943 ?human } UNION { ?lang wdt:P178 ?human } .\n?human wdt:P69 ?educatedat .\n?educatedat wdt:P625 ?coords .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en,fr\" .\n}\n}\nLIMIT 100",
        "complexity_description": "Multiple UNIONs and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "835",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?hashtagLabel\nWHERE\n{\n?item wdt:P2572 ?hashtag\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "836",
        "valid_gpt_response": true,
        "query": "SELECT ?pokemon ?pokemonLabel ?pokedexNumber\nWHERE\n{\n?pokemon wdt:P31 wd:Q3966183.\n?pokemon wdt:P1112 ?pokedexNumber\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n} ORDER BY (?pokedexNumber)",
        "complexity_description": "Simple query with 2 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "837",
        "valid_gpt_response": true,
        "query": "SELECT ?name (COUNT(?otherName) AS ?count)\nWHERE\n{\n?name wdt:P31 wd:Q202444;\nwdt:P460 ?otherName.\n}\nGROUP BY ?name\nORDER BY DESC(?count)\nLIMIT 10",
        "complexity_description": "Uses aggregation, grouping and ordering",
        "complexity": "medium"
    },
    {
        "id": "838",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel WHERE {\n?item (wdt:P31/wdt:P279*) wd:Q191067.\n?item wdt:P921 wd:Q2013.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "839",
        "valid_gpt_response": true,
        "query": "SELECT ?meme ?memeLabel\nWHERE\n{\n?meme wdt:P31/wdt:P279* wd:Q978.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "840",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?placeLabel ?coords ?image WHERE {\n?item wdt:P31 wd:Q2977 .\n?item wdt:P131 ?place .\n?place wdt:P131 wd:Q90 .\nOPTIONAL { ?item wdt:P625 ?coords . }\nOPTIONAL { ?item wdt:P18 ?image . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" . }\n} ORDER BY ?placeLabel ?itemLabel",
        "complexity_description": "Multiple joins, optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "841",
        "valid_gpt_response": true,
        "query": "SELECT ?subj ?label ?coord ?elev\nWHERE\n{\n?subj wdt:P2044 ?elev filter(?elev > 8000) .\n?subj wdt:P625 ?coord .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,zh\" . ?subj rdfs:label ?label }\n}",
        "complexity_description": "Multiple triple patterns, filter and service",
        "complexity": "medium"
    },
    {
        "id": "842",
        "valid_gpt_response": true,
        "query": "SELECT (SAMPLE(?seasonNumber) AS ?seasonNumber) (SAMPLE(?episodeNumber) AS ?episodeNumber) (SAMPLE(?title) AS ?title) (MIN(?pubDate) AS ?pubDate) ?episode\nWHERE\n{\n# All episodes should be instance of episode with series Law & Order.\n?episode wdt:P31 wd:Q1983062;\nwdt:P179 wd:Q321423.\n# Many of them also have the season as series, so we can get episode and season number from qualifiers there.\nOPTIONAL {\n?episode p:P179 [\nps:P179 [\n# the season also has series Law & Order\np:P179 [\nps:P179 wd:Q321423;\npq:P1545 ?seasonNumber\n]\n];\npq:P1545 ?episodeNumber\n].\n}\nOPTIONAL { ?episode wdt:P1476 ?title. }\nOPTIONAL { ?episode wdt:P577 ?pubDate. }\n}\nGROUP BY ?episode # make sure we return each episode only once - a few have multiple publication dates, for example\nORDER BY IF(BOUND(?seasonNumber),xsd:integer(?seasonNumber),1000) xsd:integer(?episodeNumber) ?title",
        "complexity_description": "Multiple optional patterns, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "843",
        "valid_gpt_response": true,
        "query": "SELECT ?parent ?parentLabel ?count\nWHERE\n{\n{\nSELECT ?parent (COUNT(?child) AS ?count)\nWHERE\n{\n?parent wdt:P40 ?child.\n}\nGROUP BY ?parent\nORDER BY DESC(?count)\nLIMIT 10\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC(?count)\nLIMIT 10",
        "complexity_description": "Nested query with aggregation, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "844",
        "valid_gpt_response": true,
        "query": "SELECT ?universe (SAMPLE(?label) AS ?label) (COUNT(?planet) AS ?count)\nWHERE\n{\n?planet wdt:P31 wd:Q2775969;\nwdt:P1080 ?universe.\n?universe rdfs:label ?label.\nFILTER(LANG(?label) = \"en\").\n}\nGROUP BY ?universe\nORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, filter, group by and order by",
        "complexity": "complex"
    },
    {
        "id": "845",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?subject ?subjectLabel WHERE {\n?episode wdt:P31 wd:Q1983062.\n?episode wdt:P179 wd:Q3577037.\n?episode wdt:P921 ?subject.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Simple query with 3 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "846",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coord\nWHERE\n{\n?item wdt:P2848 wd:Q1543615 .\n?item wdt:P625 ?coord .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "847",
        "valid_gpt_response": true,
        "query": "SELECT ?taxon ?eponym ?taxonLabel ?eponymLabel\nWHERE\n{\n?taxon wdt:P31 wd:Q16521;\nwdt:P138 ?eponym.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?eponym",
        "complexity_description": "Simple query with 2 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "848",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?billions\nWHERE\n{\n?item wdt:P2218 ?worth.\nFILTER(?worth>1000000000).\nBIND(?worth/1000000000 AS ?billions).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC(?billions)",
        "complexity_description": "Filter, bind, and service clause",
        "complexity": "medium"
    },
    {
        "id": "849",
        "valid_gpt_response": true,
        "query": "SELECT ?animal ?animalLabel ?died ?mannerOfDeathLabel ?image\nWHERE\n{\n?animal wdt:P31/wdt:P31 wd:Q16521; # instance of some taxon (does not include human)\nwdt:P509 ?mannerOfDeath.\n?mannerOfDeath wdt:P279* wd:Q8454. # some subclass of capital punishment\nOPTIONAL { ?animal wdt:P570 ?died. }\nOPTIONAL { ?animal wdt:P18 ?image. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?died",
        "complexity_description": "Multiple filters, optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "850",
        "valid_gpt_response": true,
        "query": "SELECT ?element (SAMPLE(?symbol) AS ?symbol) (SAMPLE(?protons) AS ?protons) (MIN(?neutrons) AS ?minNeutrons) (MAX(?neutrons) AS ?maxNeutrons)\nWHERE\n{\n?element wdt:P31 wd:Q11344;\nwdt:P1086 ?protons;\nwdt:P246 ?symbol.\n?isotope wdt:P279 ?element;\nwdt:P1148 ?neutrons.\n}\nGROUP BY ?element\nORDER BY ?protons",
        "complexity_description": "Multiple aggregations, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "851",
        "valid_gpt_response": true,
        "query": "SELECT ?pope ?popeLabel ?kids\nWHERE\n{\n?pope wdt:P39 wd:Q19546;\nwdt:P1971 ?kids.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC(?kids)",
        "complexity_description": "Two triple patterns, one service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "852",
        "valid_gpt_response": true,
        "query": "SELECT ?astronaut ?astronautLabel ?image ?birthdate ?birthplace ?coord WHERE {\n?astronaut ?x1 wd:Q11631;\nwdt:P18 ?image;\nwdt:P569 ?birthdate;\nwdt:P19 ?birthplace.\n?birthplace wdt:P625 ?coord\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC(?birthdate)",
        "complexity_description": "Multiple triple patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "853",
        "valid_gpt_response": true,
        "query": "SELECT ?mouth (COUNT(?watercourse) AS ?count)\nWHERE\n{\n?watercourse wdt:P403+ ?mouth.\n}\nGROUP BY ?mouth\nORDER BY DESC(?count)\nLIMIT 10",
        "complexity_description": "Uses grouping, aggregation and ordering",
        "complexity": "medium"
    },
    {
        "id": "854",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coord\nWHERE {\n?item wdt:P31/wdt:P279* wd:Q484170;\nwdt:P17 wd:Q142;\nrdfs:label ?itemLabel;\nwdt:P625 ?coord;\nFILTER (lang(?itemLabel) = \"fr\").\nFILTER regex (?itemLabel, \"ac$\").\nFILTER not exists { ?item wdt:P131 wd:Q33788 } # excluding Koumac, New Caledonia...\n}",
        "complexity_description": "Multiple filters and joins with regex",
        "complexity": "complex"
    },
    {
        "id": "855",
        "valid_gpt_response": true,
        "query": "SELECT ?creator ?placebirthLabel ?geoloc where {\n?item wdt:P31/wdt:P279* wd:Q838948 . # oeuvre d'art et ss-classe\n?item wdt:P608 wd:Q20980830. # du projet Europeana 280\n?item wdt:P170 ?creator. # createur\n?creator wdt:P19 ?placebirth. # lieu de naissance\n?placebirth wdt:P625 ?geoloc . #coordonnees geo\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"fr,es,en\" .\n}\n}",
        "complexity_description": "Multiple joins and filters with a SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "856",
        "valid_gpt_response": true,
        "query": "SELECT ?eyeColorLabel (COUNT(?person) AS ?count)\nWHERE\n{\n?person wdt:P1340 ?eyeColor.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?eyeColorLabel",
        "complexity_description": "Single triple pattern, single service call and group by",
        "complexity": "medium"
    },
    {
        "id": "857",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?instanceLabel ?creatorLabel (YEAR(?date) as ?year) ?image WHERE {\n?item wdt:P180 wd:Q243 .\n?item wdt:P31 ?instance .\nOPTIONAL { ?item wdt:P170 ?creator }\nOPTIONAL { ?item wdt:P571 ?date }\nOPTIONAL { ?item wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple optional patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "858",
        "valid_gpt_response": true,
        "query": "SELECT ?surname ?surnameLabel ?count WHERE {\n{\nSELECT ?surname (COUNT(?person) AS ?count) WHERE {\n?person wdt:P31 wd:Q5.\n?person wdt:P734 ?surname.\n}\nGROUP BY ?surname\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC(?count)\nLIMIT 100",
        "complexity_description": "Subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "859",
        "valid_gpt_response": true,
        "query": "SELECT ?surname ?surnameLabel ?count WHERE {\n{\nSELECT ?surname (COUNT(?person) AS ?count) WHERE {\n?person (wdt:P31/wdt:P279*) wd:Q95074.\n?person wdt:P734 ?surname.\n}\nGROUP BY ?surname\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC(?count)\nLIMIT 100",
        "complexity_description": "Subqueries, grouping, and ordering",
        "complexity": "complex"
    },
    {
        "id": "860",
        "valid_gpt_response": true,
        "query": "SELECT ?occ ?occLabel ?avgAge ?avgBirthYear ?count WHERE {\n{\n# Group the people by their occupation and calculate age\nSELECT\n?occ\n(count(?p) as ?count)\n(round(avg(?birthYear)) as ?avgBirthYear)\n(avg(?deathYear - ?birthYear) as ?avgAge)\nWHERE {\n{\n# Get people with occupation + birth/death dates; combine multiple birth/death dates using avg\nSELECT\n?p\n?occ\n(avg(year(?birth)) as ?birthYear)\n(avg(year(?death)) as ?deathYear)\nWHERE {\n?p wdt:P31 wd:Q5 ;\nwdt:P106 ?occ ;\np:P569/psv:P569 [\nwikibase:timePrecision \"9\"^^xsd:integer ; # precision of at least year\nwikibase:timeValue ?birth ;\n] ;\np:P570/psv:P570 [\nwikibase:timePrecision \"9\"^^xsd:integer ; # precision of at least year\nwikibase:timeValue ?death ;\n] .\n}\nGROUP BY ?p ?occ\n}\n}\nGROUP BY ?occ\n}\nFILTER (?count > 300) # arbitrary number to weed out values with 'few' observations\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}\nORDER BY ASC(?avgAge)",
        "complexity_description": "Multiple nested queries, aggregation functions and filters",
        "complexity": "complex"
    },
    {
        "id": "861",
        "valid_gpt_response": true,
        "query": "select ?breweryLabel ?breweryDescription ?coord WHERE {\n?brewery wdt:P31/wdt:P279* wd:Q131734 ;\nwdt:P17 wd:Q183 ;\nwdt:P625 ?coord .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en, de\" .\n}\n}",
        "complexity_description": "Multiple triple patterns with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "862",
        "valid_gpt_response": true,
        "query": "SELECT ?year ?pope1Label ?pope2Label ?pope3Label\nWHERE\n{\n?pope2 wdt:P39 wd:Q19546;\np:P39 [\nps:P39 wd:Q19546;\npq:P580 ?p2s;\npq:P582 ?p2e;\npq:P1365 ?pope1;\npq:P1366 ?pope3\n].\n?pope1 p:P39 [\nps:P39 wd:Q19546;\npq:P582 ?p1e\n].\n?pope3 p:P39 [\nps:P39 wd:Q19546;\npq:P580 ?p3s\n].\nBIND(YEAR(?p2s) AS ?year).\nFILTER(YEAR(?p2e) = ?year && YEAR(?p1e) = ?year && YEAR(?p3s) = ?year).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?year",
        "complexity_description": "Multiple nested patterns, BIND and FILTER operations",
        "complexity": "complex"
    },
    {
        "id": "863",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?date\nWHERE\n{\n?person wdt:P31 wd:Q5;\nwdt:P509 wd:Q468455;\nwdt:P570 ?date.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?date",
        "complexity_description": "Three triple patterns, one service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "864",
        "valid_gpt_response": true,
        "query": "SELECT ?rgb ?colorLabel (COUNT(?compound) AS ?count)\nWHERE\n{\n?compound wdt:P31 wd:Q11173;\nwdt:P462 ?color.\nOPTIONAL { ?color wdt:P465 ?rgb. }\nBIND(IF(BOUND(?rgb),?rgb,\"CCCCCC\") AS ?rgb).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?rgb ?colorLabel",
        "complexity_description": "Optional clause, BIND function, and SERVICE keyword make it complex",
        "complexity": "complex"
    },
    {
        "id": "865",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?venue ?venueLabel ?coords {\n?venue wdt:P1217 ?IDBDB .\nwd:Q235065 wdt:P625 ?broadWayLoc .\nSERVICE wikibase:around {\n?venue wdt:P625 ?coords .\nbd:serviceParam wikibase:center ?broadWayLoc .\nbd:serviceParam wikibase:radius \"1.5\" .\n}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}",
        "complexity_description": "Multiple services, geospatial query",
        "complexity": "complex"
    },
    {
        "id": "866",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?countryLabel ?placeLabel (YEAR(?date) as ?year) ?coords ?image WHERE {\n?item wdt:P31/wdt:P279* wd:Q860861 .\n?item wdt:P170 wd:Q123454 .\nOPTIONAL { ?item wdt:P17 ?country . }\nOPTIONAL { ?item wdt:P131 ?place . }\nOPTIONAL { ?item wdt:P571 ?date . }\nOPTIONAL { ?item wdt:P625 ?coords . }\nOPTIONAL { ?item wdt:P18 ?image . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?itemLabel ?placeLabel",
        "complexity_description": "Multiple optional patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "867",
        "valid_gpt_response": true,
        "query": "SELECT ?work ?title\nWHERE\n{\n?work wdt:P31/wdt:P279* wd:Q838948;\nwdt:P1476 ?title.\nFILTER(REGEX(?title, \"^\\\\w*(\\\\w{3})(\\\\W+\\\\w*\\\\1)+$\", \"i\") && !REGEX(?title, \"^(\\\\w+)(\\\\W+\\\\1)+$\", \"i\")).\n}\nORDER BY STR(?title)",
        "complexity_description": "Multiple triple patterns with regex filters and ordering",
        "complexity": "complex"
    },
    {
        "id": "868",
        "valid_gpt_response": true,
        "query": "SELECT ?work ?title\nWHERE\n{\n?work wdt:P31/wdt:P279* wd:Q838948;\nwdt:P1476 ?title.\nFILTER(REGEX(STR(?title), \"^(\\\\p{L})\\\\w+(?:\\\\W+\\\\1\\\\w+){2,}$\", \"i\")).\n}\nORDER BY STR(?title)",
        "complexity_description": "Multiple triple patterns with regex filter and ordering",
        "complexity": "complex"
    },
    {
        "id": "869",
        "valid_gpt_response": true,
        "query": "SELECT ?sandwich ?ingredient ?sandwichLabel ?ingredientLabel\nWHERE\n{\n?sandwich wdt:P31?/wdt:P279* wd:Q28803;\nwdt:P527 ?ingredient.\nMINUS { ?ingredient wdt:P279* wd:Q7802. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\", \"fr\". }\n}\nORDER BY UCASE(STR(?sandwichLabel))",
        "complexity_description": "Multiple triple patterns, property paths, MINUS clause, and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "870",
        "valid_gpt_response": true,
        "query": "SELECT ?inventor ?inventorLabel ?gadet ?gadgetLabel\nWHERE {\n?inventor wdt:P157 ?gadget .\n?gadet wdt:P61 ?inventor .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n?inventor rdfs:label ?inventorLabel .\n?gadget rdfs:label ?gadgetLabel .\n}\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "871",
        "valid_gpt_response": true,
        "query": "SELECT ?object ?objectLabel (MAX(?mass) AS ?mass)\nWHERE\n{\n?object p:P2067/psv:P2067 [\nwikibase:quantityAmount ?baseMass;\nwikibase:quantityUnit [\np:P2370/psv:P2370 [\nwikibase:quantityAmount ?unitMass;\nwikibase:quantityUnit wd:Q11570\n]\n]\n].\nBIND(?baseMass * ?unitMass AS ?mass).\nMINUS { ?object wdt:P31 wd:Q3647172. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?object ?objectLabel\nORDER BY DESC(?mass)",
        "complexity_description": "Multiple joins, subqueries, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "872",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?_image ?_subclass_of ?_subclass_ofLabel WHERE {\n?item wdt:P31 wd:Q188451.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\nOPTIONAL { ?item wdt:P279 ?_subclass_of. }\nOPTIONAL { ?item wdt:P18 ?_image. }\n}",
        "complexity_description": "Optional patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "873",
        "valid_gpt_response": true,
        "query": "SELECT ?sideLabel (COUNT(?jurisdiction) AS ?count)\nWHERE\n{\n?jurisdiction wdt:P1622 ?side.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?sideLabel\nORDER BY ?sideLabel",
        "complexity_description": "Uses aggregation, grouping and ordering",
        "complexity": "medium"
    },
    {
        "id": "874",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?_image WHERE {\n?item wdt:P161 wd:Q221074.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\nOPTIONAL { ?item wdt:P18 ?_image. }\n}",
        "complexity_description": "Simple query with one triple pattern and an optional clause",
        "complexity": "simple"
    },
    {
        "id": "875",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?city ?cityLabel ?population ?country ?countryLabel ?loc WHERE {\n{\nSELECT (MAX(?population) AS ?population) ?country WHERE {\n?city wdt:P31/wdt:P279* wd:Q515 .\n?city wdt:P1082 ?population .\n?city wdt:P17 ?country .\n}\nGROUP BY ?country\nORDER BY DESC(?population)\n}\n?city wdt:P31/wdt:P279* wd:Q515 .\n?city wdt:P1082 ?population .\n?city wdt:P17 ?country .\n?city wdt:P625 ?loc .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}",
        "complexity_description": "Multiple subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "876",
        "valid_gpt_response": true,
        "query": "SELECT ?continent ?river ?continentLabel ?riverLabel\nWHERE\n{\n{\nSELECT ?continent (MAX(?length) AS ?length)\nWHERE\n{\n?river wdt:P31/wdt:P279* wd:Q355304;\nwdt:P2043 ?length;\nwdt:P30 ?continent.\n}\nGROUP BY ?continent\n}\n?river wdt:P31/wdt:P279* wd:Q355304;\nwdt:P2043 ?length;\nwdt:P30 ?continent.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?continentLabel",
        "complexity_description": "Multiple subqueries, grouping and filtering",
        "complexity": "complex"
    },
    {
        "id": "877",
        "valid_gpt_response": true,
        "query": "SELECT ?river ?riverLabel ?location\nWHERE\n{\n?river wdt:P31/wdt:P279* wd:Q355304; # watercourse; includes a few creeks - use wd:Q4022 for rivers only\nwdt:P30 wd:Q51.\nOPTIONAL { ?river wdt:P625 ?location. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Optional clause, property path and service query",
        "complexity": "medium"
    },
    {
        "id": "878",
        "valid_gpt_response": true,
        "query": "SELECT ?continent ?continentLabel\nWHERE\n{\n?continent wdt:P31 wd:Q5107.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY xsd:integer(SUBSTR(STR(?continent),STRLEN(\"http://www.wikidata.org/entity/Q\")+1))",
        "complexity_description": "Simple query with one triple pattern and a service call",
        "complexity": "simple"
    },
    {
        "id": "879",
        "valid_gpt_response": true,
        "query": "SELECT ?continentLabel\nWHERE\n{\n{ # subquery for optimization so the label service doesn't have to do as much work (228 ms vs 20731 ms)\nSELECT DISTINCT ?continent\nWHERE\n{\n[] wdt:P30 ?continent.\n}\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY xsd:integer(SUBSTR(STR(?continent),STRLEN(\"http://www.wikidata.org/entity/Q\")+1))",
        "complexity_description": "Subquery, SERVICE clause, ORDER BY with functions",
        "complexity": "complex"
    },
    {
        "id": "880",
        "valid_gpt_response": true,
        "query": "SELECT ?place ?placeLabel ?location WHERE {\nwd:Q933 wdt:P625 ?southPole. # coordinates of south pole\n?place wdt:P30 wd:Q51; # continent: antarctica\nwdt:P625 ?location.\nFILTER(geof:distance(?location, ?southPole) > 3000). # over 3000 km away from south pole\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Filter with geospatial function and multiple triple patterns",
        "complexity": "medium"
    },
    {
        "id": "881",
        "valid_gpt_response": true,
        "query": "SELECT ?image (count(?image) AS ?cnt) (group_concat(?item) AS ?items) {\n?item wdt:P18 ?image\n} group by ?image having (?cnt>10)",
        "complexity_description": "Aggregation and filtering",
        "complexity": "medium"
    },
    {
        "id": "882",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT\n?item\n?itemLabel\n?communeLabel\n(group_concat(distinct ?merimee ; separator = \", \") as ?merimee)\n?coords\n?image\nWHERE {\n{\nSELECT DISTINCT ?item ?merimee WHERE {\n?item wdt:P1435/wdt:P279* wd:Q916475 .\n?item p:P1435 ?heritage_statement .\nFILTER NOT EXISTS { ?heritage_statement pq:P582 ?end . }\n?item wdt:P380 ?merimee.\n}\nORDER BY ?merimee\n}\n?item wdt:P131/wdt:P131* wd:Q3068 .\n?item wdt:P131 ?commune .\nOPTIONAL { ?item wdt:P625 ?coords . }\nOPTIONAL { ?item wdt:P18 ?image . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" . }\n}\nGROUP BY ?item ?itemLabel ?communeLabel ?coords ?image\nORDER BY ?communeLabel ?itemLabel",
        "complexity_description": "Multiple subqueries, filters, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "883",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?_coordinate_location ?_image WHERE {\n?item wdt:P106 wd:Q36834.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n?item wdt:P19 ?place.\n?place wdt:P625 ?_coordinate_location.\n?item wdt:P18 ?_image.\n}",
        "complexity_description": "Multiple joins, service call",
        "complexity": "medium"
    },
    {
        "id": "884",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?_coordinate_location ?_image WHERE {\n?item wdt:P31/wdt:P279* wd:Q1370598.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n?item wdt:P625 ?_coordinate_location.\n?item wdt:P18 ?_image.\n}",
        "complexity_description": "Multiple triple patterns with service call",
        "complexity": "medium"
    },
    {
        "id": "885",
        "valid_gpt_response": true,
        "query": "SELECT ?teacher ?teacherLabel ?count\nWHERE\n{\n{\nSELECT ?teacher (COUNT(DISTINCT ?student) AS ?count)\nWHERE\n{\n?teacher wdt:P802|^wdt:P1066 ?student.\n}\nGROUP BY ?teacher\nHAVING(?count > 1)\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC(?count)",
        "complexity_description": "Subqueries, grouping, and aggregation",
        "complexity": "complex"
    },
    {
        "id": "886",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?count WHERE {\n{\nSELECT ?item (COUNT(DISTINCT ?country) AS ?count) WHERE {\n?item wdt:P31/wdt:P279* wd:Q41176 .\n?item wdt:P17 ?country .\nFILTER NOT EXISTS { ?country wdt:P576 ?end }\n}\nGROUP BY ?item\n}\nFILTER ( ?count > 1 )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}\nORDER BY DESC(?count) ?itemL",
        "complexity_description": "Multiple subqueries, grouping and filtering",
        "complexity": "complex"
    },
    {
        "id": "887",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?_image WHERE {\n?item wdt:P279 wd:Q28803.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\nOPTIONAL { ?item wdt:P18 ?_image. }\n}\nLIMIT 100",
        "complexity_description": "Simple query with one triple pattern and an optional clause",
        "complexity": "simple"
    },
    {
        "id": "888",
        "valid_gpt_response": true,
        "query": "SELECT ?composerLabel ?tonalityLabel ?count\nWHERE\n{\n{\n# 4. Group again, this time just by the composer.\n# We also select the highest count of a tonality.\n# Notice that we don't know what tonality this count is associated with - we'll get to that.\n# So now we have each composer, along with how often they used whatever tonality they used most.\nSELECT ?composer (MAX(?count) AS ?count)\nWHERE\n{\n{\n# 2. Group by composer and tonality, so that for each composer and tonality, we get a count of how often the composer used this tonality.\nSELECT ?composer ?tonality (COUNT(?composition) AS ?count)\nWHERE\n{\n# 1. Extremely straightforward: the ?composition has the composer ?composer and the tonality ?tonality.\n# (I'm not bothering with any \"instance of\" because the presence of these two properties is a sufficient indicator of ?composition being a composition.)\n?composition wdt:P86 ?composer;\nwdt:P826 ?tonality.\n}\nGROUP BY ?composer ?tonality\nHAVING(?count > 1) # 3. Limit that to counts > 1, because using a tonality once is hardly \"most used\".\n}\n}\nGROUP BY ?composer\n}\n{\n# 6. Identical to 2.\nSELECT ?composer ?tonality (COUNT(?composition) AS ?count)\nWHERE\n{\n# 5. Identical to 1.\n?composition wdt:P86 ?composer;\nwdt:P826 ?tonality.\n}\nGROUP BY ?composer ?tonality\nHAVING(?count > 1) # 7. Identical to 3.\n}\n# 8. That's it. Wait, what?\n# From 4, we now have ?composer, any composer, and ?count, the count of how often they used whatever tonality they used most.\n# From 6, we also have a ?composer, as well as a ?tonality, and the count of how often they used that particular tonality.\n# The trick is that ?composer and ?count are the same variable in each subquery, and so now, when the two subqueries are joined,\n# we select only that ?tonality from 6 where the ?composer and the ?count are identical to those from 4 -\n# that is, where this tonality was used as often as the composer's most-used tonality.\n# In other words, this must *be* the composer's most-used tonality (except when there are multiple tonalities with the same count).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC(?count) # 9. Order by count (highest first), because the result isn't very meaningful for low counts (many compositions aren't on Wikidata or don't have a tonality statement).",
        "complexity_description": "Nested subqueries with grouping, filtering and joining",
        "complexity": "complex"
    },
    {
        "id": "889",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?country ?countryLabel ?capital ?capitalLabel ?coordinates ?ended\nWHERE\n{\n?country p:P36 ?stat.\n?stat ps:P36 ?capital.\n?capital wdt:P625 ?coordinates.\nOPTIONAL {\n?country wdt:P582|wdt:P576 ?ended.\n}\nOPTIONAL {\n?capital wdt:P582|wdt:P576 ?ended.\n}\nOPTIONAL {\n?stat pq:P582 ?ended.\n}\nFILTER(BOUND(?ended)).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple joins, optional patterns and filter",
        "complexity": "complex"
    },
    {
        "id": "890",
        "valid_gpt_response": true,
        "query": "SELECT ?h ?hLabel ?location (CONCAT(\"injured: \",str(?injured)) as ?injuredl) (concat(\"dead: \",str(?dead)) as ?deadl) ?date ?image WHERE {\n?h wdt:P31 ?attack.\nvalues (?attack) {\n(wd:Q18493502)\n(wd:Q217327)\n}\noptional { ?h wdt:P1339 ?injured . }\noptional { ?h wdt:P1120 ?dead. }\noptional { ?h wdt:P276?/wdt:P625 ?location }\noptional { ?h wdt:P585 ?date }\noptional { ?h wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Multiple optional patterns, values block and service call",
        "complexity": "medium"
    },
    {
        "id": "891",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coord WHERE {\n?item wdt:P735 wd:Q15235674.\n?item wdt:P19 ?place.\n?place wdt:P625 ?coord.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\". }\n}",
        "complexity_description": "Multiple joins, service call",
        "complexity": "medium"
    },
    {
        "id": "892",
        "valid_gpt_response": true,
        "query": "SELECT ?p ?location ?el ?image WHERE {\n?p p:P2044/psv:P2044 ?pel.\n?pel wikibase:quantityAmount ?el.\n?pel wikibase:quantityUnit ?unit.\nbind(0.01 as ?km).\nfilter( (?el < ?km*1000 && ?unit = wd:Q11573) ||\n(?el < ?km*3281 && ?unit = wd:Q3710)\n|| (?el < ?km && ?unit = wd:Q828224) ).\n?p wdt:P625 ?location.\noptional { ?p wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Multiple filters, optional clause and service call",
        "complexity": "complex"
    },
    {
        "id": "893",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?launchdate (SAMPLE(?image) AS ?image)\nWHERE\n{\n?item wdt:P31 wd:Q26529 .\n?item wdt:P619 ?launchdate .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\nOPTIONAL { ?item wdt:P18 ?image }\n}\nGROUP BY ?item ?itemLabel ?launchdate",
        "complexity_description": "Multiple triple patterns, optional clause and group by",
        "complexity": "medium"
    },
    {
        "id": "894",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?country ?countryLabel (count(?site) as ?sites)\nWHERE {\n?site wdt:P1435 wd:Q9259 .\n?site wdt:P17 ?country .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}\nGROUP BY ?country ?countryLabel\nORDER BY DESC(?sites)",
        "complexity_description": "Multiple triple patterns, service call and aggregation",
        "complexity": "medium"
    },
    {
        "id": "895",
        "valid_gpt_response": true,
        "query": "SELECT ?placeInAmerica ?placeInEngland ?americaName ?englandName ?americaLocation\nWHERE\n{\n?placeInAmerica wdt:P31/wdt:P279* wd:Q1496967;\nwdt:P17 wd:Q30;\nwdt:P138 ?placeInEngland;\nwdt:P625 ?americaLocation.\n?placeInEngland wdt:P31/wdt:P279* wd:Q1496967;\nwdt:P17 wd:Q145.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\".\n?placeInAmerica rdfs:label ?americaName.\n?placeInEngland rdfs:label ?englandName.\n}\n}",
        "complexity_description": "Multiple triple patterns, property paths and service call",
        "complexity": "medium"
    },
    {
        "id": "896",
        "valid_gpt_response": true,
        "query": "SELECT ?emergencyNumber ?emergencyNumberLabel ?tel ?population ?countries WHERE {\n?emergencyNumber wdt:P31 wd:Q694554 .\nOPTIONAL{SELECT ?emergencyNumber (COUNT(?state) as ?countries) (SUM(?pop) as ?population) WHERE {\n?state wdt:P2852 ?emergencyNumber .\nOPTIONAL{?state wdt:P2046 ?pop} .\n?state wdt:P31/wdt:P279* wd:Q6256\n} GROUP BY ?emergencyNumber } .\nOPTIONAL{?emergencyNumber wdt:P1329 ?tel }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nORDER BY DESC(?population)",
        "complexity_description": "Multiple optional patterns, subqueries, and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "897",
        "valid_gpt_response": true,
        "query": "SELECT ?letter ?letterLabel (COUNT(DISTINCT ?character) AS ?count) (SAMPLE(?character) AS ?sample)\nWHERE\n{\n?letter wdt:P31/wdt:P279* wd:Q9788;\np:P487/ps:P487 ?character.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?letter ?letterLabel\nHAVING(?count > 2)\nORDER BY DESC(?count)",
        "complexity_description": "Multiple patterns, aggregation, and filtering",
        "complexity": "complex"
    },
    {
        "id": "898",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?coords WHERE {\n?item wdt:P31/wdt:P279* wd:Q928830 .\nOPTIONAL { ?item wdt:P625 ?coords }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?itemLabel",
        "complexity_description": "Optional clause, property path and service call",
        "complexity": "medium"
    },
    {
        "id": "899",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?h ?hLabel ?location (CONCAT(\"injured: \",str(?injured)) as ?injuredl) (concat(\"dead: \",str(?dead)) as ?deadl) ?date ?image WHERE {\n?h wdt:P31/wdt:P279* wd:Q4202290.\noptional { ?h wdt:P1339 ?injured . }\noptional { ?h wdt:P1120 ?dead. }\noptional { ?h wdt:P276?/wdt:P625 ?location }\noptional { ?h wdt:P585 ?date }\noptional { ?h wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n} order by desc(?date)",
        "complexity_description": "Multiple optional patterns, concatenation and service call",
        "complexity": "complex"
    },
    {
        "id": "900",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?image ?coords WHERE {\n?item wdt:P31/wdt:P279* wd:Q12516 .\n?item wdt:P17 wd:Q79 .\nOPTIONAL { ?item wdt:P625 ?coords }\nOPTIONAL { ?item wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple filters, optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "901",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?wife ?wifeLabel ?wifeDescription\nWHERE\n{\n?wife wdt:P31 wd:Q5;\nwdt:P21 wd:Q6581072;\np:P26 [];\nrdfs:label ?wifeLabel;\nschema:description ?wifeDescription.\nFILTER(LANG(?wifeLabel) = \"en\").\nFILTER(LANG(?wifeDescription) = \"en\").\nFILTER(CONTAINS(?wifeDescription, \"wife\")).\n}",
        "complexity_description": "Multiple filters and language constraints",
        "complexity": "medium"
    },
    {
        "id": "902",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?husband ?husbandLabel ?husbandDescription\nWHERE\n{\n?husband wdt:P31 wd:Q5;\nwdt:P21 wd:Q6581097;\np:P26 [];\nrdfs:label ?husbandLabel;\nschema:description ?husbandDescription.\nFILTER(LANG(?husbandLabel) = \"en\").\nFILTER(LANG(?husbandDescription) = \"en\").\nFILTER(CONTAINS(?husbandDescription, \"husband\")).\n}",
        "complexity_description": "Multiple filters and language constraints",
        "complexity": "medium"
    },
    {
        "id": "903",
        "valid_gpt_response": true,
        "query": "select ?author1 ?author1Label ?image ?author2 where {\n?item wdt:P31 wd:Q13442814 .\n?item wdt:P1325 ?resource .\nfilter ( strstarts(str(?resource), \"https://openfmri.org/\") || strstarts(str(?resource), \"http://neurosynth.org/\") || strstarts(str(?resource), \"http://neurovault.org/\")\n)\n?item wdt:P50 ?author1 ;\nwdt:P50 ?author2 .\noptional { ?author1 wdt:P18 ?image . }\nfilter not exists { filter (?author1 = ?author2) }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}",
        "complexity_description": "Multiple filters, optional clause and service call",
        "complexity": "complex"
    },
    {
        "id": "904",
        "valid_gpt_response": true,
        "query": "select ?nation (count(distinct ?person) as ?count)\nwhere {\n?person wdt:P27 ?n .\n?article schema:about ?person .\n?article schema:inLanguage \"bar\" .\n?n rdfs:label ?nation .\nfilter(lang(?nation)='en')\n} group by ?n ?nation order by desc(?count)",
        "complexity_description": "Multiple joins, filter, and aggregation",
        "complexity": "complex"
    },
    {
        "id": "905",
        "valid_gpt_response": true,
        "query": "SELECT ?date ?winnerLabel WHERE {\n?election wdt:P31 wd:Q22266583 .\n?election wdt:P585 ?date .\n?election wdt:P991 ?winner .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Simple query with 3 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "906",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?identifier (SAMPLE(?identifierL) AS ?label) (count(*) AS ?count) WHERE {\n?item wdt:P380 ?merimee .\n?item wdt:P31 ?identifier .\n?identifier rdfs:label ?identifierL filter (lang(?identifierL) = \"fr\") .\n}\nGROUP BY ?identifier\nORDER BY DESC(?count) ?label",
        "complexity_description": "Multiple triple patterns, grouping and ordering",
        "complexity": "medium"
    },
    {
        "id": "907",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?massifLabel ?elevation ?prominence ?isolation ?coords WHERE {\n?item wdt:P361 ?massif .\n?massif wdt:P361* wd:Q1286 .\n?item wdt:P2044 ?elevation .\nOPTIONAL { ?item wdt:P2660 ?prominence . }\nOPTIONAL { ?item wdt:P2659 ?isolation . }\n?item wdt:P625 ?coords .\nFILTER ( ?elevation >= 4000 )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}\nORDER BY DESC(?elevation) ?itemLabel",
        "complexity_description": "Multiple triple patterns, optional blocks, and filter with service",
        "complexity": "complex"
    },
    {
        "id": "908",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?massifLabel ?elevation ?prominence ?isolation ?coords WHERE {\n?item wdt:P361 ?massif .\n?massif wdt:P361* wd:Q1286 .\nOPTIONAL { ?item wdt:P2044 ?elevation . }\nOPTIONAL { ?item wdt:P2660 ?prominence . }\nOPTIONAL { ?item wdt:P2659 ?isolation . }\n?item wdt:P625 ?coords .\nFILTER ( ?prominence >= 1500 )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}\nORDER BY DESC(?prominence) ?itemLabel",
        "complexity_description": "Multiple optional patterns, filter and service clause",
        "complexity": "medium"
    },
    {
        "id": "909",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?work ?workLabel ?languageLabel\nWHERE\n{\n?work wdt:P37|wdt:P103|wdt:P364|wdt:P407|wdt:P1412|wdt:P2439 ?language.\n?language wdt:P31/wdt:P279* wd:Q7275.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?languageLabel",
        "complexity_description": "Multiple filters, property paths and service call",
        "complexity": "medium"
    },
    {
        "id": "910",
        "valid_gpt_response": true,
        "query": "SELECT ?author1 ?author1Label (count(?citing_work) AS ?number_of_citations) (group_concat(?citing_work_label; separator=\" \\\\ \") as ?citing_works) WHERE {\n?work wdt:P50 ?author1 .\n?author1 wdt:P27 wd:Q35 .\n?citing_work wdt:P2860 ?work .\nservice wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n?citing_work rdfs:label ?citing_work_label . filter (lang(?citing_work_label) = 'en')\n}\nGROUP BY ?author1 ?author1Label\nORDER BY DESC(?number_of_citations)",
        "complexity_description": "Multiple joins, subqueries, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "911",
        "valid_gpt_response": true,
        "query": "SELECT ?author1 ?author1Label (count(?citing_work) AS ?number_of_citations) (group_concat(?citing_workLabel; separator=\" \\\\ \") as ?citing_works) WHERE {\n?work wdt:P50 ?author1 .\n?citing_work wdt:P2860 ?work .\n?citing_work wdt:P50 ?author2 .\nfilter (?author1 = ?author2 )\nservice wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n?citing_work rdfs:label ?citing_workLabel . filter (lang(?citing_workLabel) = 'en')\n}\nGROUP BY ?author1 ?author1Label\nORDER BY DESC(?number_of_citations)",
        "complexity_description": "Multiple joins, subqueries, and filters",
        "complexity": "complex"
    },
    {
        "id": "912",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?subject ?subjectLabel (sample(?image) as ?img) (count(distinct ?episode) as ?count) (GROUP_CONCAT(distinct ?serieLabel; separator=\" -- \") as ?series) WHERE {\n?episode wdt:P31 wd:Q1983062.\n?episode wdt:P179 ?serie.\n?episode wdt:P921 ?subject.\noptional { ?subject wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\".\n?serie rdfs:label ?serieLabel.\n?subject rdfs:label ?subjectLabel.\n}\n} group by ?subject ?subjectLabel\nhaving (count(distinct ?episode) > 4)",
        "complexity_description": "Multiple aggregations, optional pattern and service call",
        "complexity": "complex"
    },
    {
        "id": "913",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?countryLabel ?coords WHERE {\n?item wdt:P31/wdt:279* wd:Q486972 .\n?item wdt:P625 ?coords .\n?item p:P625 ?coordinate .\n?coordinate psv:P625 ?coordinate_node .\n?coordinate_node wikibase:geoLatitude ?latitude .\nFILTER ( ?latitude > 66.56278 )\nOPTIONAL { ?item wdt:P17 ?country }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nORDER BY DESC(?latitude)",
        "complexity_description": "Multiple joins, filters and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "914",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?continentLabel ?countryLabel ?coords WHERE {\n?item wdt:P31 wd:Q752003 .\nOPTIONAL { ?item wdt:P30 ?continent }\nOPTIONAL { ?item wdt:P17 ?country }\n?item wdt:P625 ?coords .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple optional patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "915",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?givenNameLabel\nWHERE\n{\n?person wdt:P31 wd:Q5;\nwdt:P735 ?givenName;\nwdt:P734 ?familyName.\n?givenName wdt:P1533 ?familyName.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple triple patterns, SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "916",
        "valid_gpt_response": true,
        "query": "SELECT ?composition ?composerLabel ?compositionLabel\nWHERE\n{\n?composition wdt:P870/wdt:P279* wd:Q1444;\nwdt:P870/wdt:P279* wd:Q42998;\nwdt:P86 ?composer.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple triple patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "917",
        "valid_gpt_response": true,
        "query": "SELECT ?composition (SAMPLE(?composerLabel) AS ?composer) (SAMPLE(?title) AS ?title) (GROUP_CONCAT(?otherInstrumentLabel; SEPARATOR = \", \") AS ?otherInstruments)\nWHERE\n{\n?composition wdt:P870/wdt:P279* wd:Q1444;\nwdt:P870 ?otherInstrument.\nFILTER(?otherInstrument != wd:Q1444).\nOPTIONAL {\n?composition rdfs:label ?title.\nFILTER(LANG(?title) = \"en\").\n}\nOPTIONAL {\n?otherInstrument rdfs:label ?otherInstrumentLabel.\nFILTER(LANG(?otherInstrumentLabel) = \"en\").\n}\nOPTIONAL {\n?composition wdt:P86 ?composer.\n?composer rdfs:label ?composerLabel.\nFILTER(LANG(?composerLabel) = \"en\").\n}\n}\nGROUP BY ?composition",
        "complexity_description": "Multiple optional patterns, grouping and aggregation",
        "complexity": "complex"
    },
    {
        "id": "918",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?duration\nWHERE\n{\n?person wdt:P31 wd:Q5;\n?p [ pq:P580 ?start; pq:P582 ?end ].\nBIND(ROUND((?end - ?start)/365.2425) AS ?duration).\nFILTER(?duration > 100).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC(?duration)",
        "complexity_description": "Multiple triple patterns, BIND, FILTER, SERVICE and ORDER BY",
        "complexity": "complex"
    },
    {
        "id": "919",
        "valid_gpt_response": true,
        "query": "SELECT ?cause ?causeLabel (COUNT(?person) AS ?count)\nWHERE\n{\n?person wdt:P31 wd:Q5;\nwdt:P509 ?cause;\nwdt:P53 [].\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?cause ?causeLabel\nHAVING(?count > 1)\nORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, SERVICE clause, GROUP BY, HAVING and ORDER BY",
        "complexity": "complex"
    },
    {
        "id": "920",
        "valid_gpt_response": true,
        "query": "SELECT ?family ?familyLabel (MAX(?age) AS ?age) (MIN(?born1) AS ?born1) (MAX(?born2) AS ?born2)\nWHERE\n{\n?person1 wdt:P31 wd:Q5;\nwdt:P569 ?born1;\nwdt:P53 ?family.\n?person2 wdt:P31 wd:Q5;\nwdt:P570 ?born2;\nwdt:P53 ?family.\nFILTER(?born1 < ?born2).\nBIND(ROUND((?born2 - ?born1)/365.2425) AS ?age).\nFILTER(?age >= 500).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?family ?familyLabel\nHAVING(?age >= 500)\nORDER BY DESC(?age)",
        "complexity_description": "Multiple filters, aggregation functions and subqueries",
        "complexity": "complex"
    },
    {
        "id": "921",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel (SAMPLE(?holder) as ?sample) (COUNT(DISTINCT ?holder) as ?ct)\n{\n?item wdt:P31 wd:Q1240901 .\nOPTIONAL { ?holder wdt:P2358 ?item }\nMINUS { ?item wdt:P31 wd:Q4167410 }\nMINUS { ?item wdt:P31 wd:Q101352 }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" .}\n}\nGROUP BY ?item ?itemLabel",
        "complexity_description": "Multiple MINUS clauses, OPTIONAL pattern and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "922",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel (COUNT(?actors) AS ?nbActors) {\n?item wdt:P31/wdt:P279* wd:Q11424 .\n?item wdt:P161 ?actors .\n?actors wdt:P69 wd:Q523926 .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n} GROUP BY ?item ?itemLabel ORDER BY DESC(?nbActors)",
        "complexity_description": "Multiple triple patterns, service call, group by and order by",
        "complexity": "complex"
    },
    {
        "id": "923",
        "valid_gpt_response": true,
        "query": "SELECT ?actor ?actorLabel ?FilmCount WHERE {\n{\nSELECT ?actor (COUNT(?film) AS ?FilmCount) WHERE {\n?film wdt:P57 wd:Q193648.\n?film wdt:P161 ?actor.\n}\nGROUP BY ?actor\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC(?FilmCount)",
        "complexity_description": "Subquery, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "924",
        "valid_gpt_response": true,
        "query": "SELECT ?director ?directorLabel ?actor ?actorLabel ?FilmCount WHERE {\n{\nSELECT ?director ?actor (COUNT(?film) AS ?FilmCount) WHERE {\n?film wdt:P57 ?director.\n?film wdt:P161 ?actor.\n}\nGROUP BY ?director ?actor\nHAVING (?FilmCount > 20)\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC(?FilmCount) ?directorLabel ?actorLabel",
        "complexity_description": "Multiple subqueries, grouping and aggregation",
        "complexity": "complex"
    },
    {
        "id": "925",
        "valid_gpt_response": true,
        "query": "SELECT ?director ?directorLabel ?actor ?actorLabel ?filmCount ?minYear ?maxYear WHERE {\n{\nSELECT ?director ?actor (COUNT(?film) AS ?filmCount) (MIN(?year) AS ?minYear) (MAX(?year) AS ?maxYear) WHERE {\n?film wdt:P57 ?director.\n?film wdt:P161 ?actor.\nOPTIONAL {\n?film wdt:P577 ?date .\nBIND (YEAR(?date) AS ?year)\n}\n}\nGROUP BY ?director ?actor\nHAVING (?filmCount > 20)\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC(?filmCount) ?directorLabel ?actorLabel",
        "complexity_description": "Multiple subqueries, grouping, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "926",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?placeLabel ?coords WHERE {\n?item wdt:P31/wdt:P279* wd:Q1370598 .\n?item wdt:P17 wd:Q142.\nOPTIONAL { ?item wdt:P131 ?place }\nOPTIONAL { ?item wdt:P625 ?coords }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" . }\n}\nORDER BY ?placeLabel ?itemLabel",
        "complexity_description": "Multiple optional patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "927",
        "valid_gpt_response": true,
        "query": "select ?writer ?writerLabel ?work ?workLabel\nwhere {\n?writer wdt:P19 wd:Q23436 .\n?writer wdt:P106 wd:Q36180 .\nOPTIONAL{?writer wdt:P800 ?work }.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Multiple triple patterns with OPTIONAL clause",
        "complexity": "medium"
    },
    {
        "id": "928",
        "valid_gpt_response": true,
        "query": "SELECT ?film ?filmLabel ?seriesLabel ?durationLabel\nWHERE {?film wdt:P57 wd:Q2071 .\nOPTIONAL {?film wdt:P2047 ?duration .\n}\nOPTIONAL {?film wdt:P179 ?series .\n}\n# get a label in English\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en, pl, it, fr\" .\n}\n}\nORDER BY ?duration",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "929",
        "valid_gpt_response": true,
        "query": "SELECT\n?gnLabel ?gn2Label\n?item ?itemLabel ?itemDescription\n?item2 ?item2Label ?item2Description\n{\n?item wdt:P735 ?gn ; wdt:P734 ?fn .\n?gn wdt:P1533 ?fn2 .\n?item2 wdt:P734 ?fn2 ; wdt:P735 ?gn2 .\n?gn2 wdt:P1533 ?fn\nFILTER ( str(?item) < str(?item2) )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" .}\n}\nORDER BY ?gnLabel ?gn2Label",
        "complexity_description": "Multiple joins, filters and services",
        "complexity": "complex"
    },
    {
        "id": "930",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?reason ?distinctionLabel (year(?date) as ?year)\nWHERE {\n?item ?prop ?statement .\n?statement pq:P805 ?ceremony .\n?ceremony wdt:P31 wd:Q24569309 .\n?statement ?propS ?distinction .\nVALUES (?prop ?propS ?reason) {\n(p:P1411 ps:P1411 \"nominated for\")\n(p:P166 ps:P166 \"award received\")\n}\nOPTIONAL { ?statement pq:P585 ?date . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n} ORDER BY ?distinctionLabel",
        "complexity_description": "Multiple joins, optional clause, and service call",
        "complexity": "complex"
    },
    {
        "id": "931",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?teamsize ?flagbearer ?flagbearerLabel\nWHERE\n{\n?item wdt:P31 wd:Q26213387 .\n?item wdt:P361 wd:Q8613 .\n?item wdt:P2103 ?teamsize .\noptional {?item wdt:P3022 ?flagbearer . }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en,fr,de,pl,ru\" .\n}\n}",
        "complexity_description": "Multiple triple patterns with optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "932",
        "valid_gpt_response": true,
        "query": "SELECT ?composer ?countryLabel (count(distinct ?f) as ?count) (min(year(?date)) as ?min) (max(year(?date)) as ?max) WHERE {\n?f wdt:P31 wd:Q11424 ;\nwdt:P86 ?composer .\noptional {?f wdt:P577 ?date }\n?composer wdt:P27 ?country .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n} group by ?composer ?countryLabel having (?count > 100)",
        "complexity_description": "Multiple aggregations, optional pattern, and service call",
        "complexity": "complex"
    },
    {
        "id": "933",
        "valid_gpt_response": true,
        "query": "SELECT ?img (count(?church) AS ?cnt) (group_concat(?church; separator=\";\") AS ?churches) { ?church wdt:P31 wd:Q16970 . ?church wdt:P18 ?img } GROUP BY ?img HAVING (?cnt>1)\nORDER BY desc(?cnt)",
        "complexity_description": "Multiple aggregate functions, grouping and filtering",
        "complexity": "complex"
    },
    {
        "id": "934",
        "valid_gpt_response": true,
        "query": "SELECT ?realClass ?fictionalClass ?realClassLabel (COUNT(DISTINCT ?realItem) AS ?realCount) (COUNT(DISTINCT ?fictionalItem) AS ?fictionalCount)\nWHERE\n{\nVALUES ?realClass { wd:Q146 }\n?fictionalClass wdt:P1074 ?realClass.\n?realItem wdt:P31/(wdt:P279|wdt:P171)* ?realClass.\n?fictionalItem wdt:P31/(wdt:P279|wdt:P171)* ?fictionalClass.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?realClass ?fictionalClass ?realClassLabel\n#HAVING(?fictionalCount > ?realCount)\nORDER BY DESC(?fictionalCount)",
        "complexity_description": "Multiple joins, subqueries, and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "935",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?Treaty ?TreatyLabel ?date WHERE {\n?Treaty (wdt:P31/wdt:P279*) wd:Q131569.\n?Treaty wdt:P276/wdt:P131* wd:Q90.\nOPTIONAL {\n?Treaty wdt:P585 ?date.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n} ORDER BY ?date",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "936",
        "valid_gpt_response": true,
        "query": "SELECT ?thoroughfare ?thoroughfareLabel ?universeLabel\nWHERE\n{\n?thoroughfare wdt:P31 wd:Q18948595.\nOPTIONAL { ?thoroughfare wdt:P1080 ?universe. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\", \"da\". }\n}",
        "complexity_description": "Optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "937",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?team ?teamLabel ?location ?layer\nWHERE\n{\n{\n# select only \"popular\" sports (to keep the number of layers reasonable)\nSELECT ?sport\nWHERE\n{\n# see below\nVALUES ?clubTeam { wd:Q847017 wd:Q12973014 }\n?team wdt:P31/wdt:P279* ?clubTeam;\nwdt:P115 [ wdt:P625 ?location ];\nwdt:P641 ?sport.\n}\nGROUP BY ?sport\nHAVING(COUNT(DISTINCT ?team) >= 5) # only sports played by at least five teams\n}\nVALUES ?clubTeam { wd:Q847017 wd:Q12973014 } # sports club or sports team\n?team wdt:P31/wdt:P279* ?clubTeam;\nwdt:P115 [ wdt:P625 ?location ]; # location via home venue\nwdt:P641 ?sport.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\".\n?sport rdfs:label ?layer. # (?sportLabel AS ?layer) in SELECT clause doesn't work\n}\n}",
        "complexity_description": "Multiple subqueries, grouping and aggregation",
        "complexity": "complex"
    },
    {
        "id": "938",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?city ?cityLabel (SAMPLE(?location) AS ?location) (MAX(?population) AS ?population) (SAMPLE(?layer) AS ?layer)\nWHERE\n{\n?city wdt:P31/wdt:P279* wd:Q515;\nwdt:P625 ?location;\nwdt:P1082 ?population.\nFILTER(?population >= 500000).\nBIND(\nIF(?population < 1000000, \"<1M\",\nIF(?population < 2000000, \"1M-2M\",\nIF(?population < 5000000, \"2M-5M\",\nIF(?population < 10000000, \"5M-10M\",\nIF(?population < 20000000, \"10M-20M\",\n\">20M\")))))\nAS ?layer).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?city ?cityLabel",
        "complexity_description": "Multiple filters, conditional bindings, and grouping",
        "complexity": "complex"
    },
    {
        "id": "939",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?Soft ?SoftLabel ?LicenceLabel WHERE {\n?Soft (wdt:P31/wdt:P279*) wd:Q341.\n?Soft wdt:P275 ?Licence.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "940",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?Treaty ?TreatyLabel ?date WHERE {\n?Treaty (wdt:P31/wdt:P279*) wd:Q131569.\n?Treaty wdt:P585 ?date.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "941",
        "valid_gpt_response": true,
        "query": "SELECT ?capital ?capitalLabel ?ofLabel ?start ?end\nWHERE\n{\n?capital p:P31 ?capitalStat.\n?capitalStat ps:P31 wd:Q5119.\nOPTIONAL { ?capitalStat pq:P642 ?of. }\nOPTIONAL { ?capitalStat pq:P580 ?start. }\nOPTIONAL { ?capitalStat pq:P582 ?end. }\nMINUS { [] wdt:P36 ?capital. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple optional patterns, minus clause and service call",
        "complexity": "complex"
    },
    {
        "id": "942",
        "valid_gpt_response": true,
        "query": "SELECT ?work ?workLabel (SAMPLE(?image) AS ?image) (SAMPLE(?count) AS ?count)\nWHERE\n{\n{\nSELECT ?work (COUNT(DISTINCT ?depicted) AS ?count)\nWHERE\n{\n?work wdt:P31/wdt:P279* wd:Q838948;\nwdt:P180 ?depicted.\n?depicted wdt:P31/wdt:P279* ?class.\nFILTER(?class IN (wd:Q5, wd:Q95074)).\n}\nGROUP BY ?work\nORDER BY DESC(?count)\nLIMIT 50\n}\nOPTIONAL { ?work wdt:P18 ?image. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\", \"fr\", \"da\", \"pl\". }\n}\nGROUP BY ?work ?workLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, grouping, ordering and filtering",
        "complexity": "complex"
    },
    {
        "id": "943",
        "valid_gpt_response": true,
        "query": "SELECT ?occupation ?occupationLabel (COUNT(DISTINCT ?head) AS ?count)\nWHERE\n{\nOPTIONAL { ?country (p:P6/ps:P6)|(p:P35/ps:P35) ?head. }\nOPTIONAL { ?head p:P39/ps:P39/^(wdt:P1313|wdt:P1906) ?country. }\nFILTER(BOUND(?head)).\n?head wdt:P31 wd:Q5;\nwdt:P106 ?occupation.\nMINUS { ?occupation wdt:P279* wd:Q82955. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?occupation ?occupationLabel\nHAVING(?count >= 10)\nORDER BY DESC(?count)",
        "complexity_description": "Multiple optional patterns, filter, minus clause, service call and group by",
        "complexity": "complex"
    },
    {
        "id": "944",
        "valid_gpt_response": true,
        "query": "SELECT ?author ?authorLabel ?orcid ?location\nWHERE\n{\n?author wdt:P31 wd:Q5;\nwdt:P496 ?orcid;\nOPTIONAL { ?author wdt:P551/wdt:P625 ?location. }\nOPTIONAL { ?author wdt:P19/wdt:P625 ?location. }\nFILTER(BOUND(?location)).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple optional patterns, filter and service",
        "complexity": "medium"
    },
    {
        "id": "945",
        "valid_gpt_response": true,
        "query": "SELECT ?surname ?surnameLabel ?count WHERE {\n{\nSELECT ?surname (COUNT(?person) AS ?count) WHERE {\n?person wdt:P31 wd:Q5.\n?person wdt:P734 ?surname.\n}\nGROUP BY ?surname\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC(?count)\nLIMIT 100",
        "complexity_description": "Subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "946",
        "valid_gpt_response": true,
        "query": "SELECT ?film ?filmLabel (COUNT(DISTINCT ?oscar) AS ?count)\nWHERE\n{\n?film wdt:P31/wdt:P279* wd:Q11424;\nwdt:P166 ?oscar;\nwdt:P1411 ?nOscar.\nwd:Q19020 ^wdt:P31 ?oscar, ?nOscar.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?film ?filmLabel\nHAVING(COUNT(DISTINCT ?oscar) >= COUNT(DISTINCT ?nOscar) && ?count > 1)\nORDER BY DESC(?count) ?filmLabel",
        "complexity_description": "Multiple joins, subqueries, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "947",
        "valid_gpt_response": true,
        "query": "SELECT ?color ?colorLabel ?rgb ?count\nWHERE\n{\n{\nSELECT ?color (COUNT(DISTINCT ?rgb) AS ?count)\nWHERE\n{\n?color wdt:P31?/wdt:P279* wd:Q1075;\nwdt:P465 ?rgb.\n}\nGROUP BY ?color\nHAVING(?count > 1)\n}\n?color wdt:P465 ?rgb.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?color",
        "complexity_description": "Multiple subqueries, grouping and having clauses",
        "complexity": "complex"
    },
    {
        "id": "948",
        "valid_gpt_response": true,
        "query": "SELECT ?FilmLabel ?Film ?date WHERE {\n?Film wdt:P161 wd:Q23842;\nwdt:P577 ?date.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"fr\" .\n}\n} ORDER BY ?date",
        "complexity_description": "Two triple patterns, one service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "949",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?city ?cityLabel ?populatie2 ?coor WHERE {\n<http://www.wikidata.org/entity/Q12892> wdt:P1082 ?populatie .\n?city wdt:P1082 ?populatie2 ;\nwdt:P625 ?coor .\nFILTER (abs(?populatie - ?populatie2) < 1000)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"nl\" }\n}",
        "complexity_description": "Multiple triple patterns, filter and service",
        "complexity": "medium"
    },
    {
        "id": "950",
        "valid_gpt_response": true,
        "query": "SELECT ?city ?cityLabel ?coordinates WHERE {\nVALUES ?highway { wd:Q559037 wd:Q58767 }\n?highway wdt:P2789 ?city .\n?city wdt:P625 ?coordinates .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple triple patterns, VALUES clause and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "951",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?badgeLabel ?lang WHERE {\n?item wdt:P31 wd:Q5 .\n?item wdt:P69 wd:Q523926 .\n?sitelink schema:about ?item .\n?sitelink wikibase:badge ?badge .\n?sitelink schema:inLanguage ?lang .\nFILTER (SUBSTR(str(?sitelink), 11, 15) = \".wikipedia.org/\") .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}",
        "complexity_description": "Multiple triple patterns with filter and service",
        "complexity": "medium"
    },
    {
        "id": "952",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel WHERE {\n?item wdt:P31 wd:Q5 .\n?item wdt:P106 wd:Q201788 .\n# Here we ask people with no VIAF id\nFILTER NOT EXISTS { ?item wdt:P214 ?viaf . }\n# But the ones we already know they don't have one show up anyway\n# so we filter out people with \"No value\" for VIAF id\nFILTER NOT EXISTS { ?item rdf:type wdno:P214 . }\n?wikilink schema:about ?item .\n{ ?wikilink schema:isPartOf <https://fr.wikisource.org/> . } UNION {\n?wikilink schema:isPartOf <https://fr.wikipedia.org/> . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" . }\n}",
        "complexity_description": "Multiple filters, unions and service calls",
        "complexity": "complex"
    },
    {
        "id": "953",
        "valid_gpt_response": true,
        "query": "SELECT ?taxon ?taxonName ?taxonLabel ?taxonCommonName\nWHERE\n{\n?taxon wdt:P31/wdt:P279* wd:Q16521;\nwdt:P225 ?taxonName.\nFILTER(STRENDS(?taxonName, \"unicornis\")).\nOPTIONAL { ?taxon wdt:P1843 ?taxonCommonName. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?taxonName",
        "complexity_description": "Multiple triple patterns, filter and optional clause",
        "complexity": "medium"
    },
    {
        "id": "954",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?countryLabel ?territorialEntityLabel ?placeLabel ?coords ?image WHERE {\n?item wdt:P31 wd:Q1151014 .\nOPTIONAL { ?item wdt:P17 ?country . }\nOPTIONAL { ?item wdt:P131 ?territorialEntity . }\nOPTIONAL { ?item wdt:P625 ?coords . }\nOPTIONAL { ?item wdt:P276 ?place . }\nOPTIONAL { ?item wdt:P18 ?image . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?countryLabel ?territorialEntityLabel ?itemLabel",
        "complexity_description": "Multiple optional patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "955",
        "valid_gpt_response": true,
        "query": "SELECT ?q ?qLabel ?location ?locationLabel {\n?q wdt:P31 wd:Q839954\nOPTIONAL { ?q wdt:P131 ?location }\nMINUS { ?q wdt:P625 ?dummy }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Optional clause, minus filter and service call",
        "complexity": "medium"
    },
    {
        "id": "956",
        "valid_gpt_response": true,
        "query": "SELECT ?human ?humanLabel where {\n?human wdt:P21 ?gender FILTER isBLANK(?gender) .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}",
        "complexity_description": "Simple query with single triple pattern and filter",
        "complexity": "simple"
    },
    {
        "id": "957",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?drug ?drugLabel (concat(\"7FFF00\") as ?rgb) ?disease ?diseaseLabel (concat(\"FFA500\") as ?rgb2 ) ?doid WHERE {\n?disease wdt:P699 ?doid ;\nwdt:P279+ wd:Q18123741 ;\nwdt:P2176 ?drug .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple triple patterns, property paths and service call",
        "complexity": "medium"
    },
    {
        "id": "958",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\n?sk wdt:P106 wd:Q484188;\nwdt:P1449 ?nick.\n}",
        "complexity_description": "Two triple patterns with constants",
        "complexity": "simple"
    },
    {
        "id": "959",
        "valid_gpt_response": true,
        "query": "SELECT ?stationLabel ?coord ?layer\nWHERE {\n?station wdt:P81/wdt:P361 wd:Q68646 .\n?station wdt:P625 ?coord.\n?station wdt:P81 ?line.\n?line rdfs:label ?layer. filter(lang(?layer) = 'de')\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"de\" }\n}",
        "complexity_description": "Multiple triple patterns, service call and language filter",
        "complexity": "medium"
    },
    {
        "id": "960",
        "valid_gpt_response": true,
        "query": "SELECT ?pays (floor(year(?date)/10)*10 as ?layer) ?date ?image ?location WHERE {\n?pays p:P31 ?property.\n?property ps:P31 wd:Q160016.\n?property pq:P580 ?date.\n?pays wdt:P625 ?location.\n?pays wdt:P41 ?image.\n}",
        "complexity_description": "Multiple joins, filters and aggregations",
        "complexity": "medium"
    },
    {
        "id": "961",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?regicide ?regicideLabel ?regicide_image ?victime ?victimeLabel ?titresLabel ?date_deces ?lieu_decesLabel ?cause_decesLabel ?victime_image WHERE {\n?regicide wdt:P31 wd:Q5 .\n?regicide wdt:P1399 wd:Q1475448 .\nOPTIONAL {?regicide wdt:P18 ?regicide_image . }\nOPTIONAL {\n?victime wdt:P157 ?regicide .\nOPTIONAL { ?victime wdt:P570 ?date_deces . }\nOPTIONAL { ?victime wdt:P20 ?lieu_deces . }\nOPTIONAL { ?victime wdt:P509 ?cause_deces . }\nOPTIONAL { ?victime wdt:P39 ?titres . }\nOPTIONAL { ?victime wdt:P18 ?victime_image . }\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" . }\n} ORDER BY ?regicide",
        "complexity_description": "Multiple optional patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "962",
        "valid_gpt_response": true,
        "query": "SELECT ?day (COUNT(DISTINCT ?person) AS ?count)\nWHERE\n{\n?person wdt:P31 wd:Q5;\nwdt:P27 wd:Q30;\np:P569/psv:P569 [ wikibase:timeValue ?day; wikibase:timePrecision 11 ].\n}\nGROUP BY ?day\nORDER BY DESC(?count)\nLIMIT 10",
        "complexity_description": "Multiple triple patterns, aggregation and grouping",
        "complexity": "complex"
    },
    {
        "id": "963",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?person ?personLabel ?coords WHERE {\n{\n?item wdt:P138 ?person.\n?item wdt:P625 ?coords.\n?person wdt:P27 wd:Q36.\n}\nUNION\n{\n?item wdt:P138 ?person.\n?item wdt:P625 ?coords.\n?person wdt:P19 ?place.\n?place wdt:P17 wd:Q36.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple UNION patterns with multiple triple patterns and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "964",
        "valid_gpt_response": true,
        "query": "SELECT ?school ?schoolLabel (SAMPLE(?schoolWebsite) as ?website) (COUNT(?student) AS ?students) WHERE {\n?school wdt:P31/wdt:P279* wd:Q2143781 .\nOPTIONAL { ?school wdt:P856 ?schoolWebsite } .\n?student wdt:P31 wd:Q5 .\n?student wdt:P69 ?school .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n} GROUP BY ?school ?schoolLabel ORDER BY DESC(?students)",
        "complexity_description": "Multiple joins, optional clause, and aggregation",
        "complexity": "complex"
    },
    {
        "id": "965",
        "valid_gpt_response": true,
        "query": "SELECT ?genus (AVG(?period) AS ?period) (SAMPLE(?label) AS ?genusLabel) (SAMPLE(?rgb) AS ?rgb)\nWHERE\n{\n{\nBIND(\"en\" AS ?language).\n# find species with gestation period and convert to seconds (SI base unit)\n?species p:P3063/psv:P3063 [\nwikibase:quantityAmount ?basePeriod;\nwikibase:quantityUnit [\np:P2370/psv:P2370 [\nwikibase:quantityAmount ?unitPeriod;\nwikibase:quantityUnit wd:Q11574\n]\n]\n].\n# convert back to days\nBIND((?basePeriod * ?unitPeriod)/(60*60*24) AS ?period).\n# find genus\n?species wdt:P171* ?genus.\n?genus wdt:P105 wd:Q34740.\n# find a good label - trivial name, else label, else \"<no name>\"\nOPTIONAL {\n?genus wdt:P1843 ?trivialName.\nFILTER(LANG(?trivialName) = ?language).\n}\nOPTIONAL {\n?genus rdfs:label ?genusLabel.\nFILTER(LANG(?genusLabel) = ?language).\n}\nBIND(IF(BOUND(?trivialName),?trivialName,IF(BOUND(?genusLabel),?genusLabel,\"<no name>\")) AS ?label).\n# find order\n?genus wdt:P171* ?order.\n?order wdt:P105 wd:Q36602.\n# choose \"random but deterministic\" color per order; you can play around with \"-\" (can be any string) to find a pleasing resulting color distribution\nBIND(UCASE(SUBSTR(SHA256(CONCAT(\"-\", STR(?order))), 0, 6)) AS ?rgb).\n}\nUNION\n{\n# add scale\nVALUES (?genus ?period ?label) {\n(wd:Q23387 7 \"week\"@en)\n(wd:Q5151 30.436875 \"month\"@en)\n(wd:Q1643308 91.310625 \"3 months\"@en)\n(wd:Q2269240 182.62125 \"6 months\"@en)\n(wd:Q577 365.2425 \"year\"@en)\n}\nBIND(\"CCCCCC\" AS ?rgb).\n}\n}\nGROUP BY ?genus",
        "complexity_description": "Multiple UNION, OPTIONAL, BIND, and FILTER clauses with complex calculations",
        "complexity": "complex"
    },
    {
        "id": "966",
        "valid_gpt_response": true,
        "query": "SELECT ?realLabel ?FilmLabel ?Film ?date WHERE {\n?Film wdt:P161 wd:Q180338;\nwdt:P577 ?date.\nOPTIONAL {\n?Film wdt:P57 ?real.\n}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n} ORDER BY ?date",
        "complexity_description": "Optional clause, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "967",
        "valid_gpt_response": true,
        "query": "SELECT ?aliveSpouse ?aliveSpouseLabel ?deadSpouse ?deadSpouseLabel ?death ?marriage\nWHERE\n{\n# ?aliveSpouse has spouse ?deadSpouse, with qualifier start time: ?marriage\n?aliveSpouse p:P26 [ ps:P26 ?deadSpouse;\npqv:P580 [\nwikibase:timeValue ?marriage;\nwikibase:timePrecision ?marriagePrecision\n]\n].\n# ?deadSpouse has date of death ?death\n?deadSpouse p:P570/psv:P570 [\nwikibase:timeValue ?death;\nwikibase:timePrecision ?deathPrecision\n].\n# ?death prior to ?marriage\nFILTER(?death < ?marriage).\n# Optional: remove results with missing precision -\n# only include matches over a year apart, or where both statements are precise to the day\n#FILTER(YEAR(?marriage) - YEAR(?death) > 1 ||\n# ?marriagePrecision = 11 && ?deathPrecision = 11).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC(?marriage - ?death)",
        "complexity_description": "Multiple filters, optional filter, and service call",
        "complexity": "complex"
    },
    {
        "id": "968",
        "valid_gpt_response": true,
        "query": "SELECT ?place ?placeLabel (count(?item) as ?count) WHERE {\n?item wdt:P31 wd:Q55488 .\n?item wdt:P131* ?place .\n?place wdt:P31/wdt:P131* wd:Q484170 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" . }\n}\nGROUP BY ?place ?placeLabel\nHAVING (?count > 1)\nORDER BY DESC(?count) ?placeLabel",
        "complexity_description": "Multiple triple patterns, optional property path, service call, group by, having and order by clauses",
        "complexity": "complex"
    },
    {
        "id": "969",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?case ?caseLabel (concat(\"F3A2FF\") as ?rgb)\nWHERE\n{\n?item wdt:P2989 ?case .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Simple query with one triple pattern and a service call",
        "complexity": "simple"
    },
    {
        "id": "970",
        "valid_gpt_response": true,
        "query": "SELECT ?cocktail ?cocktailLabel (GROUP_CONCAT(?ingredient; separator=\", \") AS ?ingredients) # concatenate all ingredients together, separated by comma\nWHERE\n{\n# find a cocktail\n?cocktail wdt:P31/wdt:P279* wd:Q134768;\n# get its material statement\np:P186 ?materialStat.\n# get the statement value from the statement\n?materialStat ps:P186 ?material.\n# get the material's English label\n?material rdfs:label ?materialLabel.\nFILTER(LANG(?materialLabel) = \"en\").\n# assign label to solo ingredient variable\nBIND(?materialLabel AS ?ingredientSolo).\nOPTIONAL {\n# for some reason, we have to get the material and materialLabel again - copy+pasted from above\n?materialStat ps:P186 ?material.\n?material rdfs:label ?materialLabel.\nFILTER(LANG(?materialLabel) = \"en\").\n# get the quantity value from the statement (if present)\n?materialStat pqv:P1114 ?quantityValue.\n# get the actual quantity from the quantity value\n?quantityValue wikibase:quantityAmount ?quantity.\n# assign quantity and material to ingredient with quantity variable\nBIND(CONCAT(STR(?quantity), \" \", ?materialLabel) AS ?ingredientWithQuantity).\nOPTIONAL {\n# same here for material and quantity\n?materialStat ps:P186 ?material.\n?material rdfs:label ?materialLabel.\nFILTER(LANG(?materialLabel) = \"en\").\n?materialStat pqv:P1114 ?quantityValue.\n?quantityValue wikibase:quantityAmount ?quantity.\n# get the unit from the quantity value\n?quantityValue wikibase:quantityUnit ?unit.\n# throw out the unit \"1\" (no unit)\nFILTER(?unit != wd:Q199).\n# get the unit's English label\n?unit rdfs:label ?unitLabel.\nFILTER(LANG(?unitLabel) = \"en\").\n# assign quantity, unit, and material to ingredient with unit variable (note: we're not bothering with pluralization here, so it may sound a bit weird)\nBIND(CONCAT(STR(?quantity), \" \", ?unitLabel, \" \", ?materialLabel) AS ?ingredientWithUnit).\n}\n}\n# assign ingredient with unit, else ingredient with quantity, else just solo ingredient to ingredient variable\nBIND(COALESCE(?ingredientWithUnit, ?ingredientWithQuantity, ?ingredientSolo) AS ?ingredient).\n# get the cocktail's English label\n?cocktail rdfs:label ?cocktailLabel.\nFILTER(LANG(?cocktailLabel) = \"en\").\n}\n# group by cocktail\nGROUP BY ?cocktail ?cocktailLabel\n# show most \"complicated\" cocktails first\nORDER BY DESC(COUNT(?ingredient))",
        "complexity_description": "Multiple optional blocks, subqueries, and complex bindings",
        "complexity": "complex"
    },
    {
        "id": "971",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?died\nWHERE\n{\n?person wdt:P31 wd:Q5;\nwdt:P570 ?died.\nFILTER(?died >= NOW() - \"P7D\"^^xsd:duration).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?died",
        "complexity_description": "Filter, Service and ORDER BY",
        "complexity": "medium"
    },
    {
        "id": "972",
        "valid_gpt_response": true,
        "query": "select ?p ?pLabel ?born ?loc {\n?p wdt:P411 wd:Q43115 .\n?p wdt:P569 ?born .\n?p wdt:P19 ?o .\n?o wdt:P625 ?loc .\nfilter (?born > \"1899-12-31\"^^xsd:dateTime)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Multiple joins, filter and service",
        "complexity": "medium"
    },
    {
        "id": "973",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT\n(SAMPLE(?country_label) as ?country) (SAMPLE(?city_label) as ?city) (SAMPLE(?address) as ?address) (SAMPLE(?coordinates) as ?coordinates)\n(SAMPLE(?operator_label) as ?operator) (SAMPLE(?phone) as ?phone) (SAMPLE(?email) as ?email) (SAMPLE(?website) as ?website)\n(SAMPLE(?facebook) as ?facebook) (SAMPLE(?twitter) as ?twitter) (SAMPLE(?image) as ?image) ?wikidata\nWHERE {\n?wikidata wdt:P31 wd:Q3917681.\nOPTIONAL {?wikidata wdt:P131*/wdt:P17 ?countryId. ?countryId rdfs:label ?country_label. filter (lang(?country_label) = \"en\").}\nOPTIONAL {?wikidata wdt:P131 ?cityId. ?cityId rdfs:label ?city_label. filter (lang(?city_label) = \"en\").}\nOPTIONAL {?wikidata wdt:P969 ?address.}\nOPTIONAL {?wikidata wdt:P625 ?coordinates.}\nOPTIONAL {?wikidata wdt:P137 ?operatorId. ?operatorId rdfs:label ?operator_label. filter (lang(?operator_label) = \"en\").}\nOPTIONAL {?wikidata wdt:P1329 ?phone.}\nOPTIONAL {?wikidata wdt:P968 ?email.}\nOPTIONAL {?wikidata wdt:P856 ?website.}\nOPTIONAL {?wikidata wdt:P2013 ?facebook.}\nOPTIONAL {?wikidata wdt:P2002 ?twitter.}\nOPTIONAL {?wikidata wdt:P18 ?image.}\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"en,ru,de,fr,es\"}\n} GROUP BY ?wikidata ?wikidataLabel ORDER BY ASC(?country) ASC(?city) ASC(?operator)",
        "complexity_description": "Multiple optional patterns with filters and language constraints",
        "complexity": "complex"
    },
    {
        "id": "974",
        "valid_gpt_response": true,
        "query": "SELECT ?image ?itemLabel ?item ?coord WHERE {\n?item wdt:P31/wdt:P279* wd:Q274153 ;\n# wdt:P17 wd:Q30 ;\nwdt:P625 ?coord.\nOPTIONAL {\n?item wdt:P18 ?image.\n}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "975",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?placeLabel ?date ?coords WHERE {\n?item wdt:P31 wd:Q15991159 .\n{\nFILTER NOT EXISTS { ?item wdt:P276 ?place . }\n} UNION {\nFILTER NOT EXISTS { ?item wdt:P585 ?date . }\n}\nOPTIONAL{ ?item wdt:P625 ?coords . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,fr\" }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple filters and optional clause with service call",
        "complexity": "complex"
    },
    {
        "id": "976",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?characterLabel WHERE {\n?item wdt:P31/wdt:P279* wd:Q3863 .\n?item wdt:P138 ?character .\n?character wdt:P1441 ?work .\n?work wdt:P50 wd:Q38082 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?characterLabel ?itemLabel",
        "complexity_description": "Multiple joins, property paths and service call",
        "complexity": "complex"
    },
    {
        "id": "977",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?heritageId ?adminLabel ?coord ?image ?layer\nWHERE\n{\n?item wdt:P2951 ?heritageId .\nOPTIONAL { ?item wdt:P131 ?admin }\nOPTIONAL { ?item wdt:P131 ?admin }\nOPTIONAL { ?item wdt:P625 ?coord }\nOPTIONAL { ?item wdt:P625 ?image }\nOPTIONAL { ?item wdt:P31 ?type }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"de\" .\n?type rdfs:label ?layer .\n}\n}",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "978",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?subjectLabel ?artistLabel (YEAR(?date) AS ?year) ?coords ?image WHERE {\n?item wdt:P136 wd:Q557141 .\n?item wdt:P131 ?arrdt .\n?arrdt wdt:P131 wd:Q90 .\n?item wdt:P180 ?subject .\n?subject wdt:P31 wd:Q5 .\n?subject wdt:P21 wd:Q6581072 .\nOPTIONAL { ?item wdt:P571 ?date }\nOPTIONAL { ?item wdt:P170 ?artist }\nOPTIONAL { ?item wdt:P625 ?coords }\nOPTIONAL { ?item wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple joins, optional patterns and service call",
        "complexity": "complex"
    },
    {
        "id": "979",
        "valid_gpt_response": true,
        "query": "select ?child ?childLabel ?parent ?parentLabel {\n{\n?parent wdt:P225 \"Sciuridae\" .\n?child wdt:P171* ?parent .\n?child wdt:P31 wd:Q16521 .\n?child wdt:P105 wd:Q2455704 .\n} UNION {\n?top wdt:P225 \"Sciuridae\" .\n?parent wdt:P171* ?top .\n?parent wdt:P31 wd:Q16521 .\n?parent wdt:P105 wd:Q2455704 .\n?child wdt:P171* ?parent .\n?child wdt:P31 wd:Q16521 .\n?child wdt:P105 wd:Q34740 .\n} UNION {\n?top wdt:P225 \"Sciuridae\" .\n?parent wdt:P171* ?top .\n?sf wdt:P31 wd:Q16521 .\n?sf wdt:P105 wd:Q2455704 .\n?parent wdt:P171* ?sf .\n?parent wdt:P31 wd:Q16521 .\n?parent wdt:P105 wd:Q34740 .\n?child wdt:P171* ?parent .\n?child wdt:P31 wd:Q16521 .\n?child wdt:P105 wd:Q7432 .\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Multiple UNION patterns with multiple triple patterns and filters",
        "complexity": "complex"
    },
    {
        "id": "980",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel (COUNT(?site) AS ?count) WHERE {\n?item wdt:P31 wd:Q5 .\n?article schema:about ?item .\n?article wikibase:badge ?badge .\n?article schema:isPartOf ?site .\nFILTER NOT EXISTS { ?item wdt:P18 ?image . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n} GROUP BY ?item ?itemLabel ORDER BY DESC(?count)",
        "complexity_description": "Multiple joins, filter not exists, group by and order by",
        "complexity": "complex"
    },
    {
        "id": "981",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?jurisdictionLabel ?image WHERE {\n{ ?item wdt:P31/wdt:279* wd:Q208324 . } UNION\n{ ?item wdt:P136 wd:Q208324 . }\nOPTIONAL { ?item wdt:P1001 ?jurisdiction }\nOPTIONAL { ?item wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?jurisdictionLabel ?itemLabel",
        "complexity_description": "Multiple UNION patterns, OPTIONAL clauses and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "982",
        "valid_gpt_response": true,
        "query": "select ?work ?workLabel ?property ?propertyLabel where {\n?work wdt:P3176 ?property\nservice wikibase:label { bd:serviceParam wikibase:language \"da\" . }\n}",
        "complexity_description": "Simple query with one triple pattern and a service call",
        "complexity": "simple"
    },
    {
        "id": "983",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?placeOfBirth ?placeOfBirthLabel ?placeOfDeath ?placeOfDeathLabel ?image ?coord ?layer WHERE {\n?item wdt:P19 ?placeOfBirth ;\nwdt:P20 ?placeOfDeath .\n?placeOfDeath wdt:P625 ?coord .\n?placeOfBirth (wdt:P131|wdt:P706|wdt:P276)* wd:Q327 .\n?placeOfBirth (wdt:P131|wdt:P706|wdt:P276)* ?departement .\n?departement wdt:P31 wd:Q6465 .\n?departement rdfs:label ?layer .\nFILTER(LANG(?layer) = \"fr\") .\nOPTIONAL { ?item wdt:P18 ?image . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr,en\" . }\n}",
        "complexity_description": "Multiple joins, filters and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "984",
        "valid_gpt_response": true,
        "query": "SELECT ?tree ?treeLabel (SAMPLE(?coords) AS ?coords) (SAMPLE(?layer) AS ?layer) WHERE {\n?tree wdt:P31 wd:Q6907628.\nOPTIONAL { ?tree wdt:P625 ?treeCoords. }\nOPTIONAL { ?tree wdt:P276/wdt:P625 ?locationCoords. }\nBIND(COALESCE(?treeCoords, ?locationCoords) AS ?coords).\nOPTIONAL {\n?tree wdt:P31 ?taxon.\n?taxon wdt:P31/wdt:P279* wd:Q16521.\n?taxon rdfs:label ?taxonLabel.\nFILTER(LANG(?taxonLabel) = \"en\").\nOPTIONAL {\n?taxon wdt:P1843 ?taxonCommonName.\nFILTER(LANG(?taxonCommonName) = \"en\").\n}\n}\nBIND(COALESCE(?taxonCommonName, ?taxonLabel) AS ?layer).\nOPTIONAL {\n?tree rdfs:label ?treeLabel.\nFILTER(LANG(?treeLabel) = \"en\").\n}\n}\nGROUP BY ?tree ?treeLabel",
        "complexity_description": "Multiple optional patterns, bindings, and filters",
        "complexity": "complex"
    },
    {
        "id": "985",
        "valid_gpt_response": true,
        "query": "SELECT ?winner ?winnerLabel ?when WHERE {\n?winner ?p ?wds.\n?wds ?v wd:Q44585.\n?wdP wikibase:statementProperty ?v.\n?wdP wikibase:claim ?p.\n?wds pq:P585 ?when .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple joins, service call and property paths",
        "complexity": "medium"
    },
    {
        "id": "986",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel\n(SAMPLE(?endDate) AS ?endDate)\n(GROUP_CONCAT(DISTINCT ?successorContinent ; separator=\"/\") AS ?successorContinent)\nWHERE {\n?item wdt:P31/wdt:P279* wd:Q6256 .\nFILTER NOT EXISTS { ?item wdt:P30 ?continent . }\nOPTIONAL {\n?item wdt:P582 ?endDate .\n}\nOPTIONAL {\n?item wdt:P1366* ?successorCountry .\n?successorCountry wdt:P31/wdt:P279 wd:Q6256 .\n?successorCountry wdt:P30 ?successorContinentItem .\n?successorContinentItem rdfs:label ?successorContinent .\nFILTER (LANG(?successorContinent) = \"en\") .\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n} GROUP BY ?item ?itemLabel",
        "complexity_description": "Multiple optional patterns, group by, and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "987",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel WHERE {\n?item wdt:P31/wdt:P279* wd:Q4022 .\nFILTER NOT EXISTS { ?item wdt:P403 ?mouth }\n#SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple triple patterns, filter not exists and service call",
        "complexity": "medium"
    },
    {
        "id": "988",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coords ?statementCount WHERE {\nBIND(wd:Q15260574 AS ?location). # WMDE office; insert your location here!\n?location wdt:P625 ?locationCoords.\nSERVICE wikibase:around {\n?item wdt:P625 ?coords.\nbd:serviceParam wikibase:center ?locationCoords;\nwikibase:radius 50.\n}\nMINUS { ?item wdt:P31/wdt:P279* wd:Q1496967. } # territorial entities (cities, ...) are boring\n?item ^schema:about?/wikibase:statements ?statementCount.\nFILTER(?statementCount >= 20).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\", \"de\". }\n}",
        "complexity_description": "Multiple services, filters and minus clause",
        "complexity": "complex"
    },
    {
        "id": "989",
        "valid_gpt_response": true,
        "query": "SELECT ?awardee ?awardeeLabel ?awardeeBorn ?awarded ?prizeLabel WHERE {\nwd:Q23810 wdt:P570 ?nobelDied.\n?awardee wdt:P31 wd:Q5;\nwdt:P569 ?awardeeBorn.\n?prize wdt:P279 wd:Q7191.\nFILTER(?awardeeBorn > ?nobelDied).\n{\n# awardee has award received: nobel prize with point in time\n?awardee p:P166 [\nps:P166/wdt:P31? ?prize;\npq:P585 ?awarded\n].\n} UNION {\n# nobel prize has winner: awardee with point in time\n?prize p:P1346 [\nps:P1346 ?awardee;\npq:P585 ?awarded\n].\n} UNION {\n# awardee has award received: <year> nobel prize\n?awardee wdt:P166 ?yearPrize.\n?yearPrize wdt:P31 ?prize;\nwdt:P585 ?awarded.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?awarded\nLIMIT 1",
        "complexity_description": "Multiple UNIONs, FILTER, and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "990",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?voie ?voieLabel ?photo ?coord WHERE {\n?voie (wdt:P31/wdt:P279*) wd:Q83620.\n?voie wdt:P131 ?arrdt.\n?arrdt wdt:P31 wd:Q702842.\n?arrdt wdt:P131 wd:Q90.\n?voie wdt:P138 ?odonyme.\n?odonyme (wdt:P106/wdt:P279*) wd:Q39631.\n?voie wdt:P625 ?coord.\nOPTIONAL { ?odonyme wdt:P18 ?photo. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\". }\n}",
        "complexity_description": "Multiple joins, optional clause and service call",
        "complexity": "complex"
    },
    {
        "id": "991",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel (group_concat(distinct ?countryL ; separator = \", \") as ?countries) (SAMPLE(?coords) AS ?coords) WHERE {\n?item wdt:P31/wdt:P279* wd:Q27345018 .\n?item wdt:P625 ?coords .\n?item wdt:P17 ?country .\n?country rdfs:label ?countryL filter (lang(?countryL) = \"en\") .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}\nGROUP BY ?item ?itemLabel\nORDER BY ?countries",
        "complexity_description": "Multiple filters, group_concat and sample functions",
        "complexity": "complex"
    },
    {
        "id": "992",
        "valid_gpt_response": true,
        "query": "SELECT ?flag ?depicted ?flagLabel ?depictedLabel ?image WHERE {\n?flag wdt:P31/wdt:P279* wd:Q186516;\nwdt:P180 ?depicted.\nVALUES ?astronomical { wd:Q8928 wd:Q523 } ?depicted wdt:P31?/wdt:P279* ?astronomical.\nOPTIONAL { ?flag wdt:P18 ?image. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?flagLabel",
        "complexity_description": "Multiple triple patterns, optional clause, and service query",
        "complexity": "complex"
    },
    {
        "id": "993",
        "valid_gpt_response": true,
        "query": "SELECT ?flag ?inscription ?countryLabel ?image WHERE {\n?flag wdt:P31/wdt:P279* wd:Q186516;\nwdt:P1684 ?inscription.\nOPTIONAL { ?flag wdt:P1001|wdt:P17 ?country. }\nOPTIONAL { ?flag wdt:P18 ?image. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple optional patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "994",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?birthLabel ?deathLabel ?distance WHERE {\n{\nSELECT ?item ?birth ?death ?distance WHERE {\n?item wdt:P31 wd:Q5 .\n?item wdt:P19 ?birth .\n?item wdt:P20 ?death .\n?birth wdt:P625 ?coordsb .\n?death wdt:P625 ?coordsd .\nBIND(ROUND(geof:distance(?coordsb, ?coordsd)) AS ?distance) .\nFILTER (?distance>19000)\n}\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}\nORDER BY DESC(?distance)",
        "complexity_description": "Multiple subqueries, FILTER and BIND functions",
        "complexity": "complex"
    },
    {
        "id": "995",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?country1Label ?capital1Label ?country2Label ?capital2Label ?distance WHERE {\n{\nSELECT ?country1 ?capital1 ?country2 ?capital2 ?distance WHERE {\n?country1 wdt:P31 wd:Q160016 .\nFILTER NOT EXISTS { ?country1 wdt:P576 ?x }\n?country1 wdt:P36 ?capital1 .\n?capital1 wdt:P625 ?coords1 .\n?country2 wdt:P31 wd:Q160016 .\nFILTER NOT EXISTS { ?country2 wdt:P576 ?x }\n?country2 wdt:P36 ?capital2 .\n?capital2 wdt:P625 ?coords2 .\nFILTER(xsd:string(?country1) < xsd:string(?country2))\nBIND(ROUND(geof:distance(?coords1, ?coords2)) AS ?distance) .\nFILTER (?distance<500)\n}\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}\nORDER BY ?distance",
        "complexity_description": "Multiple filters, subqueries, and functions",
        "complexity": "complex"
    },
    {
        "id": "996",
        "valid_gpt_response": true,
        "query": "SELECT\n?person ?personLabel\n(SAMPLE(CONCAT(?award1Label, \" (\", ?country1Label, \")\")) AS ?firstAward)\n(SAMPLE(CONCAT(?award2Label, \" (\", ?country2Label, \")\")) AS ?secondAward)\nWHERE {\n?person wdt:P31 wd:Q5;\nwdt:P166 ?award1, ?award2.\nwd:Q1788716 ^(wdt:P31|wdt:P279)* ?award1, ?award2.\nFILTER(?award1 != ?award2).\n?award1 wdt:P17 ?country1.\n?award2 wdt:P17 ?country2.\nFILTER(?country1 != ?country2).\nFILTER((?country1 != wd:Q159 || ?country2 != wd:Q15180) && (?country1 != wd:Q15180 || ?country2 != wd:Q159)).\nOPTIONAL { ?person rdfs:label ?personLabel. FILTER(LANG(?personLabel) = \"en\"). }\nOPTIONAL { ?award1 rdfs:label ?award1Label. FILTER(LANG(?award1Label) = \"en\"). }\nOPTIONAL { ?award2 rdfs:label ?award2Label. FILTER(LANG(?award2Label) = \"en\"). }\nOPTIONAL { ?country1 rdfs:label ?country1Label. FILTER(LANG(?country1Label) = \"en\"). }\nOPTIONAL { ?country2 rdfs:label ?country2Label. FILTER(LANG(?country2Label) = \"en\"). }\n}\nGROUP BY ?person ?personLabel\nLIMIT 50",
        "complexity_description": "Multiple filters, optional patterns, and grouping",
        "complexity": "complex"
    },
    {
        "id": "997",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?activity ?activityLabel ?coordinates (COALESCE(?layer, \"earthquake\") AS ?layer) WHERE {\n{\n?activity wdt:P31/wdt:P279* wd:Q8072.\n} UNION {\n?activity wdt:P31/wdt:P279* wd:Q7944.\n}\n?activity wdt:P625 ?coordinates.\nOPTIONAL {\n?activity wdt:P31/wdt:P279* wd:Q8072.\nBIND(\"volcano\" AS ?layer).\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple UNION patterns, OPTIONAL clause and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "998",
        "valid_gpt_response": true,
        "query": "SELECT ?ratio (COUNT(?item) AS ?count) WHERE {\n?item wdt:P31/wdt:P279* wd:Q3305213 .\n?item p:P2048/psv:P2048 [\nwikibase:quantityAmount ?baseHeight;\nwikibase:quantityUnit [\np:P2370/psv:P2370 [\nwikibase:quantityAmount ?unitHeight;\nwikibase:quantityUnit wd:Q11573\n]\n]\n].\nBIND(?baseHeight * ?unitHeight AS ?height).\n?item p:P2049/psv:P2049 [\nwikibase:quantityAmount ?baseWidth;\nwikibase:quantityUnit [\np:P2370/psv:P2370 [\nwikibase:quantityAmount ?unitWidth;\nwikibase:quantityUnit wd:Q11573\n]\n]\n].\nBIND(?baseWidth * ?unitWidth AS ?width).\nBIND(?height / ?width AS ?r) .\nBIND(IF(?r<0.5,\"< 0.5\",\nIF(?r<0.6,\"0.5 - 0.6\",\nIF(?r<0.7,\"0.6 - 0.7\",\nIF(?r<0.8,\"0.7 - 0.8\",\nIF(?r<0.9,\"0.8 - 0.9\",\nIF(?r<1.0,\"0.9 - 1.0\",\nIF(?r<1.1,\"1.0 - 1.1\",\nIF(?r<1.2,\"1.1 - 1.2\",\nIF(?r<1.3,\"1.2 - 1.3\",\nIF(?r<1.4,\"1.3 - 1.4\",\nIF(?r<1.5,\"1.4 - 1.5\", \"> 1.5\"))))))))))) AS ?ratio) .\n}\nGROUP BY ?ratio\nORDER BY DESC(?count)",
        "complexity_description": "Multiple nested filters, complex calculations and conditional statements",
        "complexity": "complex"
    },
    {
        "id": "999",
        "valid_gpt_response": true,
        "query": "select * { ?s wdt:P39 wd:Q27169 ; wdt:P19/wdt:P625 ?l }",
        "complexity_description": "Two triple patterns with a property path",
        "complexity": "medium"
    },
    {
        "id": "1000",
        "valid_gpt_response": true,
        "query": "select * { ?s wdt:P39 wd:Q13217683 ; wdt:P19/wdt:P625 ?l }",
        "complexity_description": "Two triple patterns with a property path",
        "complexity": "medium"
    },
    {
        "id": "1001",
        "valid_gpt_response": true,
        "query": "select * { ?s wdt:P39 wd:Q13217683 ; wdt:P19/wdt:P625 ?l . OPTIONAL {?s wdt:P570 ?d} FILTER (!BOUND(?d)) }",
        "complexity_description": "Optional clause, filter and property path",
        "complexity": "medium"
    },
    {
        "id": "1002",
        "valid_gpt_response": true,
        "query": "SELECT\n?film ?title ?filmLabel ?filmDescription\n?filminglocation ?filminglocationLabel ?coor\nWHERE\n{\n?film wdt:P31 wd:Q11424 .\n?film wdt:P915 ?filminglocation .\n?filminglocation wdt:P625 ?coor .\nOPTIONAL { ?film wdt:P1476 ?title } .\nFILTER NOT EXISTS { ?film wdt:P915 ?l . ?l wdt:P17 ?l }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"{{int:lang}},en\" }\n}",
        "complexity_description": "Multiple joins, optional clause and filter not exists",
        "complexity": "medium"
    },
    {
        "id": "1003",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?voie ?voieLabel ?photo ?coord WHERE {\n?voie (wdt:P31/wdt:P279*) wd:Q83620.\n?voie wdt:P131 ?arrdt.\n?arrdt wdt:P31 wd:Q702842.\n?arrdt wdt:P131 wd:Q90.\n?voie wdt:P138 ?odonyme.\n?odonyme (wdt:P106/wdt:P279*) wd:Q39631.\n?voie wdt:P625 ?coord.\nOPTIONAL { ?odonyme wdt:P18 ?photo. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\". }\n}",
        "complexity_description": "Multiple joins, optional clause and service call",
        "complexity": "complex"
    },
    {
        "id": "1004",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?sat ?satLabel ?planet ?planetLabel WHERE {\n?sat wdt:P397 ?planet .\n?planet wdt:P196/wdt:P279* wd:Q6592 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nORDER BY ?planetLabel ?satLabel",
        "complexity_description": "Two triple patterns, one service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "1005",
        "valid_gpt_response": true,
        "query": "SELECT ?deity ?deityLabel ?genderLabel ?worshippedByLabel ?image ?spouse ?spouseLabel ?child ?childLabel ?mother ?motherLabel ?father ?fatherLabel ?sister ?sisterLabel ?brother ?brotherLabel\nWHERE\n{\n?deity wdt:P31 wd:Q178885 .\nOPTIONAL { ?deity wdt:P21 ?gender }\nOPTIONAL { ?deity wdt:P1049 ?worshippedBy }\nOPTIONAL { ?deity wdt:P18 ?image }\nOPTIONAL { ?deity wdt:P26 ?spouse }\nOPTIONAL { ?deity wdt:P40 ?child }\nOPTIONAL { ?deity wdt:P25 ?mother }\nOPTIONAL { ?deity wdt:P22 ?father }\nOPTIONAL { ?deity wdt:P9 ?sister }\nOPTIONAL { ?deity wdt:P7 ?brother }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Multiple optional patterns with service call",
        "complexity": "medium"
    },
    {
        "id": "1006",
        "valid_gpt_response": true,
        "query": "SELECT ?name ?nameLabel ?count WHERE {\nhint:Query hint:optimizer \"None\" .\n{\nSELECT ?name (COUNT(DISTINCT ?a) AS ?count) WHERE {\n{\nSELECT DISTINCT ?name WHERE {\n{?name wdt:P460* wd:Q15235674 } UNION { wd:Q15235674 wdt:P460* ?name} .\n?name wdt:P31 wd:Q12308941 .\n} LIMIT 100\n} .\n?a wdt:P735 ?name .\n?a wdt:P31 wd:Q5 .\n} GROUP BY ?name\n} .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}\n# HAVING (?count > 1)\nORDER BY DESC(?count) ?itemLabel",
        "complexity_description": "Multiple subqueries, UNION, GROUP BY, and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "1007",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel\nWHERE\n{\n?item wdt:P279 wd:Q3088299 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "1008",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?coord WHERE {\n{\n?item wdt:P31 wd:Q350895 .\n?item wdt:P17 wd:Q213 .\n?item wdt:P625 ?coord\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"cs\". }\n}",
        "complexity_description": "Simple query with 3 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "1009",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?map WHERE {\n{ ?item wdt:P31 wd:Q5107 . } UNION { ?item wdt:P31 wd:Q55833 .}\nFILTER NOT EXISTS { ?item wdt:P31 wd:Q2284298 }\nOPTIONAL { ?item wdt:P242 ?map . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple UNION patterns, FILTER NOT EXISTS and OPTIONAL clause",
        "complexity": "complex"
    },
    {
        "id": "1010",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?elev ?coord\nWHERE\n{\n?item wdt:P31 wd:Q105731 ;\nwdt:P706 wd:Q842462 ;\nwdt:P2044 ?elev ;\nwdt:P625 ?coord .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" }\n}",
        "complexity_description": "Multiple triple patterns with a SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "1011",
        "valid_gpt_response": true,
        "query": "SELECT ?country ?countryLabel (COUNT(DISTINCT ?city) AS ?count) WHERE {\n?city wdt:P31/wdt:P279* wd:Q486972;\nwdt:P17 ?country;\nwdt:P138 [ wdt:P411 wd:Q43115 ].\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?country ?countryLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, service call, group by and order by",
        "complexity": "complex"
    },
    {
        "id": "1012",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?filmLabel ?film ?actorLabel ?characterLabel\nWHERE\n{\n# Remove next line to refer all works, not only Disney works\n{ ?film wdt:P449|wdt:P272 [ (wdt:P127/wdt:P749*) wd:Q7414 ] . } UNION { ?film wdt:P449 wd:Q7414 . }\n?film p:P161|p:P725 [ps:P161|ps:P725 ?actor ; pq:P453 ?character ] .\n?actor wdt:P735 ?name .\n?character wdt:P735 ?name .\nFILTER (?actor != ?character)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Multiple UNION, FILTER and SERVICE clauses",
        "complexity": "complex"
    },
    {
        "id": "1013",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel WHERE {\n?item wdt:P2860 ?item.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "1014",
        "valid_gpt_response": true,
        "query": "SELECT ?subject ?subjectLabel ?propertyLabel ?objectLabel ?source1Label ?source2Label\nWITH { # subquery that actually finds the statements and sources (written as named subquery to ensure it's only run once, independently of the rest of the query; see https://wiki.blazegraph.com/wiki/index.php/NamedSubquery)\nSELECT ?statement ?source1 ?source2 WHERE {\n?statement prov:wasDerivedFrom/pr:P248 ?source1, ?source2. # statement has two \"stated in\" references\n?source1 wdt:P2860 ?source2. # first source cites the second one\nFILTER(?source1 != ?source2). # apparently some items cite themselves?\n}\n} AS %results WHERE {\nINCLUDE %results.\n# auxiliary query to find the subject, property and object of the statement, as well as labels\n?subject ?p ?statement.\n?statement ?ps ?object.\n?property a wikibase:Property;\nwikibase:claim ?p;\nwikibase:statementProperty ?ps.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple subqueries, joins and filters",
        "complexity": "complex"
    },
    {
        "id": "1015",
        "valid_gpt_response": true,
        "query": "SELECT ?universityLabel ?universityDescription ?website ?coord WHERE {\n?university (wdt:P31/wdt:P279*) wd:Q2385804.\n?university wdt:P625 ?coord.\nOPTIONAL { ?university wdt:P856 ?website. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1016",
        "valid_gpt_response": true,
        "query": "SELECT ?image ?partyLabel ?justiceLabel ?birthdate\nWHERE\n{\n?justice p:P39 ?statement .\n{ ?statement ps:P39 wd:Q11144 } UNION { ?statement ps:P39 wd:Q11147 }\n?statement pq:P580 ?appointed .\nFILTER NOT EXISTS { ?statement pq:P582 ?x }\n?justice wdt:P569 ?birthdate .\n?justice wdt:P102 ?party .\n?justice wdt:P18 ?image .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Multiple UNION, FILTER NOT EXISTS, and SERVICE clauses",
        "complexity": "complex"
    },
    {
        "id": "1017",
        "valid_gpt_response": true,
        "query": "SELECT ?year (COUNT(?person) AS ?count) WHERE {\n?person wdt:P31 wd:Q5;\nwdt:P570 ?date.\nBIND(YEAR(?date) AS ?year).\nfilter(?year > 1)\n}\nGROUP BY ?year\nORDER BY ?year",
        "complexity_description": "Filter, bind, group by and order by",
        "complexity": "medium"
    },
    {
        "id": "1018",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?street ?streetLabel ?town ?coords WHERE {\n?street wdt:P630 ?code .\n?street wdt:P138 ?town .\n?town wdt:P31 wd:Q484170 .\n?town wdt:P625 ?coords .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" . }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple joins, filters and service call",
        "complexity": "medium"
    },
    {
        "id": "1019",
        "valid_gpt_response": true,
        "query": "SELECT ?subject ?subjectLabel ?predicateLabel ?objectLabel ?reasonLabel (SUBSTR(STR(?rank), 27) AS ?rankLabel) WHERE {\n?subject ?p [\n?ps ?object;\npq:P2241 ?reason;\nwikibase:rank ?rank\n].\nFILTER(?rank != wikibase:DeprecatedRank).\n?predicate wikibase:claim ?p;\nwikibase:statementProperty ?ps.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?rank",
        "complexity_description": "Multiple joins, filters and subqueries",
        "complexity": "complex"
    },
    {
        "id": "1020",
        "valid_gpt_response": true,
        "query": "SELECT ?occupation (GROUP_CONCAT(DISTINCT(?occupationLabel); separator=\", \") as ?occupationLabel) (COUNT(*) AS ?count)\nWHERE {\n?item wdt:P21 wd:Q6581072 .\n?item wdt:P106 ?occupation .\nOPTIONAL {\n?occupation wdt:P2521 ?occupationLabel .\nFILTER(LANG(?occupationLabel) = \"fr\") .\n}\n}\nGROUP BY ?occupation\nORDER BY DESC(?count)",
        "complexity_description": "Multiple joins, optional clause, group by and order by",
        "complexity": "complex"
    },
    {
        "id": "1021",
        "valid_gpt_response": true,
        "query": "SELECT ?document ?documentLabel (COUNT(?signatory) AS ?count) WHERE {\n?document wdt:P1891 ?signatory.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\", \"fr\", \"he\", \"pt\", \"id\". }\n}\nGROUP BY ?document ?documentLabel\nHAVING(?count > 1)\nORDER BY DESC(?count)",
        "complexity_description": "Multiple languages, aggregation and filtering",
        "complexity": "medium"
    },
    {
        "id": "1022",
        "valid_gpt_response": true,
        "query": "SELECT ?film (CONCAT(str(?actorLabel), \" /in/ \", str(?filmLabel), \" -- the \", str(?filmDescription)) as ?layer)\n?enwiki_article ?coor\n?filminglocation ?filminglocationLabel\n{ SELECT DISTINCT ?film ?filmLabel ?filmDescription ?enwiki_article ?coor ?filminglocation ?filminglocationLabel ?actorLabel ?propertyLabel\n{\n?statement pq:P453 wd:Q2009573 .\n?film p:P161 ?statement . ?statement ps:P161 ?actor .\n?film wdt:P31/wdt:P279* wd:Q11424 .\n?film wdt:P915 ?filminglocation .\n?filminglocation wdt:P625 ?coor .\nfilter not exists { ?filminglocation wdt:P17 ?filminglocation }\nOPTIONAL { ?enwiki_article schema:about ?film ; schema:isPartOf <https://en.wikipedia.org/> }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" .\n?film rdfs:label ?filmLabel . ?film schema:description ?filmDescription .\n?filminglocation rdfs:label ?filminglocationLabel . ?actor rdfs:label ?actorLabel }\n}\n}",
        "complexity_description": "Multiple joins, subqueries, and filters",
        "complexity": "complex"
    },
    {
        "id": "1023",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?countryLabel ?coords WHERE {\n?item wdt:P1435/wdt:P279* wd:Q19558910 .\n?item wdt:P17 ?country .\nFILTER NOT EXISTS { ?item wdt:P17 wd:Q30 }\n?item wdt:P625 ?coords .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?countryLabel ?itemLabel",
        "complexity_description": "Multiple filters, joins and subqueries",
        "complexity": "complex"
    },
    {
        "id": "1024",
        "valid_gpt_response": true,
        "query": "SELECT ?q { ?q wdt:P214 ?viaf MINUS { ?q (wdt:P31|wdt:P279) ?instance } }",
        "complexity_description": "Uses MINUS and UNION operators",
        "complexity": "medium"
    },
    {
        "id": "1025",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?countryLabel ?height ?width ?ratio ?image WHERE {\n?item wdt:P31 wd:Q186516 .\n?item wdt:P1001 ?country .\n?country wdt:P31 wd:Q3624078 .\nFILTER NOT EXISTS { ?country wdt:P576 ?x }\n?item wdt:P18 ?image .\n?item p:P2048 ?statement .\n?statement ps:P2048 ?height .\n{ ?statement pq:P2049 ?width . } UNION { FILTER NOT EXISTS { ?statement pq:P2049 ?y } . ?item wdt:P2049 ?width . }\nBIND (?width / ?height AS ?ratio)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?ratio ?countryLabel ?itemLabel",
        "complexity_description": "Multiple filters, unions, and subqueries",
        "complexity": "complex"
    },
    {
        "id": "1026",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT\n?bridge ?bridgeLabel\n?woman ?womanLabel\n?coor\n?country ?countryLabel\n?waterbody ?waterbodyLabel\n(BOUND(?enArticle) AS ?hasEn) (BOUND(?frArticle) AS ?hasFr)\nWHERE\n{\n?bridge wdt:P31/wdt:P279* wd:Q12280;\nwdt:P138 ?woman .\n?woman wdt:P21 wd:Q6581072 .\nOPTIONAL { ?bridge wdt:P17 ?country . }\nOPTIONAL { ?bridge wdt:P177 ?waterbody . }\nOPTIONAL { ?enArticle a schema:Article; schema:about ?woman; schema:isPartOf <https://en.wikipedia.org/>. }\nOPTIONAL { ?frArticle a schema:Article; schema:about ?woman; schema:isPartOf <https://fr.wikipedia.org/>. }\nOPTIONAL { ?bridge wdt:P625 ?coor }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,fr\". }\n}\nORDER BY ?country",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "complex"
    },
    {
        "id": "1027",
        "valid_gpt_response": true,
        "query": "SELECT ?brand ?brandLabel (SAMPLE(?image) AS ?image) ?linkTo WHERE {\nVALUES ?company {\nwd:Q3295867\nwd:Q334800\nwd:Q695087\n}\n{\n?brand (wdt:P749|wdt:P127)+ ?company.\n?brand wdt:P749|wdt:P127 ?linkTo.\nOPTIONAL { ?brand wdt:P18|wdt:P154 ?image. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n} UNION {\nBIND(?company AS ?brand).\nBIND(?brand AS ?linkTo).\n?company rdfs:label ?brandLabel.\nFILTER(LANG(?brandLabel) = \"en\").\nOPTIONAL { ?company wdt:P18|wdt:P154 ?image. }\n}\n}\nGROUP BY ?brand ?brandLabel ?linkTo",
        "complexity_description": "Multiple UNION patterns, OPTIONAL clauses, and SERVICE usage",
        "complexity": "complex"
    },
    {
        "id": "1028",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel (COUNT(DISTINCT ?river) AS ?count) WHERE {\n?item wdt:P31/wdt:P279* wd:Q486972;\nwdt:P206 ?river.\n?river wdt:P31/wdt:P279* wd:Q355304.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?item ?itemLabel\nHAVING(?count > 2)\nORDER BY DESC(?count)",
        "complexity_description": "Multiple joins, subqueries and aggregation",
        "complexity": "complex"
    },
    {
        "id": "1029",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?winner ?winnerLabel ?twitter WHERE {\n{ ?winner wdt:P166 wd:Q7191. }\nUNION\n{ ?winner wdt:P166 [ wdt:P279 wd:Q7191 ] }\n?winner wdt:P2002 ?twitter .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n} ORDER BY ASC(?winnerLabel)",
        "complexity_description": "Multiple UNION patterns, SERVICE clause and ORDER BY",
        "complexity": "complex"
    },
    {
        "id": "1030",
        "valid_gpt_response": true,
        "query": "SELECT ?depute ?deputeLabel ?deces ?causeLabel\nWHERE {\n?depute wdt:P31 wd:Q5 .\n?depute p:P39 ?mandat .\n?depute wdt:P570 ?deces .\nOPTIONAL { ?depute wdt:P509 ?cause . }\n?mandat ps:P39 wd:Q3044918 .\n?mandat pq:P582 ?fin .\nFILTER (?fin = ?deces)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" }\n}\nORDER BY DESC(?deces)",
        "complexity_description": "Multiple joins, optional clause and filter",
        "complexity": "medium"
    },
    {
        "id": "1031",
        "valid_gpt_response": true,
        "query": "SELECT ?named ?namedLabel ?namedDescription (COUNT(?item) as ?ct)\n{\n?item wdt:P31 wd:Q79007 .\n?item wdt:P138 ?named .\n?item wdt:P17 wd:Q55 .\n?named wdt:P31 wd:Q5 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" .}\n}\nGROUP BY ?named ?namedLabel ?namedDescription\nORDER BY DESC(?ct)",
        "complexity_description": "Multiple triple patterns, SERVICE clause, GROUP BY and ORDER BY",
        "complexity": "complex"
    },
    {
        "id": "1032",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel (year(?dateNaissance) as ?anneeNaissance) (year(?dateDeces) as ?anneeDeces) ?image\nWHERE {\n?item wdt:P31/wdt:P279* wd:Q5 . #humain\n?item wdt:P119 wd:Q1542 . #lieu de sepulture\nOPTIONAL{ ?item wdt:P1442 ?image . }\nOPTIONAL { ?item wdt:P569 ?dateNaissance . }\nOPTIONAL { ?item wdt:P570 ?dateDeces . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\". }\n} ORDER BY DESC(?image)",
        "complexity_description": "Multiple optional patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "1033",
        "valid_gpt_response": true,
        "query": "select distinct ?groupLabel (?groupLabel as ?layer) ?article ?person ?personLabel ?personDescription ?graveplot ?coord ?pic ?picGrave ?WikiTree ?FindAGrave{\n{\n?person wdt:P119 wd:Q252312; #Place of burial\np:P119 [\npq:P965 ?graveplot;\npq:P625 ?coord].\nOPTIONAL { ?person wdt:P2949 ?WikiTreeID .} # If we have a WikiTree profile\nOPTIONAL { ?person wdt:P535 ?FindAGraveID .} # If we have a FindAGrave ID\nOPTIONAL{ ?person wdt:P18 ?pic .} # If we have an illustration\nOPTIONAL{ ?person wdt:P1442 ?picGrave .} # If we have a picture of the grave\nBIND (URI(CONCAT(\"http://www.findagrave.com/cgi-bin/fg.cgi?page=gr&df=all&GRid=\",?FindAGraveID)) AS ?FindAGrave)\nBIND (URI(CONCAT(\"http://www.wikitree.com/wiki\",?WikiTreeID)) AS ?WikiTree)\nOPTIONAL {\n?article schema:about ?person .\n?article schema:inLanguage \"en\" .\n?article schema:isPartOf <https://sv.wikipedia.org/> .\n}\nOPTIONAL {\n?article schema:about ?person .\n?article schema:inLanguage \"sv\" .\n?article schema:isPartOf <https://sv.wikipedia.org/> .\n}\nOPTIONAL { ?person wdt:P106 ?group .} # Occupation in Layer\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\",\"sv\"}\n}\nOrder by ?personLabel",
        "complexity_description": "Multiple optional patterns, bindings, and service calls",
        "complexity": "complex"
    },
    {
        "id": "1034",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?instanceLabel ?NumInventaire (CONCAT(\"http://www.culture.gouv.fr/public/mistral/joconde_fr?ACTION=CHERCHER&FIELD_1=REF&VALUE_1=\",?IDJoconde) as ?Joconde) ?image\nWHERE {\n?item wdt:P195 wd:Q1376 . # Item ayant en collection (P195) le musee Saint-Raymond (Q1376)\n?item wdt:P31 ?instance . # Nature de l'item (P31)\n{SELECT ?item (GROUP_CONCAT(DISTINCT ?inv; separator=\";\") as ?NumInventaire) # Numeros d'inventaire (P214)\nWHERE {?item wdt:P217 ?inv .\n}GROUP BY ?item}\nOPTIONAL{?item wdt:P347 ?IDJoconde.} # Identifiant Joconde\nOPTIONAL{SELECT ?item (SAMPLE(?img) AS ?image) # Fichier image sur Wikimedia Commons (P18)\nWHERE {?item wdt:P18 ?img .\n}GROUP BY ?item}\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"fr\"}\n}ORDER BY ?item",
        "complexity_description": "Multiple subqueries, optional patterns, and service calls",
        "complexity": "complex"
    },
    {
        "id": "1035",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?layer ?coords WHERE {\n?item wdt:P31/wdt:P279* wd:Q484170;\nwdt:P17 wd:Q142;\nwdt:P138 ?river;\nwdt:P625 ?coords .\n?river wdt:P31/wdt:P279* wd:Q355304 .\n?river rdfs:label ?layer . FILTER(LANG(?layer) = 'fr')\n}\nORDER BY ?riverLabel ?itemLabel",
        "complexity_description": "Multiple joins, filters and ordering",
        "complexity": "complex"
    },
    {
        "id": "1036",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel (year(?date) as ?year)\nWHERE {\n?item wdt:P31 wd:Q5 .\n?item p:P166 ?award .\n?award ps:P166 wd:Q1131356 ;\npq:P585 ?date .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" . }\n}",
        "complexity_description": "Multiple triple patterns, service call and function usage",
        "complexity": "medium"
    },
    {
        "id": "1037",
        "valid_gpt_response": true,
        "query": "SELECT ?work ?workLabel ?classLabel ?date WHERE {\n{\nSELECT DISTINCT ?work (SAMPLE(?class) AS ?class) (MIN(?date) AS ?date) WHERE {\n?work wdt:P31 ?class;\nwdt:P577 ?date.\n?class wdt:P279* wd:Q386724.\nFILTER(?date > NOW()).\n}\nGROUP BY ?work\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\", \"de\". }\n}\nORDER BY ?date",
        "complexity_description": "Subqueries, grouping, and filtering make it complex",
        "complexity": "complex"
    },
    {
        "id": "1038",
        "valid_gpt_response": true,
        "query": "SELECT ?country ?countryLabel (COUNT(DISTINCT ?demo) AS ?count) WHERE {\n?demo wdt:P31/wdt:P279* wd:Q175331;\nwdt:P17 ?country.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?country ?countryLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, service call, group by and order by",
        "complexity": "complex"
    },
    {
        "id": "1039",
        "valid_gpt_response": true,
        "query": "SELECT ?film ?filmLabel ?date WHERE {\n?film wdt:P136 wd:Q28026639.\n?film wdt:P577 ?date .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "1040",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?itemDescription ?award_label (SAMPLE(?date) AS ?year) (SAMPLE(?photo) AS ?pic)\nWHERE {\n?item p:P166 ?awardStatement .\n?awardStatement ps:P166 ?award ;\npq:P585 ?date .\nVALUES (?award ?award_label) {\n(wd:Q1131356 \"Theatre World Award\")\n(wd:Q28007396 \"Dorothy Loudon Award\")\n(wd:Q28007416 \"Special Award\")\n(wd:Q28007447 \"John Willis Award\")\n(wd:Q28007406 \"Lunt-Fontanne Award\")\n} .\nOPTIONAL { ?item wdt:P18 ?photo . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}GROUP BY ?item ?itemLabel ?itemDescription ?award_label\nORDER BY ?year",
        "complexity_description": "Multiple joins, subqueries, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "1041",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel (SAMPLE(?birthCoords) AS ?birthCoords) (SAMPLE(?layer) AS ?layer) WHERE {\nVALUES ?cemetery {\nwd:Q252312 # Norra Begravningsplatsen\n}\n?person wdt:P31 wd:Q5;\nwdt:P119 ?cemetery;\nwdt:P19/wdt:P625 ?birthCoords.\nOPTIONAL {\n?person wdt:P27 ?country.\n?country rdfs:label ?layer.\nFILTER(LANG(?layer) = \"en\").\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?person ?personLabel",
        "complexity_description": "Multiple triple patterns, OPTIONAL clause, SERVICE keyword, and GROUP BY",
        "complexity": "complex"
    },
    {
        "id": "1042",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?planet ?planetLabel ?planetDescription ?nom ?nomLabel ?nomDescription\nWHERE {\n?planet wdt:P31/wdt:P279* wd:Q3132741 .\n?planet wdt:P138 ?nom.\n?planet wdt:P397 ?parent.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }.\n} ORDER BY DESC(?parent)",
        "complexity_description": "Multiple triple patterns, property paths, and service call",
        "complexity": "medium"
    },
    {
        "id": "1043",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel WHERE {\n{ ?item a wdno:P22. }\nUNION\n{ ?item a wdno:P25. }\nMINUS { ?item wikibase:rank []. } # filter out statement nodes\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Union, minus and service clause",
        "complexity": "medium"
    },
    {
        "id": "1044",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?positionLabel ?erdos_number WHERE {\n?person wdt:P31 wd:Q5 ;\nwdt:P39 ?position ;\nwdt:P2021 ?erdos_number .\n{ ?position wdt:P279* wd:Q48352 . } UNION\n{ ?position wdt:P279* wd:Q2285706 . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ASC(?erdos_number) ?personLabel",
        "complexity_description": "Multiple UNION patterns, SERVICE clause and ORDER BY",
        "complexity": "complex"
    },
    {
        "id": "1045",
        "valid_gpt_response": true,
        "query": "SELECT ?countryLabel ?item ?itemLabel ?itemDescription ?person ?personLabel ?personDescription (sample(?coor) as ?coor)\n{\n?item wdt:P31/wdt:P279* wd:Q1248784 .\n?item p:P138/ps:P138 ?person .\n?person wdt:P31 wd:Q5 .\n?item wdt:P17 ?country .\nOPTIONAL { ?item wdt:P625 ?coor } .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}\nGROUP BY ?countryLabel ?item ?itemLabel ?itemDescription ?person ?personLabel ?personDescription\nORDER BY ?countryLabel ?itemLabel\nLIMIT 1000",
        "complexity_description": "Multiple joins, optional clause, and group by/order by/limit",
        "complexity": "complex"
    },
    {
        "id": "1046",
        "valid_gpt_response": true,
        "query": "select distinct ?groupLabel (?groupLabel as ?layer) ?article ?person ?personLabel ?personDescription ?graveplot ?coord ?pic ?picGrave ?WikiTree ?FindAGrave{\n{\n?person wdt:P119 wd:Q252312; #Place of burial\np:P119 [\npq:P965 ?graveplot;\npq:P625 ?coord].\nOPTIONAL { ?person wdt:P535 ?FindAGraveID .} # If we have a FindAGrave ID\nOPTIONAL{ ?person wdt:P18 ?pic .} # If we have an illustration\nminus { ?person wdt:P1442 ?picGrave .} # If we have a picture of the grave\nBIND (URI(CONCAT(\"http://www.findagrave.com/cgi-bin/fg.cgi?page=gr&df=all&GRid=\",?FindAGraveID)) AS ?FindAGrave)\nOPTIONAL {\n?article schema:about ?person .\n?article schema:inLanguage \"sv\" .\n?article schema:isPartOf <https://sv.wikipedia.org/> .\n}\nOPTIONAL {\n?article schema:about ?person .\n?article schema:inLanguage \"en\" .\n?article schema:isPartOf <https://en.wikipedia.org/> .\n}\nOPTIONAL { ?person wdt:P21 ?group .} # Gender in Layer\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\",\"sv\"}\n}\nOrder by ?personLabel",
        "complexity_description": "Multiple optional patterns, UNIONs and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "1047",
        "valid_gpt_response": true,
        "query": "select distinct ?groupLabel (?groupLabel as ?layer) ?article ?person ?personLabel ?personDescription ?graveplot ?coord ?pic ?picGrave ?WikiTree ?FindAGrave{\n{\n?person wdt:P119 wd:Q252312; #Place of burial\np:P119 [\npq:P965 ?graveplot;\npq:P625 ?coord].\nOPTIONAL { ?person wdt:P535 ?FindAGraveID .} # If we have a FindAGrave ID\nOPTIONAL{ ?person wdt:P18 ?pic .} # If we have an illustration\n{ ?person wdt:P1442 ?picGrave .} # If we have a picture of the grave\nBIND (URI(CONCAT(\"http://www.findagrave.com/cgi-bin/fg.cgi?page=gr&df=all&GRid=\",?FindAGraveID)) AS ?FindAGrave)\nOPTIONAL {\n?article schema:about ?person .\n?article schema:inLanguage \"sv\" .\n?article schema:isPartOf <https://sv.wikipedia.org/> .\n}\nOPTIONAL {\n?article schema:about ?person .\n?article schema:inLanguage \"en\" .\n?article schema:isPartOf <https://en.wikipedia.org/> .\n}\nOPTIONAL { ?person wdt:P21 ?group .} # Gender in Layer\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\",\"sv\"}\n}\nOrder by ?personLabel",
        "complexity_description": "Multiple optional patterns, multiple languages, and multiple data sources",
        "complexity": "complex"
    },
    {
        "id": "1048",
        "valid_gpt_response": true,
        "query": "SELECT ?holiday ?holidayLabel WHERE {\n# first get the item for today's date by stitching together the English label (month name + day number) and finding items with that label\nVALUES (?monthNumber ?monthName) {\n(1 \"January\"@en)\n(2 \"February\"@en)\n(3 \"March\"@en)\n(4 \"April\"@en)\n(5 \"May\"@en)\n(6 \"June\"@en)\n(7 \"July\"@en)\n(8 \"August\"@en)\n(9 \"September\"@en)\n(10 \"October\"@en)\n(11 \"November\"@en)\n(12 \"December\"@en)\n}\nFILTER(?monthNumber = MONTH(NOW())).\nBIND(CONCAT(?monthName, \" \"@en, STRLANG(STR(DAY(NOW())),\"en\")) AS ?dateLabel).\n?date rdfs:label ?dateLabel.\n# then find holidays occurring on that day\n?holiday wdt:P837 ?date.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Uses VALUES, FILTER, BIND, and SERVICE with multiple triple patterns",
        "complexity": "complex"
    },
    {
        "id": "1049",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?placeLabel ?countryLabel ?coords WHERE {\n?item wdt:P31/wdt:P279* wd:Q294440 ;\nwdt:P131/wdt:P131 wd:Q90 ;\nwdt:P138 ?place .\n?place wdt:P625 ?coords ;\nwdt:P1376 ?country .\n?country wdt:P31 wd:Q3624078 .\nFILTER NOT EXISTS { ?country wdt:P576 ?x }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" . }\n} ORDER BY ?placeLabel ?itemLabel",
        "complexity_description": "Multiple joins, filters and service calls",
        "complexity": "complex"
    },
    {
        "id": "1050",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?battleLabel (YEAR(?time) AS ?year) WHERE {\n?item wdt:P31/wdt:P279* wd:Q294440 ;\nwdt:P131 ?arrondissement ;\nwdt:P138 ?battle .\n?arrondissement wdt:P131 wd:Q90 .\n?battle wdt:P31 wd:Q178561 .\nOPTIONAL { ?battle wdt:P585|wdt:P580 ?time }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" . }\n} ORDER BY ?year ?battleLabel",
        "complexity_description": "Multiple joins, optional clause and service call",
        "complexity": "complex"
    },
    {
        "id": "1051",
        "valid_gpt_response": true,
        "query": "SELECT ?painter ?painterLabel (COUNT(DISTINCT ?article) AS ?count) WHERE {\n?item wdt:P31 wd:Q3305213 .\n?article schema:about ?item .\n?article schema:isPartOf ?wiki .\nFILTER regex (str(?wiki), \".+.wikipedia.org\").\n?item wdt:P170 ?painter .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n} GROUP BY ?painter ?painterLabel HAVING (?count > 4 )",
        "complexity_description": "Multiple joins, filters, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "1052",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?image WHERE {\n?item wdt:P31 wd:Q186516 ;\nwdt:P18 ?image ;\nwdt:P1001 ?country .\n?country wdt:P31 wd:Q3624078 .\nFILTER NOT EXISTS { ?country wdt:P31 wd:Q3024240 }\nFILTER NOT EXISTS { ?item wdt:P462/wdt:P279* wd:Q3142 }\nFILTER NOT EXISTS { ?item wdt:P462/wdt:P279* wd:Q23444 }\nFILTER NOT EXISTS { ?item wdt:P462/wdt:P279* wd:Q1088 }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple filters, joins and subqueries",
        "complexity": "complex"
    },
    {
        "id": "1053",
        "valid_gpt_response": true,
        "query": "SELECT (MIN(?age) AS ?minAge) (COUNT(DISTINCT ?composition) AS ?count) ?composer ?composerLabel WHERE {\n{ # find only compositions with a single composer\nSELECT ?composition WHERE {\n?composition wdt:P86 ?composer.\n}\nGROUP BY ?composition\nHAVING(COUNT(?composer) = 1)\n}\n?composition wdt:P86 ?composer;\np:P571/psv:P571 [\nwikibase:timeValue ?date;\nwikibase:timePrecision ?datePrecision\n].\nFILTER(?datePrecision >= 9). # filter out sub-year precision\n?composer wdt:P31 wd:Q5;\np:P569/psv:P569 [\nwikibase:timeValue ?born;\nwikibase:timePrecision ?bornPrecision\n].\nFILTER(?bornPrecision >= 9).\nBIND(FLOOR((?date - ?born)/365.2425) AS ?age).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?composer ?composerLabel\nORDER BY ?minAge",
        "complexity_description": "Multiple subqueries, grouping, and filtering",
        "complexity": "complex"
    },
    {
        "id": "1054",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?collectionLabel ?image WHERE {\n?item wdt:P170 wd:Q33978 ;\nwdt:P180 wd:Q243 .\nOPTIONAL { ?item wdt:P195 ?collection . }\nOPTIONAL { ?item wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?collectionLabel ?itemLabel",
        "complexity_description": "Multiple optional patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "1055",
        "valid_gpt_response": true,
        "query": "SELECT\n(STR(?year) AS ?year_) # STR(): work around T150515\n# uncomment the below three lines for a more useful Table view\n#(SUM(?famous) AS ?famousCount)\n#(COUNT(person) AS ?totalCount)\n#(?famousCount/?totalCount AS ?ratio)\n# this line compresses the above three lines into one because otherwise the Line Chart would display ?famousCount whereas we want ?ratio\n(SUM(?famous)/COUNT(?person) AS ?ratio)\nWHERE {\n?person wdt:P31 wd:Q5;\nwdt:P570 ?died;\nwikibase:sitelinks ?sitelinks.\nFILTER(?died >= \"2000-01-01\"^^xsd:dateTime).\nBIND(YEAR(?died) AS ?year).\nBIND(IF(?sitelinks >= 25, 1, 0) AS ?famous).\n}\nGROUP BY ?year\nORDER BY ?year",
        "complexity_description": "Multiple BINDs, FILTER, GROUP BY and ORDER BY",
        "complexity": "complex"
    },
    {
        "id": "1056",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?globeLabel ?coordinates WITH {\nSELECT DISTINCT ?globe WHERE {\n[] wikibase:geoGlobe ?globe.\n}\n} AS %globes WHERE {\nINCLUDE %globes.\nFILTER(?globe != wd:Q2).\n?item p:P625 [\nps:P625 ?coordinates;\npsv:P625/wikibase:geoGlobe ?globe\n].\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple subqueries, filters and services",
        "complexity": "complex"
    },
    {
        "id": "1057",
        "valid_gpt_response": true,
        "query": "SELECT ?country1 ?country1Label ?rgb ?country2 ?country2Label WHERE {\n{\nSELECT ?landlocked1 ?coastal ?landlocked2 WHERE {\n?landlocked1 wdt:P31 wd:Q3624078, wd:Q123480;\nwdt:P47 ?coastal.\n?coastal wdt:P31 wd:Q3624078.\nMINUS { ?coastal wdt:P31 wd:Q123480. }\n?coastal wdt:P47 ?landlocked2.\nFILTER(?landlocked2 != ?landlocked1)\n?landlocked2 wdt:P31 wd:Q3624078, wd:Q123480.\n}\n}\nVALUES ?switch { true false }\nBIND(IF(?switch, ?landlocked1, ?coastal) AS ?country1)\nBIND(IF(?switch, ?coastal, ?landlocked2) AS ?country2)\nBIND(IF(?switch, \"FFBB33\", \"0033CC\") AS ?rgb)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple subqueries, nested filters and conditional bindings",
        "complexity": "complex"
    },
    {
        "id": "1058",
        "valid_gpt_response": true,
        "query": "SELECT ?yearOfBirth (SUM(?count) AS ?total) WHERE {\n{\nSELECT ?dateOfBirth (COUNT(?item) AS ?count) WHERE {\nVALUES ?precision { \"9\"^^xsd:integer \"10\"^^xsd:integer \"11\"^^xsd:integer }\n?item wdt:P31 wd:Q5;\np:P569/psv:P569 [\nwikibase:timeValue ?dateOfBirth;\nwikibase:timePrecision ?precision\n].\n}\nGROUP BY ?dateOfBirth\n}\nBIND(YEAR(?dateOfBirth) AS ?yearOfBirth)\n}\nGROUP BY ?yearOfBirth\nORDER BY DESC(?total)\nLIMIT 100",
        "complexity_description": "Nested subqueries, aggregation, and grouping",
        "complexity": "complex"
    },
    {
        "id": "1059",
        "valid_gpt_response": true,
        "query": "SELECT ?phare ?phareLabel ?coord\nWHERE {\n?phare wdt:P31/wdt:P279* wd:Q39715 ; wdt:P625 ?coord .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}",
        "complexity_description": "Simple query with 2 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "1060",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?country ?countryLabel ?number_of_out_of_school_chidren ?date ?methodLabel\nWHERE {\n?country wdt:P31 wd:Q6256 .\n?country p:P2573 ?out_of_school_chidren .\n?out_of_school_chidren ps:P2573 ?number_of_out_of_school_chidren .\n?out_of_school_chidren pq:P585 ?date .\n?out_of_school_chidren pq:P459 ?method .\nFILTER (year(?date) = 2013)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC (?number_of_out_of_school_chidren)",
        "complexity_description": "Multiple joins, filter and service",
        "complexity": "medium"
    },
    {
        "id": "1061",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?dateOfDeath (COUNT(DISTINCT ?sitelink) AS ?sites) WHERE {\n?item wdt:P31 wd:Q5.\n?item (wdt:P106/wdt:P279*) wd:Q214917.\n?item wdt:P570 ?dateOfDeath.\n?sitelink schema:about ?item.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\nFILTER((?dateOfDeath >= \"1947-01-01T00:00:00\"^^xsd:dateTime) && (?dateOfDeath <= \"1947-12-31T23:59:59\"^^xsd:dateTime))\n}\nGROUP BY ?item ?itemLabel ?dateOfDeath\nORDER BY DESC(?sites)",
        "complexity_description": "Multiple filters, joins and aggregations",
        "complexity": "complex"
    },
    {
        "id": "1062",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?start ?end ?durationInDays WHERE {\n?item wdt:P31/wdt:P279* wd:Q1656682;\np:P580/psv:P580 [ wikibase:timeValue ?start; wikibase:timePrecision ?startPrecision ];\np:P582/psv:P582 [ wikibase:timeValue ?end; wikibase:timePrecision ?endPrecision ].\nFILTER(\"2017-01-01\"^^xsd:dateTime <= ?start && ?start < \"2018-01-01\"^^xsd:dateTime)\nFILTER(\"2018-01-01\"^^xsd:dateTime <= ?end && ?end < \"2019-01-01\"^^xsd:dateTime)\nFILTER(?startPrecision >= 10 && ?endPrecision >= 10) # precision 10 = month\nBIND(?end - ?start AS ?durationInDays)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr\". }\n}\nORDER BY ASC(?durationInDays)",
        "complexity_description": "Multiple filters and property paths",
        "complexity": "medium"
    },
    {
        "id": "1063",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?image\nWHERE\n{\n?item wdt:P31 wd:Q1439691.\nOPTIONAL {\n?item wdt:P18 ?image.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Simple query with one triple pattern and an optional block",
        "complexity": "simple"
    },
    {
        "id": "1064",
        "valid_gpt_response": true,
        "query": "SELECT ?label (COUNT(?street) AS ?count) (GROUP_CONCAT(?street) AS ?streets) WHERE {\n?street wdt:P31/wdt:P279* wd:Q79007;\nwdt:P17 wd:Q183;\nwdt:P131+ wd:Q64. hint:Prior hint:gearing \"forward\".\n?street rdfs:label ?label.\nFILTER(LANG(?label) = \"de\")\n}\nGROUP BY ?label\nHAVING(?count > 1)",
        "complexity_description": "Multiple filters, grouping and aggregation",
        "complexity": "complex"
    },
    {
        "id": "1065",
        "valid_gpt_response": true,
        "query": "SELECT ?year (AVG(?durationInMinutes) AS ?avgDurationInMinutes) ?genreLabel WHERE {\n{\nSELECT ?genre WHERE {\n?film wdt:P31/wdt:P279* wd:Q11424;\nwdt:P136 ?genre.\n}\nGROUP BY ?genre\nORDER BY DESC(COUNT(DISTINCT ?film))\nLIMIT 25\n}\n?film wdt:P31/wdt:P279* wd:Q11424;\nwdt:P577 ?date;\np:P2047/psn:P2047/wikibase:quantityAmount ?durationInSeconds;\nwdt:P136 ?genre.\nFILTER(?durationInMinutes < 60*24) # I take the editorial liberty to exclude these films (some stupidly long documentaries), because they just absurdly skew the averages\nBIND(STR(YEAR(?date)) AS ?year)\nBIND(?durationInSeconds/60 AS ?durationInMinutes)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?year ?genreLabel\nHAVING(COUNT(DISTINCT ?film) >= 10)",
        "complexity_description": "Multiple subqueries, grouping, filtering, and binding",
        "complexity": "complex"
    },
    {
        "id": "1066",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemDescription ?republican ?republicanLabel WHERE {\n?republican wdt:P102 wd:Q29468.\n?item wdt:P61 ?republican.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "1067",
        "valid_gpt_response": true,
        "query": "SELECT\n(COUNT(?page) AS ?count) ?person ?personLabel\nWITH {\nSELECT DISTINCT ?person WHERE {\nhint:Query hint:optimizer \"None\".\n?person wdt:P569 ?birthdate .\nBIND(MONTH(?birthdate) AS ?month)\nFILTER (?month = 1)\n?person p:P569/psv:P569 ?timenode .\n?timenode wikibase:timePrecision 11 .\nVALUES ?year { 1956 1960 1964 1968 1972 1976 1980 1984 1988 1992 1996 2004 2008 }\nBIND(YEAR(?birthdate) AS ?year)\n}\nLIMIT 1000000\n} AS %persons\nWHERE {\nINCLUDE %persons\n?page schema:about ?person .\n?person wdt:P31 wd:Q5 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?person ?personLabel\nORDER BY DESC(?count)\nLIMIT 200",
        "complexity_description": "Multiple subqueries, filters, and bindings with grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "1068",
        "valid_gpt_response": true,
        "query": "SELECT ?country ?countryLabel WITH {\nSELECT DISTINCT ?country WHERE {\n?river wdt:P31/wdt:P279* wd:Q4022;\nwdt:P17 ?country.\n}\n} AS %countriesWithRivers WHERE {\n?country wdt:P31 wd:Q160016.\nMINUS { INCLUDE %countriesWithRivers. }\nMINUS { ?country wdt:P31/wdt:P279* wd:Q19953632. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?countryLabel",
        "complexity_description": "Multiple subqueries, MINUS and SERVICE clauses",
        "complexity": "complex"
    },
    {
        "id": "1069",
        "valid_gpt_response": true,
        "query": "select ?books ?booksLabel ?date ?image WHERE\n{\n?books wdt:P21 wd:Q6581072 ;\nwdt:P106 wd:Q2095549 ;\nwdt:P569 ?date FILTER (YEAR(?date)<1900) .\nOPTIONAL {?books wdt:P18 ?image}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, fr, de\". }\n}",
        "complexity_description": "Multiple filters and optional clause",
        "complexity": "medium"
    },
    {
        "id": "1070",
        "valid_gpt_response": true,
        "query": "SELECT ?himalaista ?himalaistaLabel ?data ?plecLabel ?ilustracja\nWHERE\n{\n?himalaista wdt:P20 wd:Q43512 ;\nwdt:P570 ?data ;\nwdt:P21 ?plec .\nOPTIONAL {?himalaista wdt:P18 ?ilustracja .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1071",
        "valid_gpt_response": true,
        "query": "select ?books ?booksLabel ?date ?coord ?image WHERE\n{\n?books wdt:P31 wd:Q210112 ;\nwdt:P625 ?coord .\nOPTIONAL {?books wdt:P571 ?date .}\nOPTIONAL {?books wdt:P18|wdt:P154 ?image}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, fr, de\". }\n}",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "1072",
        "valid_gpt_response": true,
        "query": "SELECT ?language ?languageLabel (COUNT(?writingSystem) AS ?count) (GROUP_CONCAT(?writingSystemLabel; separator = \", \") AS ?writingSystems) WITH {\nSELECT ?language WHERE {\n?language p:P282/ps:P282 ?writingSystem.\n}\nGROUP BY ?language\nHAVING(COUNT(?writingSystem) > 1)\n} AS %languages WHERE {\nINCLUDE %languages.\n?language p:P282/ps:P282 ?writingSystem.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?language rdfs:label ?languageLabel.\n?writingSystem rdfs:label ?writingSystemLabel.\n}\n}\nGROUP BY ?language ?languageLabel\nHAVING(?count > 1)\nORDER BY DESC(?count) ASC(?languageLabel)",
        "complexity_description": "Multiple subqueries, grouping, and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "1073",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?pic ?linkTo\nWHERE\n{\nSERVICE gas:service {\ngas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.SSSP\" ;\ngas:in wd:Q14001 ;\ngas:traversalDirection \"Reverse\" ;\ngas:out ?item ;\ngas:out1 ?depth ;\ngas:maxIterations 4 ;\ngas:linkType wdt:P279 .\n}\nOPTIONAL { ?item wdt:P279 ?linkTo }\nOPTIONAL { ?item wdt:P18 ?pic }\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Multiple services, optional patterns, and graph traversal",
        "complexity": "complex"
    },
    {
        "id": "1074",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?actor ?actorLabel ?characterLabel WHERE {\n?actor wdt:P31 wd:Q5;\nwdt:P21 wd:Q6581097;\nwdt:P569 ?dob.\n?movie1 wdt:P31/wdt:P279* wd:Q11424;\nwdt:P179 ?trilogy;\np:P161 [\nps:P161 ?actor;\npq:P453 ?character\n];\nwdt:P577 ?movie1Publication.\n?trilogy wdt:P31/wdt:P279* wd:Q13593818.\nFILTER(?dob + \"P20Y\"^^xsd:duration <= ?movie1Publication && ?movie1Publication < ?dob + \"P30Y\"^^xsd:duration)\n?movie2 wdt:P31/wdt:P279* wd:Q11424;\np:P161 [\nps:P161 ?actor;\npq:P453 ?character\n];\nwdt:P577 ?movie2Publication.\nFILTER(?movie1Publication + \"P40Y\"^^xsd:duration < ?movie2Publication)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple filters, multiple services, and complex property paths",
        "complexity": "complex"
    },
    {
        "id": "1075",
        "valid_gpt_response": true,
        "query": "SELECT ?band ?bandLabel (AVG(?age) AS ?avgAge) WHERE {\n?band wdt:P31/wdt:P279* wd:Q215380 .\n?band (p:P740/ps:P740/p:P17/ps:P17)|(p:P495/ps:P495) wd:Q145 . # country of inception / country of origin; Q145 is UK\n?band p:P527 ?ms .\n?ms ps:P527 ?member .\nFILTER NOT EXISTS { ?ms pq:P582 [] } .\n?member p:P569/ps:P569 ?dob .\nBIND (YEAR(NOW()) - YEAR(?dob) AS ?age)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?band ?bandLabel\nHAVING (AVG(?age) >= 70 && COUNT(?age) > 1)\nORDER BY DESC(?avgAge)",
        "complexity_description": "Multiple filters, subqueries, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "1076",
        "valid_gpt_response": true,
        "query": "SELECT ?movie ?movieLabel ?narrative_location ?narrative_locationLabel ?coordinates ?company WHERE {\n?movie wdt:P840 ?narrative_location ;\nwdt:P31 wd:Q29168811 ;\nwdt:P272 ?company .\n?company wdt:P127* wd:Q7414 .\n?narrative_location wdt:P625 ?coordinates .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, filters and service call",
        "complexity": "complex"
    },
    {
        "id": "1077",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?subjectLabel ?coord ?image ?height ?subject WHERE {\n?subject wdt:P31/wdt:P279* wd:Q41176 .\n?subject wdt:P2048 ?height FILTER (?height > 300)\nOPTIONAL {?subject wdt:P729 ?time .}\nOPTIONAL {?subject wdt:P18 ?image .}\nOPTIONAL {?subject wdt:P625 ?coord .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, fr\" }\n}",
        "complexity_description": "Multiple filters and optional patterns",
        "complexity": "medium"
    },
    {
        "id": "1078",
        "valid_gpt_response": true,
        "query": "SELECT ?year (COUNT(?person) AS ?count)\nWHERE\n{\nwd:Q3044 wdt:P40* ?person.\n?person wdt:P569 ?DoB .\nBIND (year(?DoB) as ?year )\nFILTER ( ?year > 700 )\n}\nGROUP BY ?year",
        "complexity_description": "Filter, Bind, Group By",
        "complexity": "medium"
    },
    {
        "id": "1079",
        "valid_gpt_response": true,
        "query": "SELECT ?ct ?item ?itemLabel ?itemDescription ?bezirkLabel ?ortsteilLabel ?addressLabel ?image WHERE {\n?item wdt:P131+ wd:Q64.\n?item wdt:P31 wd:Q41253.\n?item wdt:P18 ?image .\nOPTIONAL { ?item wdt:P4129 ?ct. }\nOPTIONAL { ?item wdt:P131 ?bezirk . }\nOPTIONAL { ?item wdt:P276 ?ortsteil . }\nOPTIONAL { ?item wdt:P969 ?address . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"de,de\". }\n}",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "1080",
        "valid_gpt_response": true,
        "query": "SELECT ?object ?objectLabel (COUNT(?item) AS ?count)\nWHERE\n{\n?item wdt:P361 wd:Q13915.\n?item wdt:P180 ?object .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?object ?objectLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, service call and aggregation",
        "complexity": "medium"
    },
    {
        "id": "1081",
        "valid_gpt_response": true,
        "query": "SELECT ?awardeeLabel ?image WHERE {\n?awardee wdt:P166 wd:Q55200.\n?awardee wdt:P18 ?image.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "1082",
        "valid_gpt_response": true,
        "query": "SELECT ?movie ?movieLabel ?place ?placeLabel ?coord ?image\nWHERE\n{\n?movie wdt:P31 wd:Q11424 .\n?movie wdt:P915 ?place .\n?place wdt:P17 wd:Q40 .\n?place wdt:P625 ?coord .\nOPTIONAL { ?movie wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"de\". }\n}",
        "complexity_description": "Multiple joins, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1083",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?start ?end ?daysThere ?daysGone ?dateWhereDaysThereEqualsDaysGone WHERE {\n?item wdt:P571 ?start;\nwdt:P576 ?end.\nBIND(?end - ?start AS ?daysThere)\nBIND(FLOOR(NOW() - ?end) AS ?daysGone)\nFILTER(?daysThere > 0) # T186452\nBIND(?end + STRDT(CONCAT(\"P\", xsd:string(xsd:integer(?daysThere)), \"D\"), xsd:duration) AS ?dateWhereDaysThereEqualsDaysGone)\nFILTER(YEAR(?dateWhereDaysThereEqualsDaysGone) = YEAR(NOW()) && MONTH(?dateWhereDaysThereEqualsDaysGone) = MONTH(NOW()))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?dateWhereDaysThereEqualsDaysGone",
        "complexity_description": "Multiple filters, bindings and service calls",
        "complexity": "complex"
    },
    {
        "id": "1084",
        "valid_gpt_response": true,
        "query": "SELECT ?mp ?mpLabel ?person ?personLabel ?born ?died ?typeLabel WHERE {\n?mp p:P39 ?positionStatement .\n?positionStatement ps:P39 wd:Q30524710 . # this person is a member of the current parliament\n{ ?mp (wdt:P25|wdt:P22)* ?person . } # mp's mother or father, or their mother or father, and so on\nfilter not exists { ?person wdt:P31 wd:Q5 } . # the ancestor is not \"a human\"\n?person wdt:P31 ?type .\nOPTIONAL { ?person wdt:P569 ?born } .\nOPTIONAL { ?person wdt:P570 ?died } .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple optional patterns, recursive property paths, and filters",
        "complexity": "complex"
    },
    {
        "id": "1085",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?olderSibling ?olderSiblingLabel ?dateOfDeath ?youngerSiblingLabel ?startTime ?positionLabel WHERE {\n?olderSibling wdt:P31 wd:Q5;\nwdt:P569 ?dateOfBirth1;\nwdt:P570 ?dateOfDeath;\nwdt:P3373 ?youngerSibling.\n?youngerSibling wdt:P31 wd:Q5;\nwdt:P569 ?dateOfBirth2;\np:P39 [\nps:P39 ?position;\npq:P580 ?startTime\n].\nFILTER(?dateOfBirth1 < ?dateOfBirth2)\nFILTER(?dateOfDeath < ?startTime && (?startTime - \"P1M\"^^xsd:duration) < ?dateOfDeath)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ASC(?startTime - ?dateOfDeath) ?startTime",
        "complexity_description": "Multiple filters, joins and subqueries",
        "complexity": "complex"
    },
    {
        "id": "1086",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?line ?lineLabel ?length WHERE {\n?line wdt:P361 wd:Q129612.\nOPTIONAL {\n?line wdt:P2043 ?length.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de\". }\n}\nORDER BY xsd:integer(?lineLabel) ?lineLabel",
        "complexity_description": "Optional clause, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "1087",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?districtALabel ?districtBLabel WHERE {\n?districtA wdt:P31 wd:Q261023;\nwdt:P1545 ?districtANr.\n?districtB wdt:P31 wd:Q261023;\nwdt:P1545 ?districtBNr.\n?districtA wdt:P47 ?districtB.\nFILTER NOT EXISTS {\n?line wdt:P361 wd:Q129612;\nwdt:P131 ?districtA, ?districtB.\n}\nFILTER (?districtANr < ?districtBNr)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}\nORDER BY xsd:integer(?districtANr) xsd:integer(?districtBNr)",
        "complexity_description": "Multiple filters, joins and subqueries",
        "complexity": "complex"
    },
    {
        "id": "1088",
        "valid_gpt_response": true,
        "query": "select distinct ?article ?person ?personLabel ?personDescription (floor(year(?birthdate)/100)*100 as ?layer) ?pic ?coord ?coord2 ?coord3 ?NatMus {\n{\n?person wdt:P2538 ?NatMusID.\n?person wdt:P569 ?birthdate .\nOPTIONAL{ ?person wdt:P18 ?pic .} # If we have an illustration\nOPTIONAL{ ?person wdt:P1442 ?picGrave .} # If we have a picture of the grave\nBIND (URI(CONCAT(\"http://collection.nationalmuseum.se/eMuseumPlus?service=ExternalInterface&module=artist&objectId=\",?NatMusID)) AS ?NatMus)\nOPTIONAL { ?person wdt:P19 ?loc . # P19 Place of Birth\n?loc wdt:P625 ?coord } . # Get coordinates from Place of Birth\nOPTIONAL { ?person wdt:P20 ?loc2 . # P19 Place of Death\n?loc2 wdt:P625 ?coord2 } . # Get coordinates from Place of Death\nOPTIONAL { ?person wdt:P119 ?loc3 . # P19 Place of Burial\n?loc3 wdt:P625 ?coord3 } . # Get coordinates from Place of Burial\nOPTIONAL {\n?article schema:about ?person .\n?article schema:inLanguage \"sv\" .\n?article schema:isPartOf <https://sv.wikipedia.org/> .\n}\nOPTIONAL {\n?article schema:about ?person .\n?article schema:inLanguage \"en\" .\n?article schema:isPartOf <https://sv.wikipedia.org/> .\n}\nOPTIONAL { ?person wdt:P106 ?group .} # Occupation in Layer\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"sv\",\"en\"}\n}\nOrder by ?personLabel",
        "complexity_description": "Multiple optional patterns, multiple languages, and complex filtering",
        "complexity": "complex"
    },
    {
        "id": "1089",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?author ?authorLabel ?image ?date WHERE {\n?author wdt:P137 wd:Q849730 ;\nwdt:P619 ?date .\nOPTIONAL {?author wdt:P18 ?image .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"de, en, fr\" }\n}",
        "complexity_description": "Optional clause and service query",
        "complexity": "medium"
    },
    {
        "id": "1090",
        "valid_gpt_response": true,
        "query": "SELECT ?country ?countryLabel (COUNT(?city) AS ?count)\nWHERE {\n?city wdt:P31 wd:Q484170 ; wdt:P190/wdt:P17 ?country .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}\nGROUP BY ?country ?countryLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, service call, group by and order by",
        "complexity": "medium"
    },
    {
        "id": "1091",
        "valid_gpt_response": true,
        "query": "SELECT (str(?year) AS ?year) (COUNT(?person) AS ?count)\nWHERE\n{\n?person wdt:P1344 wd:Q9680 ; wdt:P1532 wd:Q142 ; wdt:P569 ?DOB .\nBIND ( year(?DOB) as ?year )\n}\nGROUP BY ?year\nORDER BY ?year",
        "complexity_description": "Uses BIND, GROUP BY and ORDER BY",
        "complexity": "medium"
    },
    {
        "id": "1092",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?language ?languageLabel ?layer ?coords ?image\nWHERE {\n?person wdt:P19 ?place . # People born in any place\n?place wdt:P17 wd:Q40 . # The place should be in Austria\n?person wdt:P1412 ?language . # Any language the person has communicated in\n?place wdt:P625 ?coords . # Give the coordinates of that place\nFILTER ( ?language != wd:Q188 ) # Filter out German results\nOPTIONAL { ?person wdt:P18 ?image } # Check if person has an image\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"de\" .\n?language rdfs:label ?layer .\n?person rdfs:label ?personLabel .\n?language rdfs:label ?languageLabel .\n}\n}",
        "complexity_description": "Multiple filters, optional clause and service call",
        "complexity": "complex"
    },
    {
        "id": "1093",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?personLabel (CONCAT(\"https://twitter.com/\",?twitterName) AS ?twitterlink) ?pic\nWHERE {\n?person wdt:P2002 ?twitterName ;\nwdt:P106 ?occupation .\nOPTIONAL { ?person wdt:P18 ?pic . }\n?occupation wdt:P279* wd:Q864503 . # all subclasses of biologists\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\"\n}\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1094",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?app ?appLabel ?osLabel ?licLabel ?image WHERE {\n?app wdt:P31 wd:Q498267.\n?app wdt:P306 ?os.\n?app wdt:P275 ?lic.\nOPTIONAL {?app wdt:P154 ?image.}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple triple patterns, optional block and service call",
        "complexity": "medium"
    },
    {
        "id": "1095",
        "valid_gpt_response": true,
        "query": "SELECT ?mpLabel ?ancestorLabel\nWHERE {\n?mp wdt:P39 wd:Q16707842 ; #subject is/was a UK MP\nwdt:P21 wd:Q6581072 ; #subject is female\n(wdt:P25|wdt:P22)+ ?ancestor . #find subject's ancestors\n?ancestor wdt:P39 wd:Q16707842 . #ancestor was/is a UK MP\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Multiple triple patterns, property paths and service call",
        "complexity": "medium"
    },
    {
        "id": "1096",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?erdosNumber\nWHERE\n{\n?person wdt:P2021 ?erdosNumber.\n?person wdt:P21 wd:Q6581072.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ASC(?erdosNumber)",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "1097",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?class1 ?class1Label ?physClass ?physClassLabel ?absClass ?absClassLabel\nWITH {\nSELECT DISTINCT ?class WHERE {\n?class wdt:P279+ wd:Q223557 .\n# hint:Prior hint:gearing \"reverse\".\n} LIMIT 40000\n} AS %physicalClasses\nWITH {\nSELECT DISTINCT ?class WHERE {\n?class wdt:P279+ wd:Q7184903 .\n# hint:Prior hint:gearing \"reverse\".\n} LIMIT 40000\n} AS %abstractClasses\nWITH {\nSELECT DISTINCT ?class WHERE {\nINCLUDE %physicalClasses .\nINCLUDE %abstractClasses .\n}\n} AS %commonClasses\nWITH {\nSELECT DISTINCT ?class WHERE {\nINCLUDE %commonClasses.\nMINUS {\n{ SELECT (?class AS ?parentClass) WHERE { INCLUDE %commonClasses. } }\n?class wdt:P279 ?parentClass.\n}\n}\n} AS %reducedClasses\nWHERE {\nINCLUDE %reducedClasses .\n?class wdt:P279* ?class1 .\nhint:Prior hint:gearing \"forward\".\n?class1 wdt:P279 ?absClass .\n?absClass wdt:P279* wd:Q7184903 .\nhint:Prior hint:gearing \"forward\".\nOPTIONAL {\n?absClass wdt:P279* wd:Q223557 .\nhint:Prior hint:gearing \"forward\".\nBIND (1 AS ?no_go) .\n}\nFILTER (!bound(?no_go)) .\n?class1 wdt:P279 ?physClass .\n?physClass wdt:P279* wd:Q223557 .\nhint:Prior hint:gearing \"forward\".\n# OPTIONAL {\n# ?physClass wdt:P279* wd:Q7184903 .\n# hint:Prior hint:gearing \"forward\".\n# BIND (1 AS ?no_go2) .\n# }\n# FILTER (!bound(?no_go2)) .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?absClassLabel",
        "complexity_description": "Multiple WITH clauses, nested queries, and complex filtering",
        "complexity": "complex"
    },
    {
        "id": "1098",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?itemLabel WHERE {\n?item wdt:P31 wd:Q6256 ;\nwdt:P2046 ?area ;\np:P47 ?statement .\n?statement ps:P47 ?y ;\npq:P805 ?border .\n?border wdt:P31 wd:Q15104814 .\nFILTER NOT EXISTS {\n?item p:P47 ?s .\n?s ps:P47 ?x ;\npq:P805 ?b .\n?b wdt:P31 wd:Q15104814 .\n?x wdt:P2046 ?area2 .\nFILTER ( ?area2 < ?area )\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple filters, subqueries and joins",
        "complexity": "complex"
    },
    {
        "id": "1099",
        "valid_gpt_response": true,
        "query": "SELECT ?actor ?actorLabel ?actorDescription ?count WITH {\nSELECT ?actor (COUNT(DISTINCT ?film) AS ?count) WHERE {\n?film wdt:P31 wd:Q11424;\nwdt:P161 ?actor.\nMINUS { ?actor wdt:P18 ?image. }\nMINUS { ?actor wdt:P570 ?dateOfDeath. }\n}\nGROUP BY ?actor\nHAVING(?count >= 50)\n} AS %results WHERE {\nINCLUDE %results.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, MINUS clauses, and GROUP BY/HAVING",
        "complexity": "complex"
    },
    {
        "id": "1100",
        "valid_gpt_response": true,
        "query": "SELECT ?species ?speciesLabel WHERE {\n?species wdt:P31/wdt:P279* wd:Q2537344.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY LCASE(?speciesLabel)",
        "complexity_description": "Simple query with property path and service call",
        "complexity": "simple"
    },
    {
        "id": "1101",
        "valid_gpt_response": true,
        "query": "SELECT ?topic ?geoloc ?paper WHERE {\n?paper wdt:P921 ?topic;\nwdt:P31 wd:Q13442814 .\n?topic wdt:P625 ?geoloc.\n} GROUP BY ?topic ?geoloc ?paper",
        "complexity_description": "Multiple triple patterns, grouping",
        "complexity": "medium"
    },
    {
        "id": "1102",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?author ?authorLabel ?image ?date ?coord WHERE {\n?author wdt:P106/wdt:P279* wd:Q901 .\n?author wdt:P570 ?date .\n?author wdt:P509 wd:Q468455 .\nOPTIONAL {?author wdt:P18 ?image .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, fr, de, es, it, cz\" }\n}",
        "complexity_description": "Multiple triple patterns with optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1103",
        "valid_gpt_response": true,
        "query": "SELECT ?personLabel ?schoolLabel ?image\nWHERE {\n?person wdt:P463 wd:Q270794.\n?person wdt:P21 wd:Q6581072;\np:P69 [ps:P69 ?school; pq:P512 wd:Q752297].\nOPTIONAL {?person wdt:P18 ?image.}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1104",
        "valid_gpt_response": true,
        "query": "SELECT ?actor ?actorLabel ?oscarEditionLabel (YEAR(?date) as ?year) ?film1Label ?film2Label ?film3Label\nWHERE\n{\n?film1 wdt:P161 ?actor; p:P1411 ?bestPic1Statement. ?bestPic1Statement ps:P1411 wd:Q102427; pq:P805 ?oscarEdition.\n?film2 wdt:P161 ?actor; p:P1411 ?bestPic2Statement. ?bestPic2Statement ps:P1411 wd:Q102427; pq:P805 ?oscarEdition.\n?film3 wdt:P161 ?actor; p:P1411 ?bestPic3Statement. ?bestPic3Statement ps:P1411 wd:Q102427; pq:P805 ?oscarEdition.\n?oscarEdition wdt:P585 ?date;\nFILTER(STR(?film1) < STR(?film2)).\nFILTER(STR(?film2) < STR(?film3)).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?year",
        "complexity_description": "Multiple joins, filters and subqueries",
        "complexity": "complex"
    },
    {
        "id": "1105",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?class ?classLabel ?aat_higher ?aat_higherLabel ?indirect WITH {\nSELECT ?item WHERE {\n# ?item (p:P1014/pq:P361)* wd:Q1065579 . very very slow\nwd:Q1065579 (^pq:P361/^p:P1014)* ?item . # much quicker\n}\n} AS %costume_tree\nWHERE {\nINCLUDE %costume_tree .\n?item p:P1014/pq:P361 ?aat_higher .\nOPTIONAL {\n?item wdt:P279+ ?aat_higher .\nhint:Prior hint:gearing \"reverse\" .\nBIND(1 AS ?subclassed) .\n}\nFILTER (!bound(?subclassed)) .\nOPTIONAL {\n?item wdt:P279 ?class .\n}\nOPTIONAL {\n?item p:P1014/pq:P1480 wd:Q50095342 .\nBIND (\"Y\" AS ?indirect) .\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?aat_higherLabel ?indirect ?itemLabel",
        "complexity_description": "Multiple subqueries, optional patterns, and filters",
        "complexity": "complex"
    },
    {
        "id": "1106",
        "valid_gpt_response": true,
        "query": "SELECT ?astronautLabel ?timeinspace ?coordinates WHERE {\n?astronaut wdt:P31 wd:Q5 ;\nwdt:P19 ?birthPlace ;\nwdt:P2873 ?timeinspace .\n?birthPlace wdt:P625 ?coordinates .\nFILTER (?timeinspace >0)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, filter and service",
        "complexity": "medium"
    },
    {
        "id": "1107",
        "valid_gpt_response": true,
        "query": "SELECT ?flag ?flagLabel ?image WHERE {\n?flag wdt:P31/wdt:P279* wd:Q186516;\np:P180 [\nps:P180 wd:Q3173323;\npq:P518|pq:P1354 wd:Q1559605\n].\nOPTIONAL { ?flag wdt:P18 ?image. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "complex"
    },
    {
        "id": "1108",
        "valid_gpt_response": true,
        "query": "SELECT ?countryLabel (COUNT(DISTINCT ?item) AS ?count)\nWHERE {\n?item wdt:P31/wdt:P279* wd:Q21480300 ; wdt:P585 ?date ; wdt:P17 ?country .\nFILTER (?date >= \"1990-01-01\"^^xsd:dateTime) .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nGROUP BY ?countryLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple filters, service call and grouping",
        "complexity": "medium"
    },
    {
        "id": "1109",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?value\n{\n?item wdt:P4896 ?value .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,en\" }\n}\nLIMIT 200",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "1110",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?author ?authorLabel ?image ?date WHERE {\n?author wdt:P31 wd:Q9143 .\n?author wdt:P571 ?date .\nOPTIONAL {?author wdt:P18 ?image .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"de, en, fr, es, it, cz\" }\n}",
        "complexity_description": "Optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1111",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?dblp ?dob WHERE {\n?person wdt:P106 ?occupation.\n?occupation wdt:P279* wd:Q82594.\nOPTIONAL { ?person wdt:P2456 ?dblp. }\n?person wdt:P569 ?dob.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\norder by ?dob",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1112",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?countryLabel ?linkCount\nWHERE {\n?person wdt:P31 wd:Q5 .\n?person wdt:P21 wd:Q6581072 .\n?person wikibase:sitelinks ?linkCount .\n?person wdt:P19 ?birthPlace . # born in a place...\n?birthPlace wdt:P17 ?country . # which is in a country that is...\n?country wdt:P361 wd:Q12585 . # part of Latin America\nMINUS { # remove results with a Spanish wikipedia article\n?article schema:about ?person .\n?article schema:isPartOf <https://es.wikipedia.org/> .\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC (?linkCount)",
        "complexity_description": "Multiple joins, minus clause and service call",
        "complexity": "complex"
    },
    {
        "id": "1113",
        "valid_gpt_response": true,
        "query": "SELECT ?mayor ?mayorLabel ?end ?date (SAMPLE(?photo) AS ?pic)\nWHERE {\nwd:Q1718 p:P6 ?mayorStatement .\n?mayorStatement ps:P6 ?mayor ;\npq:P580 ?date .\nOPTIONAL { ?mayorStatement ps:P6 ?mayor ; pq:P582 ?end . }\nOPTIONAL { ?mayor wdt:P18 ?photo . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}GROUP BY ?mayor ?mayorLabel ?date ?end\nORDER BY ?date",
        "complexity_description": "Multiple optional patterns, service call and group by",
        "complexity": "complex"
    },
    {
        "id": "1114",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\n?item p:P1014/pq:P1810 ?name .\nOPTIONAL {?item wdt:P18 ?pic} .\nFILTER(STRENDS(?name, 'us')) .\n}",
        "complexity_description": "Optional clause and filter",
        "complexity": "medium"
    },
    {
        "id": "1115",
        "valid_gpt_response": true,
        "query": "SELECT ?woman ?womanLabel ?womanDescription ?statements\nWITH {\nSELECT ?woman ?statements WHERE {\n?woman wdt:P31 wd:Q5;\nwdt:P21 wd:Q6581072.\nMINUS {\n?article schema:isPartOf [ wikibase:wikiGroup \"wikipedia\" ];\nschema:about ?woman.\n}\n?woman wikibase:statements ?statements. hint:Prior hint:rangeSafe true.\n}\nORDER BY DESC(?statements)\nLIMIT 1000\n} AS %women WHERE {\nINCLUDE %women.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?statements)",
        "complexity_description": "Multiple subqueries, MINUS clause, and SERVICE keyword usage",
        "complexity": "complex"
    },
    {
        "id": "1116",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?wikiProject ?wikiProjectLabel ?subjectLabel ?wiki ?title ?wikiPage WHERE {\n?wikiProject wdt:P31/wdt:P279* wd:Q21025364;\nwdt:P921 ?subject.\n?subject wdt:P1269? wd:Q467.\n?wikiPage schema:isPartOf ?wiki;\nschema:name ?title;\nschema:about ?wikiProject.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?subjectLabel ?wikiProjectLabel ?wiki",
        "complexity_description": "Multiple joins, filters and service calls",
        "complexity": "complex"
    },
    {
        "id": "1117",
        "valid_gpt_response": true,
        "query": "SELECT ?software ?softwareLabel ?fsf ?hub ?fram ?logo WHERE {\n?software (wdt:P31/wdt:P279*) wd:Q7397.\n?software wdt:P361 wd:Q20712193.\nOPTIONAL {?software wdt:P2537 ?fsf.}\nOPTIONAL {?software wdt:P1972 ?hub.}\nOPTIONAL {?software wdt:P4107 ?fram.}\nOPTIONAL {?software wdt:P154 ?logo.}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "1118",
        "valid_gpt_response": true,
        "query": "SELECT ?film ?filmLabel ?filmDescription (COUNT(DISTINCT ?headOfGovernmentLabel) AS ?count) (GROUP_CONCAT(DISTINCT CONCAT(?headOfGovernmentLabel, \", \"@en, ?description); separator = \"; \") AS ?headsOfGovernment) WHERE {\n?film wdt:P31/wdt:P279* wd:Q11424;\nwdt:P577 ?publicationDate;\np:P161 ?headOfGovernmentStatement.\n?headOfGovernmentStatement ps:P161 ?headOfGovernment.\nOPTIONAL { ?headOfGovernmentStatement pq:P453 ?character. ?character rdfs:label ?characterLabel. FILTER(LANG(?characterLabel) = \"en\") } # label service doesn't work for this one for some reason - perhaps the query optimizer is being stupid and moving the label service before this optional block, so that ?character isn't bound yet when the label service runs\n?headOfGovernment wdt:P31 wd:Q5;\np:P39 [\nps:P39 ?position;\npq:P580 ?startTime\n].\n?position wdt:P279+ wd:Q2285706.\nFILTER(?startTime > ?publicationDate) # *future* head of government\nFILTER NOT EXISTS {\n?headOfGovernment p:P39 [\nps:P39 ?otherPosition;\npq:P580 ?otherStartTime\n].\n?otherPosition wdt:P279+ wd:Q2285706.\nFILTER(?otherStartTime < ?publicationDate) # not already a head of government (some people held multiple \"head of government\" offices, or the same one multiple times)\n}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?film rdfs:label ?filmLabel;\nschema:description ?filmDescription.\n?headOfGovernment rdfs:label ?headOfGovernmentLabel.\n?position rdfs:label ?positionLabel.\n} hint:Prior hint:runLast false.\nBIND(IF(BOUND(?characterLabel), CONCAT(?characterLabel, \" / \"@en, ?positionLabel), ?positionLabel) AS ?description)\n}\nGROUP BY ?film ?filmLabel ?filmDescription\nHAVING(?count > 1)\nORDER BY DESC(?count) ASC(MIN(?publicationDate))",
        "complexity_description": "Multiple filters, optional blocks, and subqueries with multiple joins",
        "complexity": "complex"
    },
    {
        "id": "1119",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?communityLabel ?image ?coords WHERE {\n?item wdt:P31/wdt:P279* wd:Q164240 ;\nwdt:P17 wd:Q29 ;\nwdt:P131+ ?community .\n?community wdt:P31 wd:Q10742 .\nOPTIONAL { ?item wdt:P18 ?image . }\nOPTIONAL { ?item wdt:P625 ?coords . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple triple patterns, optional blocks and service call",
        "complexity": "medium"
    },
    {
        "id": "1120",
        "valid_gpt_response": true,
        "query": "SELECT ?era ?eraLabel (YEAR(?start_time) AS ?start) (YEAR(?end_time) AS ?end) ?namedLabel ?namedDescription WHERE {\n?era wdt:P31 wd:Q6428674; wdt:P361 wd:Q130436; # eras of the history of Japan\nwdt:P580 ?start_time.\nMINUS { ?era wdt:P2348/wdt:P361 wd:Q130436 } # exclude sub-eras\nOPTIONAL { ?era wdt:P582 ?end_time }\nOPTIONAL { ?era wdt:P138 ?named }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ?start DESC(?end)",
        "complexity_description": "Multiple filters, optional patterns and service call",
        "complexity": "complex"
    },
    {
        "id": "1121",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?label WHERE {\n?item wdt:P27 wd:Q189;\nrdfs:label ?label.\nFILTER(LANG(?label) = \"is\")\nFILTER(!REGEX(?label, \"(?:son|dottir|dottir)$\"))\n}",
        "complexity_description": "Multiple filters and regex",
        "complexity": "medium"
    },
    {
        "id": "1122",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\nwd:Q137 rdfs:label ?label1 .\nwd:Q12518 rdfs:label ?label2 .\nBIND (lang(?label1) AS ?lang)\nBIND (lang(?label2) AS ?lang)\nBIND( IF( ?label1 = ?label2, \"same\", \"different\" ) AS ?result ) .\n}",
        "complexity_description": "Multiple triple patterns with BIND and conditional expression",
        "complexity": "medium"
    },
    {
        "id": "1123",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person ?personLabel ?image ?date WHERE {\n?person wdt:P31/wdt:P279* wd:Q26540 ;\nwdt:P619 ?date .\n?person wdt:P18 ?image .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, de, ru, fr\" }\n}",
        "complexity_description": "Multiple triple patterns with service call",
        "complexity": "medium"
    },
    {
        "id": "1124",
        "valid_gpt_response": true,
        "query": "SELECT ?airport ?airportLabel ?location ?person ?personLabel ?gender WHERE {\n?airport wdt:P31/wdt:P279* wd:Q1248784;\nwdt:P625 ?location;\nwdt:P138 ?person.\n?person wdt:P31 wd:Q5.\nOPTIONAL {\n?person wdt:P21/wdt:P279* wd:Q6581072.\nBIND(\"female\"@en AS ?female)\n}\nOPTIONAL {\n?person wdt:P21/wdt:P279* wd:Q6581097.\nBIND(\"male\"@en AS ?male)\n}\nOPTIONAL {\n?person wdt:P21 ?gender.\nMINUS { ?gender wdt:P279* wd:Q6581097. }\nMINUS { ?gender wdt:P279* wd:Q6581072. }\nFILTER(!ISBLANK(?gender))\nBIND(\"other\"@en AS ?other)\n}\nBIND(COALESCE(?female, ?male, ?other, \"unknown\"@en) AS ?gender)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple optional patterns with filters and binds",
        "complexity": "complex"
    },
    {
        "id": "1125",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?titelDeutsch\nWHERE\n{\n?item wdt:P31/wdt:P279* wd:Q11424;\nrdfs:label ?titelDeutsch;\nFILTER (lang(?titelDeutsch) = \"de\") .\nFILTER(STRENDS(?titelDeutsch,\"antwortet nicht\")).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple filters, service call and property path",
        "complexity": "medium"
    },
    {
        "id": "1126",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?software ?softwareLabel\nWHERE {\n?person wdt:P485 wd:Q964035 .\n?software wdt:P178 ?person.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "1127",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?eponym ?eponymLabel (count(?item) AS ?count) WHERE {\n?item wdt:P31/wdt:P279* wd:Q6465 ;\nwdt:P138 ?eponym .\nFILTER NOT EXISTS { ?item wdt:P576 ?x }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}\nGROUP BY ?eponym ?eponymLabel\nHAVING (?count >= 2)\nORDER BY DESC(?count) ?eponymLabel",
        "complexity_description": "Multiple triple patterns, filter, service, group by, having and order by",
        "complexity": "complex"
    },
    {
        "id": "1128",
        "valid_gpt_response": true,
        "query": "SELECT ?itemLabel (COUNT(?item) as ?count) WHERE {\n?item wdt:P31 wd:Q3305213 .\n?item rdfs:label ?itemLabel .\nFILTER (lang(?itemLabel)=\"en\")\n} GROUP BY ?itemLabel\nORDER BY DESC(?count)",
        "complexity_description": "Filter, group by and order by",
        "complexity": "medium"
    },
    {
        "id": "1129",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?t ?value ?valueLabel ?rrLabel ?rr (SAMPLE(?image) as ?img)\nWHERE\n{\nVALUES ?person {wd:Q76480}\n{?person wdt:P570 ?death .\n?person ?prop ?t FILTER (datatype(?t)=xsd:dateTime) FILTER (?t <= ?death) .\n?value wikibase:directClaim ?prop. }\nUNION\n{\n?person ?q ?statement FILTER regex (STR(?q),\"prop/P\") . #exclude P:describedBy\n?person wdt:P570 ?death .\n?statement ?p ?t FILTER regex (STR(?p), \"prop/qualifier/P\") FILTER (datatype(?t)=xsd:dateTime) FILTER (?t <= ?death).\n?statement ?r ?value FILTER regex (STR(?r),\"prop/statement/\") .\nBIND(IRI(CONCAT(CONCAT(SUBSTR(STR(?r),1,29),\"direct/\"),SUBSTR(STR(?r),40))) as ?rprop)\n?rr wikibase:directClaim ?rprop .\nOPTIONAL {?value wdt:P18 ?image}\n}\nUNION { # author of / creator of\n?value wdt:P50|wdt:P98|wdt:P655|wdt:P1773|wdt:P170|wdt:P178|wdt:P57|wdt:P161 ?person .\n?person wdt:P570 ?death .\n?person wdt:P569 ?birth .\n?value wdt:P571|wdt:P577|wdt:P580 ?t .\n#FILTER ((?t <= ?death) &&(?t >= ?birth))\nFILTER NOT EXISTS {?value wdt:P136 wd:Q7553 .}\n#FILTER NOT EXISTS {?value wdt:P629 ?x }\n#FILTER NOT EXISTS {?person wdt:P800 ?value } .\nOPTIONAL {?value wdt:P1433 ?rr .}\nOPTIONAL {?value wdt:P18 ?image .}\n}\n# UNION #Notable Works\n# {\n# ?person wdt:P800 ?rr ;\n# wdt:P570 ?death ;\n# wdt:P569 ?birth .\n# ?rr wdt:P577|wdt:P571|wdt:P1191 ?t FILTER ((?t <= ?death)&&(?t >= ?birth)).\n# OPTIONAL {?rr wdt:P18 ?image .}\n# }\nUNION #discoverer or inventor\n{\n?rr wdt:P61|wdt:P138 ?person .\n?person wdt:P570 ?death ;\nwdt:P569 ?birth .\n?rr wdt:P575|wdt:P571|wdt:P585 ?t FILTER ((?t <= ?death)&&(?t >= ?birth)).\nOPTIONAL {?rr wdt:P18 ?image .}\n}\nUNION #architect\n{\n?rr wdt:P84 ?person .\n?person wdt:P570 ?death ;\nwdt:P569 ?birth .\n?rr wdt:P571|wdt:P1619 ?t FILTER ((?t <= ?death)&&(?t >= ?birth)).\nOPTIONAL {?rr wdt:P18 ?image .}\n}\nUNION #composer\n{\n?rr wdt:P86|wdt:P138 ?person .\n?person wdt:P570 ?death ;\nwdt:P569 ?birth .\n?rr wdt:P571|wdt:P1191|wdt:P577 ?t\nFILTER ((?t <= ?death)&&(?t >= ?birth)).\nOPTIONAL {?rr wdt:P18 ?image .}\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, de, fr, de, ru\". }\n} GROUP BY ?t ?value ?rr ?rrLabel ?valueLabel\nORDER BY ?t",
        "complexity_description": "Multiple UNIONs with complex filters and regex patterns",
        "complexity": "complex"
    },
    {
        "id": "1130",
        "valid_gpt_response": true,
        "query": "SELECT\n?book ?bookLabel\n?density\n?height\n?width\n?thickness\n?weight\nWITH {\nSELECT * WHERE {\n?book wdt:P31 wd:Q3331189 ;\np:P2067 / psn:P2067 / wikibase:quantityAmount ?weight ;\np:P2048 / psn:P2048 / wikibase:quantityAmount ?height ;\np:P2049 / psn:P2049 / wikibase:quantityAmount ?width ;\np:P2610 / psn:P2610 / wikibase:quantityAmount ?thickness .\nBIND(?weight / (?height * ?width * ?thickness) AS ?density)\n}\n} AS %results\nWHERE {\nINCLUDE %results\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?density",
        "complexity_description": "Multiple joins, subqueries, and calculations",
        "complexity": "complex"
    },
    {
        "id": "1131",
        "valid_gpt_response": true,
        "query": "SELECT\n?book ?bookLabel\n?kilogram ?weight ?unit ?unitLabel\nWITH {\nSELECT * WHERE {\n?book wdt:P31 wd:Q3331189 .\n?book p:P2067 / psv:P2067 ?weight_value .\n?weight_value wikibase:quantityAmount ?weight .\n?weight_value wikibase:quantityUnit ?unit .\n?unit wdt:P2370 ?factor .\nBIND(?weight * ?factor AS ?kilogram)\n}\n} AS %results\nWHERE {\nINCLUDE %results\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?kilogram",
        "complexity_description": "Multiple subqueries, joins and calculations",
        "complexity": "complex"
    },
    {
        "id": "1132",
        "valid_gpt_response": true,
        "query": "SELECT ?station ?stationLabel ?dateOpened ?image ?location\nWHERE\n{\n?station wdt:P31 wd:Q55488 .\n?station wdt:P17 wd:Q145 .\nOPTIONAL {?station wdt:P1619 ?dateOpened .}\nOPTIONAL {?station wdt:P18 ?image .}\n?station wdt:P625 ?location .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple optional patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "1133",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?coords ?image WHERE {\n?item wdt:P31/wdt:P279* wd:Q164240 .\n{ ?item wdt:P17 wd:Q45 . } UNION\n{ ?item wdt:P17 wd:Q29 . } UNION\n{ ?item wdt:P131/wdt:P131 wd:Q12703 } UNION\n{ ?item wdt:P131/wdt:P131 wd:Q12709 }\nOPTIONAL { ?item wdt:P625 ?coords . }\nOPTIONAL { ?item wdt:P18 ?image . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" . }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple UNIONs, OPTIONAL clauses and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "1134",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?author ?authorLabel ?image ?date WHERE {\n?author wdt:P31 wd:Q209363 .\n?author wdt:P619 ?date .\nOPTIONAL {?author wdt:P18 ?image .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"de, en, fr, es, it, cz, ru\" }\n}",
        "complexity_description": "Multiple triple patterns with OPTIONAL clause and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "1135",
        "valid_gpt_response": true,
        "query": "SELECT ?phare ?phareLabel ?coord\nWHERE {\n?phare wdt:P31/wdt:P279* wd:Q39715 ; wdt:P625 ?coord .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}",
        "complexity_description": "Simple query with 2 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "1136",
        "valid_gpt_response": true,
        "query": "SELECT ?genderLabel (COUNT(DISTINCT ?article) AS ?count)\nWHERE {\n?item wdt:P31 wd:Q5 .\n?item wdt:P21 ?gender .\n?article schema:about ?item .\n?article schema:isPartOf <https://cy.wikipedia.org/>\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} GROUP BY ?genderLabel\nORDER BY DESC(?linkcount)",
        "complexity_description": "Multiple joins, subqueries and grouping",
        "complexity": "complex"
    },
    {
        "id": "1137",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?pers1 ?pers1Label ?pers2 ?pers2Label ?pers3 ?pers3Label ?pers4 ?pers4Label ?pers5 ?pers5Label ?pers6 ?pers6Label\nWHERE {\n?pers1 wdt:P157 ?pers2 .\nFILTER ( ?pers1 != ?pers2 )\n?pers2 wdt:P157 ?pers3 .\nFILTER ( ?pers1 != ?pers3 )\nFILTER ( ?pers2 != ?pers3 )\n?pers3 wdt:P157 ?pers4 .\nFILTER ( ?pers1 != ?pers4 )\nFILTER ( ?pers2 != ?pers4 )\n?pers4 wdt:P157 ?pers5 .\nFILTER ( ?pers1 != ?pers5 )\n?pers5 wdt:P157 ?pers6 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple filters and chained triple patterns",
        "complexity": "complex"
    },
    {
        "id": "1138",
        "valid_gpt_response": true,
        "query": "SELECT ?pers1 ?pers1Label ?pers2 ?pers2Label\nWHERE {\n?pers1 wdt:P31 wd:Q5.\n?pers1 wdt:P157 ?pers2 .\n?pers2 wdt:P157 ?pers1 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins and service call",
        "complexity": "medium"
    },
    {
        "id": "1139",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?website ?image WHERE {\n?item wdt:P138 wd:Q762.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nOPTIONAL { ?item wdt:P856 ?website }\nOPTIONAL { ?item wdt:P18 ?image }\n}",
        "complexity_description": "Multiple optional patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "1140",
        "valid_gpt_response": true,
        "query": "SELECT ?item1 ?item1Coords (?ing AS ?item1Label) ?item2 ?item2Coords (?ingen AS ?item2Label) (?ing AS ?layer) WITH {\nSELECT ?item1 ?ing ?item2 ?ingen WHERE {\n?item1 wdt:P31 wd:Q262166;\nrdfs:label ?ing.\nFILTER(LANG(?ing) = \"de\")\nFILTER(STRENDS(?ing, \"ing\"@de))\nBIND(CONCAT(?ing, \"en\"@de) AS ?ingen)\n?item2 rdfs:label ?ingen;\nwdt:P31 wd:Q262166.\n}\n} AS %ings WHERE {\nINCLUDE %ings.\n?item1 wdt:P625 ?item1Coords.\n?item2 wdt:P625 ?item2Coords.\n}",
        "complexity_description": "Multiple subqueries, filters and bindings",
        "complexity": "complex"
    },
    {
        "id": "1141",
        "valid_gpt_response": true,
        "query": "select distinct ?plane ?planeLabel ?producer ?producerLabel ?image ?date WHERE\n{\n?plane wdt:P136 wd:Q226730 ;\nwdt:P162 ?producer ;\nwdt:P577 ?date FILTER (YEAR(?date)<1900) .\nOPTIONAL {?plane wdt:P18 ?image .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, fr, de, it, es, pl\". }\n}",
        "complexity_description": "Multiple triple patterns with OPTIONAL and SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "1142",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?numLinks ?who WHERE {\n?item wdt:P31 wd:Q5.\n?item wdt:P27 wd:Q142. # citizen of France\n?item wikibase:sitelinks ?numLinks.\n?item schema:description ?who.\nFILTER((LANG(?who)) = \"en\")\nFILTER(?numLinks >= 5)\nMINUS {\n?article schema:about ?item.\n?article schema:isPartOf <https://fr.wikipedia.org/>. # no French Wikipedia page\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?numLinks)",
        "complexity_description": "Multiple filters, minus clause and service call",
        "complexity": "complex"
    },
    {
        "id": "1143",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coord ?layer\nWHERE\n{\n{ ?item wdt:P1459 ?building . }\nUNION { ?item wdt:P3007 ?monument . }\n?item wdt:P625 ?coord .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Union, service call, and multiple triple patterns",
        "complexity": "medium"
    },
    {
        "id": "1144",
        "valid_gpt_response": true,
        "query": "SELECT ?application ?applicationLabel (COUNT(?software) AS ?count)\nWHERE\n{\n?application wdt:P31/wdt:P279* wd:Q7397.\n?application wdt:P1547 ?software.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?application ?applicationLabel\nORDER BY DESC (?count)\nLIMIT 60",
        "complexity_description": "Multiple triple patterns, grouping and aggregation",
        "complexity": "medium"
    },
    {
        "id": "1145",
        "valid_gpt_response": true,
        "query": "select distinct ?author ?authorLabel ?image ?coord WHERE\n{\n?author wdt:P31/wdt:P279* wd:Q46169 .\n?author wdt:P625 ?coord .\nOPTIONAL {?author wdt:P18 ?image .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, fr, de, it, es, pl\". }\n}",
        "complexity_description": "Multiple triple patterns with OPTIONAL clause and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "1146",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?seriestitle ?narrativelocation ?narrativelocationLabel ?coor ?layer ?layerLabel ?episode ?episodeLabel\nWHERE\n{\n{ ?layer wdt:P31 wd:Q5398426 ; wdt:P840 ?narrativelocation }\nUNION { ?episode wdt:P31 wd:Q21191270 ; wdt:P179 ?layer ; wdt:P840 ?narrativelocation }\nUNION { ?episode wdt:P31 wd:Q506240 ; wdt:P179 ?layer ; wdt:P840 ?narrativelocation . ?layer wdt:P31 wd:Q5398426 }\n?narrativelocation wdt:P625 ?coor .\nFILTER NOT EXISTS { ?layer wdt:P136 wd:Q182415 }\nFILTER NOT EXISTS { ?layer wdt:P136 wd:Q93204 }\nOPTIONAL { ?layer wdt:P1476 ?seriestitle }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple UNIONs, FILTER NOT EXISTS, and OPTIONAL clause",
        "complexity": "complex"
    },
    {
        "id": "1147",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coord ?image ?nation ?nationLabel\nWHERE\n{\n?item wdt:P39 wd:Q27169;\nwdt:P27 ?nation;\nwdt:P19 ?place.\n?place wdt:P625 ?coord.\nOPTIONAL{ ?item wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1148",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?coords ?image WHERE {\n?item wdt:P31 wd:Q170980 ;\nwdt:P131* wd:Q220 .\nOPTIONAL { ?item wdt:P625 ?coords . }\nOPTIONAL { ?item wdt:P18 ?image . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple optional patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "1149",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?image ?placeofbirth ?coord ?gender ?dob\nWHERE {\n?item wdt:P27 wd:Q1009.\n?item wdt:P31 wd:Q5.\n?item wdt:P106/wdt:P279* wd:Q177220.\n?item wdt:P106/wdt:P279* wd:Q753110.\n?item wdt:P106/wdt:P279* wd:Q639669.\nOPTIONAL {?item wdt:P19 ?placeofbirth.\n?placeofbirth wdt:P625 ?coord. }\nOPTIONAL {?item wdt:P18 ?image.}\nOPTIONAL {?item wdt:P569 ?dob.}\nOPTIONAL {?item wdt:P21 ?gender.}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n#defaultView:Map",
        "complexity_description": "Multiple filters, optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "1150",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person ?personLabel ?place ?placeLabel ?coord\nWITH {\nSELECT ?person ?place ?coord WHERE {\n?person wdt:P19 ?place ;\nwdt:P496 ?orcid .\n?place wdt:P625 ?coord .\n}\n} AS %results\nWHERE {\nINCLUDE %results\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple subqueries, SERVICE clause and property paths",
        "complexity": "complex"
    },
    {
        "id": "1151",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coord ?image ?minDate ?dateBin\nWHERE {\nBIND(\nIF((YEAR(?minDate)) < 1970, \"< 1970\",\nIF((YEAR(?minDate)) < 1980, \"1970 - 1979\",\nIF((YEAR(?minDate)) < 1990, \"1980 - 1989\",\nIF((YEAR(?minDate)) < 2000, \"1990 - 1999\",\nIF((YEAR(?minDate)) < 2010, \"2000 - 2009\",\n\"2010+\")))))\nAS ?dateBin)\n{\nSELECT ?item (MIN(?date) AS ?minDate) ?coord ?image WHERE {\n?item wdt:P361 wd:Q735559.\n?item wdt:P625 ?coord.\nOPTIONAL { ?item wdt:P18 ?image. }\nOPTIONAL { ?item wdt:P1619 ?d1. }\nOPTIONAL { ?item wdt:P571 ?d2. }\nBIND(IF(BOUND(?d1), ?d1, ?d2) AS ?date)\n}\nGROUP BY ?item ?coord ?image\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?minDate",
        "complexity_description": "Multiple nested IF conditions, subqueries, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "1152",
        "valid_gpt_response": true,
        "query": "SELECT ?language ?languageLabel (COUNT(DISTINCT ?item) AS ?count)\nWHERE {\n?item wdt:P31/wdt:P279* wd:Q3331189 ; wdt:P407 ?language .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}\nGROUP BY ?language ?languageLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, service call, group by and order by",
        "complexity": "complex"
    },
    {
        "id": "1153",
        "valid_gpt_response": true,
        "query": "SELECT ?place ?placeLabel ?subj ?label ?coord ?birthyear WHERE {\n?subj wdt:P31 wd:Q5 . #who are human\n?page schema:about ?subj.\n?page schema:isPartOf <https://pt.wikisource.org/> . #who are on pt.wikisource.org\n?subj wdt:P19 ?place . #lugar de nascimento\n?place wdt:P625 ?coord . #coordenadas\n?subj rdfs:label ?label filter (lang(?label) = \"pt\")\nOPTIONAL { ?subj wdt:P569 ?dob .}. #data de nascimento\nBIND(YEAR(?dob) as ?birthyear). #exibe ano de nascimento\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"pt\" .\n}\n}",
        "complexity_description": "Multiple joins, filters and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "1154",
        "valid_gpt_response": true,
        "query": "SELECT ?application ?applicationLabel ?modeLabel WHERE {\n?application (wdt:P31/wdt:P279*) wd:Q7889.\n?application wdt:P1434 wd:Q3551295.\nOPTIONAL {?application wdt:P404 ?mode}.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1155",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?author ?authorLabel ?image ?date WHERE {\n?author wdt:P31 wd:Q9143 .\n?author wdt:P571 ?date .\nOPTIONAL {?author wdt:P18 ?image .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"de, en, fr, es, it, cz\" }\n}",
        "complexity_description": "Optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1156",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?dob WHERE {\nBIND(wd:Q1040 AS ?city)\n?city wdt:P571 ?inception.\n?person wdt:P31 wd:Q5;\nwdt:P569 ?dob;\nwdt:P19/wdt:P131* ?city;\nwdt:P735 wd:Q15731830.\nFILTER(?dob >= ?inception)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, property paths, and filter",
        "complexity": "complex"
    },
    {
        "id": "1157",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?museum ?museumLabel ?location ?dist ?img ?article ?URL WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"sv,en\". }\nSERVICE wikibase:around {\n?museum wdt:P625 ?location.\nbd:serviceParam wikibase:center \"[AUTO_COORDINATES]\".\nbd:serviceParam wikibase:radius \"20\".\nbd:serviceParam wikibase:distance ?dist.\n}\n{?museum wdt:P31 wd:Q33506}\nUNION\n{?museum wdt:P31/wdt:P279* wd:Q33506}\nOPTIONAL {?article schema:about ?museum;\nschema:inLanguage \"sv\"}\nOPTIONAL{?museum wdt:P18 ?img}\nOPTIONAL {?museum wdt:P856 ?URL}\n} limit 100",
        "complexity_description": "Multiple services, unions, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "1158",
        "valid_gpt_response": true,
        "query": "SELECT ?place ?placeLabel ?publication ?publicationLabel ?image ?coordinate_location ?dist ?instance_of ?instance_ofLabel WHERE {\nSERVICE wikibase:around {\n?place wdt:P625 ?coordinate_location.\nbd:serviceParam wikibase:center \"[AUTO_COORDINATES]\".\nbd:serviceParam wikibase:radius \"100\".\nbd:serviceParam wikibase:distance ?dist.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?publication wdt:P921 ?place .\nOPTIONAL { ?place wdt:P18 ?image. }\nOPTIONAL { ?place wdt:P31 ?instance_of. }\n}",
        "complexity_description": "Multiple services, optional patterns, and filters",
        "complexity": "complex"
    },
    {
        "id": "1159",
        "valid_gpt_response": true,
        "query": "SELECT ?s ?sLabel ?coor ?operator ?operatorLabel ?image ?layer WHERE {\n?s wdt:P31/wdt:P279* wd:Q7075 ;\nwdt:P17 wd:Q145 ;\nwdt:P625 ?coor ;\nwdt:P137 ?operator ;\nOPTIONAL {?s wdt:P18 ?image .}\nVALUES ?operator { wd:Q319761 wd:Q790029 wd:Q5038449 wd:Q1035745 wd:Q7375001 wd:Q1420500 wd:Q1971174 wd:Q3400501 wd:Q4923796 wd:Q4966533 wd:Q5016926 wd:Q5038400 wd:Q5043224 wd:Q5064127 wd:Q5166758 wd:Q5256629 wd:Q16837157\nwd:Q5623821 wd:Q6083890 wd:Q16997658 wd:Q6901162 wd:Q6984500 wd:Q16998902 wd:Q7161994 wd:Q7236943 wd:Q7321391\nwd:Q5123523 wd:Q6980600 wd:Q7825688 wd:Q1954765 wd:Q2046319 wd:Q3112646 wd:Q5142752 wd:Q7592929 wd:Q6820686 wd:Q7161992 wd:Q5142753 wd:Q5590045 wd:Q16891916 wd:Q5142762 wd:Q5038488 wd:Q20713648 wd:Q4966531 wd:Q17986585 wd:Q16890510 wd:Q7909538 wd:Q8038115 wd:Q4898241 wd:Q4667178 wd:Q4761763 wd:Q5038490 wd:Q5197211 wd:Q30287465 wd:Q18343995 wd:Q17018314 wd:Q7373981 wd:Q18358583 }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nORDER BY ?operatorLabel ?sLabel",
        "complexity_description": "Multiple filters, optional clause and service call",
        "complexity": "complex"
    },
    {
        "id": "1160",
        "valid_gpt_response": true,
        "query": "SELECT ?city ?cityLabel ?coord ?ratioBin ?rgb\nWHERE\n{\nBIND(\nIF(?ratio < 2, \"< 2\",\nIF(?ratio < 3, \"[2;3)\",\nIF(?ratio < 4, \"[3;4)\",\nIF(?ratio < 5, \"[4;5)\",\n\"5+\"))))\nAS ?ratioBin)\nBIND(\nIF(?ratio < 2, \"0072E5\",\nIF(?ratio < 3, \"2F58AB\",\nIF(?ratio < 4, \"5F3F72\",\nIF(?ratio < 5, \"8F2539\",\n\"BF0C00\"))))\nAS ?rgb)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n{\nSELECT ?city ?coord (count(?item)*10000/?pop as ?ratio)\nWHERE\n{\n?item wdt:P5114 ?id .\n?item wdt:P31 wd:Q126807 .\n?item wdt:P131 ?city .\n?city wdt:P1082 ?pop .\n?city wdt:P625 ?coord .\n# ?city wdt:P1376 ?place.\n# ?place wdt:P31 wd:Q15089.\n}\ngroup by ?city ?pop ?coord\nhaving (?pop >= 5000)\n# order by asc(?ratio)\n}\n}",
        "complexity_description": "Multiple nested IF statements, BIND operations, and subqueries with grouping and aggregation",
        "complexity": "complex"
    },
    {
        "id": "1161",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?value\n{\n?item wdt:P1993 ?value .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "1162",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?countryLabel ?area ?population WHERE {\n?item wdt:P31/wdt:P279* wd:Q10864048 ; # first-level subdivision\nwdt:P17 ?country ; # country\np:P2046/psv:P2046 [ # area\nwikibase:quantityAmount ?baseArea;\nwikibase:quantityUnit [\np:P2370/psv:P2370 [\nwikibase:quantityAmount ?unitArea;\nwikibase:quantityUnit wd:Q25343\n]\n]\n] ;\nwdt:P1082 ?population . # population\nBIND(ROUND(?baseArea * ?unitArea / 1000000) AS ?area) .\nFILTER ( ?area >= 400000 )\nFILTER NOT EXISTS { ?item wdt:P576 ?x } # filter dissolved subdivisions\nFILTER NOT EXISTS { ?country wdt:P576 ?x } # filter dissolved countries\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}\nORDER BY DESC(?area)",
        "complexity_description": "Multiple filters, joins, and subqueries with calculations",
        "complexity": "complex"
    },
    {
        "id": "1163",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?countryLabel ?area ?population\nWHERE\n{\n?item wdt:P31/wdt:P279* wd:Q10864048 ; # first-level subdivision\nwdt:P17 ?country ; # country\np:P2046/psv:P2046 [ # area\nwikibase:quantityAmount ?baseArea;\nwikibase:quantityUnit [\np:P2370/psv:P2370 [\nwikibase:quantityAmount ?unitArea;\nwikibase:quantityUnit wd:Q25343\n]\n]\n] ;\nwdt:P1082 ?population . # population\nBIND(ROUND(?baseArea * ?unitArea / 1000000) AS ?area) .\nFILTER NOT EXISTS { ?item wdt:P194 [] } # without legislature\nFILTER NOT EXISTS { ?item wdt:P576 [] } # filter dissolved subdivisions\nFILTER NOT EXISTS { ?country wdt:P576 [] } # filter dissolved countries\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?population)\nLIMIT 500",
        "complexity_description": "Multiple filters, joins, and subqueries with calculations",
        "complexity": "complex"
    },
    {
        "id": "1164",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?birthPlace ?coords ?image\nWHERE\n{\n?item wdt:P793 wd:Q4667873.\nOPTIONAL\n{\n?item wdt:P18 ?image .}\nOPTIONAL\n{\n?item wdt:P19 ?birthPlace .\n?birthPlace wdt:P625 ?coords .\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple optional patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "1165",
        "valid_gpt_response": true,
        "query": "SELECT ?stacija ?stacijaLabel ?coord ?img\nWHERE\n{\nwd:Q7403701 wdt:P197+ ?stacija .\n?stacija wdt:P625 ?coord .\n?stacija wdt:P18 ?img\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Simple query with 3 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "1166",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?location WHERE {\nSERVICE wikibase:around {\n?item wdt:P625 ?location.\nbd:serviceParam wikibase:center \"[AUTO_COORDINATES]\";\nwikibase:radius \"1\";\nwikibase:distance ?dist.\n}\n?item rdfs:label ?itemLabel.\nFILTER(LANG(?itemLabel) = \"ca\")\nFILTER NOT EXISTS {\n?item rdfs:label ?frLabel.\nFILTER(LANG(?frLabel) = \"fr\")\n}\n}",
        "complexity_description": "Multiple filters, subqueries and language constraints",
        "complexity": "complex"
    },
    {
        "id": "1167",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?accusedwitch ?precision ?coords ?Gender ?Occupation ?Residence ?image\nWHERE {\n?person wdt:P4478 ?accusedwitch .\n?person wdt:P31 wd:Q5.\n?person wdt:P551 ?residence .\n?residence wdt:P625 ?coords.\nOPTIONAL { ?article schema:about ?person. }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\".\n?person rdfs:label ?personLabel.\n?residence rdfs:label ?Residence .\n?occupation rdfs:label ?Occupation.\n?gender rdfs:label ?Gender.\n}\n}",
        "complexity_description": "Multiple joins, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1168",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\n?personA wdt:P106 wd:Q49757.\n?personB wdt:P106 wd:Q40348.\n?personA wdt:P22 ?personB.\n}",
        "complexity_description": "Three simple triple patterns",
        "complexity": "simple"
    },
    {
        "id": "1169",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?murLabel ?coordinates ?foto\nWHERE\n{\n?item wdt:P106 wd:Q937857;\nwdt:P54 wd:Q1130849 ;\nwdt:P19 ?mur.\n?mur wdt:P625 ?coordinates.\nOPTIONAL {?item wdt:P18 ?foto.}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"pl, en\". }\n}",
        "complexity_description": "Multiple triple patterns with OPTIONAL clause and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "1170",
        "valid_gpt_response": true,
        "query": "SELECT ?state_of_Malaysia ?state_of_MalaysiaLabel ?area WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?state_of_Malaysia wdt:P31 wd:Q15063586.\nOPTIONAL { ?state_of_Malaysia wdt:P2046 ?area. }\n}\nORDER BY(?area)\nLIMIT 100",
        "complexity_description": "Uses SERVICE, OPTIONAL clause and ORDER BY",
        "complexity": "medium"
    },
    {
        "id": "1171",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?placeBirthLabel ?placeDeathLabel ?coordsBirth ?coordsDeath ?distance WHERE {\n?item wdt:P31 wd:Q5 ;\nwdt:P19 ?placeBirth ;\nwdt:P20 ?placeDeath .\n?placeBirth wdt:P625 ?coordsBirth .\n?placeDeath wdt:P625 ?coordsDeath .\nBIND (geof:distance(?coordsBirth, ?coordsDeath) AS ?distance)\nFILTER (?distance > 19000)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}\nORDER BY DESC(?distance)",
        "complexity_description": "Multiple joins, filter and bind functions",
        "complexity": "medium"
    },
    {
        "id": "1172",
        "valid_gpt_response": true,
        "query": "SELECT ?language ?languageLabel (GROUP_CONCAT(?caseLabel; separator = \", \") AS ?cases) WHERE {\n?language wdt:P2989 ?case.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?language rdfs:label ?languageLabel.\n?case rdfs:label ?caseLabel.\n}\n}\nGROUP BY ?language ?languageLabel\nORDER BY DESC(COUNT(?case))",
        "complexity_description": "Multiple services, grouping and aggregation",
        "complexity": "complex"
    },
    {
        "id": "1173",
        "valid_gpt_response": true,
        "query": "select ?count ?human ?humanLabel ?humanDescription\nWITH {\nSELECT ?human (COUNT(DISTINCT ?article) AS ?count) WHERE {\n?human wdt:P27 wd:Q35 .\n?human wdt:P106 / wdt:P279* wd:Q2066131 .\n?human wdt:P21 wd:Q6581072.\n?article schema:about ?human .\n}\nGROUP BY ?human\n} AS %results\nWHERE {\nINCLUDE %results\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"da,en\". }\n}\nORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, subqueries, and aggregation",
        "complexity": "complex"
    },
    {
        "id": "1174",
        "valid_gpt_response": true,
        "query": "SELECT ?place ?placeLabel ?location\nWHERE\n{\n# Edinburgh coordinates\nwd:Q23436 wdt:P625 ?EdinLoc .\nSERVICE wikibase:around {\n?place wdt:P625 ?location .\nbd:serviceParam wikibase:center ?EdinLoc .\nbd:serviceParam wikibase:radius \"100\" .\n} .\n# Is a battle\nFILTER EXISTS { ?place wdt:P31/wdt:P279* wd:Q178561 } .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .\n}\n}",
        "complexity_description": "Multiple services, filters and property paths",
        "complexity": "complex"
    },
    {
        "id": "1175",
        "valid_gpt_response": true,
        "query": "SELECT ?child ?childLabel ?parent ?parentLabel\nWITH {\nSELECT ?feature WHERE {\nVALUES ?feature {\nwd:Q1817208\nwd:Q2054517\nwd:Q102047\nwd:Q6581072\nwd:Q51929403\nwd:Q108709\nwd:Q324982\nwd:Q21470140\nwd:Q47088290\nwd:Q51929290\nwd:Q18012653\nwd:Q47088293\nwd:Q501405\nwd:Q4348304\nwd:Q51929049\nwd:Q623734\nwd:Q51927507\nwd:Q110022\nwd:Q54152717\nwd:Q1230649\nwd:Q1233197\nwd:Q202142\nwd:Q53608953\nwd:Q16527322\nwd:Q53999547\nwd:Q131105\nwd:Q24577575\nwd:Q53997851\nwd:Q156986\nwd:Q319822\nwd:Q192613\nwd:Q2105891\nwd:Q192997\nwd:Q324305\nwd:Q2898727\nwd:Q146078\nwd:Q694268\nwd:Q655020\nwd:Q1775461\nwd:Q51929074\nwd:Q15737187\nwd:Q51929218\nwd:Q146786\nwd:Q179230\nwd:Q1923028\nwd:Q953129\nwd:Q148465\nwd:Q47088292\nwd:Q51929154\nwd:Q21714344\nwd:Q52431955\nwd:Q10509119\nwd:Q51929131\nwd:Q5483481\nwd:Q53609593\nwd:Q2888577\nwd:Q24133704\nwd:Q54176537\nwd:Q51929517\nwd:Q604984\nwd:Q2114906\nwd:Q332734\nwd:Q3150154\nwd:Q146233\nwd:Q282031\nwd:Q1450795\nwd:Q474668\nwd:Q110786\nwd:Q14169499\nwd:Q499327\nwd:Q747019\nwd:Q145599\nwd:Q1763348\nwd:Q51929369\nwd:Q1182686\nwd:Q3910936\nwd:Q950170\nwd:Q22716\nwd:Q51927539\nwd:Q838581\nwd:Q442485\nwd:Q47088295\nwd:Q1994301\nwd:Q53998049\nwd:Q394253\nwd:Q11078\nwd:Q576271\nwd:Q857325\nwd:Q185077\nwd:Q27918551\nwd:Q1305037\nwd:Q1562262\nwd:Q281954\nwd:Q53997857\nwd:Q682111\nwd:Q1317831\nwd:Q1392475\nwd:Q51929447\nwd:Q1775415\n}\n}\n} AS %features\nWITH {\nSELECT DISTINCT (?feature AS ?child) ?parent WHERE {\nINCLUDE %features\n?feature wdt:P279 ?parent .\n}\n} AS %results1\nWITH {\nSELECT DISTINCT ?child ?parent WHERE {\nINCLUDE %features\n?feature wdt:P279 ?child .\n?child wdt:P279 ?parent .\n}\n} AS %results2\nWHERE {\n{ INCLUDE %results1 } UNION { INCLUDE %results2 }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple WITH clauses, nested queries, and UNION operator",
        "complexity": "complex"
    },
    {
        "id": "1176",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?sitelinks WHERE {\n?item wikibase:sitelinks ?sitelinks. hint:Prior hint:rangeSafe true. # https://wiki.blazegraph.com/wiki/index.php/QueryHints\nFILTER(?sitelinks >= 75) # arbitrary limit to optimize the query by removing most items (assuming that the desired results will have more statements than this)\nMINUS {\n?article schema:isPartOf <https://ca.wikipedia.org/>;\nschema:about ?item.\n}\nMINUS { ?item wdt:P31/wdt:P279* wd:Q17442446. } # remove templates etc.\n}\nORDER BY DESC(?sitelinks)\nLIMIT 10",
        "complexity_description": "Multiple MINUS clauses, FILTER and ORDER BY",
        "complexity": "complex"
    },
    {
        "id": "1177",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?ecrivain ?ecrivainLabel ?nationaliteLabel ?dateNaissance ?dateMort ?lieuNaissanceLabel ?lieuDecesLabel ?signature WHERE {\n?ecrivain wdt:P106 wd:Q36180.\nOPTIONAL\n{\n?ecrivain wdt:P27 ?nationalite.\n?ecrivain wdt:P569 ?dateNaissance.\n?ecrivain wdt:P570 ?dateMort.\n?ecrivain wdt:P19 ?lieuNaissance.\n?ecrivain wdt:P20 ?lieuDeces.\n}\n?ecrivain wdt:P109 ?signature.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\". }\n}",
        "complexity_description": "Multiple optional patterns, service call and multiple variables",
        "complexity": "medium"
    },
    {
        "id": "1178",
        "valid_gpt_response": true,
        "query": "select DISTINCT ?sLabel ?s ?legendLabel ?date ?image WHERE {\n?s wdt:P361|wdt:P397/wdt:P361 wd:Q544 . #Solar System }\n?s wdt:P575 ?date ; #discovery\nwdt:P18 ?image .\n?s p:P18 ?imgstatement .\nOPTIONAL {?imgstatement pq:P642 ?legend .}\nSERVICE wikibase:label\n{ bd:serviceParam wikibase:language \"en, fr, de, it\". }\n}",
        "complexity_description": "Multiple patterns with OPTIONAL clause and SERVICE",
        "complexity": "medium"
    },
    {
        "id": "1179",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?dob ?coords ?pobLabel ?image\nWHERE\n{\n?item wdt:P31 wd:Q5.\n?item wdt:P106 wd:Q322170 .\n?item wdt:P569 ?dob .\n?item wdt:P19 ?pob.\n?pob wdt:P625 ?coords .\n?item wdt:P18 ?image .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "1180",
        "valid_gpt_response": true,
        "query": "SELECT ?human ?humanLabel ?positionLabel ?countryLabel WITH {\nSELECT DISTINCT ?human ?position ?country WHERE {\n?human wdt:P31 wd:Q5;\nwdt:P21 wd:Q6581072;\nwdt:P39 ?position.\n?position wdt:P279+ wd:Q83307;\nwdt:P1001 ?country.\n?country wdt:P30 wd:Q15.\n}\n} AS %results WHERE {\nINCLUDE %results.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, subqueries and filters",
        "complexity": "complex"
    },
    {
        "id": "1181",
        "valid_gpt_response": true,
        "query": "SELECT ?statement ?reference ?quote\nWITH {\nSELECT ?reference WHERE {\n?statement prov:wasDerivedFrom ?reference.\n?reference pr:P1683 ?quote;\n?pr [].\n}\nGROUP BY ?reference\nHAVING(COUNT(DISTINCT ?pr) = 1)\n} AS %references\nWHERE {\nINCLUDE %references.\n?statement prov:wasDerivedFrom ?reference.\n?reference pr:P1683 ?quote.\n}",
        "complexity_description": "Subqueries, grouping and aggregation",
        "complexity": "complex"
    },
    {
        "id": "1182",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?capitalLabel ?countryLabel ?coords WHERE {\n?item wdt:P31/wdt:P279* wd:Q23442 ;\nwdt:P131+ ?capital .\n?capital p:P1376 ?scapital .\n?scapital ps:P1376 ?country .\nFILTER NOT EXISTS { ?scapital pq:P582 ?x }\n?country p:P31 ?scountry .\n?scountry ps:P31 wd:Q6256 .\nFILTER NOT EXISTS { ?scountry pq:P582 ?x }\nOPTIONAL { ?item wdt:P625 ?coords }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?countryLabel ?capitalLabel ?itemLabel",
        "complexity_description": "Multiple filters, optional clause, and service call",
        "complexity": "complex"
    },
    {
        "id": "1183",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?decade ?place ?placeLabel ?coord ?year ?xLabel ?image\n(SAMPLE(?x) AS ?x) (SAMPLE(?layer) AS ?layer) WHERE {\n{ ?x wdt:P361 wd:Q2603503. }\nUNION\n{ ?x wdt:P361 wd:Q16964319 . }\n?x wdt:P577 ?date ;\nwdt:P291 ?place .\n?place wdt:P625 ?coord.\nOPTIONAL {?x wdt:P18 ?image . }\nBIND (YEAR(?date) AS ?year)\nBIND(FLOOR(?year / 10) *10 as ?decade )\nBIND(\nIF(?decade =1770, \"1770s\",\nIF(?decade =1780, \"1780s\",\nIF(?decade =1790, \"1790s\",\nIF(?decade =1800, \"1800s\",\nIF(?decade =1810, \"1810s\",\nIF(?decade =1820, \"1820s\",\nIF(?decade =1830, \"1830s\",\nIF(?decade =1840, \"1840s\",\nIF(?decade =1850, \"1850s\",\nIF(?decade =1860, \"1860s\",\nIF(?decade =1870, \"1870s\",\nIF(?decade =1880, \"1880s\",\nIF(?decade =1890, \"1890s\",\nIF(?decade =1900, \"1900s\",\nIF(?decade =1910, \"1910s\",\nIF(?decade =1920, \"1920s\",\nIF(?decade =1930, \"1930s\",\nIF(?decade =1940, \"1940s\",\nIF(?decade =1950, \"1950s\",\nIF(?decade =1960, \"1960s\",\nIF(?decade =1970, \"1970s\",\nIF(?decade =1980, \"1980s\",\nIF(?decade =1990, \"1990s\",\n\" \"))))))))))))))))))))))) AS ?layer).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?decade ?place ?placeLabel ?coord ?year ?xLabel ?image\nORDER BY ?decade",
        "complexity_description": "Multiple UNION, OPTIONAL, BIND, and SERVICE clauses with complex conditional expressions",
        "complexity": "complex"
    },
    {
        "id": "1184",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?image ?date WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nwd:Q55075439 wdt:P180 ?item.\nOPTIONAL { ?item wdt:P18 ?image. }\nOPTIONAL { ?item wdt:P571 ?date. }\n}",
        "complexity_description": "Multiple optional patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "1185",
        "valid_gpt_response": true,
        "query": "SELECT ?player ?playerLabel ?countryLabel (COUNT(?item) AS ?goals) WHERE {\n?item wdt:P31 wd:Q16466010 ;\nwdt:P361+ wd:Q170645 ;\np:P1363 ?pStatement .\n?pStatement ps:P1363 ?player ;\npq:P54 ?team .\nFILTER NOT EXISTS { ?pStatement pq:P3831 wd:Q18533 }\n?team wdt:P17 ?country .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}\nGROUP BY ?player ?playerLabel ?countryLabel\nORDER BY DESC(?goals) ?countryLabel ?playerLabel",
        "complexity_description": "Multiple joins, subqueries, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "1186",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel (COUNT(distinct ?sitelink) as ?count) (SAMPLE(?picture) as ?picture)\nWHERE\n{\n?item wdt:P31 wd:Q5 .\n?item wdt:P21 wd:Q6581072 .\n?item wdt:P106 ?dancer .\nVALUES ?dancer {\nwd:Q5716684\nwd:Q805221\nwd:Q2490358\n}\n?item wdt:P18 ?picture .\n?sitelink schema:about ?item .\nFILTER EXISTS { ?wen schema:about ?item . ?wen schema:inLanguage \"en\" }\nFILTER NOT EXISTS { ?wfr schema:about ?item . ?wfr schema:inLanguage \"fr\" }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"fr,en\" .\n}\n}\nGROUP BY ?item ?itemLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple filters, service call, and group by",
        "complexity": "complex"
    },
    {
        "id": "1187",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?image WHERE {\n?item wdt:P136 wd:Q40446;\nwdt:P180/wdt:P31? wd:Q146.\nOPTIONAL { ?item wdt:P18 ?image. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Optional clause, multiple triple patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "1188",
        "valid_gpt_response": true,
        "query": "SELECT *\nWHERE {\nBIND(\nIF(?links = 0, \"a) 0 wiki\",\nIF(?links = 1, \"b) 1 wiki\",\nIF(?links <= 3, \"c) [2;4) wikis\",\n\"d) 4+ wikis\")))\nAS ?linksBin)\nBIND(\nIF(?links = 0, \"000000\",\nIF(?links = 1, \"ff0700\",\nIF(?links <= 3, \"ffa500\",\n\"007f00\")))\nAS ?rgb)\n{\nSELECT ?item ?itemLabel ?c ?image (count(?sitelink) as ?links)\nWHERE {\nSELECT ?item ?itemLabel ?sitelink (min(?coord) as ?c) (min(?img) as ?image)\nWHERE {\n?item wdt:P31 ?type ;\nwdt:P17 wd:Q38 ;\nwdt:P625 ?coord .\n?type wdt:P279* wd:Q33506 .\nOPTIONAL {?item wdt:P18 ?img}\nOPTIONAL {?sitelink schema:about ?item .\nFILTER REGEX(STR(?sitelink), \".wikipedia.org/wiki/\") .\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?item ?itemLabel ?sitelink\n}\nGROUP BY ?item ?itemLabel ?c ?image\n}\n}\nORDER BY asc(?links)",
        "complexity_description": "Multiple nested queries, complex filtering and binding",
        "complexity": "complex"
    },
    {
        "id": "1189",
        "valid_gpt_response": true,
        "query": "SELECT ?countryLabel ?country2 ?country3 ?wikilang ?languageLabel ?language2 ?language3\nWHERE\n{\n?country wdt:P31 wd:Q6256.\n?country wdt:P37 ?language.\nOPTIONAL {\n# ISO 3166-1 alpha-2 code\n?country wdt:P297 ?country2.\n}\nOPTIONAL {\n# ISO 3166-1 alpha-3 code\n?country wdt:P298 ?country3.\n}\nOPTIONAL {\n# ISO 639-1 code\n?language wdt:P218 ?language2.\n}\nOPTIONAL {\n# ISO 639-3 code\n?language wdt:P220 ?language3.\n}\nOPTIONAL {\n# Wikimedia language code\n?language wdt:P424 ?wikilang.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "1190",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?author ?authorLabel ?image ?date WHERE {\n?author wdt:P106/wdt:P279* wd:Q901 .\n?author wdt:P570 ?date FILTER (YEAR(?date)<1900).\n?author wdt:P1196/wdt:P279* wd:Q855919 .\nOPTIONAL {?author wdt:P18 ?image .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, de, fr, es, it, cz\" }\n}",
        "complexity_description": "Multiple triple patterns with filters and optional clause",
        "complexity": "medium"
    },
    {
        "id": "1191",
        "valid_gpt_response": true,
        "query": "SELECT\n?count\n?surname ?surnameLabel\nWITH {\nSELECT\n(COUNT(*) AS ?count)\n?surname\nWHERE {\n[] wdt:P2860 / wdt:P50 / wdt:P734 ?surname .\n}\nGROUP BY ?surname\n} AS %results\nWHERE {\nINCLUDE %results\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "1192",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?taxon ?taxonLabel ?rank ?rankLabel ?geoloc ?personimage ?taxonimage ?pob ?pobLabel WHERE {\n?person wdt:P31 wd:Q5 ;\nwdt:P19 ?pob .\n?taxon wdt:P31 wd:Q16521 ;\nwdt:P225 ?taxonname ;\nwdt:P105 ?rank ;\nwdt:P138 ?person .\n?pob wdt:P625 ?geoloc .\nOPTIONAL { ?person wdt:P18 ?personimage }\nOPTIONAL { ?taxon wdt:P18 ?taxonimage }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, optional patterns and service call",
        "complexity": "complex"
    },
    {
        "id": "1193",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?namesakeLabel ?namesakeImage WHERE {\n?item wdt:P31 wd:Q148578.\n?item wdt:P138 ?namesake.\n?namesake wdt:P18 ?namesakeImage.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "1194",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?author ?authorLabel ?image ?date WHERE {\n?author wdt:P31 wd:Q7889 .\n?author wdt:P577 ?date .\n?author wdt:P18 ?image .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, de, fr, es, it, cz\" }\n}",
        "complexity_description": "Multiple triple patterns with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "1195",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?item (wdt:P127|^wdt:P199|wdt:P749|^wdt:P1830|^wdt:P355)+ wd:Q7414.\n?item (wdt:P31/wdt:P279*) wd:Q4830453.\n}",
        "complexity_description": "Multiple UNION patterns, SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "1196",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?q1 ?q1Label ?q2 ?q2Label ?genderLabel {\n?q1 wdt:P31 wd:Q5 ; wdt:P21 ?gender .\n?q2 wdt:P31 wd:Q5 ; wdt:P21 ?gender .\n{ { ?q1 wdt:P26 ?q2 } UNION { ?q2 wdt:P26 ?q1 } }\nFILTER (STR(?q1) < STR(?q2)) .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, UNION operator and FILTER clause",
        "complexity": "complex"
    },
    {
        "id": "1197",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?label ?coord WHERE {\n?item wdt:P17 wd:Q145.\n?item wdt:P625 ?coord.\n?item rdfs:label ?labelWithLanguage.\nBIND(STR(?labelWithLanguage) AS ?label)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\nFILTER(STRSTARTS(?labelWithLanguage, \"Llan\"))\nFILTER((LANG(?labelWithLanguage)) = \"en\")\n}",
        "complexity_description": "Multiple filters and service call",
        "complexity": "medium"
    },
    {
        "id": "1198",
        "valid_gpt_response": true,
        "query": "SELECT ?project ?femaleArticles ?allArticles ?percentFemale\nWITH {\nSELECT ?project (COUNT(DISTINCT ?article) AS ?femaleArticles) WHERE {\n?article schema:isPartOf ?project;\nschema:about ?item.\n?project wikibase:wikiGroup \"wikipedia\".\n?item wdt:P31 wd:Q5;\nwdt:P21/wdt:P279* wd:Q6581072;\nwdt:P106/wdt:P279* wd:Q901.\n}\nGROUP BY ?project\n} AS %femaleArticles\nWITH {\nSELECT ?project (COUNT(DISTINCT ?article) AS ?allArticles) WHERE {\n?article schema:isPartOf ?project;\nschema:about ?item.\n?project wikibase:wikiGroup \"wikipedia\".\n?item wdt:P31 wd:Q5;\nwdt:P106/wdt:P279* wd:Q901.\n}\nGROUP BY ?project\n} AS %allArticles\nWHERE {\nINCLUDE %femaleArticles.\nINCLUDE %allArticles.\nBIND(100*?femaleArticles/?allArticles AS ?percentFemale)\n}\nORDER BY DESC(?femaleArticles)",
        "complexity_description": "Multiple subqueries, grouping, and aggregation",
        "complexity": "complex"
    },
    {
        "id": "1199",
        "valid_gpt_response": true,
        "query": "SELECT ?subject ?subjectLabel ?propertyLabel ?objectLabel WHERE {\n?property a wikibase:Property;\nwikibase:claim ?p;\nwikibase:statementProperty ?ps.\n?subject ?p ?statement.\n?statement ?ps ?object;\npq:P1310 ?subject.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, service call and filter",
        "complexity": "complex"
    },
    {
        "id": "1200",
        "valid_gpt_response": true,
        "query": "SELECT ?emulator ?emulatorLabel ?target ?targetLabel (\"00FFFF\" AS ?rgb)\nWHERE {\n?emulator (p:P31/ps:P31/wdt:P279*) wd:Q202871 .\n?emulator wdt:P4043 ?target\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "1201",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?location WHERE {\nSERVICE wikibase:around {\n?item wdt:P625 ?location.\nbd:serviceParam wikibase:center \"[AUTO_COORDINATES]\";\nwikibase:radius \"1\";\nwikibase:distance ?dist.\n}\n?item rdfs:label ?itemLabel.\nFILTER(LANG(?itemLabel) = \"en\")\nFILTER NOT EXISTS {\n?item rdfs:label ?frLabel.\nFILTER(LANG(?frLabel) = \"cy\")\n}\n}",
        "complexity_description": "Multiple filters, subqueries and language constraints",
        "complexity": "complex"
    },
    {
        "id": "1202",
        "valid_gpt_response": true,
        "query": "SELECT ?itemLabel ?pobLabel ?teamLabel ?coord\nWHERE {\n?item wdt:P1344 wd:Q170645.\n?item wdt:P54 ?team.\n?team wdt:P31 wd:Q6979593.\n?item wdt:P19 ?pob.\n?pob wdt:P625 ?coord.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins and filters",
        "complexity": "medium"
    },
    {
        "id": "1203",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?personDescription ?placeOfBirthLabel ?educatedAtLabel (MAX(?distance) AS ?distance) WITH {\nSELECT ?person ?placeOfBirth ?educatedAt ?distance WHERE {\n?person wdt:P31 wd:Q5;\nwdt:P569 ?dateOfBirth;\nwdt:P19 ?placeOfBirth;\nwdt:P69 ?educatedAt.\n?placeOfBirth wdt:P625 ?placeOfBirthCoordinates.\n?educatedAt wdt:P625 ?educatedAtCoordinates.\nBIND(geof:distance(?placeOfBirthCoordinates, ?educatedAtCoordinates) AS ?distance).\n}\nORDER BY DESC(?distance)\nLIMIT 50\n} AS %results WHERE {\nINCLUDE %results.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?person ?personLabel ?personDescription ?placeOfBirthLabel ?educatedAtLabel\nORDER BY DESC(?distance)",
        "complexity_description": "Multiple subqueries, joins, and functions",
        "complexity": "complex"
    },
    {
        "id": "1204",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?discontinued ?logo\nWHERE\n{\nVALUES ?prod { wd:Q7397 wd:Q7406919 }\n?item wdt:P31/wdt:P279* ?prod .\n?item (wdt:P2669 | wdt:P576 ) ?discontinued.\n{?item wdt:P178 wd:Q95}\nUNION {?item wdt:P127+ wd:Q95}.\nOPTIONAL {?item wdt:P154 ?logo}.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple UNION and OPTIONAL clauses, multiple property paths",
        "complexity": "complex"
    },
    {
        "id": "1205",
        "valid_gpt_response": true,
        "query": "SELECT ?itemLabel ?pobLabel ?teamLabel ?coord\nWHERE {\n?item wdt:P1344 wd:Q170645.\n?item wdt:P54 ?team.\n?team wdt:P31 wd:Q6979593.\n?item wdt:P19 ?pob.\n?pob wdt:P625 ?coord.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins and filters",
        "complexity": "medium"
    },
    {
        "id": "1206",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?character ?characterLabel ?spouseLabel ?universeLabel WHERE {\n?character wdt:P31/wdt:P279* wd:Q95074;\nwdt:P26|^wdt:P26 ?spouse;\nwdt:P3373|^wdt:P3373 ?spouse.\nOPTIONAL { ?character wdt:P1080 ?universe. }\nFILTER(STR(?character) < STR(?spouse))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?universeLabel ?characterLabel",
        "complexity_description": "Multiple triple patterns, optional clause, filter and service",
        "complexity": "complex"
    },
    {
        "id": "1207",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?disease ?diseaseLabel ?doid (GROUP_CONCAT(?language) as ?saTranslations ) (COUNT(?language) as ?counts) WHERE {\n# VALUES ?disease {wd:Q79793} #change this for another disease\nVALUES ?country {wd:Q258} #change this to get the offical language of another country\n# Get the official language of South Africa\n?country wdt:P37 ?wdLanguage .\n?wdLanguage wdt:P424 ?languageCode;\nrdfs:label ?language .\nFILTER (LANG(?language)=?languageCode)\nFILTER EXISTS {?wdLanguage wdt:P31?/wdt:P279+ wd:Q17376908}\n# get the item that has a Disease Ontology ID\n?disease wdt:P699 ?doid;\nrdfs:label ?English .\nFILTER (LANG(?English)=\"en\")\n# To extract non existing translation you need to make the language optional\n?disease rdfs:label ?label .\nBIND(LANG(?label) as ?languageCode)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?disease ?diseaseLabel ?doid ?saTranslations\nORDER BY DESC(?counts)",
        "complexity_description": "Multiple filters, subqueries, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "1208",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?itemDescription\nWHERE {\n?item wdt:P31/wdt:P279* wd:Q18616576 .\nMINUS { ?item wdt:P31/wdt:P279* wd:Q19847637 .}\nFILTER(NOT EXISTS {\n?item rdfs:label ?lang_label.\nFILTER(LANG(?lang_label) = \"af\")\n})\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,nl,fr,de,it,es,no,pt\". }\n}\nORDER BY ?itemLabel",
        "complexity_description": "Multiple filters and minus clause with service call",
        "complexity": "complex"
    },
    {
        "id": "1209",
        "valid_gpt_response": true,
        "query": "SELECT ?humain ?humainLabel ?lieuNaissanceLabel ?lieuMortLabel ?occ ?archive_at\nWITH { SELECT ?humain (group_concat(distinct ?occupLabel;separator=\", \") as ?occ) (group_concat(distinct ?archiveLabel;separator=\", \") as ?archive_at) WHERE\n{\n?humain wdt:P31 wd:Q5.\nOPTIONAL {?humain wdt:P106 ?occup.\n?occup rdfs:label ?occupLabel. filter(lang(?occupLabel)=\"fr\")}\nOPTIONAL {?humain wdt:P485 ?archive.\n?archive rdfs:label ?archiveLabel. filter(lang(?archiveLabel)=\"fr\")}\n{?humain wdt:P19 ?lieuNaissance.\n?lieuNaissance wdt:P131 wd:Q12771.}\nUNION\n{?humain wdt:P20 ?lieuMort.\n?lieuMort wdt:P131 wd:Q12771.}\n} group by ?humain } as %i\nWHERE {include %i\nOPTIONAL {?humain wdt:P19 ?lieuNaissance.}\nOPTIONAL {?humain wdt:P20 ?lieuMort.}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr\". }\n} ORDER BY ?humainLabel",
        "complexity_description": "Multiple optional patterns, unions, and subqueries with grouping and filtering",
        "complexity": "complex"
    },
    {
        "id": "1210",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?birthdate ?thumbnail ?author ?authorLabel WHERE {\n?author wdt:P106 wd:Q484188 ;\nwdt:P570 ?birthdate\nOPTIONAL { ?author wdt:P18 ?thumbnail . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, fr, de\" }\n}\nORDER BY ?birthdate",
        "complexity_description": "Optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1211",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?geo ?type ?typeLabel (SAMPLE(?_image) AS ?image) WHERE {\n?type wdt:P279* wd:Q3839081 .\n?item wdt:P31 ?type ;\nwdt:P625 ?geo .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nOPTIONAL { ?item wdt:P18 ?_image }\n}\nGROUP BY ?item ?itemLabel ?geo ?type ?typeLabel",
        "complexity_description": "Multiple joins, optional clause and group by",
        "complexity": "complex"
    },
    {
        "id": "1212",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item (GROUP_CONCAT(DISTINCT ?naturelb; SEPARATOR = \" ; \") AS ?natureP31) (GROUP_CONCAT(DISTINCT ?no_inv; SEPARATOR = \" ; \") AS ?inv) (SAMPLE(?img) AS ?image) ?itemLabel WHERE {\n?item (wdt:P31/wdt:P279*) wd:Q738680.\n?item wdt:P31 ?nature.\n?nature rdfs:label ?naturelb.\n?item wdt:P195 wd:Q1376.\n?item wdt:P217 ?no_inv.\nOPTIONAL { ?item wdt:P18 ?img. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\". }\nFILTER((LANG(?naturelb)) = \"fr\")\n?item wdt:P2596 wd:Q11772.\n}\nGROUP BY ?item ?itemLabel ?img",
        "complexity_description": "Multiple group concat, optional clause, and filter",
        "complexity": "complex"
    },
    {
        "id": "1213",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?author ?authorLabel ?date ?image WHERE {\n?author wdt:P106 wd:Q2095549 .\n?author wdt:P570 ?date FILTER ((YEAR(?date) < 1920)&&(YEAR(?date) > 1850)).\n?author wdt:P1196 wd:Q171558 .\nOPTIONAL {?author wdt:P18 ?image .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, de, fr, es, it\" }\n}",
        "complexity_description": "Multiple filters and optional clause",
        "complexity": "medium"
    },
    {
        "id": "1214",
        "valid_gpt_response": true,
        "query": "SELECT ?movie ?movieLabel ?previous ?previousLabel (MIN(?publicationDate) AS ?publicationDate) (GROUP_CONCAT(DISTINCT ?companyLabel; separator = \", \") AS ?companies) WHERE {\n?movie wdt:P31/wdt:P279* wd:Q11424;\nwdt:P155 ?previous;\nwdt:P437 wd:Q844580.\nMINUS { ?previous wdt:P437 wd:Q844580. }\nOPTIONAL { ?movie wdt:P272 ?company. }\nOPTIONAL { ?movie wdt:P577 ?publicationDate. }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?movie rdfs:label ?movieLabel.\n?previous rdfs:label ?previousLabel.\n?company rdfs:label ?companyLabel.\n}\n}\nGROUP BY ?movie ?movieLabel ?previous ?previousLabel\nORDER BY ?publicationDate",
        "complexity_description": "Multiple optional patterns, MIN/MAX aggregation, and subqueries",
        "complexity": "complex"
    },
    {
        "id": "1215",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?interpetreLabel ?generoLabel ?cn\nWHERE {\n?item (wdt:P31/wdt:P279*) wd:Q482994;\nwdt:P495 wd:Q414;\nwikibase:statements ?cn.\nOPTIONAL {\n?item wdt:P175 ?interpetre.\n}\nOPTIONAL {\n?item wdt:P136 ?genero.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],es\". }\n}",
        "complexity_description": "Multiple optional patterns, service call and property paths",
        "complexity": "medium"
    },
    {
        "id": "1216",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?named_after ?named_afterLabel ?article ?img\nWITH {\nSELECT DISTINCT ?item WHERE {\n?item wdt:P31/wdt:P279*/wdt:P31/wdt:P279* wd:Q55084935 .\nhint:Prior hint:gearing \"reverse\" .\n}\n} AS %minerals\nWHERE {\nINCLUDE %minerals .\n?item wdt:P138 ?named_after .\n?named_after wdt:P21 wd:Q6581072 .\nOPTIONAL {?item wdt:P18 ?img} .\nOPTIONAL {\n?article schema:about ?named_after .\n?article schema:isPartOf <https://en.wikipedia.org/> .\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple subqueries, optional patterns, and service calls",
        "complexity": "complex"
    },
    {
        "id": "1217",
        "valid_gpt_response": true,
        "query": "SELECT ?genre ?genreLabel ?total ?major ?minor (?major / ?total AS ?majorRatio)\nWITH {\nSELECT DISTINCT ?tonality WHERE {\n[] wdt:P826 ?tonality.\n}\n} AS %tonalities\nWITH {\nSELECT ?tonality ?isMajor ?isMinor WHERE {\nINCLUDE %tonalities.\n?tonality rdfs:label ?tonalityLabel.\nFILTER(LANG(?tonalityLabel) = \"en\")\n# TODO https://www.wikidata.org/wiki/Wikidata_talk:WikiProject_Music#Items_for_major_and_minor_keys\nBIND(STRENDS(?tonalityLabel, \" major\") AS ?isMajor)\nBIND(STRENDS(?tonalityLabel, \" minor\") AS ?isMinor)\n}\n} AS %tonalitiesWithMode\nWITH {\nSELECT ?genre ?tonality (COUNT(DISTINCT ?composition) AS ?count) WHERE {\n?composition wdt:P31/wdt:P279* wd:Q207628;\nwdt:P136/wdt:P279* ?genre;\nwdt:P826 ?tonality.\n?genre wdt:P31 wd:Q188451.\n}\nGROUP BY ?genre ?tonality\n} AS %genresAndTonalities WITH {\nSELECT ?genre (SUM(?count) AS ?total) (SUM(IF(?isMajor, ?count, 0)) AS ?major) (SUM(IF(?isMinor, ?count, 0)) AS ?minor) WHERE {\nINCLUDE %genresAndTonalities.\nINCLUDE %tonalitiesWithMode.\n}\nGROUP BY ?genre\n} AS %results WHERE {\nINCLUDE %results.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?total) DESC(?major)",
        "complexity_description": "Multiple nested WITH clauses, complex filtering and aggregation",
        "complexity": "complex"
    },
    {
        "id": "1218",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?author ?authorLabel ?date ?image WHERE {\n?author wdt:P31/wdt:P279* wd:Q8192 .\n?author wdt:P580|wdt:P571 ?date .\n?author wdt:P18 ?image .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, de, fr, es, it\" }\n}",
        "complexity_description": "Multiple triple patterns with UNION and transitive property",
        "complexity": "medium"
    },
    {
        "id": "1219",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?software ?softwareLabel (\"00FFFF\" AS ?rgb) WHERE {\n?item wdt:P31 wd:Q163740.\n?software wdt:P178 ?item.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "1220",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?p ?pLabel ?usnpl ?coords WHERE {\n?c wdt:P279* wd:Q11032 .\n?p wdt:P31 ?c .\n{\n?p wdt:P17 wd:Q30 .\n} UNION {\n?p wdt:P495 wd:Q30 .\n}\nOPTIONAL {?p wdt:P5454 ?usnpl.} # usnpl (option)\n?p wdt:P291 ?place .\n?place wdt:P625 ?coords.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}",
        "complexity_description": "Multiple UNION, OPTIONAL and SERVICE clauses",
        "complexity": "complex"
    },
    {
        "id": "1221",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?type ?typeLabel WHERE {\n{\nSELECT ?item WHERE {\nSERVICE wikibase:mwapi {\nbd:serviceParam wikibase:endpoint \"en.wikipedia.org\" .\nbd:serviceParam wikibase:api \"Generator\" .\nbd:serviceParam mwapi:generator \"search\" .\nbd:serviceParam mwapi:gsrsearch \"University of Virginia\" .\nbd:serviceParam mwapi:gsrlimit \"max\" .\n?item wikibase:apiOutputItem mwapi:item .\n}\n} LIMIT 100\n}\nhint:Prior hint:runFirst \"true\".\nFILTER NOT EXISTS { ?item ?property wd:Q213439 . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n} LIMIT 100",
        "complexity_description": "Multiple services, subqueries, and filters",
        "complexity": "complex"
    },
    {
        "id": "1222",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?institution ?institutionLabel ?academics ?academicsLabel ?degree ?degreeLabel ?geoloc ?image WHERE {\n?academics wdt:P31 wd:Q5 ; # instances (P31) of humans (Q5)\nwdt:P27 wd:Q16 ; # country of citizenship\np:P69 ?statement . # check for an \"educated at\" (P69) statement\nOPTIONAL { ?academics wdt:P18 ?image }. #image\n?statement ps:P69 ?institution . # get value of the \"educated at\" statement, i.e. the institution\n?institution wdt:P625 ?geoloc . # get the geolocation of the institution\n?statement pq:P512 ?degree . # get qualifier \"academic degree\" (P512)\n?degree wdt:P31*/wdt:P279* wd:Q849697 . # filter for doctoral degrees\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, optional clause, and filtering",
        "complexity": "complex"
    },
    {
        "id": "1223",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?image ?twitter\nWHERE\n{\n?item wdt:P31 wd:Q26529.\n?item wdt:P18 ?image.\n?item wdt:P2002 ?twitter.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns with service call",
        "complexity": "medium"
    },
    {
        "id": "1224",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?p ?pLabel ?coords ?article WHERE {\n?c wdt:P279* wd:Q11032 .\n?p wdt:P31 ?c .\nOPTIONAL {\n?article schema:about ?p .\n?article schema:inLanguage \"en\" .\nFILTER (SUBSTR(str(?article), 1, 25) = \"https://en.wikipedia.org/\")\n}\n?p wdt:P291 ?place .\n?place wdt:P625 ?coords.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}",
        "complexity_description": "Multiple joins, optional clause and filter",
        "complexity": "complex"
    },
    {
        "id": "1225",
        "valid_gpt_response": true,
        "query": "SELECT ?state ?stateLabel ?capital ?capitalLabel WHERE {\n?state wdt:P31/wdt:P279* wd:Q3624078;\nwdt:P36 ?capital.\nMINUS { ?state wdt:P576|wdt:P582 ?end. }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\".\n?state rdfs:label ?stateLabel.\n?capital rdfs:label ?capitalLabel.\n} hint:Prior hint:runLast false.\nBIND(CONCAT(\"^[\", ?stateLabel, \"]*$\") AS ?regex)\nFILTER(REGEX(?capitalLabel, ?regex, \"i\"))\nMINUS { ?capital wdt:P138 ?state. }\n}",
        "complexity_description": "Multiple filters, regex and minus clauses",
        "complexity": "complex"
    },
    {
        "id": "1226",
        "valid_gpt_response": true,
        "query": "SELECT ?q ?article {\n?q wdt:P31 wd:Q16521 ; rdfs:label 'Amara'@en .\n?article schema:about ?q ; schema:isPartOf <https://species.wikimedia.org/>\n}",
        "complexity_description": "Two triple patterns with one filter",
        "complexity": "simple"
    },
    {
        "id": "1227",
        "valid_gpt_response": true,
        "query": "SELECT ?open_access_in_Japan ?open_access_in_JapanLabel ?official_website WHERE {\n{ ?open_access_in_Japan wdt:P2650 wd:Q56064901. }\nUNION\n{ ?open_access_in_Japan wdt:P921 wd:Q56064901. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nOPTIONAL { ?open_access_in_Japan wdt:P856 ?official_website. }\n}",
        "complexity_description": "Union, optional pattern and service query",
        "complexity": "medium"
    },
    {
        "id": "1228",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT (sample(?place) as ?place) (sample(?img) as ?img) ?placeLabel ?motivation ?article ?NobelArticle WHERE {\n?laureate wdt:P2888 ?laureate_nobel_uri .\nFILTER (strStarts(str(?laureate_nobel_uri), \"http://data.nobelprize.org/resource/laureate/\"))\n{\n{?place wdt:P376 wd:Q111} #Mars\nUNION\n{?place wdt:P376 wd:Q405} #Moon\n}\n?place wdt:P138 ?laureate .\n# ?place wdt:P625 ?geo .\n?place wdt:P18 ?img.\nOPTIONAL {?article schema:about ?laureate .\n?article schema:isPartOf <https://en.wikipedia.org/>}\nOPTIONAL{?laureate wdt:P3188 ?Na}\nBIND (URI(CONCAT(\"https://www.nobelprize.org/nobel_prizes/\",?Na,\"-facts.html\")) AS ?NobelArticle)\nSERVICE <http://data.nobelprize.org/sparql> {\n?laureate_nobel_uri nobel:laureateAward / nobel:motivation ?motivation .\nFILTER (lang(?motivation) = 'en')\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,de,da,nl\". }\n} Group by ?placeLabel ?motivation ?article ?NobelArticle",
        "complexity_description": "Multiple UNIONs, OPTIONALs, SERVICEs, and FILTERs with language conditions",
        "complexity": "complex"
    },
    {
        "id": "1229",
        "valid_gpt_response": true,
        "query": "SELECT ?item (COUNT(DISTINCT ?lang) AS ?count) (GROUP_CONCAT(DISTINCT ?lang; separator=',') as ?languages)\nWHERE\n{\n?item ( wdt:P747 | ^ wdt:P629 ) ?edition .\n?edition ^schema:about [ schema:isPartOf/wikibase:wikiGroup \"wikisource\"; schema:inLanguage ?lang ] .\n}\nGROUP BY ?item\nORDER BY DESC(?count)\nLIMIT 500",
        "complexity_description": "Multiple patterns, aggregation functions and grouping",
        "complexity": "complex"
    },
    {
        "id": "1230",
        "valid_gpt_response": true,
        "query": "SELECT\n?location ?locationLabel\n?geo\n?example_work ?example_workLabel\nWITH {\nSELECT\n?location ?geo\n(SAMPLE(?work) AS ?example_work)\nWHERE {\n# Find works that are marked with main subject of the topic.\n?work wdt:P921 ?topic .\n?topic wdt:P31 wd:Q16521 .\n# Identify co-occuring topic that is geo-locatable.\n?work wdt:P921 ?location .\n?location wdt:P625 ?geo .\n}\nGROUP BY ?location ?geo\n} AS %results\nWHERE {\nINCLUDE %results\n# Label the results\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\".\n}\n}",
        "complexity_description": "Multiple subqueries, grouping and aggregation",
        "complexity": "complex"
    },
    {
        "id": "1231",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?application ?applicationLabel ?inspirationLabel\nWHERE\n{\n?application wdt:P31/wdt:P279* wd:Q7397.\n?application wdt:P941 ?inspiration.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "1232",
        "valid_gpt_response": true,
        "query": "SELECT ?occupation ?occupationLabel ?count\nWHERE\n{\n{\nSELECT ?occupation (COUNT(?person) AS ?count) WHERE {\n?person wdt:P4478 ?accused .\n?person wdt:P106 ?occupation.\n}\nGROUP BY ?occupation\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?count)\nLIMIT 1000",
        "complexity_description": "Subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "1233",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?place ?img (sample(?twitter) AS ?twitter) (sample(?offweb) AS ?offweb) ?motivation ?article ?NobelArticle WHERE {\n?laureate wdt:P2888 ?laureate_nobel_uri .\n{\n{?laureate wdt:P2002 ?twitterID}\nUNION\n{?laureate wdt:P856 ?offweb}\n}\nFILTER (strStarts(str(?laureate_nobel_uri), \"http://data.nobelprize.org/resource/laureate/\"))\nOPTIONAL {?laureate wdt:P18 ?img}\nOPTIONAL {?article schema:about ?laureate .\n?article schema:isPartOf <https://en.wikipedia.org/>}\nOPTIONAL{?laureate wdt:P3188 ?Na}\nBIND (URI(CONCAT(\"https://www.nobelprize.org/nobel_prizes/\",?Na,\"-facts.html\")) AS ?NobelArticle)\nBIND (URI(CONCAT(\"https://twitter.com/\",?twitterID)) AS ?twitter)\nSERVICE <http://data.nobelprize.org/sparql> {\n?laureate_nobel_uri nobel:laureateAward / nobel:motivation ?motivation .\nFILTER (lang(?motivation) = 'en')\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,de,da,nl\". }\n} Group By ?place ?img ?motivation ?article ?NobelArticle ?coord22",
        "complexity_description": "Multiple UNIONs, FILTERs, OPTIONALs, BINDs, and SERVICEs with complex URI constructions",
        "complexity": "complex"
    },
    {
        "id": "1234",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?Bibliothek ?BibliothekLabel ?BibliothekDescription ?geographische_Koordinaten WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de\". }\n?Bibliothek (wdt:P31/wdt:P279*) wd:Q7075.\n?Bibliothek wdt:P17 wd:Q40.\n?Bibliothek wdt:P131* ?Ort.\nOPTIONAL { ?Bibliothek wdt:P625 ?geographische_Koordinaten. }\n}",
        "complexity_description": "Multiple triple patterns, optional clause",
        "complexity": "medium"
    },
    {
        "id": "1235",
        "valid_gpt_response": true,
        "query": "SELECT ?country ?countryLabel ?count WITH {\nSELECT ?givenName ?givenNameLabel WHERE {\n?givenName wdt:P31/wdt:P279* wd:Q202444;\nwdt:P1705 ?givenNameLabel.\nFILTER(STRSTARTS(?givenNameLabel, \"X\") || STRSTARTS(?givenNameLabel, \"Q\"))\n}\n} AS %givenNames WITH {\nSELECT ?country (COUNT(DISTINCT ?human) AS ?count) WHERE {\nINCLUDE %givenNames.\n?human wdt:P31 wd:Q5;\nwdt:P735 ?givenName;\nwdt:P19/wdt:P17 ?country.\n}\nGROUP BY ?country\n} AS %countries WHERE {\nINCLUDE %countries.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, filters, and group by",
        "complexity": "complex"
    },
    {
        "id": "1236",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?publicationDate (group_concat(?genreLabel; separator=\", \") as ?genres) ?steamurl WHERE {\n?item wdt:P31 wd:Q7889.\n?item wdt:P577 ?publicationDate.\n?item wdt:P136 ?genre.\n?item wdt:P400 wd:Q1406.\nwd:P1733 wdt:P1630 ?formatterurl.\nOPTIONAL { ?item wdt:P1733 ?steamId. }.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?genre rdfs:label ?genreLabel.\n?item rdfs:label ?itemLabel.\n}.\nBIND(YEAR(?publicationDate) AS ?year).\nBIND(IRI(REPLACE(?steamId, '^(.+)$', ?formatterurl)) AS ?steamurl).\nFILTER(?year = (YEAR(NOW()))).\n}\nGROUP BY ?item ?itemLabel ?publicationDate ?steamurl\nORDER BY ?publicationDate ?itemLabel\nLIMIT 500",
        "complexity_description": "Multiple joins, optional clause, and complex filter with function calls",
        "complexity": "complex"
    },
    {
        "id": "1237",
        "valid_gpt_response": true,
        "query": "SELECT ?country ?countryLabel ?count WITH {\nSELECT ?givenName ?givenNameLabel WHERE {\n?givenName wdt:P31/wdt:P279* wd:Q202444;\nwdt:P1705 ?givenNameLabel.\nFILTER(STRSTARTS(?givenNameLabel, \"X\") || STRSTARTS(?givenNameLabel, \"Q\"))\n}\n} AS %givenNames WITH {\nSELECT ?country (COUNT(DISTINCT ?human) AS ?count) WHERE {\nINCLUDE %givenNames.\n?human wdt:P31 wd:Q5;\nwdt:P735 ?givenName;\nwdt:P27 ?country.\n}\nGROUP BY ?country\n} AS %countries WHERE {\nINCLUDE %countries.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, filters, and group by",
        "complexity": "complex"
    },
    {
        "id": "1238",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coords ?pic ?genderLabel ?type ?typeLabel\nwhere {\n?item wdt:P1648 ?biog .\n?item wdt:P19 ?location .\n?location wdt:P625 ?coords .\n?item wdt:P21 ?gender .\n?item wdt:P106 ?type .\nOPTIONAL { ?item wdt:P18 ?pic }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?item ?itemLabel ?coords ?pic ?genderLabel ?type ?typeLabel",
        "complexity_description": "Multiple joins, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1239",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?image\nWHERE\n{\n?item p:P31/ps:P31/wdt:P279* wd:Q178885. # Deities\nOPTIONAL{?item wdt:P18 ?image}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Optional clause, property path and service call",
        "complexity": "medium"
    },
    {
        "id": "1240",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?location ?layer ?nearestitemLabel ?nearestitem\nWITH {\nSELECT ?bookcase ?location1 (MIN(?distance) AS ?minDistance) WHERE {\n?bookcase wdt:P31 wd:Q294297;\nwdt:P625 ?location1;\nwdt:P131 wd:Q1741.\n?library wdt:P31 wd:Q28564;\nwdt:P625 ?location2;\nwdt:P131 wd:Q1741.\nBIND(geof:distance(?location1, ?location2) AS ?distance)\n}\nGROUP BY ?bookcase ?location1\n} AS %bookcasesWithDistance\nWITH {\nSELECT ?bookcase ?location1 ?library ?location2 ?distance WHERE {\nINCLUDE %bookcasesWithDistance.\n?library wdt:P31 wd:Q28564;\nwdt:P625 ?location2;\nwdt:P131 wd:Q1741.\nBIND(geof:distance(?location1, ?location2) AS ?distance)\nFILTER(?distance = ?minDistance)\n}\n} AS %bookcasesWithLibraries\nWHERE {\nINCLUDE %bookcasesWithLibraries.\nVALUES ?switch { true false }\nBIND(IF(?switch, \"Bucherschrank\"@de, \"Bibliothek\"@de) AS ?layer)\nBIND(IF(?switch, ?bookcase, ?library) AS ?item)\nBIND(IF(?switch, ?location1, ?location2) AS ?location)\nBIND(IF(?switch, ?library, ?bookcase) AS ?nearestitem)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,de\". }\n}",
        "complexity_description": "Multiple WITH clauses, subqueries, and conditional bindings",
        "complexity": "complex"
    },
    {
        "id": "1241",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?article ?NobelArticle ?SELIBR ?VIAF WHERE {\n?laureate p:P166 ?awardStat.\n?nobelPrize wdt:P31 wd:Q7191 . # Nobelprize\n?awardStat ps:P166 ?nobelPrize . # ... that has the value Nobel Prize )\nminus {?laureate wdt:P906 ?librisID}\nOPTIONAL {?laureate wdt:P214 ?VIAFID}\nBIND (URI(CONCAT(\"https://viaf.org/viaf/\",?VIAFID)) AS ?VIAF)\nOPTIONAL {?article schema:about ?laureate .\n?article schema:isPartOf <https://sv.wikipedia.org/>}\nOPTIONAL {?article schema:about ?laureate .\n?article schema:isPartOf <https://en.wikipedia.org/>}\nOPTIONAL{?laureate wdt:P3188 ?Na}\nBIND (URI(CONCAT(\"https://www.nobelprize.org/nobel_prizes/\",?Na,\"-facts.html\")) AS ?NobelArticle)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,de,da,nl\". }\n} Group by ?place ?img ?twitter ?motivation ?article ?NobelArticle ?coord22 ?SELIBR ?VIAF",
        "complexity_description": "Multiple optional patterns, service call, and bindings",
        "complexity": "complex"
    },
    {
        "id": "1242",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?qid ?sitelinks ?identifiers\nWITH {\nSELECT ?item ?qid WHERE {\nVALUES ?gametype {\nwd:Q7889\nwd:Q16070115\nwd:Q705867\n}\n?item wdt:P31 ?gametype.\nBIND(xsd:integer(STRAFTER(str(?item), \"Q\")) AS ?qid)\n}\nORDER BY DESC(?qid)\nLIMIT 50\n} AS %items\nWITH {\nSELECT ?item (GROUP_CONCAT(?sitelink) as ?sitelinks) WHERE {\nINCLUDE %items.\nOPTIONAL {\n?article a schema:Article;\nschema:about ?item;\nschema:inLanguage ?language.\nBIND(CONCAT(\"[\", STR(?article), \" \", ?language, \"]\") AS ?sitelink)\n}\n}\nGROUP BY ?item\n} AS %itemsWithSitelinks\nWITH {\nSELECT ?item (GROUP_CONCAT(?identifier) as ?identifiers) WHERE {\nINCLUDE %items.\nOPTIONAL {\n?property a wikibase:Property;\nwdt:P31/wdt:P279* wd:Q28147643;\nwikibase:propertyType wikibase:ExternalId;\nwdt:P1630 ?formatterUrl;\nwikibase:directClaim ?wdt;\nrdfs:label ?propertyLabel.\nFILTER(LANG(?propertyLabel) = \"en\")\n?item ?wdt ?id.\nBIND(IRI(REPLACE(?id, '^(.+)$', ?formatterUrl)) AS ?url)\nBIND(CONCAT(\"[\", STR(?url), \" \", ?propertyLabel, \"]\") AS ?identifier)\n}\n}\nGROUP BY ?item\n} AS %itemsWithExternalIdentifiers\nWHERE {\nINCLUDE %items.\nINCLUDE %itemsWithSitelinks.\nINCLUDE %itemsWithExternalIdentifiers.\n} ORDER BY DESC(?qid) LIMIT 200",
        "complexity_description": "Multiple subqueries, joins, and complex filtering",
        "complexity": "complex"
    },
    {
        "id": "1243",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?logo (COUNT(?platform) AS ?count)\nWHERE\n{\n?item wdt:P31 wd:Q7889.\n?item wdt:P400 ?platform.\nOPTIONAL {?item wdt:P154 ?logo}.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?item ?itemLabel ?logo\nHAVING(COUNT(?platform) > 9)\nORDER BY DESC(?count)",
        "complexity_description": "Multiple patterns, optional clause, service call, group by, and having clause",
        "complexity": "complex"
    },
    {
        "id": "1244",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?author ?authorLabel ?image ?coord WHERE {\n?author wdt:P31 wd:Q11269813 .\n?author wdt:P625 ?coord .\nOPTIONAL {?author wdt:P18 ?image .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"de, en, fr, es, it, cz\" }\n}",
        "complexity_description": "Multiple triple patterns with OPTIONAL clause and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "1245",
        "valid_gpt_response": true,
        "query": "SELECT ?count ?work ?workLabel ?author ?authorLabel\nWITH {\nSELECT ?work ?author (COUNT(?citing_work) AS ?count) WHERE {\n?work p:P50 ?author_statement .\n?author_statement ps:P50 ?author .\n?author_statement pq:P1545 \"1\" .\n?author (wdt:P1416 | wdt:P108 ) / wdt:P17 wd:Q34 .\n?citing_work wdt:P2860 ?work .\n}\nGROUP BY ?work ?author\n} AS %results\nWHERE {\nINCLUDE %results\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "1246",
        "valid_gpt_response": true,
        "query": "SELECT ?locationLabel ?coord ?date ?page\nWHERE {\nwd:Q56458770 p:P276 ?statement.\n?statement ps:P276 ?location.\n?location wdt:P625 ?coord.\n?statement pq:P585 ?date.\nOPTIONAL {\n?statement pq:P856 ?page.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, optional clause and service call",
        "complexity": "complex"
    },
    {
        "id": "1247",
        "valid_gpt_response": true,
        "query": "SELECT ?stateLabel ?item1 ?item1Label ?item2 ?item2Label\nWITH {\nSELECT DISTINCT ?state WHERE {\n?state wdt:P31/wdt:P279* wd:Q3624078;\np:P463 ?memberOfStatement.\n?memberOfStatement a wikibase:BestRank;\nps:P463 wd:Q1065.\nMINUS { ?memberOfStatement pq:P582 ?endTime. }\nMINUS { ?state wdt:P576|wdt:P582 ?end. }\n}\n} AS %states\nWHERE {\nINCLUDE %states.\n?state wdt:P1906 ?position.\n?item1 wdt:P31 wd:Q5;\nwdt:P39 ?position;\nwdt:P734/wdt:P1705 ?familyName1.\n?item2 wdt:P31 wd:Q5;\nwdt:P39 ?position;\nwdt:P734/wdt:P1705 ?familyName2.\nFILTER(STR(?item1) < STR(?item2))\nFILTER(SUBSTR(?familyName1, 1, 4) = SUBSTR(?familyName2, 1, 4))\nFILTER(?familyName1 != ?familyName2)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?stateLabel",
        "complexity_description": "Multiple subqueries, filters and joins",
        "complexity": "complex"
    },
    {
        "id": "1248",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?author ?authorLabel ?image ?coord WHERE {\n?author wdt:P31 wd:Q11269813 .\n?author wdt:P625 ?coord .\nOPTIONAL {?author wdt:P18 ?image .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"de, en, fr, es, it, cz\" }\n}",
        "complexity_description": "Multiple triple patterns with OPTIONAL clause and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "1249",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coord\nWHERE\n{\n{?item wdt:P31/wdt:P279* wd:Q33506.}\nUNION {?item wdt:P31/wdt:P279* wd:Q7075.}\n{?item wdt:P131 wd:Q100.}\nUNION {?item wdt:P131 wd:Q49111.}\n?item wdt:P625 ?coord.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple UNIONs and SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "1250",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?author ?authorLabel ?image ?date WHERE {\n{?author wdt:P31/wdt:P279* wd:Q19723444 .}\nUNION\n{?author wdt:P31/wdt:P279* wd:Q17517 .}\n?author wdt:P571 ?date .\nOPTIONAL {?author wdt:P18 ?image .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"de, en, fr, es, it, cz\" }\n}",
        "complexity_description": "Multiple UNION patterns with OPTIONAL clause and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "1251",
        "valid_gpt_response": true,
        "query": "SELECT ?disciplineLabel ?genderLabel (AVG(?height_in_m) AS ?averageheight) (COUNT(?person) AS ?number)\nWHERE {\n?person wdt:P2416 ?discipline ;\nwdt:P641 wd:Q38108 .\n?person wdt:P21 ?gender .\n?person p:P2048/psn:P2048/wikibase:quantityAmount ?height_in_m .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?disciplineLabel ?genderLabel\nORDER BY ?averageheight",
        "complexity_description": "Multiple joins, aggregation functions and grouping",
        "complexity": "complex"
    },
    {
        "id": "1252",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?img ?bbox WHERE {\n?class wdt:P195 wd:Q56753539 . # KTop\n?class wdt:P921 wd:Q18 .\n?item wdt:P195 ?class .\n?class wdt:P921 wd:Q18 .\n?item p:P1332/psv:P1332/wikibase:geoLatitude ?nth .\n?item p:P1333/psv:P1333/wikibase:geoLatitude ?sth .\n?item p:P1334/psv:P1334/wikibase:geoLongitude ?east .\n?item p:P1335/psv:P1335/wikibase:geoLongitude ?west .\nOPTIONAL {?item wdt:P18 ?img} .\nBIND(STRDT( CONCAT('LINESTRING (',\nstr(?west), ' ', str(?sth), ',',\nstr(?west), ' ', str(?nth), ',',\nstr(?east), ' ', str(?nth), ',',\nstr(?east), ' ', str(?sth), ',',\nstr(?west), ' ', str(?sth), ')' ), geo:wktLiteral) AS ?bbox) .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, optional clause, and complex string manipulation",
        "complexity": "complex"
    },
    {
        "id": "1253",
        "valid_gpt_response": true,
        "query": "select distinct ?educatedLabel ?count\nwhere\n{\n{ ?position wdt:P31 wd:Q18115939 . } union { ?position wdt:P31 wd:Q56760832 } . # position is UK ambassador or high commissioner\n?person p:P39 ?positionStatement . ?positionStatement ps:P39 ?position . # find positions they held\n{ select ?educated (count(?person) as ?count)\nwhere {\n{ ?position wdt:P31 wd:Q18115939 . } union { ?position wdt:P31 wd:Q56760832 } .\n?person p:P39 ?positionStatement . ?positionStatement ps:P39 ?position .\n?person wdt:P69 ?educated . # where were they educated\n} group by ?educated }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n#defaultView:BubbleChart",
        "complexity_description": "Multiple unions, subqueries, and grouping",
        "complexity": "complex"
    },
    {
        "id": "1254",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel WHERE {\n?item wdt:P31 wd:Q5;\np:P102/ps:P102 wd:Q7320;\nwdt:P166/wdt:P279* wd:Q21164.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, property paths and service call",
        "complexity": "complex"
    },
    {
        "id": "1255",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?game ?gameLabel (\"00FFFF\" AS ?rgb) WHERE {\n?item wdt:P31 wd:Q33093124.\n?item wdt:P1441 ?game.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "1256",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?place ?img ?twitter ?motivation ?article ?NobelArticle ?coord22 ?TED WHERE {\n?laureate wdt:P2888 ?laureate_nobel_uri .\nOPTIONAL{?laureate wdt:P2002 ?twitterID}\n?laureate wdt:P2611 ?TEDID\nFILTER (strStarts(str(?laureate_nobel_uri), \"http://data.nobelprize.org/resource/laureate/\"))\nOPTIONAL {?laureate wdt:P18 ?img}\nOPTIONAL {?laureate wdt:P19/wdt:P625 ?coord22}\nOPTIONAL {?article schema:about ?laureate .\n?article schema:isPartOf <https://en.wikipedia.org/>}\nOPTIONAL{?laureate wdt:P3188 ?Na}\nBIND (URI(CONCAT(\"https://www.nobelprize.org/nobel_prizes/\",?Na,\"-facts.html\")) AS ?NobelArticle)\nBIND (URI(CONCAT(\"https://twitter.com/\",?twitterID)) AS ?twitter)\nBIND (URI(CONCAT(\"https://www.ted.com/speakers/\",?TEDID)) AS ?TED)\nSERVICE <http://data.nobelprize.org/sparql> {\n?laureate_nobel_uri nobel:laureateAward / nobel:motivation ?motivation .\nFILTER (lang(?motivation) = 'en')\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,de,da,nl\". }\n}",
        "complexity_description": "Multiple optional patterns, filters, and services",
        "complexity": "complex"
    },
    {
        "id": "1257",
        "valid_gpt_response": true,
        "query": "SELECT ?when ?age ?person ?personLabel\nWHERE\n{\n?person wdt:P31 wd:Q5.\n?person wdt:P569 ?born.\n?person p:P166 [ps:P166 wd:Q37922;\npq:P585 ?when;\n].\nBIND((?when - ?born) / 365 AS ?age )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, property paths, and a BIND operation",
        "complexity": "complex"
    },
    {
        "id": "1258",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?id (sample(?name) AS ?name) (sample(?text) AS ?text) ?motivationen ?contribution ?Documentary ?Diploma ?Nobel_Lecture ?Prize_Presentation ?Biographical ?Banquet_Speech\n(sample (?coord) AS ?coord)\n(sample (?img) AS ?img)\n(floor(?Year/10)*10 as ?layer)\nWHERE {\nSERVICE <http://data.nobelprize.org/sparql> {\n?laureate_nobel_uri nobel:laureateAward ?NobelAwardid.\nBIND(REPLACE(str(?laureate_nobel_uri),\"http://data.nobelprize.org/resource/laureate/\",\"\") AS ?id)\nOPTIONAL{?laureate_nobel_uri nobel:laureateAward / nobel:year ?Year}\nOPTIONAL{?NobelAwardid rdfs:label ?text}\nOPTIONAL{?NobelAwardid nobel:laureate/foaf:name ?name}\nOPTIONAL{?NobelAwardid nobel:category ?category}\nOPTIONAL{?NobelAwardid nobel:motivation ?motivationen\nFILTER (lang(?motivationen) = 'en')\n}\nOPTIONAL {\n?NobelAwardid nobel:contribution ?contribution\nFILTER (lang(?contribution) = 'en')\n}\nOPTIONAL {\n?NobelAwardid nobel:awardFile ?NobelAwardFileF.\n?NobelAwardFileF nobel:fileType <http://data.nobelprize.org/resource/filetype/Documentary>.\n?NobelAwardFileF rdfs:seeAlso ?Documentary\n}\nOPTIONAL {\n?NobelAwardid nobel:awardFile ?NobelAwardFileD.\n?NobelAwardFileD nobel:fileType <http://data.nobelprize.org/resource/filetype/Nobel_Diploma>.\n?NobelAwardFileD rdfs:seeAlso ?Diploma\n}\nOPTIONAL { # 845 st\n?NobelAwardid nobel:awardFile ?NobelAwardFileL.\n?NobelAwardFileL nobel:fileType <http://data.nobelprize.org/resource/filetype/Nobel_Lecture>.\n?NobelAwardFileL rdfs:seeAlso ?Nobel_Lecture\n}\nOPTIONAL { # 3 st\n?NobelAwardid nobel:awardFile ?NobelAwardFileP.\n?NobelAwardFileP nobel:fileType <http://data.nobelprize.org/resource/filetype/Prize_Presentation>.\n?NobelAwardFileP rdfs:seeAlso ?Prize_Presentation\n}\nOPTIONAL { # 66 st\n?NobelAwardid nobel:awardFile ?NobelAwardFileB.\n?NobelAwardFileB nobel:fileType <http://data.nobelprize.org/resource/filetype/Biographical>.\n?NobelAwardFileB rdfs:seeAlso ?Biographical\n}\nOPTIONAL {\n?NobelAwardid nobel:awardFile ?NobelAwardFileBa.\n?NobelAwardFileBa nobel:fileType <http://data.nobelprize.org/resource/filetype/Banquet_Speech>.\n?NobelAwardFileBa rdfs:seeAlso ?Banquet_Speech\n}\n}\n# Match with Wikidata P2888 Exact match\n?Wikidataid wdt:P2888 ?laureate_nobel_uri.\n?Wikidataid wdt:P19/wdt:P625 ?coord.\nOPTIONAL {?Wikidataid wdt:P18 ?img}\nBIND (?Year AS ?layer)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n} group by ?id ?motivationen ?contribution ?Documentary ?Diploma ?Nobel_Lecture ?Prize_Presentation ?Biographical ?Banquet_Speech ?Year\n?layer\norder by desc(?Year)",
        "complexity_description": "Multiple services, many optional patterns, and grouping/ordering",
        "complexity": "complex"
    },
    {
        "id": "1259",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?classLabel\nWHERE\n{\n?item wdt:P138 wd:Q7259.\n?item wdt:P31 ?class.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "1260",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?coordinates ?line ?station ?stationLabel ?connectLabel ?image ?opening ?rgb\nWITH {\nSELECT ?station ?coordinates ?image ?lat ?lon ?opening WHERE {\n{\nSELECT ?station (SAMPLE(?coord_stmt) AS ?coord_stmt) (SAMPLE(?image) AS ?image) (sample(?opening) as ?opening) WHERE {\n?station wdt:P31/wdt:P279* wd:Q55488 .\n?station wdt:P361 wd:Q260870 .\n?station p:P625 ?coord_stmt .\nOPTIONAL { ?station wdt:P18 ?image }.\nOPTIONAL { ?station wdt:P1619 ?opening }.\n} GROUP BY ?station\n}\nhint:SubQuery hint:optimizer \"None\".\n?coord_stmt ps:P625 ?coordinates .\n?coord_stmt psv:P625 / wikibase:geoLatitude ?lat .\n?coord_stmt psv:P625 / wikibase:geoLongitude ?lon .\n}\n} AS %stations\nWITH {\nSELECT (?station AS ?nextstation) (?lat AS ?lat2) (?lon AS ?lon2) WHERE {\nINCLUDE %stations\n}\n} AS %nextstations\nWITH {\nSELECT ?line ?connect ?rgb WHERE {\nINCLUDE %stations .\nINCLUDE %nextstations .\n?station p:P197 ?nextstationstatement .\n?nextstationstatement ps:P197 ?nextstation .\n?nextstationstatement pq:P81 ?connect . ?connect wdt:P361 wd:Q260870 .\n?connect wdt:P465 ?rgb .\nFILTER(STR(?station) < STR(?nextstation)) .\nBIND(CONCAT('LINESTRING (', STR(?lon), ' ', STR(?lat), ',', STR(?lon2), ' ', STR(?lat2), ')') AS ?str) .\nBIND(STRDT(?str, geo:wktLiteral) AS ?line)\n}\n} AS %lines\nWHERE {\n{ INCLUDE %stations } UNION { INCLUDE %lines } .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple subqueries, joins, and complex filtering",
        "complexity": "complex"
    },
    {
        "id": "1261",
        "valid_gpt_response": true,
        "query": "SELECT\n?time ?end_time ?locationLabel ?point ?line\nWITH {\nSELECT ?subject ?location ?time ?end_time ?point ?point_str WHERE {\nVALUES ?subject { wd:Q704208 } .\n?subject p:P937 ?work_location_statement .\n?work_location_statement ps:P937 ?location .\n?location p:P625 / ps:P625 ?point .\n?location p:P625 / psv:P625 / wikibase:geoLatitude ?latitude .\n?location p:P625 / psv:P625 / wikibase:geoLongitude ?longitude .\n?work_location_statement pq:P580 ?time .\nOPTIONAL { ?work_location_statement pq:P582 ?end_time } .\nBIND(CONCAT(STR(?longitude), ' ', STR(?latitude)) AS ?point_str)\n}\nORDER BY (?time)\n} AS %points\nWITH {\nSELECT ?subject (STRDT( CONCAT('LINESTRING (', GROUP_CONCAT(?point_str; separator=','), ')'), geo:wktLiteral) AS ?line) WHERE {\nINCLUDE %points\n} GROUP BY ?subject\n} AS %line\nWHERE {\nINCLUDE %points\nINCLUDE %line\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple subqueries, joins, and functions",
        "complexity": "complex"
    },
    {
        "id": "1262",
        "valid_gpt_response": true,
        "query": "SELECT ?property ?propertyLabel ?count WHERE {\n# First find other additional relations and their count:\n{SELECT ?directProperty (COUNT(*) as ?count)\nWHERE {\nBIND( wdt:P26 as ?firstRelation) # spouse; can be changed to anything\n?item ?firstRelation ?item2 .\n?item ?directProperty ?item2\nFILTER(?directProperty != ?firstRelation)\n} GROUP BY ?directProperty\n}\n# Then find the property entity for this relation and fetch its label:\n?property wikibase:directClaim ?directProperty\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, grouping and filtering",
        "complexity": "complex"
    },
    {
        "id": "1263",
        "valid_gpt_response": true,
        "query": "SELECT ?author ?authorLabel ?signature WHERE {\n?author wdt:P21 wd:Q6581072.\n?author wdt:P106 wd:Q36180.\n?author wdt:P1412 wd:Q150.\n?author wdt:P570 ?died.\n?author wdt:P109 ?signature.\nOPTIONAL { ?wikisourcePage schema:about ?author. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\". }\n}\nGROUP BY ?author ?authorLabel ?signature",
        "complexity_description": "Multiple triple patterns, optional block and service call",
        "complexity": "medium"
    },
    {
        "id": "1264",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?coordinates ?line ?item ?itemLabel ?connectLabel ?image ?opening ?rgb\nWITH {\nSELECT ?item (SAMPLE(?coordinates) AS ?coordinates) (SAMPLE(?image) AS ?image) (sample(?lat1) as ?lat1) (sample(?lon1) as ?lon1) (sample(?opening) as ?opening) WHERE {\n?item wdt:P31 wd:Q14562709 .\n?item wdt:P625 ?coordinates .\n?item p:P625 / psv:P625 / wikibase:geoLatitude ?lat1 .\n?item p:P625 / psv:P625 / wikibase:geoLongitude ?lon1 .\nOPTIONAL { ?item wdt:P18 ?image }.\nOPTIONAL { ?item wdt:P1619 ?opening }.\n} GROUP BY ?item\n} AS %stations\nWITH {\nSELECT ?nextstation (sample(?lat2) as ?lat2) (sample(?lon2) as ?lon2) WHERE {\n?nextstation wdt:P31 wd:Q14562709 .\n?nextstation p:P625 / psv:P625 / wikibase:geoLatitude ?lat2 .\n?nextstation p:P625 / psv:P625 / wikibase:geoLongitude ?lon2 .\n} GROUP BY ?nextstation\n} AS %nextstations\nWITH {\nSELECT ?line ?connect ?rgb WHERE {\nINCLUDE %stations .\nINCLUDE %nextstations .\n?item p:P197 ?nextstationstatement .\n?nextstationstatement ps:P197 ?nextstation .\n?nextstationstatement pq:P81 ?connect . ?connect wdt:P361 wd:Q20075 .\n?connect wdt:P465 ?rgb .\nFILTER(STR(?item) < STR(?nextstation)) .\nBIND(CONCAT('LINESTRING (', STR(?lon1), ' ', STR(?lat1), ',', STR(?lon2), ' ', STR(?lat2), ')') AS ?str) .\nBIND(STRDT(?str, geo:wktLiteral) AS ?line)\n}\n} AS %lines\nWHERE {\n{ INCLUDE %stations } UNION { INCLUDE %lines } .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple subqueries, joins, and filters",
        "complexity": "complex"
    },
    {
        "id": "1265",
        "valid_gpt_response": true,
        "query": "SELECT ?type (COUNT(?property) AS ?count) (SAMPLE(?property) AS ?example) (SAMPLE(?label) AS ?exampleLabel) WHERE {\n?property wikibase:propertyType ?type .\n?property rdfs:label ?label .\nFILTER(LANG(?label)=\"en\") .\n} GROUP BY ?type ORDER BY DESC(?count)",
        "complexity_description": "Multiple aggregations, filtering and grouping",
        "complexity": "complex"
    },
    {
        "id": "1266",
        "valid_gpt_response": true,
        "query": "SELECT ?gender ?genderLabel ?count WITH {\nSELECT ?gender (COUNT(?depicted) AS ?count) WHERE {\n?work wdt:P180 ?depicted.\n?depicted # wdt:P31 wd:Q5;\nwdt:P21 ?gender.\n}\nGROUP BY ?gender\n} AS %results WHERE {\nINCLUDE %results.\nFILTER(!ISBLANK(?gender))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?count)\n# (note that this query doesn't group any genders together automatically, but when using this data,\n# you should probably do so manually - e. g. include transgender <gender> in the numbers for <gender>, in accordance with their \"subclass of\" statements)",
        "complexity_description": "Multiple subqueries, grouping and filtering",
        "complexity": "complex"
    },
    {
        "id": "1267",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?LibrisXL (?article as ?Wikipedia) ?SBL ?Trans ?img (count(?links) as ?linkcount)\n{\n?person wdt:P5147 ?Transid.\nOPTIONAL {?person wdt:P3217 ?SBLid}\nBIND(URI(CONCAT(\"https://litteraturbanken.se/%C3%B6vers%C3%A4ttarlexikon/artiklar/\",?Transid)) AS ?Trans)\nBIND(URI(CONCAT(\"https://sok.riksarkivet.se/sbl/Presentation.aspx?id=\",?SBLid)) AS ?SBL)\nminus {?person wdt:P5587 ?Librisid}\nBIND(URI(CONCAT(\"https://libris.kb.se/katalogisering/search/libris?_limit=100&q=\",?Librisid)) AS ?LibrisXL)\n?person wdt:P31 wd:Q5.\nOPTIONAL {?person wdt:P569 ?birthDate}\n{?person wdt:P570 ?diedDate}\n{?person wdt:P18 ?img}\n?links schema:about ?person.\nOPTIONAL {?article schema:about ?person;\nschema:isPartOf <https://sv.wikipedia.org/>}\nOPTIONAL {?article schema:about ?person;\nschema:isPartOf <https://en.wikipedia.org/>}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"sv,en\". }\n}\ngroup by ?person ?personLabel ?LibrisXL ?article ?SBL ?Trans ?img\norder by desc(?linkcount)",
        "complexity_description": "Multiple optional patterns, bindings, and services with grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "1268",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?date\nWHERE\n{\n?item wdt:P156 wd:Q485593.\n?item wdt:P576 ?date.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "1269",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?named ?namedLabel\nWHERE\n{\n?item wdt:P31/wdt:P279* wd:Q1569167.\n?item wdt:P138 ?named.\n?named wdt:P31 wd:Q5.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, property paths and service call",
        "complexity": "medium"
    },
    {
        "id": "1270",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?dayOfDeath ?awardLabel WHERE {\n?person p:P570/psv:P570 ?dod ;\np:P166 ?aw .\n?aw pqv:P585 ?doa ;\nps:P166 ?award .\n?dod wikibase:timeValue ?dayOfDeath ;\nwikibase:timePrecision ?prec .\n?doa wikibase:timeValue ?dayOfDeath ;\nwikibase:timePrecision ?precA .\nFILTER (?prec >= 11 && ?precA >= 11)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, filters and services",
        "complexity": "complex"
    },
    {
        "id": "1271",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?image ?logo WHERE {\n?item wdt:P138 wd:Q131200.\nOPTIONAL { ?item wdt:P18 ?image. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1272",
        "valid_gpt_response": true,
        "query": "SELECT ?competition ?competitionLabel ?date ?end WHERE {\n{ ?competition wdt:P31 wd:Q2990963. }\nUNION\n{\n?competition wdt:P31 wd:Q16510064.\n?competition wdt:P361 ?comp.\n?comp wdt:P31 wd:Q2990963.\n}\nUNION\n{\n?competition wdt:P361 ?segment.\n?segment wdt:P31 wd:Q16510064.\n}\nOPTIONAL { ?competition wdt:P580 ?start. }\nOPTIONAL { ?competition wdt:P582 ?end. }\nOPTIONAL { ?competition wdt:P585 ?pointInTime. }\nBIND(COALESCE(?start, ?pointInTime) AS ?date)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nFILTER((BOUND(?start)) || (BOUND(?pointInTime)))\nFILTER(?end >= (NOW() - \"P1D\"^^xsd:duration))\nFILTER((NOW()) >= ?date)\n}\nORDER BY ?date",
        "complexity_description": "Multiple UNIONs, OPTIONAL clauses, and FILTERs with date calculations",
        "complexity": "complex"
    },
    {
        "id": "1273",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?dev ?devLabel ?logo WHERE {\n?item wdt:P178 ?dev.\n?dev wdt:P361 wd:Q95.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "1274",
        "valid_gpt_response": true,
        "query": "SELECT ?broader ?broaderLabel ?item ?itemLabel\n{\n?item wdt:P279* wd:Q6423319;\nwdt:P279 ?broader;\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Two triple patterns, one transitive property and a service call",
        "complexity": "medium"
    },
    {
        "id": "1275",
        "valid_gpt_response": true,
        "query": "SELECT ?countryLabel ?weekday ?count ?totalCount ?percentage\nWITH {\nSELECT ?country ?offset (COUNT(DISTINCT ?election) AS ?count) WHERE {\n?election wdt:P31/wdt:P279* wd:Q40231;\nwdt:P17 ?country;\np:P585/psv:P585 [\nwikibase:timeValue ?date;\nwikibase:timePrecision ?precision\n].\nFILTER(?precision >= \"11\"^^xsd:integer)\nMINUS { ?country wdt:P156|wdt:P576|wdt:P582 ?end. }\nBIND(?date - \"1776-07-04\"^^xsd:dateTime AS ?offsetInt)\nBIND(?offsetInt - (7 * xsd:integer(xsd:float(?offsetInt) / 7.0)) AS ?offsetSigned)\nBIND(IF(?offsetSigned < 0, ?offsetSigned + 7, ?offsetSigned) AS ?offset)\n}\nGROUP BY ?country ?offset\n} AS %offsets\nWITH {\nSELECT ?country ?weekday ?count WHERE {\nINCLUDE %offsets.\nBIND(IF(?offset = 0, \"Thursday\"@en,\nIF(?offset = 1, \"Friday\"@en,\nIF(?offset = 2, \"Saturday\"@en,\nIF(?offset = 3, \"Sunday\"@en,\nIF(?offset = 4, \"Monday\"@en,\nIF(?offset = 5, \"Tuesday\"@en,\nIF(?offset = 6, \"Wednesday\"@en,\n\"unknown day\"@en)))))))\nAS ?weekday)\n}\n} AS %weekdays\nWITH {\nSELECT ?country (MAX(?count) AS ?maxCount) (SUM(?count) AS ?totalCount) WHERE {\nINCLUDE %weekdays.\n}\nGROUP BY ?country\nHAVING(?totalCount >= 3) # filter out countries with not enough data (3 is a very generous limit)\n} AS %maxWeekdayCount\nWITH {\nSELECT ?country (SAMPLE(?weekday) AS ?weekday) ?count ?totalCount WHERE {\nINCLUDE %weekdays.\nINCLUDE %maxWeekdayCount.\nFILTER(?count = ?maxCount)\n}\nGROUP BY ?country ?count ?totalCount\n} AS %maxWeekday\nWHERE {\nINCLUDE %maxWeekday.\nBIND(?count / ?totalCount AS ?ratio)\nBIND(CONCAT(SUBSTR(STR(100 * ?ratio), 1, 5), \"%\") AS ?percentage)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?totalCount)",
        "complexity_description": "Multiple nested subqueries with complex filters and calculations",
        "complexity": "complex"
    },
    {
        "id": "1276",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT\n?item\n(SAMPLE(?item_label) AS ?battle)\n(SAMPLE(?place_label) AS ?place_label)\n(SAMPLE(?partOf_label) AS ?partOf_label)\n(SAMPLE(?year) AS ?year)\n(SAMPLE(?image) AS ?image)\n(SAMPLE(?layer) AS ?layer)\n(SAMPLE(?coords) AS ?coords)\n(SAMPLE(?rgb) AS ?rgb)\nWHERE {\n{\n?item wdt:P31/wdt:P279* wd:Q178561 .\n} UNION {\n?item wdt:P31/wdt:P279* wd:Q188055 .\n}\nOPTIONAL {\n?item rdfs:label ?item_label .\nFILTER(LANG(?item_label) IN ('fr', 'en')) .\n}\nOPTIONAL {\n?item wdt:P361 ?partOf .\n?partOf rdfs:label ?partOf_label .\nFILTER(LANG(?partOf_label) IN ('fr', 'en')) .\n}\nOPTIONAL { ?item wdt:P18 ?image . }\n# Place\n?item wdt:P276 ?place .\nOPTIONAL {\n?place rdfs:label ?place_label .\nFILTER(LANG(?place_label) IN ('fr', 'en')) .\n}\n# Coords\nOPTIONAL { ?item wdt:P625 ?coordsItem . }\nOPTIONAL { ?place wdt:P625 ?coordsPlace . }\nBIND(COALESCE(?coordsItem, ?coordsPlace) AS ?coords)\n# Date\n?item (wdt:P585|wdt:P580|wdt:P582) ?date .\nBIND(YEAR(?date) AS ?year) .\n# Layer\nVALUES (?layer ?min ?max ?rgb) {\n(\"Prehistory\" -100000 -3500 \"0078BF\")\n(\"Ancien History -3500 - 500\" -3500 500 \"DDD700\")\n(\"Middle Ages 500 - 1500\" -500 1500 \"5BD500\")\n(\"Early Modern Period 1500 - 1750\" 1500 1750 \"00CE23\")\n(\"Mid Modern Period 1750 - 1914\" 1750 1914 \"00C699\")\n(\"Contemporary Period 1914 - present\" 1914 3500 \"0078BF\")\n}\nFILTER (?min <= ?year && ?year < ?max)\n} GROUP BY ?item ORDER BY ?year ?battle",
        "complexity_description": "Multiple UNION, OPTIONAL, and FILTER clauses with complex filtering conditions",
        "complexity": "complex"
    },
    {
        "id": "1277",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?iiif ?image\nWHERE\n{\n?item wdt:P6108 ?iiif .\n?item wdt:P18 ?image .\n?item wdt:P180 wd:Q7307 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Three triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "1278",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?founder ?founderLabel WHERE {\n?item (wdt:P31/wdt:P279*) wd:Q4830453.\n?item wdt:P1056 wd:Q7397.\n?item wdt:P112 ?founder.\n?founder wdt:P21 wd:Q6581072.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns with property paths and service call",
        "complexity": "medium"
    },
    {
        "id": "1279",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?videogame ?videogameLabel WHERE {\n?item wdt:P31 wd:Q11424.\n?item wdt:P144 ?videogame.\n?videogame (wdt:P31/wdt:P279*) wd:Q7889.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, property paths and service call",
        "complexity": "medium"
    },
    {
        "id": "1280",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coords (round(year(?date)/100) as ?layer ) ?img WHERE {\n{\nSELECT DISTINCT ?item (SAMPLE(?directcoords) AS ?directcoords) (SAMPLE(?placecoords) AS ?placecoords) (SAMPLE(?date) AS ?date) {\n?item wdt:P195 wd:Q1376 ; wdt:P571 ?date .\n?item p:P189 ?discoveryplaceS .\n?discoveryplaceS ps:P189 ?discoveryplace .\nOPTIONAL { ?discoveryplaceS pq:P625 ?directcoords . }\nOPTIONAL { ?discoveryplace wdt:P625 ?placecoords . }\n} GROUP BY ?item\n}\nBIND(COALESCE(?directcoords, ?placecoords) AS ?coords)\noptional { ?item wdt:P18 ?img } .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\". }\n}",
        "complexity_description": "Multiple subqueries, optional patterns, and grouping",
        "complexity": "complex"
    },
    {
        "id": "1281",
        "valid_gpt_response": true,
        "query": "SELECT ?casa_consistorial ?casa_consistorialLabel ?coordenadas WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?casa_consistorial wdt:P31 wd:Q543654.\n?casa_consistorial wdt:P17 wd:Q29.\nOPTIONAL { ?casa_consistorial wdt:P625 ?coordenadas. }\n}",
        "complexity_description": "Multiple triple patterns with optional block",
        "complexity": "medium"
    },
    {
        "id": "1282",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?event ?eventLabel ?date ?location ?image WHERE {\n?event wdt:P106 wd:Q10729326 ;\nwdt:P31 wd:Q5 ;\nwdt:P569 ?date .\nOPTIONAL {?event wdt:P18 ?image .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, fr, de, it, es\". }\n}",
        "complexity_description": "Multiple triple patterns with OPTIONAL clause and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "1283",
        "valid_gpt_response": true,
        "query": "SELECT ?author ?authorLabel ?citationCount WITH {\nSELECT ?cited (COUNT(DISTINCT ?article) AS ?citationCount) WHERE {\n?article wdt:P2860 ?cited ;\nwdt:P1433 wd:Q2107904 .\n} GROUP BY ?cited\nORDER BY DESC(?citationCount)\nLIMIT 100\n} AS %ARTICLES WITH {\nSELECT ?author (COUNT(DISTINCT ?cited) AS ?citationCount) WHERE {\nINCLUDE %ARTICLES\n?cited wdt:P50 ?author\n} GROUP BY ?author\nORDER BY DESC(?citationCount)\nLIMIT 25\n} AS %AUTHORS WHERE {\nINCLUDE %AUTHORS\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?citationCount)",
        "complexity_description": "Multiple subqueries, grouping, ordering and limiting",
        "complexity": "complex"
    },
    {
        "id": "1284",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?pub ?pubLabel (MIN(?date) as ?date) (GROUP_CONCAT(DISTINCT ?prop; separator=\", \") as ?describes_properties)\nWHERE\n{\n?item wdt:P31 wd:Q13442814;\nwdt:P921 wd:Q2013.\nOPTIONAL { ?item wdt:P577 ?date }\n?item wdt:P1433 ?pub.\nOPTIONAL { ?item wdt:P3176 ?p . ?p rdfs:label ?prop . FILTER(lang(?prop)=\"en\") }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?item ?itemLabel ?pub ?pubLabel\nORDER BY ?pubLabel",
        "complexity_description": "Multiple optional patterns, grouping and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "1285",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?mountain ?mountainLabel (sample(?height) as ?height) (year(?date) as ?year) (sample(?location) as ?location) ?layer\nWHERE\n{\n?mountain wdt:P31 wd:Q8502 . # Everything that's a mountain\n?mountain wdt:P625 ?location . # and has a coordinate\n?mountain p:P2044 ?heightstatement . # and has a height-statement\n?heightstatement psv:P2044 ?PSVStatement. # normalised height statement\n?PSVStatement wikibase:quantityNormalized ?another_statement .\n?another_statement wikibase:quantityAmount ?height.# height - phew!\nFILTER(?height > 6000) # only the tallest\nOPTIONAL {\n?mountain p:P793 ?event . # and within that \"significant event\" statement\n?event ps:P793 wd:Q1194369 . # continued...\n?event pq:P585 ?date . #it has a \"point in time\" qualifier statement.\nbind (\"Climbed\" as ?layer) # this seems to be what we need to get colour labels -\n# ie if it falls in the optional group of \"was first summited\"\n# then bind to a new layer, otherwise no special layer\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\ngroup by ?mountain ?mountainLabel ?date ?layer\nORDER BY DESC (?height)\nLIMIT 200",
        "complexity_description": "Multiple joins, filters, and optional patterns with grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "1286",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?event ?eventLabel ?date ?location ?image WHERE {\n?event wdt:P136 wd:Q172980 ;\nwdt:P577 ?date FILTER (YEAR(?date) <1925) .\nOPTIONAL {?event wdt:P18 ?image .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, fr, de, it, es\". }\n}",
        "complexity_description": "Filter and optional clause",
        "complexity": "medium"
    },
    {
        "id": "1287",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?image WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr, en\". }\nwd:Q59312512 wdt:P180 ?item.\nOPTIONAL { ?item wdt:P18 ?image. }\n}\nLIMIT 500",
        "complexity_description": "Simple query with optional pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "1288",
        "valid_gpt_response": true,
        "query": "SELECT ?prop ?propLabel ?count WHERE {\n{\nSELECT ?prop (COUNT(DISTINCT ?item) AS ?count) WHERE {\nhint:Query hint:optimizer \"None\" .\n?item wdt:P31 wd:Q146 .\n?item ?p ?id .\n?prop wikibase:directClaim ?p .\n} GROUP BY ?prop\n}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n} ORDER BY DESC (?count)",
        "complexity_description": "Multiple subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "1289",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?item ?itemLabel ?P31Label ?P17Label ?P131Label ?P137Label ?P361Label WHERE\n{\n?item wdt:P31/wdt:P279* wd:Q213283 .\n?item wdt:P137 wd:Q145.\noptional {?item wdt:P31 ?P31 . }\noptional {?item wdt:P17 ?P17 . }\noptional {?item wdt:P131 ?P131 . }\noptional {?item wdt:P137 ?P137 . }\noptional {?item wdt:P361 ?P361 . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple optional patterns, multiple filters and service call",
        "complexity": "complex"
    },
    {
        "id": "1290",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?accusedwitch ?precision ?coords ?Occupation ?Residence ?image (?Occupation as ?layer)\nWHERE {\n?person wdt:P4478 ?accusedwitch .\n?person wdt:P31 wd:Q5.\n?person wdt:P21 ?gender .\n?person wdt:P551 ?residence .\nOPTIONAL { ?person wdt:P106 ?occupation}\nOPTIONAL { ?person wdt:P3716 ?socialclassification }\n?residence wdt:P625 ?coords.\nOPTIONAL { ?article schema:about ?person. }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\".\n?person rdfs:label ?personLabel.\n?residence rdfs:label ?Residence .\n?occupation rdfs:label ?Occupation.\n?gender rdfs:label ?Gender.\n?socialclassification rdfs:label ?SocialClassification .\n}\n}",
        "complexity_description": "Multiple optional patterns, service call and multiple labels",
        "complexity": "complex"
    },
    {
        "id": "1291",
        "valid_gpt_response": true,
        "query": "SELECT ?thing ?location ?distance ?thingLabel ?pic WHERE {\nSERVICE wikibase:around {\n?thing wdt:P625 ?location .\nbd:serviceParam wikibase:center \"Point(8.5433407 47.3663491)\"^^geo:wktLiteral .\nbd:serviceParam wikibase:radius \"2\" .\nbd:serviceParam wikibase:distance ?distance .\n}\n?thing p:P528 ?statement . ?statement pq:P972 wd:Q53629101 .\nOPTIONAL {?thing wdt:P18 ?pic.}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?distance",
        "complexity_description": "Multiple services, optional clause, and ordering",
        "complexity": "complex"
    },
    {
        "id": "1292",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?event ?eventLabel ?date ?location ?image WHERE {\n?event wdt:P106 wd:Q16334507 ;\nwdt:P569 ?date .\nOPTIONAL {?event wdt:P18 ?image .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, fr, de, it, es\". }\n}",
        "complexity_description": "Optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1293",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?folkm ?medlemmar ?mp ?layer ?coord {\n?item wdt:P31 wd:Q615980 .\n?item wdt:P625 ?coord .\n?item wdt:P1082 ?folkm .\n?item wdt:P2124 ?medlemmar .\nBIND(FLOOR(?medlemmar/?folkm*1000+0.5)/10 AS ?mp)\nBIND(IF(?mp<40,\"-40\",IF(?mp<50,\"40-50\",IF(?mp<60,\"50-60\",IF(?mp<70,\"60-70\",IF(?mp<80,\"70-80\",\"80-\"))))) AS ?layer)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"sv\". }\n}\nORDER BY DESC(?mp)",
        "complexity_description": "Multiple triple patterns, BIND functions with arithmetic operations and conditional statements",
        "complexity": "complex"
    },
    {
        "id": "1294",
        "valid_gpt_response": true,
        "query": "SELECT ?countryLabel (GROUP_CONCAT(?genreLabel; SEPARATOR=\", \") AS ?genres) WHERE {\n# for every country, find the maximum number of performers for some genre\n{ SELECT ?country (MAX(?genrePerformers) AS ?maxPerformers) WHERE {\n# for every country and genre, find the maximum number of performers\nSELECT ?country (MAX(COUNT(DISTINCT ?performer)) AS ?genrePerformers) WHERE {\n?genre wdt:P31/wdt:P279* wd:Q188451 ; # is-a musical genre\n^wdt:P136 ?performer ; # genre of performer\n{{ ?performer wdt:P31/wdt:P279* wd:Q215380 } UNION # performer is-a band\n{ ?performer ((wdt:P31/wdt:P279*)|wdt:P106) wd:Q639669 }} # ... or a musician\n?performer (wdt:P27|wdt:P495)/wdt:P131* ?country . # performer originating in/citizen of country\n?country wdt:P31 wd:Q3624078 . # country is a sovereign state\n} GROUP BY ?country ?genre\n} GROUP BY ?country }\n# for every country and genre, find the number of performers\n{ SELECT ?country ?genre ?genreLabel\n(COUNT(DISTINCT ?performer) AS ?performers) WHERE {\n?genre wdt:P31/wdt:P279* wd:Q188451 ; # is-a musical genre\n^wdt:P136 ?performer ; # genre of performer\nrdfs:label ?genreLabel # also fetch the label\nFILTER(LANG(?genreLabel) = \"en\")\n{{ ?performer wdt:P31/wdt:P279* wd:Q215380 } UNION # performer is-a band\n{ ?performer ((wdt:P31/wdt:P279*)|wdt:P106) wd:Q639669 }} # ... or a musician\n?performer (wdt:P27|wdt:P495) ?country . # performer originating in/citizen of country\n} GROUP BY ?country ?genre ?genreLabel\n}\nFILTER(?performers = ?maxPerformers) # keep only those combinations of country and genre\n# where the number of performers is maximal\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?countryLabel ORDER BY ?countryLabel",
        "complexity_description": "Multiple nested subqueries, complex filtering and grouping",
        "complexity": "complex"
    },
    {
        "id": "1295",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?pres ?presLabel ?image WHERE {\n?item wdt:P225 ?taxonName.\n?item wdt:P105 wd:Q7432.\n?item wdt:P138 ?pres.\n?pres wdt:P39 wd:Q11696.\n?pres wdt:P18 ?image.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins and filters with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "1296",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?label ?coord\nWHERE\n{\n?item wdt:P17 wd:Q142 .\n?item wdt:P31 wd:Q484170.\n?item wdt:P625 ?coord .\n?item rdfs:label ?labelWithLanguage.\nFILTER(CONTAINS(LCASE(STR(?labelWithLanguage)), \"saint\"))\nFILTER(LANG(?labelWithLanguage) = \"fr\")\nBIND(STR(?labelWithLanguage) AS ?label)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" }\n}",
        "complexity_description": "Multiple filters, language binding and service call",
        "complexity": "medium"
    },
    {
        "id": "1297",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?label ?coord ?rgb WHERE {\n?item wdt:P17 wd:Q38.\n?item wdt:P31 wd:Q747074.\n?item wdt:P625 ?coord.\n?item rdfs:label ?labelWithLanguage.\nBIND(STR(?labelWithLanguage) AS ?label)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"it\". }\nFILTER(STRENDS(?labelWithLanguage, \"ago\") || STRENDS(?labelWithLanguage, \"ate\") || STRENDS(?labelWithLanguage, \"asco\"))\nFILTER((LANG(?labelWithLanguage)) = \"it\")\nBIND(\nIF(STRENDS(?labelWithLanguage, \"ago\"), \"CC3333\",\nIF(STRENDS(?labelWithLanguage, \"ate\"), \"33AACC\",\nIF(STRENDS(?labelWithLanguage, \"asco\"), \"AA33CC\",\n\"\"))) AS ?rgb).\n}",
        "complexity_description": "Multiple filters and conditional bindings",
        "complexity": "complex"
    },
    {
        "id": "1298",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel WHERE {\n?item wdt:P826 wd:Q277793; # tonality: A major\n?wdt [ wdt:P463? wd:Q18233 ]. # linked via any property (since I don't know if it should be \"composer\", \"performer\" or something else) to ABBA or one of its members\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "1299",
        "valid_gpt_response": true,
        "query": "SELECT ?q ?qLabel ?catchphrase { ?q wdt:P6251 ?catchphrase . SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } }",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "1300",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?author ?authorLabel ?image ?date WHERE {\n?author wdt:P106 wd:Q170790 ;\nwdt:P19/wdt:P17 wd:Q668 .\n?author wdt:P569 ?date .\nOPTIONAL {?author wdt:P18 ?image .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, it, de, es, fr\" }\n} ORDER BY ?authorLabel",
        "complexity_description": "Multiple triple patterns with OPTIONAL clause and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "1301",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?image WHERE {\n?item wdt:P195 wd:Q812285 .\n?item wdt:P31 wd:Q3305213 .\n?item wdt:P18 ?image .\n}",
        "complexity_description": "Three simple triple patterns with no filters or optional blocks",
        "complexity": "simple"
    },
    {
        "id": "1302",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?pic\nWHERE\n{\n?item wdt:P31/wdt:P279* wd:Q178.\n?item wdt:P18 ?pic\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],it,en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "1303",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?personLabel ?koord WHERE {\n?person wdt:P166/wdt:P31* wd:Q19020 .\n?person wdt:P19 ?jaiolekua.\n?jaiolekua wdt:P625 ?koord.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}",
        "complexity_description": "Multiple triple patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "1304",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?conductorLabel ?countryLabel ?age\nWHERE\n{\n?item wdt:P31 wd:Q339152 ; wdt:P585 ?date ; wdt:P3300 ?conductor .\n?conductor wdt:P569 ?DOB ; wdt:P27 ?country .\nBIND(YEAR(?date) - YEAR(?DOB) as ?age) .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" }\n} order by ?date",
        "complexity_description": "Multiple joins, filter and aggregation",
        "complexity": "medium"
    },
    {
        "id": "1305",
        "valid_gpt_response": true,
        "query": "SELECT ?taxon ?taxonLabel ?name WHERE {\n?taxon wdt:P31 wd:Q16521;\nwdt:P138 wd:Q76.\nOPTIONAL { ?taxon wdt:P225 ?name. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Optional clause and service query",
        "complexity": "medium"
    },
    {
        "id": "1306",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?image {\n?item wdt:P31 wd:Q5 ; wdt:P18 ?image .\nMINUS { ?item wdt:P21 ?gender }\n} LIMIT 100",
        "complexity_description": "Two triple patterns, one MINUS clause",
        "complexity": "medium"
    },
    {
        "id": "1307",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT\n(SAMPLE(COALESCE(?en_label, ?item_label)) as ?name)\n#(SAMPLE(COALESCE(?place_en_label, ?place_label)) as ?place)\n(SAMPLE(?country_label) as ?country)\n(SAMPLE(?type_label) as ?type)\n(SAMPLE(?material_label) as ?material)\n(SAMPLE(?image) as ?picture)\n(SAMPLE(?color_label) as ?color)\n(SAMPLE(?production) as ?production_tons)\n(SAMPLE(?area) as ?area_hectares)\n(SAMPLE(?inception) as ?inception)\n(SAMPLE(?item) as ?wikidata)\nWHERE {\n?type wdt:P279* wd:Q10943.\n?item p:P31/ps:P31 ?type.\nOPTIONAL {\n{?item wdt:P17 ?country.} UNION {?item wdt:P495 ?country.}\n?country rdfs:label ?country_label. FILTER(LANG(?country_label) = \"en\")\n}\nOPTIONAL {?item rdfs:label ?en_label. FILTER(LANG(?en_label) = \"en\")} OPTIONAL {?item rdfs:label ?item_label}\n#OPTIONAL {?item wdt:P1071 ?place.} OPTIONAL { ?place rdfs:label ?place_en_label. FILTER(LANG(?place_en_label) = \"en\")} OPTIONAL {?place rdfs:label ?place_label}\nOPTIONAL {?type rdfs:label ?type_label . FILTER(LANG(?type_label) = \"en\")}\nOPTIONAL {?item wdt:P18 ?image.}\nOPTIONAL {?item wdt:P1092 ?production.}\nOPTIONAL {?item wdt:P2046 ?area.}\nOPTIONAL {?item wdt:P571 ?inception.}\nOPTIONAL {?item wdt:P462 ?color. ?color rdfs:label ?color_label . FILTER(LANG(?color_label) = \"en\")}\nOPTIONAL {?item wdt:P186 ?material. ?material rdfs:label ?material_label . FILTER(LANG(?material_label) = \"en\")}\n} GROUP BY ?item ORDER BY ASC(?label)",
        "complexity_description": "Multiple optional patterns, unions, and filters",
        "complexity": "complex"
    },
    {
        "id": "1308",
        "valid_gpt_response": true,
        "query": "SELECT ?taxon ?taxonLabel (SUM(?male) AS ?maleCount) (SUM(?female) AS ?femaleCount) WHERE {\n?taxon wdt:P31 wd:Q16521.\n?item wdt:P31 ?taxon.\nOPTIONAL { ?item wdt:P21 wd:Q44148. BIND(1 AS ?male). }\nOPTIONAL { ?item wdt:P21 wd:Q43445. BIND(1 AS ?female). }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?taxon ?taxonLabel\nHAVING(?femaleCount > ?maleCount)\nORDER BY DESC(?femaleCount - ?maleCount)",
        "complexity_description": "Multiple optional patterns, aggregation and filtering",
        "complexity": "complex"
    },
    {
        "id": "1309",
        "valid_gpt_response": true,
        "query": "SELECT ?river (SAMPLE(?length) AS ?length) (SAMPLE(?area) AS ?area) ?riverLabel WHERE {\n?river wdt:P31/wdt:P279* wd:Q355304;\np:P2043/psn:P2043/(wikibase:quantityAmount|wikibase\u03b2:quantityAmount) ?lengthInMetres;\np:P2053/psn:P2053/(wikibase:quantityAmount|wikibase\u03b2:quantityAmount) ?areaInSquareMetres.\nBIND(?lengthInMetres / 1000 AS ?length).\nBIND(?areaInSquareMetres / 1000000 AS ?area).\nFILTER(?length > 500).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?river ?riverLabel",
        "complexity_description": "Multiple filters, bindings and service calls",
        "complexity": "complex"
    },
    {
        "id": "1310",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?placeLabel ?departmentLabel ?coords ?image WHERE {\n?item wdt:P31/wdt:P279* wd:Q493694 ;\nwdt:P17 wd:Q142 ;\nwdt:P131 ?place .\n?place wdt:P131* ?department .\n?department wdt:P31 wd:Q6465 .\n?item wdt:P625 ?coords .\nOPTIONAL { ?item wdt:P18 ?image . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" . }\n} ORDER BY ?departmentLabel ?placeLabel ?itemLabel",
        "complexity_description": "Multiple joins, optional clause and service call",
        "complexity": "complex"
    },
    {
        "id": "1311",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coords ?image WHERE {\n?item wdt:P31 wd:Q38720 ;\nwdt:P131 ?arrdt ;\nwdt:P625 ?coords ;\nwdt:P18 ?image .\n?arrdt wdt:P131 wd:Q90 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" . }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple triple patterns, SERVICE clause and ORDER BY",
        "complexity": "medium"
    },
    {
        "id": "1312",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?formula WHERE {\n?item wdt:P2534 ?formula.\nFILTER(CONTAINS(?formula, \"&\") || CONTAINS(?formula, \"\")).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Filter and service clause",
        "complexity": "medium"
    },
    {
        "id": "1313",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?adresse ?coords ?image\nWHERE\n{\n?item wdt:P31 wd:Q1195942 .\n?item wdt:P131 ?place .\n?item wdt:P969 ?adresse .\n?place wdt:P131 wd:Q90 .\nOPTIONAL { ?item wdt:P625 ?coords . }\nOPTIONAL { ?item wdt:P18 ?image . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" . }\n} ORDER BY ?placeLabel ?itemLabel",
        "complexity_description": "Multiple triple patterns, optional blocks and service call",
        "complexity": "medium"
    },
    {
        "id": "1314",
        "valid_gpt_response": true,
        "query": "SELECT ?wikipediaLabel ?filmcount WHERE {\n?wikipedia wdt:P31 wd:Q10876391 .\n?wikipedia wdt:P424 ?sprachcode .\n?wikipedia rdfs:label ?wikipediaLabel\nFILTER(lang(?wikipediaLabel) = \"de\")\n{ SELECT ?sprachcode (COUNT(DISTINCT ?film) as ?filmcount) WHERE {\n?film wdt:P31/wdt:P279* wd:Q11424 .\n?article schema:about ?film .\n?article schema:inLanguage ?sprachcode\n} GROUP BY ?sprachcode\n}\n} ORDER BY DESC (?filmcount) LIMIT 10",
        "complexity_description": "Multiple subqueries, filters and grouping",
        "complexity": "complex"
    },
    {
        "id": "1315",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel (GROUP_CONCAT(DISTINCT ?counLabel; SEPARATOR=\", \") AS ?country) (GROUP_CONCAT(DISTINCT ?hqLabel; SEPARATOR=\", \") AS ?headquarters) ?revenue ?revenue_USD ?unitLabel ?date\nWHERE {\n?item wdt:P31 wd:Q4830453.\n?item p:P2139 ?statement.\nOPTIONAL { ?item wdt:P159 ?hq. }\nOPTIONAL { ?item wdt:P17 ?coun. }\n?statement wikibase:rank ?rank.\nOPTIONAL {\n?item p:P2139 ?statement1.\n?statement1 wikibase:rank wikibase:PreferredRank.\nFILTER(?rank != wikibase:PreferredRank)\nFILTER(?statement1 != ?statement)\n}\nOPTIONAL { ?statement pq:P585 ?date. }\n{\n?statement psv:P2139 _:b9.\n_:b9 wikibase:quantityAmount ?revenue.\n_:b9 wikibase:quantityUnit wd:Q4917.\nBIND(wd:Q4917 AS ?unit)\nBIND(?revenue AS ?revenue_USD)\n}\nUNION\n{\n?statement psv:P2139 _:b10.\n_:b10 wikibase:quantityAmount ?revenue.\n_:b10 wikibase:quantityUnit ?unit.\n?unit p:P2284 ?unit_statement.\n?unit_statement wikibase:rank ?unit_rank.\n?unit_statement psv:P2284 _:b11.\n_:b11 wikibase:quantityUnit wd:Q4917.\n_:b11 wikibase:quantityAmount ?usd.\nOPTIONAL {\n?unit p:P2284 ?unit_statement1.\n?unit_statement1 (psv:P2284/wikibase:quantityUnit) wd:Q4917.\n?unit_statement1 wikibase:rank wikibase:PreferredRank.\nFILTER(?unit_rank != wikibase:PreferredRank)\nFILTER(?unit_statement1 != ?unit_statement)\n}\nBIND(?revenue * ?usd AS ?revenue_USD)\nFILTER(?unit != wd:Q4917)\nFILTER(?unit_rank != wikibase:DeprecatedRank)\nFILTER(!BOUND(?unit_statement1))\n}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n?item rdfs:label ?itemLabel .\n?coun rdfs:label ?counLabel .\n?hq rdfs:label ?hqLabel .\n?unit rdfs:label ?unitLabel .\n}\nFILTER(?rank != wikibase:DeprecatedRank)\nFILTER(!BOUND(?statement1))\n}\nGROUP BY ?item ?itemLabel ?revenue ?revenue_USD ?unitLabel ?date\nORDER BY DESC(?revenue_USD)\nLIMIT 15",
        "complexity_description": "Multiple optional patterns, unions, and filters",
        "complexity": "complex"
    },
    {
        "id": "1316",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?actorLabel ?characterLabel WHERE {\n{ [] p:P161 [\nps:P161 ?actor;\npq:P453 ?character\n].\n} UNION {\n?character wdt:P175 ?actor.\n}\n?character wdt:P31/wdt:P279* wd:Q95074.\n?actor wdt:P570 ?died.\nFILTER(?died >= NOW()-\"P50D\"^^xsd:duration).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?actor",
        "complexity_description": "Multiple UNION patterns, FILTER and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "1317",
        "valid_gpt_response": true,
        "query": "SELECT ?companyLabel (GROUP_CONCAT(DISTINCT ?founderLabel; separator=\", \") AS ?founders) WHERE {\n?company wdt:P112 ?founder;\nwdt:P17 wd:Q30.\nFILTER EXISTS { ?company wdt:P414|wdt:P249 []. }\n?founder (wdt:P22|wdt:P25)?/wdt:P19 ?placeOfBirth.\nMINUS { ?placeOfBirth wdt:P17 wd:Q30. }\nOPTIONAL { ?founder rdfs:label ?founderLabel. FILTER(LANG(?founderLabel) = \"en\"). }\nOPTIONAL { ?company wdt:P2403|wdt:P2137|wdt:P2139|wdt:P2226|wdt:P2295 ?money. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?companyLabel\nORDER BY DESC(MAX(?money)) ?companyLabel",
        "complexity_description": "Multiple filters, optional patterns, and grouping with aggregation",
        "complexity": "complex"
    },
    {
        "id": "1318",
        "valid_gpt_response": true,
        "query": "SELECT ?wizard ?wizardLabel ?groupLabel ?group WHERE {\n?wizard wdt:P31 wd:Q15298259; # in Harry Potter universe\nwdt:P463 ?group.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "simple"
    },
    {
        "id": "1319",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?item ?itemLabel ?coord WHERE {\n?item wdt:P31/wdt:P279* wd:Q1370598 ;\nwdt:P625 ?location ;\np:P625 [ psv:P625 [ wikibase:geoLatitude ?lat ; ] ; ps:P625 ?coord ]\nFILTER(?lat < -48).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?lat ?itemLabel",
        "complexity_description": "Multiple triple patterns, property paths, and filter",
        "complexity": "complex"
    },
    {
        "id": "1320",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?itemDescription ?namedAfterLabel ?namedAfterDescription WHERE {\n?item wdt:P31/wdt:P279* wd:Q14897293;\nwdt:P138 ?namedAfter.\nMINUS { ?namedAfter wdt:P31/wdt:P279* wd:Q14897293. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple triple patterns, MINUS clause and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "1321",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?Title ?Creator (YEAR(?Date) AS ?YearCreated) ?Image ?coord WHERE {\n{ ?item wdt:P195 wd:Q636400. } UNION { ?item wdt:P276 wd:Q636400. }\n?item rdfs:label ?Title.\nOPTIONAL {\n?item wdt:P170 ?QCreator.\nFILTER((LANG(?Creator)) = \"en\")\n}\nOPTIONAL { ?item wdt:P571 ?Date. }\nOPTIONAL { ?item wdt:P18 ?Image. }\nFILTER((LANG(?Title)) = \"en\")\n}",
        "complexity_description": "Multiple UNION and OPTIONAL clauses with FILTERs",
        "complexity": "complex"
    },
    {
        "id": "1322",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel (GROUP_CONCAT(DISTINCT ?positionLabel; separator=\", \") AS ?positions) (GROUP_CONCAT(DISTINCT ?crimeLabel; separator=\", \") AS ?crimes) WHERE {\n?person wdt:P31 wd:Q5;\nwdt:P39 ?position;\nwdt:P1399 ?crime.\nOPTIONAL { ?person rdfs:label ?personLabel. FILTER(LANG(?personLabel) = \"en\"). }\nOPTIONAL { ?position rdfs:label ?positionLabel. FILTER(LANG(?positionLabel) = \"en\"). }\nOPTIONAL { ?crime rdfs:label ?crimeLabel. FILTER(LANG(?crimeLabel) = \"en\"). }\n}\nGROUP BY ?person ?personLabel\nORDER BY DESC(COUNT(DISTINCT ?crime)) ?crimes",
        "complexity_description": "Multiple group concat, optional patterns, and filter conditions",
        "complexity": "complex"
    },
    {
        "id": "1323",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?monarch ?monarchLabel WHERE {\n?monarch wdt:P31 wd:Q5;\n(wdt:P106|wdt:P39)/(wdt:P31|wdt:P279)* wd:Q116; # occupation or position held: some kind of monarch\nwdt:P1399 wd:Q1475448. # convicted of: regicide\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple filters, property paths and service call",
        "complexity": "medium"
    },
    {
        "id": "1324",
        "valid_gpt_response": true,
        "query": "SELECT ?antipope ?antipopeLabel ?born ?floruit ?died WHERE {\n?antipope p:P39/ps:P39/wdt:P279* wd:Q172748.\nOPTIONAL { ?antipope wdt:P569 ?born. }\nOPTIONAL { ?antipope wdt:P1317 ?floruit. }\nOPTIONAL { ?antipope wdt:P570 ?died. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY COALESCE(?born,?floruit,?died)",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "1325",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?commonscat ?date ?map ?coord WHERE {\n?item wdt:P361+ wd:Q8676 .\nOPTIONAL {?item wdt:P580 ?date} .\nOPTIONAL {?item wdt:P585 ?date}\nOPTIONAL {?item wdt:P625 ?coord} .\nOPTIONAL {?item wdt:P1621 ?map} .\nOPTIONAL {?item wdt:P1943 ?map} .\nOPTIONAL {?item wdt:P1944 ?map} .\nOPTIONAL {?item wdt:P242 ?map} .\nOPTIONAL {?item wdt:P373 ?commonscat}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n} ORDER BY ?date",
        "complexity_description": "Multiple optional patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "1326",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?class ?commonscat ?img ?layer (SAMPLE(?coord) AS ?coord) WHERE {\nhint:Query hint:optimizer \"None\" .\n?item wdt:P131+ wd:Q23143 ; wdt:P1435 wd:Q15700818 ; wdt:P31?/wdt:P279* wd:Q41176\nOPTIONAL {\n?item wdt:P373 ?commonscat\n}\nOPTIONAL {\n?item wdt:P279 [] .\nBIND('class' AS ?class) .\n}\nOPTIONAL {\n?item wdt:P625 ?coord\n}\nOPTIONAL {\n?item wdt:P18 ?img .\n}\nBIND(IF(bound(?img),'image','no image') AS ?layer) .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} GROUP BY ?item ?itemLabel ?class ?commonscat ?img ?layer\nORDER BY DESC(?class) ?itemLabel",
        "complexity_description": "Multiple optional patterns, property paths, and service calls",
        "complexity": "complex"
    },
    {
        "id": "1327",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person ?personLabel ?placeLabel ?dob WHERE {\n?person wdt:P19 ?place.\n{ ?place wdt:P31/wdt:P279* wd:Q165. } UNION { ?place wdt:P31/wdt:P279* wd:Q1229765. }\nOPTIONAL { ?person wdt:P569 ?dob. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?dob ?placeLabel",
        "complexity_description": "Multiple UNION patterns, OPTIONAL clause, and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "1328",
        "valid_gpt_response": true,
        "query": "SELECT ?id ?lieu (count(*) as ?nombre)\nWHERE {\n?pid wdt:P31 wd:Q5 .\n?pid wdt:P119 ?id .\nOPTIONAL {\n?id rdfs:label ?lieu filter (lang(?lieu) = \"fr\") .\n}\n}\nGROUP BY ?id ?lieu\nORDER BY DESC(?nombre) ASC(?lieu)\nLIMIT 50",
        "complexity_description": "Medium complexity due to OPTIONAL clause, GROUP BY and ORDER BY",
        "complexity": "medium"
    },
    {
        "id": "1329",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?creatorLabel ?image WHERE {\n?item wdt:P195 wd:Q3044768 ;\nwdt:P170 ?creator .\n?creator wdt:P21 wd:Q6581072 .\nOPTIONAL { ?item wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" . }\n} ORDER BY ?creatorLabel ?itemLabel",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1330",
        "valid_gpt_response": true,
        "query": "SELECT ?layer ?cheese ?cheeseLabel ?img ?coord\nWHERE\n{\n?cheese wdt:P279* wd:Q10943 ; wdt:P1071/wdt:P625 ?coord ; wdt:P186 ?ingredient .\n?ingredient wdt:P279 wd:Q8495 .\n?ingredient rdfs:label ?layer .\noptional { ?cheese wdt:P18 ?img }\nFILTER (lang(?layer) = \"en\").\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Multiple joins, optional clause and filter",
        "complexity": "medium"
    },
    {
        "id": "1331",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?stateLabel ?startDate ?image WHERE {\n?item wdt:P1001 ?state ;\nwdt:P571 ?startDate ;\nwdt:P18 ?image .\n{ ?item wdt:P1366* wd:Q79874 ;\nwdt:P576 ?endDate . } UNION\n{ ?item wdt:P1001 wd:Q889 }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?startDate ?endDate",
        "complexity_description": "Multiple triple patterns, UNION operator, and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "1332",
        "valid_gpt_response": true,
        "query": "SELECT ?author ?authorLabel (GROUP_CONCAT(DISTINCT ?title; separator = \"; \") AS ?books) WHERE {\nVALUES ?class { wd:Q7725634 wd:Q571 }\n?book wdt:P31/wdt:P279* ?class;\nwdt:P50 ?author.\n?author wdt:P31/wdt:P279* wd:Q95074.\nMINUS { ?author wdt:P31/wdt:P279* wd:Q18563354. }\nOPTIONAL { ?book wdt:P1476 ?bookTitle. FILTER(LANG(?bookTitle) = \"en\"). }\nOPTIONAL { ?book rdfs:label ?bookLabel. FILTER(LANG(?bookLabel) = \"en\"). }\nFILTER(BOUND(?bookTitle) || BOUND(?bookLabel)).\nBIND(COALESCE(?bookTitle, ?bookLabel) AS ?title).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?author ?authorLabel\nORDER BY ASC(COUNT(DISTINCT ?title))",
        "complexity_description": "Multiple filters, optional patterns, and subqueries",
        "complexity": "complex"
    },
    {
        "id": "1333",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?coor WHERE {\n?item wdt:P31/wdt:P279* wd:Q16970 ; wdt:P131 ?commune .\n?commune wdt:P131 wd:Q12709.\n?item wdt:P625 ?coor.\n}",
        "complexity_description": "Multiple joins and property paths",
        "complexity": "medium"
    },
    {
        "id": "1334",
        "valid_gpt_response": true,
        "query": "SELECT ?city ?cityLabel (MAX(?inhabitants) AS ?inhabitants) WHERE {\n?city (p:P31/ps:P31)/wdt:P279* wd:Q1637706.\nMINUS { ?inhabitant ps:P19|ps:P551|ps:P20 ?city. }\nOPTIONAL { ?city wdt:P1082 ?inhabitants. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?city ?cityLabel",
        "complexity_description": "Multiple patterns, optional clause, minus clause, and service call",
        "complexity": "complex"
    },
    {
        "id": "1335",
        "valid_gpt_response": true,
        "query": "SELECT ?country ?countryLabel ?population\n(GROUP_CONCAT(DISTINCT ?countryBLabel ; separator = \", \") AS ?similarPopulation)\nWHERE {\n?country wdt:P31 wd:Q6256 .\n?country wdt:P1082 ?population .\n?countryB wdt:P31 wd:Q6256 .\n?countryB wdt:P1082 ?populationB .\nFILTER (?country != ?countryB && ?populationB >= ?population * 0.95 && ?populationB <= ?population * 1.05)\n?country rdfs:label ?countryLabel . FILTER (LANG(?countryLabel) = \"en\") .\n?countryB rdfs:label ?countryBLabel . FILTER (LANG(?countryBLabel) = \"en\") .\n}\nGROUP BY ?country ?countryLabel ?population\nORDER BY ?countryLabel",
        "complexity_description": "Multiple filters, group by and order by clauses",
        "complexity": "complex"
    },
    {
        "id": "1336",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?property ?propertyLabel ?item ?itemLabel WHERE {\n?item ?p wd:Q1246516 .\nFILTER NOT EXISTS { ?item a ?type . }\n?property ?ref ?p .\n?property a wikibase:Property .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?property ?item",
        "complexity_description": "Multiple filters, joins and subqueries",
        "complexity": "complex"
    },
    {
        "id": "1337",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?title ?lang ?text ?image WHERE {\n?item wdt:P1922 ?_incipit ; wdt:P31 wd:Q571 .\nBIND(LANG(?_incipit) as ?lang) .\nFILTER(?lang IN ('de', 'en', 'es', 'fr', 'la')) .\nVALUES (?lang ?compl) {\n('en' \" And then the murders began.\")\n('es' \" Entonces comenzaron los asesinatos.\")\n('de' \" Und dann begannen die Morde.\")\n('fr' \" Et puis les meurtres ont commence.\")\n('la' \" Tunc caedes inceperunt.\")\n}\nBIND(CONCAT(?_incipit, ?compl) AS ?text) .\n?item rdfs:label ?title . FILTER(LANG(?title) = ?lang) .\nOPTIONAL { ?item wdt:P18 ?image . }\n}",
        "complexity_description": "Multiple filters, bindings and optional clause",
        "complexity": "complex"
    },
    {
        "id": "1338",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel (YEAR(?date) AS ?year) ?dimensions ?locationLabel ?countryLabel ?image WHERE {\n?item wdt:P170 wd:Q41264 .\n{ ?item wdt:P180/wdt:P31/wdt:P279* wd:Q4006 } UNION { ?item wdt:P180/wdt:P279* wd:Q4006 }\nOPTIONAL { ?item p:P276 ?statement . ?statement ps:P276 ?location . FILTER NOT EXISTS { ?statement pq:P582 ?x } OPTIONAL { ?location wdt:P17 ?country } }\nOPTIONAL { ?item wdt:P18 ?image }\nOPTIONAL { ?item wdt:P2048 ?length }\nOPTIONAL { ?item wdt:P2049 ?width }\nOPTIONAL { ?item wdt:P571 ?date }\nBIND (CONCAT(STR(?length),\"x\",STR(?width)) AS ?dimensions)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple UNION, OPTIONAL clauses and BIND operation",
        "complexity": "complex"
    },
    {
        "id": "1339",
        "valid_gpt_response": true,
        "query": "SELECT ?Peintre ?PeintreLabel (SUM(?NbArticles) as ?TotalArticles)\nWHERE {\n?item wdt:P31/wdt:P279* wd:Q3305213.\n?item wdt:P170 ?Peintre.\nMINUS {?item wdt:P170 wd:Q4233718}\n?item wikibase:sitelinks ?NbArticles .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr,en\" }\n} GROUP BY ?Peintre ?PeintreLabel\nORDER BY DESC(?TotalArticles)\nLIMIT 100",
        "complexity_description": "Multiple joins, subqueries and aggregations",
        "complexity": "complex"
    },
    {
        "id": "1340",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?_image WHERE {\n{ ?item wdt:P106 wd:Q15709480.} # computational biologist\nUNION\n{ ?item wdt:P106 wd:Q15956275.} # bioinformatician\n?item wdt:P21 wd:Q6581072. # female\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\nOPTIONAL { ?item wdt:P18 ?_image. }\n}",
        "complexity_description": "Multiple UNION patterns, OPTIONAL clause, and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "1341",
        "valid_gpt_response": true,
        "query": "SELECT ?occupationLabel ?women ?men WITH {\nSELECT ?occupation (SUM(?woman) AS ?women) (SUM(?man) AS ?men) WHERE {\nBIND(wd:Q30 AS ?country). # substitute country of your choice here (remove the Q30, hit Ctrl+Space and start typing the country name, select the right one from the suggestions with the arrow keys and insert it with Enter)\n?person wdt:P31 wd:Q5;\nwdt:P27 ?country; # remove this to search world-wide - results in query timeout unless you reduce the dataset in some other fashion\np:P106/ps:P106 ?occupation.\n{ ?person wdt:P21 wd:Q6581097. BIND(1 AS ?man). } UNION\n{ ?person wdt:P21 wd:Q2449503. BIND(1 AS ?man). } UNION\n{ ?person wdt:P21 wd:Q6581072. BIND(1 AS ?woman). } UNION\n{ ?person wdt:P21 wd:Q1052281. BIND(1 AS ?woman). }\n# TODO consider how to count P21: Q48270 (genderqueer) and Q1097630 (intersex)\n}\nGROUP BY ?occupation\n} AS %results WHERE {\nINCLUDE %results. # subquery as optimization: don't make the label service fetch labels for every ?person in the subquery\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY\n# divide ?variable+1 instead of ?variable to avoid division by zero\n# (unfortunately, we can't use ABS(LOG(x/y)) instead of the IF() because SPARQL has no LOG function)\nDESC(IF(?women > ?men, (?women+1)/(?men+1), (?men+1)/(?women+1)))\n# if the ratio is the same, show results with more people in total first\nDESC(?women+?men)",
        "complexity_description": "Multiple subqueries, unions, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "1342",
        "valid_gpt_response": true,
        "query": "SELECT ?award (SAMPLE(?label) AS ?awardLabel) ?women ?men WITH {\nSELECT ?award (SUM(?woman) AS ?women) (SUM(?man) AS ?men) WHERE {\n?person wdt:P31 wd:Q5;\np:P166/ps:P166 ?award.\n{ ?person wdt:P21 wd:Q6581097. BIND(1 AS ?man). } UNION\n{ ?person wdt:P21 wd:Q2449503. BIND(1 AS ?man). } UNION\n{ ?person wdt:P21 wd:Q6581072. BIND(1 AS ?woman). } UNION\n{ ?person wdt:P21 wd:Q1052281. BIND(1 AS ?woman). }\n}\nGROUP BY ?award\nHAVING(\n# more women than men\n?women > ?men &&\n# but exclude women-only awards\n?men > 0\n)\n} AS %results WHERE {\nINCLUDE %results.\nOPTIONAL { ?award wdt:P1448 ?officialName. }\nOPTIONAL { ?award rdfs:label ?enLabel. FILTER(LANG(?enLabel) = \"en\"). }\nOPTIONAL { ?award rdfs:label ?anyLabel. }\nBIND(COALESCE(?officialName, ?enLabel, ?anyLabel) AS ?label).\n}\nGROUP BY ?award ?women ?men\nORDER BY STR(?awardLabel)",
        "complexity_description": "Multiple nested queries with UNION, GROUP BY, HAVING and OPTIONAL clauses",
        "complexity": "complex"
    },
    {
        "id": "1343",
        "valid_gpt_response": true,
        "query": "SELECT ?work ?workLabel ?actor ?actorLabel ?char ?charLabel WHERE {\n?work p:P161 ?distribution .\n?distribution ps:P161 ?actor .\n?distribution pq:P453 ?char .\n?actor wdt:P21 ?actor_gender .\n?char wdt:P21 ?char_gender .\nFILTER(?actor_gender IN (wd:Q1052281, wd:Q2449503)) .\nFILTER(?char_gender IN (wd:Q1052281, wd:Q2449503)) .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} LIMIT 100",
        "complexity_description": "Multiple filters and joins with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "1344",
        "valid_gpt_response": true,
        "query": "SELECT ?object ?objectLabel ?image (COUNT(DISTINCT ?sitelink) AS ?sitelinks)\nWHERE {\n{\n{ ?object wdt:P397+ wd:Q525 . }\nUNION\n{ ?object wdt:P361 wd:Q544 . }\n}\n?object wdt:P18 ?image .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n?sitelink schema:about ?object .\n}\nGROUP BY ?object ?objectLabel ?image\nORDER BY DESC(?sitelinks)",
        "complexity_description": "Multiple UNION patterns, SERVICE clause, and GROUP BY with aggregate function",
        "complexity": "complex"
    },
    {
        "id": "1345",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?countryLabel ?coords ?image WHERE {\n?item wdt:P31/wdt:P279* wd:Q954501 .\nOPTIONAL { ?item wdt:P17 ?country . }\nOPTIONAL { ?item wdt:P625 ?coords . }\nOPTIONAL { ?item wdt:P18 ?image . }\nFILTER NOT EXISTS { ?item wdt:P576 ?x }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?countryLabel ?itemLabel",
        "complexity_description": "Multiple optional patterns, filter not exists and service call",
        "complexity": "complex"
    },
    {
        "id": "1346",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?article ?articleLabel ?author ?authorLabel ?image (YEAR(?date) as ?year)\nWHERE\n{\nBIND(MONTH(NOW()) AS ?nowMonth)\nBIND(DAY(NOW()) AS ?nowDay)\n?article wdt:P31 wd:Q13442814;\nwdt:P577 ?date .\nFILTER (MONTH(?date) = ?nowMonth && DAY(?date) = ?nowDay).\n?article wdt:P50 ?author.\n?author wdt:P18 ?image .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}\nORDER BY ASC(?date)\nLIMIT 1000",
        "complexity_description": "Multiple filters, bindings, and service calls",
        "complexity": "complex"
    },
    {
        "id": "1347",
        "valid_gpt_response": true,
        "query": "SELECT ?publication ?publicationLabel ?sitelinks WITH {\nSELECT ?publication (COUNT(?sitelink) as ?sitelinks) WHERE\n{\n?publication wdt:P31 wd:Q13442814 . #scientific articles\n{?sitelink schema:about ?publication . } #sitelinks\n}\nGROUP BY ?publication\n} AS %results WHERE {\nINCLUDE %results.\nFILTER (?sitelinks > 1)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC(?sitelinks)",
        "complexity_description": "Multiple subqueries, grouping and filtering",
        "complexity": "complex"
    },
    {
        "id": "1348",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?item ?itemLabel ?date (GROUP_CONCAT(distinct ?creaLb; separator=\" - \") as ?createur) ?img\nWHERE {\n?item wdt:P136 wd:Q1400612 ;\nwdt:P170 ?crea ;\nwdt:P18 ?img ;\np:P170 [ pq:P1777 wd:Q41264 ] ;\np:P571 ?declarationdate .\nOPTIONAL { MINUS {?declarationdate pq:P1319 ?pasavant }\nMINUS {?declarationdate pq:P1480 wd:Q5727902 }\n?declarationdate ps:P571 ?dateunique .\nBIND (year(?dateunique) AS ?date)}\nOPTIONAL { MINUS {?declarationdate pq:P1319 ?pasavant }\n?declarationdate pq:P1480 wd:Q5727902.\n?declarationdate ps:P571 ?dateunique .\nBIND (CONCAT(\"c.\",STR(year(?dateunique))) AS ?date)}\nOPTIONAL { ?declarationdate pq:P1319 ?pasavant .\n?declarationdate pq:P1326 ?pasapres.\nBIND (CONCAT(STR(year(?pasavant)),\"-\",STR(year(?pasapres))) AS ?date)}\n?crea rdfs:label ?creaLb . filter (lang(?creaLb) = \"fr\") .\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"fr\"}\n} GROUP BY ?item ?itemLabel ?date ?img",
        "complexity_description": "Multiple optional patterns, grouping and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "1349",
        "valid_gpt_response": true,
        "query": "select ?author ?authorLabel ?work ?workLabel where {\n{\nselect ?work ?author where {\nservice gas:service {\ngas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.BFS\" ;\ngas:in wd:Q173746 ;\ngas:target wd:Q25975509 ;\ngas:traversalDirection \"Undirected\" ;\ngas:out ?work ;\ngas:out1 ?depth ;\ngas:out2 ?predecessor ;\ngas:linkType wdt:P50 ;\ngas:maxIterations 12;\ngas:maxVisited 2000 .\n}\n?work wdt:P50 ?author\n}\n}\nunion {\nbind(wd:Q25975509 as ?work)\n?work wdt:P50 ?author .\n}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}",
        "complexity_description": "Multiple services, subqueries, and UNION operator",
        "complexity": "complex"
    },
    {
        "id": "1350",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?tz ?tzLabel ?offset ?countryLabel ?coords WHERE {\n?tz wdt:P31/wdt:P279* wd:Q12143;\nwdt:P2907 ?offset.\nFILTER(ABS(?offset) > 12).\nOPTIONAL { ?tz wdt:P17 ?country. }\nOPTIONAL { ?tz wdt:P625 ?coords. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?offset",
        "complexity_description": "Multiple filters, optional patterns and service call",
        "complexity": "complex"
    },
    {
        "id": "1351",
        "valid_gpt_response": true,
        "query": "SELECT ?country ?countryLabel ?lang ?capital ?capitalLabel\nWHERE {\n?country wdt:P31 wd:Q6256 .\n?country wdt:P37/wdt:P218 ?lang .\n?country wdt:P36 ?capital .\n?country rdfs:label ?countryLabel FILTER (LANG(?countryLabel) = ?lang) .\n?capital rdfs:label ?capitalLabel FILTER (LANG(?capitalLabel) = ?lang) .\nFILTER (?countryLabel = ?capitalLabel) .\n}\nORDER BY ?country ?lang",
        "complexity_description": "Multiple filters, multiple joins and ordering",
        "complexity": "complex"
    },
    {
        "id": "1352",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?countryLabel ?RomanPlaceLabel ?placeLabel ?image ?coords WHERE {\n?item wdt:P31 wd:Q7362268 ;\nwdt:P17 ?country .\nOPTIONAL { ?item wdt:P18 ?image }\nOPTIONAL { ?item wdt:P131 ?place }\nOPTIONAL { ?item wdt:P373 ?RomanPlace }\nOPTIONAL { ?item wdt:P625 ?coords }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?countryLabel ?itemLabel",
        "complexity_description": "Multiple optional patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "1353",
        "valid_gpt_response": true,
        "query": "SELECT ?ecluse ?ecluseLabel ?coords\nWHERE {\n?ecluse wdt:P31/wdt:P279* wd:Q105731 ;\nwdt:P625 ?coords ;\nwdt:P361 ?canal .\n?canal wdt:P131 wd:Q12130 .\nSERVICE wikibase:label { #BabelRainbow\nbd:serviceParam wikibase:language \"fr\"\n}\n}",
        "complexity_description": "Multiple triple patterns, optional graph pattern and service call",
        "complexity": "medium"
    },
    {
        "id": "1354",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coord ?layer\nWHERE\n{\n?item wdt:P31/wdt:P279* wd:Q164240 ; wdt:P31 ?instance ; wdt:P625 ?coord .\n?instance wdt:P279* wd:Q164240 .\n?instance rdfs:label ?layer .\nFILTER(LANG(?layer) = \"fr\") .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr,en\" }\n}",
        "complexity_description": "Multiple triple patterns, property paths, and a service call",
        "complexity": "complex"
    },
    {
        "id": "1355",
        "valid_gpt_response": true,
        "query": "SELECT ?human ?humanLabel\nWHERE {\n?human wdt:P31 wd:Q5 .\n?human wdt:P27 wd:Q142 .\nMINUS { ?human p:P21 ?gender . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" . }\n}",
        "complexity_description": "Multiple triple patterns, MINUS clause and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "1356",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?family ?familyLabel ?eldest ?eldestLabel ?image (?dob AS ?date) WHERE\n{\n?family wdt:P31 wd:Q13417114 .\n?eldest wdt:P53 ?family .\n?eldest wdt:P31 wd:Q5 .\n?eldest wdt:P569 ?dob .\nFILTER(!isBLANK(?dob)).\nOPTIONAL {\n?older wdt:P53 ?family .\n?older wdt:P31 wd:Q5 .\n?older wdt:P569 ?odob .\nFILTER (?odob < ?dob)\n}\nFILTER (!bound (?older))\nOPTIONAL { ?eldest wdt:P18 ?image . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n} ORDER BY ?yob",
        "complexity_description": "Multiple filters, optional patterns and subqueries",
        "complexity": "complex"
    },
    {
        "id": "1357",
        "valid_gpt_response": true,
        "query": "SELECT ?place ?placeLabel ?coordinates ?layer WHERE {\n?place wdt:P1082 0.\nOPTIONAL { ?place wdt:P17 ?country. }\nOPTIONAL { ?place wdt:P625 ?coordinates. }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\".\n?place rdfs:label ?placeLabel.\n?country rdfs:label ?layer.\n}\n}",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "1358",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\nSELECT\n(SAMPLE(?item) as ?item)\n(SAMPLE(?en_label) as ?name)\n(SAMPLE(?value) as ?value)\n(GROUP_CONCAT(DISTINCT ?en_class_label; SEPARATOR = \", \") AS ?classes)\nWHERE {\n?item p:P31/ps:P31/wdt:P279* wd:Q12503.\n?item wdt:P1181 ?value.\n?item p:P31/ps:P31 ?class.\nOPTIONAL {?item rdfs:label ?en_label. FILTER(LANG(?en_label) = \"en\")}\nOPTIONAL {?class rdfs:label ?en_class_label. FILTER(LANG(?en_class_label) = \"en\")}\n}\nGROUP BY ?item\n}\nORDER BY DESC(?name)",
        "complexity_description": "Multiple subqueries, grouping, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "1359",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?street ?streetLabel ?length\n{\nhint:Query hint:optimizer 'None' .\n?street wdt:P131* wd:Q649 .\n?street wdt:P31/wdt:P279* wd:Q79007 .\n?street p:P2043/psn:P2043/wikibase:quantityAmount ?length .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"ru\" }\n}\nORDER BY DESC(?length) ?street\nLIMIT 100",
        "complexity_description": "Multiple joins, subqueries and ordering",
        "complexity": "complex"
    },
    {
        "id": "1360",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?id WHERE { ?i wdt:P2067 ?v. ?i wdt:P31 ?id}",
        "complexity_description": "Two triple patterns with variables",
        "complexity": "simple"
    },
    {
        "id": "1361",
        "valid_gpt_response": true,
        "query": "SELECT ?marathon ?marathonLabel ?edition ?date\nWHERE {\n?marathon wdt:P31 wd:Q1071285 .\n?marathon wdt:P585 ?date .\n?marathon wdt:P393 ?edition .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}\nORDER BY ?date",
        "complexity_description": "Simple query with 3 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "1362",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?country ?countryLabel WHERE {\n# \"country\" (sovereign state and UN member)\n?country p:P31/ps:P31 wd:Q3624078;\nwdt:P463 wd:Q1065.\n# not participant of any world war\nMINUS {\n?worldWar wdt:P31 wd:Q103495;\nwdt:P710/wdt:P527? ?country.\n}\n# extant\nMINUS { ?country wdt:P576|wdt:P582 ?end. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple MINUS clauses, SERVICE keyword and property paths",
        "complexity": "complex"
    },
    {
        "id": "1363",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?place ?placeLabel WHERE {\n?person wdt:P31 wd:Q5;\nwdt:P19 ?place.\n?place wdt:P138 ?person.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\", \"ru\", \"zh\". }\n}",
        "complexity_description": "Multiple triple patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "1364",
        "valid_gpt_response": true,
        "query": "SELECT ?q (min(?image) AS ?img) (GROUP_CONCAT(DISTINCT(?qLabel); separator=\", \") AS ?label) (COUNT(DISTINCT ?sitelink) as ?linkcount) {\n?q (wdt:P31/wdt:P279*) wd:Q3305213 .\n?sitelink schema:about ?q .\nOPTIONAL { ?q wdt:P18 ?image }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n?q rdfs:label ?qLabel .\n}\n}\nGROUP BY ?q\nORDER BY DESC(?linkcount)\nLIMIT 500",
        "complexity_description": "Multiple aggregations, optional pattern, and service query",
        "complexity": "complex"
    },
    {
        "id": "1365",
        "valid_gpt_response": true,
        "query": "SELECT ?q ?qLabel (COUNT(DISTINCT ?sitelink) as ?linkcount) {\n?q (wdt:P31/wdt:P279*) wd:Q7725634 . # Literary work\n?q wdt:P364 wd:Q188 . # Q188=German Language\n?sitelink schema:about ?q\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"de\" }\n}\nGROUP BY ?q ?qLabel\nORDER BY DESC(?linkcount)\nLIMIT 500",
        "complexity_description": "Multiple triple patterns, service call, group by and order by",
        "complexity": "medium"
    },
    {
        "id": "1366",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemL ?coords WHERE {\n?item wdt:P31/wdt:P279* wd:Q484170 ;\nwdt:P625 ?coords ;\nrdfs:label ?itemL filter (lang(?itemL) = \"fr\") .\nFILTER (STRSTARTS(?itemL, \"W\"))\n}",
        "complexity_description": "Multiple filters and property paths",
        "complexity": "medium"
    },
    {
        "id": "1367",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?candidat ?candidatLabel ?naissanceLieuLabel ?naissanceLieuCoords WHERE {\n?election wdt:P31 wd:Q890055 ;\nwdt:P726 ?candidat .\n?candidat wdt:P19 ?naissanceLieu .\n?naissanceLieu wdt:P625 ?naissanceLieuCoords .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" . }\n}",
        "complexity_description": "Multiple joins, service call",
        "complexity": "medium"
    },
    {
        "id": "1368",
        "valid_gpt_response": true,
        "query": "SELECT ?name ?nameLabel ?minDob WITH {\nSELECT ?name (MIN(?dob) AS ?minDob) WHERE {\n?person wdt:P31 wd:Q5;\nwdt:P569 ?dob;\nwdt:P735 ?name.\nFILTER(!ISBLANK(?dob) && !ISBLANK(?name)).\nFILTER(DATATYPE(?dob) = xsd:dateTime). #T94064?\n}\nGROUP BY ?name\nHAVING(COUNT(DISTINCT ?person) > 1)\nORDER BY ASC(?minDob)\nLIMIT 100\n} AS %names WHERE {\nINCLUDE %names.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ASC(?minDob)",
        "complexity_description": "Multiple filters, subqueries, and grouping",
        "complexity": "complex"
    },
    {
        "id": "1369",
        "valid_gpt_response": true,
        "query": "SELECT ?cocktail ?cocktailLabel (GROUP_CONCAT(?_ingredientLabel; separator=\", \") AS ?ingredients) (COUNT(DISTINCT(?_ingredientLabel)) AS ?n_ingredients) ?pic\nWHERE\n{\n?cocktail wdt:P31/wdt:P279* wd:Q134768 .\nOPTIONAL {\n?cocktail wdt:P18 ?pic\n}\n?cocktail wdt:P186 ?ingredient .\n?ingredient rdfs:label ?_ingredientLabel\nFILTER((LANG(?_ingredientLabel)) = \"en\")\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nGROUP BY ?cocktail ?cocktailLabel ?pic\nORDER BY DESC(?n_ingredients)",
        "complexity_description": "Multiple joins, subqueries, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "1370",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coord\nWHERE\n{\n?item wdt:P17 wd:Q145 ; wdt:P625 ?coord ; wdt:P138/wdt:P411 [].\n}",
        "complexity_description": "Simple query with 3 variables and 3 triple patterns",
        "complexity": "simple"
    },
    {
        "id": "1371",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?dod ?itemLabel ?age ?itemDescription ?dob\nWHERE\n{\n?item wdt:P570 ?dod .\nFILTER ( ?dod >= \"2016-01-01T00:00:00Z\"^^xsd:dateTime && ?dod <= \"2016-12-31T00:00:00Z\"^^xsd:dateTime )\n?item wdt:P31 wd:Q5 .\nOPTIONAL { ?item wdt:P569 ?dob . BIND( (2016-YEAR(?dob)+1) as ?age) }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"{{int:lang}},en\". }\n}",
        "complexity_description": "Filter, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1372",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?creatorLabel ?coords ?image WHERE {\n?item wdt:P180 wd:Q7226 ;\nwdt:P136 wd:Q659396 ;\nwdt:P625 ?coords .\nOPTIONAL { ?item wdt:P170 ?creator }\nOPTIONAL { ?item wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple optional patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "1373",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?occupationLabel ?person1Label ?person2Label ?person3Label ?person4Label ?person5Label WHERE {\nwd:Q5 ^wdt:P31 ?person1, ?person2, ?person3, ?person4, ?person5.\n?person1 wdt:P22|wdt:P25 ?person2.\n?person2 wdt:P22|wdt:P25 ?person3.\n?person3 wdt:P22|wdt:P25 ?person4.\n?person4 wdt:P22|wdt:P25 ?person5.\n?occupation ^wdt:P106 ?person1, ?person2, ?person3, ?person4, ?person5.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple joins and filters with multiple variables",
        "complexity": "complex"
    },
    {
        "id": "1374",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?country1Label ?country2Label ?capital1Label ?capital2Label ?distance WHERE {\n?country1 wdt:P31 wd:Q6256 ;\nwdt:P36 ?capital1 .\n?country2 wdt:P31 wd:Q6256 ;\nwdt:P36 ?capital2 .\n?capital1 wdt:P625 ?coords1 .\n?capital2 wdt:P625 ?coords2 .\nBIND(ROUND(geof:distance(?coords1, ?coords2)) AS ?distance) .\nFILTER (?distance>19000)\nFILTER(xsd:string(?capital1) < xsd:string(?capital2))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}\nORDER BY DESC(?distance)",
        "complexity_description": "Multiple filters, BIND, and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "1375",
        "valid_gpt_response": true,
        "query": "SELECT ?person1Label ?person2Label ?person3Label ?person4Label ?person5Label ?person6Label ?person7Label ?person8Label ?person9Label ?person10Label WITH {\nSELECT * WHERE {\n?person1 wdt:P734/^wdt:P1533/^wdt:P735 ?person2.\n?person2 wdt:P734/^wdt:P1533/^wdt:P735 ?person3.\n?person3 wdt:P734/^wdt:P1533/^wdt:P735 ?person4.\n?person4 wdt:P734/^wdt:P1533/^wdt:P735 ?person5.\n?person5 wdt:P734/^wdt:P1533/^wdt:P735 ?person6.\n?person6 wdt:P734/^wdt:P1533/^wdt:P735 ?person7.\n?person7 wdt:P734/^wdt:P1533/^wdt:P735 ?person8.\n?person8 wdt:P734/^wdt:P1533/^wdt:P735 ?person9.\n?person9 wdt:P734/^wdt:P1533/^wdt:P735 ?person10.\n}\nLIMIT 1\n} AS %persons WHERE {\nINCLUDE %persons.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple recursive patterns with property paths and service call",
        "complexity": "complex"
    },
    {
        "id": "1376",
        "valid_gpt_response": true,
        "query": "SELECT ?place ?placeLabel ?item ?itemLabel ?coord\nWHERE\n{\n?item wdt:P138 ?place .\n?place wdt:P625 ?coord .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "1377",
        "valid_gpt_response": true,
        "query": "SELECT ?painting ?paintingLabel ?paintingImage\nWHERE\n{\n?painting wdt:P31/wdt:P279* wd:Q3305213 .\n?painting wdt:P180 wd:Q1367 .\n?painting wdt:P18 ?paintingImage .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"fi, en\".\n?painting rdfs:label ?paintingLabel.\n}\n}\nLIMIT 100",
        "complexity_description": "Multiple triple patterns with service call",
        "complexity": "medium"
    },
    {
        "id": "1378",
        "valid_gpt_response": true,
        "query": "SELECT ?oeuvre ?oeuvreLabel ?personne_representee_presumeeLabel ?personne_representee_presumee ?img WHERE {\n?oeuvre p:P180 [ ps:P180 ?personne_representee_presumee ;\npq:P1480 wd:Q18122778 ].\n?personne_representee_presumee wdt:P31 wd:Q5.\n?oeuvre wdt:P18 ?img.\nSERVICE wikibase:label { #BabelRainbow\nbd:serviceParam wikibase:language \"fr,en,ar,be,bg,bn,ca,cs,da,de,el,es,et,fa,fi,he,hi,hu,hy,id,it,ja,jv,ko,nb,nl,eo,pa,pl,pt,ro,ru,sh,sk,sr,sv,sw,te,th,tr,uk,yue,vec,vi,zh\"\n}\n}",
        "complexity_description": "Multiple triple patterns with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "1379",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?height ?width WHERE {\n?item wdt:P195 wd:Q3044768 ;\nwdt:P2048 ?height ;\nwdt:P2049 ?width .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" . }\n} ORDER BY ?ratio",
        "complexity_description": "Multiple triple patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "1380",
        "valid_gpt_response": true,
        "query": "SELECT(SAMPLE(?year) AS ?year) (COUNT(?item) AS ?citesFounded)\nWHERE\n{\n?item wdt:P31 wd:Q515 . # instance of city\n?item wdt:P17 wd:Q30 . # in U.S.\n?item wdt:P571 ?inception . # inception\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\nBIND(str(YEAR(?inception)) AS ?year)\n} GROUP BY ?year",
        "complexity_description": "Multiple filters, service call and aggregation",
        "complexity": "medium"
    },
    {
        "id": "1381",
        "valid_gpt_response": true,
        "query": "SELECT ?countryLabel ?image WHERE {\n?item wdt:P31 wd:Q186516 ;\nwdt:P180* wd:Q525 ;\nwdt:P1001 ?country ;\nwdt:P18 ?image .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?countryLabel",
        "complexity_description": "Multiple triple patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "1382",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?koord\nWHERE\n{\n?item wdt:P31 wd:Q5 .\n?item wdt:P39 wd:Q6104617 .\n?item wdt:P19 ?jaiolekua .\n?jaiolekua wdt:P625 ?koord.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Multiple triple patterns with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "1383",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel WHERE {\n?item (wdt:P31/wdt:P279*) wd:Q35127.\nMINUS { ?item wdt:P856 ?site. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,de,nl,ja,fr,no\". }\n}",
        "complexity_description": "Multiple patterns with MINUS and SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "1384",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?itemDescription ?Unicode_character WHERE {\n?item (wdt:P31?/wdt:P279*) wd:Q756.\n?item wdt:P105 wd:Q7432.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n{ ?item wdt:P487 ?Unicode_character. }\n}",
        "complexity_description": "Multiple triple patterns, optional graph pattern and service call",
        "complexity": "medium"
    },
    {
        "id": "1385",
        "valid_gpt_response": true,
        "query": "SELECT ?language ?languageLabel ?root ?rootLabel ?nspeakers WHERE {\n?language wdt:P31 wd:Q34770 .\n?language wdt:P279 ?root.\n?language wdt:P1098 ?nspeakers.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n} ORDER BY ?nspeakers",
        "complexity_description": "Multiple triple patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "1386",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\n{\nSELECT ?id (COUNT(?obj) AS ?count) (GROUP_CONCAT(?obj; SEPARATOR = \" , \") AS ?items) WHERE { ?obj wdt:P2057 ?id. }\nGROUP BY ?id\n}\nFILTER(?count > 1)\n}",
        "complexity_description": "Subqueries, aggregation functions and filtering",
        "complexity": "complex"
    },
    {
        "id": "1387",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?name ?idcount ?sitelinks ?rato WHERE {\n?item wdt:P106 wd:Q1028181 .\n?item wdt:P31 wd:Q5 .\n{\n?item wikibase:identifiers ?idcount .\n?item wikibase:sitelinks ?sitelinks .\nFILTER ( ?sitelinks > 0 ) .\nBIND ( xsd:float(?idcount) / xsd:float(?sitelinks) as ?rato)\n} UNION {\n?item wikibase:identifiers ?idcount .\n?item wikibase:sitelinks ?sitelinks .\nFILTER ( ?sitelinks=0 ) .\nBIND ( xsd:float(?idcount) / xsd:float(1) as ?rato)\n}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n?item rdfs:label ?name .\n}\n}\nORDER BY DESC(?rato )\nLIMIT 500",
        "complexity_description": "Multiple UNION, FILTER, BIND, and SERVICE clauses with arithmetic operations",
        "complexity": "complex"
    },
    {
        "id": "1388",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?elevators ?image\nWHERE {\n?item wdt:P1301 ?elevators .\n?item wdt:P18 ?image .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}\nORDER BY DESC(?elevators)\nLIMIT 30",
        "complexity_description": "Simple query with two triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "1389",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?dob ?precision ?coords ?Gender ?Occupation ?Place_of_Birth ?image\n(COUNT(distinct ?article) as ?count)\nWHERE {\n?person wdt:P106 wd:Q36180 .\n?person wdt:P31 wd:Q5 .\n?person wdt:P21 wd:Q6581072 .\n?person p:P569/psv:P569 ?dobNode .\n?dobNode wikibase:timeValue ?dob .\n?dobNode wikibase:timePrecision ?precision .\n?person wdt:P19 ?birthPlace .\n?birthPlace wdt:P625 ?coords .\nOPTIONAL { ?person wdt:P18 ?image }\nOPTIONAL { ?article schema:about ?person }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language 'en' .\n?person rdfs:label ?personLabel .\n?birthPlace rdfs:label ?Place_of_Birth .\n?occupation rdfs:label ?Occupation .\n?gender rdfs:label ?Gender .\n}\n} GROUP BY ?person ?personLabel ?dob ?precision ?coords ?Gender ?Occupation ?Place_of_Birth ?image\nORDER BY DESC (?count)",
        "complexity_description": "Multiple joins, subqueries, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "1390",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coords ?subreddit WHERE {\n?item wdt:P3984 ?subreddit .\n?item wdt:P625 ?coords\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "simple"
    },
    {
        "id": "1391",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?id WHERE { ?id wdt:P2578 []. }",
        "complexity_description": "Single triple pattern",
        "complexity": "simple"
    },
    {
        "id": "1392",
        "valid_gpt_response": true,
        "query": "select ?item ?itemLabel where {\n?item wdt:P31 wd:Q3305213;\nrdfs:label ?label .\nFILTER( LANG(?label) = \"en\" ) .\nFILTER( CONTAINS(LCASE(?label), \"portrait\") ) .\nOPTIONAL {\n?item wdt:P180 ?dummy\n}\nFILTER ( !bound(?dummy) ) .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" } .\n}",
        "complexity_description": "Multiple filters, optional clause and service call",
        "complexity": "complex"
    },
    {
        "id": "1393",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?date ?doi ?url ?video WHERE {\n?item wdt:P921 wd:Q30035267 .\nOPTIONAL { ?item wdt:P577 ?date }\nOPTIONAL { ?item wdt:P356 ?doi }\nOPTIONAL { ?item wdt:P10 ?video }\nOPTIONAL { ?item wdt:P953 ?url }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "1394",
        "valid_gpt_response": true,
        "query": "SELECT ?countryLabel ?count WITH {\nSELECT ?country (COUNT(DISTINCT ?human) AS ?count) WHERE {\n?human wdt:P31 wd:Q5;\nwdt:P27 ?country;\nwdt:P1853 ?bloodType.\n}\nGROUP BY ?country\n} AS %results WHERE {\nINCLUDE %results.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "1395",
        "valid_gpt_response": true,
        "query": "SELECT ?work ?workLabel ?count WITH {\nSELECT ?work (COUNT(*) AS ?count) WHERE {\n?work wdt:P2860 [].\n}\nGROUP BY ?work\nORDER BY DESC(?count)\nLIMIT 100\n} AS %works WHERE {\nINCLUDE %works.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC(?count)",
        "complexity_description": "Subqueries, grouping, ordering and limiting",
        "complexity": "complex"
    },
    {
        "id": "1396",
        "valid_gpt_response": true,
        "query": "SELECT ?directorLabel ?filmLabel (YEAR(?date) AS ?year) WHERE {\n?film wdt:P31 wd:Q11424 ;\nwdt:P57 ?director ;\np:P166 ?statement.\n?statement ps:P166 wd:Q179808 ;\npq:P585 ?date .\n?director wdt:P21 wd:Q6581072 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}",
        "complexity_description": "Multiple triple patterns, service call and function usage",
        "complexity": "medium"
    },
    {
        "id": "1397",
        "valid_gpt_response": true,
        "query": "SELECT ?album ?performerLabel ?albumLabel ?publication_date WHERE {\nVALUES ?performer {\nwd:Q936474\nwd:Q207898\n}\n?album wdt:P175 ?performer ;\nwdt:P577 ?publication_date .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Uses VALUES clause, multiple triple patterns and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "1398",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel\nWHERE\n{\n?item wdt:P31 wd:Q11879590;\nwdt:P1705 ?itemLabel;\n#FILTER (lang(?itemLabel) = \"mul\") .\nFILTER regex (?itemLabel, \"o$\").\n}",
        "complexity_description": "Two triple patterns with filter and regex",
        "complexity": "medium"
    },
    {
        "id": "1399",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?coordinates WHERE {\n{ ?item wdt:P31 wd:Q146591 } UNION { ?item wdt:P31 wd:Q32099 }\nOPTIONAL { ?item wdt:P625 ?coordinates . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Union, optional pattern and service",
        "complexity": "medium"
    },
    {
        "id": "1400",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?value WHERE {\n?item wdt:P3793 ?value .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr,en\" }\n}",
        "complexity_description": "Simple query with one triple pattern and a service call",
        "complexity": "simple"
    },
    {
        "id": "1401",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?mp) AS ?mps) ?job ?jobLabel\nWHERE {\n?mp wdt:P39 wd:Q16707842;\nwdt:P106 ?job.\nFILTER (?job not in (wd:Q82955, wd:Q486839) )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n} GROUP BY ?job ?jobLabel\nORDER BY DESC(?mps)",
        "complexity_description": "Multiple triple patterns, filter, service and group by",
        "complexity": "medium"
    },
    {
        "id": "1402",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?image {\n?item wdt:P31 wd:Q503186 .\n?item wdt:P18 ?image .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,ja\" }\n}",
        "complexity_description": "Two triple patterns with a service call",
        "complexity": "medium"
    },
    {
        "id": "1403",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?countryLabel WHERE {\n?item wdt:P31/wdt:P279* wd:Q3491904 ;\nwdt:P17 ?country .\n?country wdt:P2046 ?area .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}\nORDER BY ?area\nLIMIT 10",
        "complexity_description": "Multiple triple patterns, property paths, and service call",
        "complexity": "medium"
    },
    {
        "id": "1404",
        "valid_gpt_response": true,
        "query": "SELECT ?occupation ?occupationLabel ?homicides ?total ?rate WITH {\nSELECT ?occupation (SUM(?homicide) AS ?homicides) (COUNT(?person) AS ?total) WHERE {\n?person wdt:P31 wd:Q5;\nwdt:P106 ?occupation;\nwdt:P1196 ?manner.\nFILTER(!ISBLANK(?occupation)).\nBIND(IF(?manner = wd:Q149086, 1, 0) AS ?homicide).\n}\nGROUP BY ?occupation\nHAVING(?total > 5)\nORDER BY DESC(?homicides/?total)\nLIMIT 100\n} AS %results WHERE {\nINCLUDE %results.\nBIND(?homicides/?total AS ?rate).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC(?rate) DESC(?total)",
        "complexity_description": "Multiple subqueries, grouping, filtering, and ordering",
        "complexity": "complex"
    },
    {
        "id": "1405",
        "valid_gpt_response": true,
        "query": "SELECT ?app ?appLabel (COUNT(?format) AS ?count) WHERE {\n?app wdt:P1072 ?format.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?app ?appLabel\nORDER BY DESC(?count)",
        "complexity_description": "Joins, aggregation and ordering",
        "complexity": "medium"
    },
    {
        "id": "1406",
        "valid_gpt_response": true,
        "query": "SELECT ?countryLabel (COUNT(?item) AS ?count)\nWHERE\n{\n?item wdt:P31/wdt:P279* wd:Q2088357 ; wdt:P136/wdt:P279* wd:Q38848 ; wdt:P495 ?country .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?countryLabel",
        "complexity_description": "Multiple filters, service call and grouping",
        "complexity": "medium"
    },
    {
        "id": "1407",
        "valid_gpt_response": true,
        "query": "SELECT ?id WHERE { ?composition wdt:P86 ?composer; wdt:P826 ?tonality. ?composer wdt:P19|wdt:P20|wdt:P551 ?id. } GROUP BY ?id ?idLabel ORDER BY DESC(COUNT(DISTINCT ?composer))",
        "complexity_description": "Multiple triple patterns, UNION operator, and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "1408",
        "valid_gpt_response": true,
        "query": "SELECT ?author ?authorLabel (count(?paper) AS ?papers) {\n?paper wdt:P31 wd:Q13442814 .\n?paper wdt:P50 ?author .\n?author wdt:P31 wd:Q5 .\nMINUS { ?author wdt:P496 [] } .\nMINUS { ?author wdt:P570 [] }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nGROUP BY ?author ?authorLabel ORDER BY DESC(?papers)",
        "complexity_description": "Multiple filters, minus clauses and group by",
        "complexity": "complex"
    },
    {
        "id": "1409",
        "valid_gpt_response": true,
        "query": "SELECT ?period ?periodLabel ?periodNumber (SUBSTR((AVG(?periodStart - ?dob))/365.2425, 0, 5) AS ?avgAge) WHERE {\n?abg wdt:P31 wd:Q5;\nwdt:P569 ?dob;\np:P39 [\nps:P39 wd:Q17344251;\npq:P2937 ?period\n].\n?period p:P31 [\nps:P31 wd:Q15238777;\npq:P1545 ?periodNumber\n].\n?period wdt:P580 ?periodStart.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de\". }\n}\nGROUP BY ?period ?periodLabel ?periodNumber\nORDER BY ?periodNumber",
        "complexity_description": "Multiple joins, subqueries, and functions",
        "complexity": "complex"
    },
    {
        "id": "1410",
        "valid_gpt_response": true,
        "query": "SELECT ?livre ?livreLabel ?personneLabel ?lieuLabel ?page ?img ?coord WHERE {\n?livre wdt:P50 ?personne .\n?personne wdt:P19 ?lieu .\n?lieu wdt:P625 ?coord .\noptional { ?personne wdt:P18 ?img } .\n?page schema:about ?livre .\n?page schema:isPartOf <https://br.wikisource.org/> .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\". }\n}",
        "complexity_description": "Multiple joins, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1411",
        "valid_gpt_response": true,
        "query": "SELECT ?firstnameLabel (COUNT(*) AS ?count)\nWHERE {\n?depute wdt:P31 wd:Q5 .\n?depute p:P39 ?mandate .\n?mandate ps:P39 wd:Q3044918 . # French depute\n?mandate pq:P2937 wd:Q24939798 . # 15th legislature\n?depute wdt:P735 ?firstname .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" . }\n}\nGROUP BY ?firstnameLabel\nHAVING (?count >= 3)\nORDER BY DESC(?count)",
        "complexity_description": "Multiple joins, filters and aggregations",
        "complexity": "complex"
    },
    {
        "id": "1412",
        "valid_gpt_response": true,
        "query": "SELECT ?depute ?deputeLabel ?birthdate\nWHERE {\n?depute wdt:P31 wd:Q5 .\n?depute p:P39 ?mandate .\n?mandate ps:P39 wd:Q3044918 . # French depute\n?mandate pq:P2937 wd:Q24939798 . # 15th legislature\n?depute wdt:P569 ?birthdate .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr\". }\n}\nORDER BY ?birthdate",
        "complexity_description": "Multiple triple patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "1413",
        "valid_gpt_response": true,
        "query": "SELECT ?character ?characterLabel ?linkTo WHERE {\n?character wdt:P31/wdt:P279* wd:Q208255;\nwdt:P22|wdt:P25|wdt:P40|wdt:P1038|wdt:P3373 ?linkTo.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,pt\". }\n}",
        "complexity_description": "Multiple property paths and service call",
        "complexity": "medium"
    },
    {
        "id": "1414",
        "valid_gpt_response": true,
        "query": "SELECT ?itemLabel ?koord WHERE {\n?item wdt:P31 wd:Q8502.\n?item (wdt:P131*/^wdt:P527) wd:Q47588.\n?item wdt:P625 ?koord.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],eu\". }\n}",
        "complexity_description": "Multiple triple patterns, property paths and service call",
        "complexity": "medium"
    },
    {
        "id": "1415",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel (MAX(?numChildren) AS ?numChildren) (COUNT(DISTINCT ?child) AS ?countChilden) WHERE {\n?item wdt:P1971 ?numChildren;\nwdt:P40 ?child.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?item ?itemLabel\nHAVING(?countChilden > ?numChildren)\nORDER BY DESC(?countChilden - ?numChildren)",
        "complexity_description": "Multiple aggregations, subqueries and filtering",
        "complexity": "complex"
    },
    {
        "id": "1416",
        "valid_gpt_response": true,
        "query": "SELECT ?q ?qLabel ?img {\n?q wdt:P31 wd:Q5 .\n?q wdt:P39 wd:Q37110\nOPTIONAL { ?q wdt:P18 ?img }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Two triple patterns, one optional block and a service call",
        "complexity": "medium"
    },
    {
        "id": "1417",
        "valid_gpt_response": true,
        "query": "SELECT ?objectLabel ?objectDescription ?link ?coord\nWHERE {\n?object wdt:P31 wd:Q2860456 ;\nwdt:P625 ?coord .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"fr\"\n}\n}",
        "complexity_description": "Simple query with 2 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "1418",
        "valid_gpt_response": true,
        "query": "SELECT ?article ?articleLabel ?softwareLabel ?date\nWHERE {\n?article wdt:P31 wd:Q13442814 .\n?article wdt:P2283 ?software .\n?software wdt:P279 wd:Q1204300 .\n?software wdt:P348 ?version .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}",
        "complexity_description": "Multiple triple patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "1419",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel WHERE {\n?item (wdt:P31/wdt:P279*) wd:Q618123.\n?item wdt:P17 wd:Q145.\n?item rdfs:label ?itemLabel.\nMINUS {\n?item rdfs:label ?label2.\nFILTER((LANG(?label2)) = \"cy\")\n}\nFILTER((LANG(?itemLabel)) = \"en\")\n}\nLIMIT 1000",
        "complexity_description": "Multiple triple patterns, MINUS clause and FILTERs",
        "complexity": "complex"
    },
    {
        "id": "1420",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?banner WHERE {\n?item wdt:P31/wdt:P279* wd:Q484170 .\n?item wdt:P948 ?banner .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\". }\n} ORDER BY ?itemLabel",
        "complexity_description": "Two triple patterns, one service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "1421",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?image\nWHERE\n{\n?item wdt:P31/wdt:P279* wd:Q3305213 .\n?item wdt:P180 ?object .\n?item ?prop ?hhlink .\n?hhlink ?prop2 wd:Q29 .\n?object wdt:P279* wd:Q34379 .\n?item wdt:P18 ?image .\n}",
        "complexity_description": "Multiple joins, multiple filters",
        "complexity": "complex"
    },
    {
        "id": "1422",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\n?person wdt:P2037 ?github .\n?person wdt:P18 ?image\n}",
        "complexity_description": "Two simple triple patterns",
        "complexity": "simple"
    },
    {
        "id": "1423",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel\n(SAMPLE(?birth_date) as ?birth_date)\n(SAMPLE(?death_date ) as ?death_date )\n(SAMPLE(?birth_place_label ) as ?birth_place_label )\n(SAMPLE(?birth_place_coords ) as ?birth_place_coords )\n(SAMPLE(?image ) as ?image )\n(SAMPLE(?country ) as ?country)\n(COUNT(?article) as ?rank)\nWHERE\n{\n?person wdt:P69 wd:Q160302 .\n?person wdt:P31 wd:Q5 .\n?person wdt:P21 wd:Q6581072 .\nOPTIONAL {?person wdt:P18 ?image }\nOPTIONAL {?person wdt:P18 ?image }\nOPTIONAL {?person wdt:P569 ?birth_date }\nOPTIONAL {?person wdt:P27 ?countryItem .\n?countryItem rdfs:label ?country filter (lang(?country) = \"en\")\n}\nOPTIONAL {\n?person wdt:P19 ?birth_place .\n?birth_place wdt:P625 ?birth_place_coords .\n?birth_place rdfs:label ?birth_place_label filter ( lang(?birth_place_label) = \"en\" )\n}\nOPTIONAL {?person wdt:P570 ?death_date }\nOPTIONAL {?article schema:about ?person}\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"en\" }\n}\nGROUP BY ?person ?personLabel\nORDER BY DESC(?rank)",
        "complexity_description": "Multiple OPTIONAL clauses, SERVICE keyword, and GROUP BY/ORDER BY",
        "complexity": "complex"
    },
    {
        "id": "1424",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?os ?osLabel ?subclassOf WHERE {\n?os wdt:P279* wd:Q9135 .\nOPTIONAL { ?os wdt:P279 ?subclassOf } .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nORDER BY ?osLabel",
        "complexity_description": "Uses OPTIONAL clause and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "1425",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?person2 ?person2Label\nWHERE {\n?item wdt:P31 wd:Q5 ; wdt:P39 wd:Q16707842.\n?person2 wdt:P31 wd:Q5 ; wdt:P39 wd:Q16707842 ; wdt:P26 ?item .\nFILTER(STR(?person2) > STR(?item))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple triple patterns, filter and service",
        "complexity": "medium"
    },
    {
        "id": "1426",
        "valid_gpt_response": true,
        "query": "SELECT ?person1 ?person1Label ?person2 ?person2Label\nWHERE\n{\n{ ?person1 wdt:P22 ?person2 ; wdt:P31 wd:Q5 } UNION { ?person1 wdt:P25 ?person2 ; wdt:P31 wd:Q5 }\n?person1 wdt:P40 ?person2 ; wdt:P31 wd:Q5 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple UNION and SERVICE clauses",
        "complexity": "complex"
    },
    {
        "id": "1427",
        "valid_gpt_response": true,
        "query": "SELECT ?railwayThing ?geometry (SAMPLE(?label) AS ?label) ?layer WHERE {\nSERVICE <http://linkedgeodata.org/sparql> {\n?railwayThing a lgdo:RailwayThing;\ngeom:geometry [ geo:asWKT ?geometry ].\nFILTER(bif:st_intersects(?geometry, bif:st_point(13.383333, 52.516667), 0.1))\nOPTIONAL { ?railwayThing rdfs:label ?label. }\nOPTIONAL { ?railwayThing a lgdo:Subway. BIND(\"subway\"@en AS ?subway) }\nOPTIONAL { ?railwayThing a lgdo:Rail. BIND(\"rail\"@en AS ?rail) }\nOPTIONAL { ?railwayThing a lgdo:LightRail. BIND(\"light rail\"@en AS ?lightrail) }\nOPTIONAL { ?railwayThing a lgdo:Tramway. BIND(\"tramway\"@en AS ?tramway) }\nOPTIONAL { ?railwayThing a lgdo:Platform. BIND(\"platform\"@en AS ?platform) }\nOPTIONAL { ?railwayThing a lgdo:AbandonedRailway. BIND(\"abandoned railway\"@en AS ?abandoned) }\nOPTIONAL { ?railwayThing a lgdo:HistoricThing. BIND(\"historic\"@en AS ?historic) }\n}\nBIND(COALESCE(?subway, ?lightrail, ?rail, ?tramway, ?platform, ?abandoned, ?historic, \"other\"@en) AS ?layer)\n}\nGROUP BY ?railwayThing ?geometry ?layer",
        "complexity_description": "Multiple FILTERs and OPTIONAL clauses with BIND and COALESCE functions",
        "complexity": "complex"
    },
    {
        "id": "1428",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coord WHERE {\n?item wdt:P195 wd:Q1376 ; wdt:P189/wdt:P625 ?coord .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "1429",
        "valid_gpt_response": true,
        "query": "SELECT ?station ?stationLabel ?picture (SAMPLE(?pictureCategory) AS ?pictureCategory) WHERE {\nhint:Query hint:optimizer \"None\".\n# get metro stations in germany\n?station wdt:P31 wd:Q928830 ;\nwdt:P17 wd:Q183 .\n# and pictures of them\n?station wdt:P18 ?picture .\n# build commons urls\nBIND(STRAFTER(str(?picture), \"Special:FilePath/\") AS ?filename)\nBIND(wikibase:decodeUri(CONCAT(\"File:\", ?filename)) AS ?file)\n# and ask commons for the categories the pictures are in\nSERVICE wikibase:mwapi {\nbd:serviceParam wikibase:api \"Categories\".\nbd:serviceParam wikibase:endpoint \"commons.wikipedia.org\".\nbd:serviceParam mwapi:titles ?file.\n?pictureCategory wikibase:apiOutput mwapi:category.\n}\n# and only get those with a Public Domain category\nFILTER(STRSTARTS(?pictureCategory, \"Category:PD-\"))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"de,[AUTO_LANGUAGE]\". }\n}\nGROUP BY ?station ?stationLabel ?picture\nLIMIT 100",
        "complexity_description": "Multiple services, subqueries, and filters",
        "complexity": "complex"
    },
    {
        "id": "1430",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person ?personLabel ?birth_place ?birth_placeLabel ?birth_place_coords ?birth_country ?birth_countryLabelWHERE\n{\n?person wdt:P39 wd:Q16707842 ; wdt:P31 wd:Q5 .\n?person wdt:P19 ?birth_place .\n?birth_place wdt:P625 ?birth_place_coords .\nOPTIONAL { ?birth_place wdt:P17 ?birth_country . }\nFILTER ( ?birth_country != wd:Q145 )\nFILTER ( ?birth_country != wd:Q22 )\nFILTER ( ?birth_country != wd:Q25 )\nFILTER ( ?birth_country != wd:Q26 )\nFILTER ( ?birth_country != wd:Q27 )\nFILTER ( ?birth_country != wd:Q161885 )\nFILTER ( ?birth_country != wd:Q174193 )\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Multiple filters and optional clause",
        "complexity": "medium"
    },
    {
        "id": "1431",
        "valid_gpt_response": true,
        "query": "SELECT ?property ?propertyLabel (COUNT(?statement) AS ?count) WHERE {\n?property a wikibase:Property;\nwikibase:claim ?p.\n?entity ?p ?statement.\n?statement pq:P1310 [].\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?property ?propertyLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple joins, subqueries and grouping",
        "complexity": "complex"
    },
    {
        "id": "1432",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel (GROUP_CONCAT(?mealLabel; separator = \", \") AS ?meal) WHERE {\n?person wdt:P3902 ?meal.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?person rdfs:label ?personLabel.\n?meal rdfs:label ?mealLabel.\n}\n}\nGROUP BY ?person ?personLabel",
        "complexity_description": "Multiple joins, grouping and aggregation",
        "complexity": "complex"
    },
    {
        "id": "1433",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?colorLabel ?hexa WHERE {\n?item wdt:P31 wd:Q186516 ; wdt:P462 ?color .\noptional { ?color wdt:P465 ?hexa }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Optional clause, service call and multiple triple patterns",
        "complexity": "medium"
    },
    {
        "id": "1434",
        "valid_gpt_response": true,
        "query": "SELECT ?personLabel ?image\nWHERE {\n?person wdt:P166 wd:Q1389573 .\n?person wdt:P18 ?image .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "1435",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?start ?end ?days\nWHERE\n{\n?item wdt:P31 wd:Q5 . # Human\n?item wdt:P39 wd:Q786242 . # position held: White House chief of staff\n?item p:P39 ?positionstatement . # grab statement\n?positionstatement ps:P39 ?position ; # grab position\npq:P580 ?start . # grab start date\n?position wdt:P279* wd:Q786242 . # re-filter for White House chief of staff\nOPTIONAL { ?positionstatement pq:P582 ?end } # grab optional end date\nbind(floor(?end - ?start) as ?days) # calculate number of days served\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?days",
        "complexity_description": "Multiple joins, optional clause, and calculation",
        "complexity": "complex"
    },
    {
        "id": "1436",
        "valid_gpt_response": true,
        "query": "SELECT ?country ?countryLabel ?cityCount WITH {\nSELECT ?country (COUNT(?sisterCity) AS ?cityCount) WHERE {\n?city wdt:P17 ?country;\nwdt:P190 ?sisterCity.\n}\nGROUP BY ?country\n} AS %results WHERE {\nINCLUDE %results.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?cityCount)",
        "complexity_description": "Subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "1437",
        "valid_gpt_response": true,
        "query": "SELECT ?station ?stationLabel ?picture (SAMPLE(?pictureCategory) AS ?pictureCategory) WHERE {\nhint:Query hint:optimizer \"None\".\n# get metro stations in germany\n?station wdt:P31 wd:Q928830 ;\nwdt:P17 wd:Q145 .\n# and pictures of them\n?station wdt:P18 ?picture .\n# build commons urls\nBIND(STRAFTER(str(?picture), \"Special:FilePath/\") AS ?filename)\nBIND(wikibase:decodeUri(CONCAT(\"File:\", ?filename)) AS ?file)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"de,[AUTO_LANGUAGE]\". }\n}\nGROUP BY ?station ?stationLabel ?picture\nLIMIT 100",
        "complexity_description": "Multiple joins, subqueries and functions",
        "complexity": "complex"
    },
    {
        "id": "1438",
        "valid_gpt_response": true,
        "query": "SELECT ?work ?workLabel\nWHERE {\n?work wdt:P2283 wd:Q272597.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "1439",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?cited ?citedLabel ?citedAuthor ?citedAuthorLabel ?award ?awardLabel WHERE {\n?work wdt:P50 wd:Q20895241 ; # replace by the item of another author\nwdt:P2860 ?cited .\n?cited wdt:P50 ?citedAuthor .\n?citedAuthor wdt:P166 ?award .\n?award wdt:P31 wd:Q7191\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, filters and service call",
        "complexity": "medium"
    },
    {
        "id": "1440",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?cited ?citedLabel ?citedAuthor ?citedAuthorLabel ?award ?awardLabel WHERE {\n?work wdt:P50 wd:Q20895241 . # replace by the item of another author\n?cited wdt:P2860 ?work .\n?cited wdt:P50 ?citedAuthor .\n?citedAuthor wdt:P166 ?award .\n?award wdt:P31 wd:Q7191\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, filters and service call",
        "complexity": "medium"
    },
    {
        "id": "1441",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?when (YEAR(?when) as ?date) ?pic\nWHERE {\n?item p:P166 ?awardStat . # ... with an awarded(P166) statement\n?awardStat ps:P166 wd:Q33232596 .\n?awardStat pq:P585 ?when .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\nOPTIONAL { ?item wdt:P18 ?pic }\n}",
        "complexity_description": "Multiple joins, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1442",
        "valid_gpt_response": true,
        "query": "SELECT ?lang ?langLabel ?time\n{\n?lang wdt:P31 wd:Q9143 .\n?lang wdt:P571 ?time .\nFILTER((?time) > \"2007-01-01\"^^xsd:dateTime)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Two triple patterns, one filter and a service call",
        "complexity": "medium"
    },
    {
        "id": "1443",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?country (group_concat(distinct ?languageL ; separator = \", \") as ?languages) WHERE {\n?item wdt:P31 wd:Q6256 ;\nwdt:P37 ?language .\nFILTER NOT EXISTS {\n?item wdt:P37 ?y .\n?p wdt:P31 wd:Q6256 ;\nwdt:P37 ?y ;\nwdt:P30 wd:Q46 .\n}\n?language rdfs:label ?languageL filter (lang(?languageL) = \"en\") .\n?item rdfs:label ?country filter (lang(?country) = \"en\") .\n}\nGROUP BY ?country\nORDER BY ?country",
        "complexity_description": "Multiple filters, subqueries and group_concat aggregation function",
        "complexity": "complex"
    },
    {
        "id": "1444",
        "valid_gpt_response": true,
        "query": "SELECT\n?person\n?personLabel\n(GROUP_CONCAT(DISTINCT ?myRanklabel;separator=', ') as ?myRanklabel)\n?image\n(COUNT(DISTINCT ?languageArticle) as ?languageArticleCount)\nWHERE {\n?person wdt:P463 wd:Q718644 .\nOPTIONAL {\n?person wdt:P410 ?rank .\n?rank rdfs:label ?myRanklabel\nFILTER (lang(?myRanklabel) = 'en' )\n}\nOPTIONAL { ?person wdt:P18 ?image . }\n?languageArticle schema:about ?person\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" .}\n}\nGROUP BY\n?person ?personLabel ?rankLabel ?image\nORDER BY\nDESC(?languageArticleCount)",
        "complexity_description": "Multiple optional patterns, aggregation functions and service call",
        "complexity": "complex"
    },
    {
        "id": "1445",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?date (SAMPLE(?image) AS ?image) WHERE {\n?person wdt:P31 wd:Q5.\n?person wdt:P21 wd:Q6581072.\n?person wdt:P106 wd:Q36180.\n?person wdt:P570 ?date.\nFILTER (year(?date) < 1500)\nFILTER (year(?date) > 600)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\nOPTIONAL { ?person wdt:P18 ?image. }\n}\nGROUP BY ?date ?person ?personLabel\nLimit 100",
        "complexity_description": "Multiple filters, optional clause and grouping",
        "complexity": "medium"
    },
    {
        "id": "1446",
        "valid_gpt_response": true,
        "query": "SELECT ?instrument ?instrumentLabel (COUNT(DISTINCT ?work) AS ?count) (SAMPLE(?image) AS ?sampleImage) WHERE {\n?work wdt:P180 ?instrument.\n?instrument wdt:P279+ wd:Q34379.\nOPTIONAL { ?work wdt:P18 ?image. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?instrument ?instrumentLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple patterns, optional clause, and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "1447",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?dod ?itemLabel ?itemDescription ?nom\nWHERE\n{\n?item wdt:P570 ?dod .\nFILTER ( ?dod >= \"2017-01-01T00:00:00Z\"^^xsd:dateTime && ?dod <= \"2017-12-31T00:00:00Z\"^^xsd:dateTime )\n?item wdt:P31 wd:Q5 .\nOPTIONAL { ?item wdt:P569 ?v }\nOPTIONAL { ?item wdt:P1559 ?nom }\nFILTER(NOT EXISTS {\n?item rdfs:label ?lang_label.\nFILTER(LANG(?lang_label) = \"fr\")\n})\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\", \"nl\", \"it\", \"ru\", \"ja\". }\n}",
        "complexity_description": "Multiple filters, optional patterns and service call",
        "complexity": "complex"
    },
    {
        "id": "1448",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?image\nWHERE {\n?item wdt:P31 ?goats.\nVALUES ?goats {\nwd:Q2934\nwd:Q172923\nwd:Q27713372\n}\nOPTIONAL { ?item wdt:P18 ?image . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Optional clause and VALUES keyword",
        "complexity": "medium"
    },
    {
        "id": "1449",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel WHERE {\nBIND(wd:Q28800754 AS ?surname)\n?surname wdt:P3879 ?cologne.\n?surname wdt:P3880 ?caverphone.\n?surname wdt:P3878 ?soundex.\n?item wdt:P31 wd:Q101352.\n?item wdt:P3879 ?cologne.\n?item wdt:P3880 ?caverphone.\n?item wdt:P3878 ?soundex.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\nFILTER(?item != ?surname)\n}",
        "complexity_description": "Multiple triple patterns, SERVICE clause and FILTER",
        "complexity": "medium"
    },
    {
        "id": "1450",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?length_in_meters WHERE {\nhint:Query hint:optimizer 'None' .\n?item wdt:P131* wd:Q649 .\n?item (wdt:P31/wdt:P279*) wd:Q79007 .\n?item p:P2043/psn:P2043/wikibase:quantityAmount ?length_in_meters .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"ru,en\". }\n}\nORDER BY ?length_in_meters\nLIMIT 100",
        "complexity_description": "Multiple joins, property paths and service call",
        "complexity": "complex"
    },
    {
        "id": "1451",
        "valid_gpt_response": true,
        "query": "SELECT ?theologian ?theologianLabel ?date_of_birth ?image WHERE {\n?theologian wdt:P106 wd:Q1234713.\n?theologian wdt:P937 wd:Q64.\nOPTIONAL { ?theologian wdt:P569 ?date_of_birth. }\nOPTIONAL { ?theologian wdt:P18 ?image. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple filters, optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "1452",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?t ?ppLabel ?valueLabel ?rrLabel ?image\nWHERE\n{\n{wd:Q9711 ?prop ?t FILTER (datatype(?t)=xsd:dateTime) .\n?value wikibase:directClaim ?prop. }\nUNION\n{\nwd:Q9711 ?q ?statement FILTER regex (STR(?q),\"prop/P\") .\n?statement ?p ?t FILTER regex (STR(?p), \"prop/qualifier/P\") FILTER (datatype(?t)=xsd:dateTime) .\n?statement ?r ?value FILTER regex (STR(?r),\"prop/statement/\") .\nBIND(IRI(CONCAT(CONCAT(SUBSTR(STR(?r),1,29),\"direct/\"),SUBSTR(STR(?r),40))) as ?rprop)\n?rr wikibase:directClaim ?rprop .\nBIND(IRI(CONCAT(CONCAT(SUBSTR(STR(?p),1,29),\"direct/\"),SUBSTR(STR(?p),40))) as ?pprop)\n?pp wikibase:directClaim ?pprop .\nOPTIONAL {?value wdt:P18 ?image}\n}\nUNION\n{\nwd:Q9711 wdt:P800 ?value .\n?value ?prop ?t FILTER (datatype(?t)=xsd:dateTime) .\n?rr wikibase:directClaim wdt:P800 .\n?pp wikibase:directClaim ?prop.\nOPTIONAL {?value wdt:P18 ?image}\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?t",
        "complexity_description": "Multiple UNIONs, regex filters, BIND operations, and OPTIONAL patterns",
        "complexity": "complex"
    },
    {
        "id": "1453",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\n?item wdt:P190 ?sister;\nwdt:P625 ?coord .\n?sister wdt:P131* wd:Q258 .\n}",
        "complexity_description": "Two triple patterns with one transitive property",
        "complexity": "medium"
    },
    {
        "id": "1454",
        "valid_gpt_response": true,
        "query": "SELECT ?date ?count ?label WITH {\n# all MPs with their associated parliament\nSELECT DISTINCT ?mp ?parliament WHERE {\n?mp wdt:P31 wd:Q5.\n{\n# new data model: position held - Member of the nth Parliament of the United Kingdom\n?mp p:P39/ps:P39 ?position.\n?position wdt:P279 wd:Q16707842;\np:P279/pq:P2937|wdt:P2937 ?parliament.\n} UNION {\n# old data model: member of - nth Parliament of the United Kingdom\n?mp p:P463/ps:P463 ?parliament.\n?parliament wdt:P31 wd:Q21094819.\n}\n}\n} AS %MPsWithParliament WITH {\n# count of Johns in each parliament\nSELECT ?parliament (COUNT(DISTINCT ?mp) AS ?johns) WHERE {\nINCLUDE %MPsWithParliament.\n?mp wdt:P735 wd:Q4925477.\n}\nGROUP BY ?parliament\n} AS %johns WITH {\n# count of women in each parliament\nSELECT ?parliament (COUNT(DISTINCT ?mp) AS ?women) WHERE {\nINCLUDE %MPsWithParliament.\n?mp wdt:P21/wdt:P279* wd:Q6581072. # (P279*: include transgender females - non yet, but will probably happen in the future)\n}\nGROUP BY ?parliament\n} AS %women WHERE {\n# get ?johns and ?women\nINCLUDE %johns.\nINCLUDE %women.\n# fan out single result\n# ?parliament ?johns ?women\n# into two results\n# ?parliament \"Johns\" ?johns\n# ?parliament \"women\" ?women\n# so the line chart works\nVALUES ?label { \"Johns\"@en \"women\"@en }\nBIND(IF(?label = \"Johns\"@en, ?johns, ?women) AS ?count)\n# get parliament date for the chart\n?parliament wdt:P571|wdt:P580 ?date.\n# add labels\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?date",
        "complexity_description": "Multiple subqueries, unions, and complex filtering",
        "complexity": "complex"
    },
    {
        "id": "1455",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?place (STR(?label) AS ?placeLabel) WHERE {\nhint:Query hint:optimizer 'None' .\nBIND(wd:Q2 AS ?earth) .\n?earth rdfs:label ?label .\n?place rdfs:label ?label .\nFILTER (?earth != ?place) .\n?place wdt:P31/wdt:P279* wd:Q17334923 .\n}",
        "complexity_description": "Multiple triple patterns, filter and property path",
        "complexity": "medium"
    },
    {
        "id": "1456",
        "valid_gpt_response": true,
        "query": "SELECT ?n (COUNT(?item)*72 as ?ct)\n{\n?item wdt:P735 wd:Q4925477 ; wdt:P31 wd:Q5 .\nBIND(ROUND(xsd:integer(strafter(str(?item),\"y/Q\"))/1000000) as ?n)\n}\nGROUP BY ?n",
        "complexity_description": "Uses BIND, GROUP BY and aggregate function",
        "complexity": "complex"
    },
    {
        "id": "1457",
        "valid_gpt_response": true,
        "query": "SELECT ?date ?qid\n{\nwd:Q38074555 p:P1114 [ ps:P1114 ?qid ; pq:P585 ?date ]\n}",
        "complexity_description": "Simple query with single triple pattern",
        "complexity": "simple"
    },
    {
        "id": "1458",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?t ?rrLabel ?valueLabel ?image\nWHERE\n{\n{wd:Q57191 ?prop ?t FILTER (datatype(?t)=xsd:dateTime) .\n?value wikibase:directClaim ?prop. }\nUNION\n{\nwd:Q57191 ?q ?statement FILTER regex (STR(?q),\"prop/P\") .\n?statement ?p ?t FILTER regex (STR(?p), \"prop/qualifier/P\") FILTER (datatype(?t)=xsd:dateTime) .\n?statement ?r ?value FILTER regex (STR(?r),\"prop/statement/\") .\nBIND(IRI(CONCAT(CONCAT(SUBSTR(STR(?r),1,29),\"direct/\"),SUBSTR(STR(?r),40))) as ?rprop)\n?rr wikibase:directClaim ?rprop .\nOPTIONAL {?value wdt:P18 ?image}\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple UNION patterns, regex filters, and BIND operation",
        "complexity": "complex"
    },
    {
        "id": "1459",
        "valid_gpt_response": true,
        "query": "SELECT\n?actor ?actorLabel\n(GROUP_CONCAT(?movieLabel; separator = \"; \") AS ?movies)\n(GROUP_CONCAT(?presidentLabel; separator = \"; \") AS ?presidents)\nWHERE {\n?actor wdt:P31 wd:Q5;\nwdt:P27 wd:Q16;\np:P106/ps:P106 wd:Q33999.\n?movie p:P161 [\nps:P161 ?actor;\npq:P453 ?president\n].\n?president p:P39/ps:P39 wd:Q11696.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?actor rdfs:label ?actorLabel.\n?movie rdfs:label ?movieLabel.\n?president rdfs:label ?presidentLabel.\n}\n}\nGROUP BY ?actor ?actorLabel\nHAVING(COUNT(DISTINCT ?movie) = 2)",
        "complexity_description": "Multiple group concat, subqueries, and filters",
        "complexity": "complex"
    },
    {
        "id": "1460",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?movieLabel ?duration WHERE {\n?movie wdt:P57 wd:Q8877 ; # film directed by Steven Spielberg\nwdt:P2047 ?duration . # the duration of the film\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "1461",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?q ?qLabel ?nb ?pays ?paysLabel ?loc ?image WHERE {\n{\nSELECT (MAX(?nb) AS ?nb) ?pays WHERE {\n?q (wdt:P31/wdt:P279*) wd:Q3305213 .\n?q wdt:P170 ?crea.\n?crea wdt:P19 ?villenaissance .\n?villenaissance wdt:P17 ?pays.\n?q wikibase:sitelinks ?nb\n}\nGROUP BY ?pays\nHAVING (?nb>1)\nORDER BY DESC(?nb)\n}\n?q wdt:P31/wdt:P279* wd:Q3305213 .\n?q wdt:P170 ?crea.\n?crea wdt:P19 ?villenaissance .\n?villenaissance wdt:P17 ?pays.\nOPTIONAL{?q wdt:P18 ?image .}\n?q wikibase:sitelinks ?nb .\n?pays wdt:P625 ?loc .\nSERVICE wikibase:label { #BabelRainbow\nbd:serviceParam wikibase:language \"fr,en,ar,be,bg,bn,ca,cs,da,de,el,es,et,fa,fi,he,hi,hu,hy,id,it,ja,jv,ko,nb,nl,eo,pa,pl,pt,ro,ru,sh,sk,sr,sv,sw,te,th,tr,uk,yue,vec,vi,zh\".\n}\n}",
        "complexity_description": "Multiple subqueries, joins, and optional patterns with filters",
        "complexity": "complex"
    },
    {
        "id": "1462",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?uni ?uniLabel ?pr WHERE {\n?uni wdt:P31/(wdt:P279)* wd:Q3918.\nSERVICE <http://dbpedia.org/sparql> {\n?uni vrank:hasRank/vrank:rankValue ?pr\n}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\".\n}\n} ORDER BY DESC(?pr) LIMIT 10",
        "complexity_description": "Multiple services, property paths, and ordering",
        "complexity": "complex"
    },
    {
        "id": "1463",
        "valid_gpt_response": true,
        "query": "SELECT ?actorLabel ?title ?film1Description ?film2Description WHERE {\n{\nSELECT ?actor ?title ?film1 ?film2 WHERE {\n# ?film1 is a film, starring ?actor, with title ?title.\n?film1 wdt:P31 wd:Q11424;\nwdt:P161 ?actor;\nwdt:P1476 ?title.\n# ditto for ?film2 - since we're using the same ?actor and ?title variable, we require that both films have the same actor and title\n?film2 wdt:P31 wd:Q11424;\nwdt:P161 ?actor;\nwdt:P1476 ?title.\n# check that they're not the same film\nFILTER(?film1 != ?film2)\n}\nLIMIT 10\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Nested query with multiple filters and subqueries",
        "complexity": "complex"
    },
    {
        "id": "1464",
        "valid_gpt_response": true,
        "query": "SELECT ?institution ?institutionLabel ?count (100*?count/?total AS ?percent) WITH {\nSELECT ?institution (COUNT(DISTINCT ?mp) AS ?count) WHERE {\n?mp wdt:P31 wd:Q5;\np:P39/ps:P39/wdt:P279* wd:Q16707842;\np:P69/ps:P69 ?institution.\n}\nGROUP BY ?institution ?institutionLabel\n} AS %institutions WITH {\nSELECT (COUNT(DISTINCT ?mp) AS ?total) WHERE {\n?mp wdt:P31 wd:Q5;\np:P39/ps:P39/wdt:P279* wd:Q16707842.\n}\n} AS %MPs WHERE {\nINCLUDE %institutions.\nINCLUDE %MPs.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, grouping and aggregation",
        "complexity": "complex"
    },
    {
        "id": "1465",
        "valid_gpt_response": true,
        "query": "SELECT ?church ?churchLabel ?churchloc ?dist ?other ?otherLabel\nWHERE\n{\n?church wdt:P31 wd:Q16970 . # this thing is a church\n?church wdt:P17 wd:Q145 . # and it's in the UK\n?church wdt:P625 ?churchloc . # and it has a location\n?other wdt:P31 wd:Q16970 . # another thing is also a church\nSERVICE wikibase:around {\n?other wdt:P625 ?otherloc .\nbd:serviceParam wikibase:center ?churchloc .\nbd:serviceParam wikibase:radius \"0.025\" . # and is pretty much exactly on the same spot (+-25m)\n}\nFILTER (STR(?church) > STR(?other)) # filter so each pair only shows up once\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\nBIND(geof:distance(?churchloc, ?otherloc) as ?dist)\n}\nORDER BY ?dist",
        "complexity_description": "Multiple services and filters with geospatial calculations",
        "complexity": "complex"
    },
    {
        "id": "1466",
        "valid_gpt_response": true,
        "query": "SELECT ?national_park ?national_parkLabel ?coordinate_location ?image WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?national_park wdt:P31 wd:Q46169.\n?national_park wdt:P17 wd:Q668.\nOPTIONAL { ?national_park wdt:P625 ?coordinate_location. }\nOPTIONAL { ?national_park wdt:P18 ?image. }\n}\nLIMIT 140",
        "complexity_description": "Multiple filters, optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "1467",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?dist WHERE {\n?person wdt:P20/wdt:P625 ?coord1 ; wdt:P119/wdt:P625 ?coord2 .\nBIND(geof:distance(?coord1, ?coord2) as ?dist)\nFILTER(?dist > 13000)\n}\nLIMIT 50",
        "complexity_description": "Multiple triple patterns with geospatial function and filter",
        "complexity": "medium"
    },
    {
        "id": "1468",
        "valid_gpt_response": true,
        "query": "SELECT ?algorithm ?algorithmLabel ?probLabel\n{\n?algorithm wdt:P2159 ?prob .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,en\" }\n}",
        "complexity_description": "Simple query with one triple pattern and a service call",
        "complexity": "simple"
    },
    {
        "id": "1469",
        "valid_gpt_response": true,
        "query": "SELECT ?item (SAMPLE(?title) AS ?itemLabel) (SAMPLE(?location) AS ?location) (SAMPLE(?language) AS ?layer) WITH {\nSELECT * WHERE {\nwd:Q39 p:P1332/psv:P1332/wikibase:geoLatitude ?n;\np:P1333/psv:P1333/wikibase:geoLatitude ?s;\np:P1334/psv:P1334/wikibase:geoLongitude ?e;\np:P1335/psv:P1335/wikibase:geoLongitude ?w.\n}\n} AS %switzerlandBoundingBox WHERE {\nVALUES ?wiki { <https://de.wikipedia.org/> <https://fr.wikipedia.org/> <https://it.wikipedia.org/> <https://rm.wikipedia.org/> }\n?item wdt:P17 wd:Q39;\nwdt:P625 ?location.\n?article a schema:Article;\nschema:about ?item;\nschema:isPartOf ?wiki;\nschema:inLanguage ?language;\nschema:name ?title.\n# filter out some stray results that have country Switzerland but coordinates outside it (e. g. rivers)\nINCLUDE %switzerlandBoundingBox.\nBIND(geof:latitude(?location) AS ?lat)\nBIND(geof:longitude(?location) AS ?lon)\nFILTER(?s <= ?lat && ?lat <= ?n &&\n?w <= ?lon && ?lon <= ?e)\n}\nGROUP BY ?item\nHAVING(COUNT(DISTINCT ?wiki) = 1)",
        "complexity_description": "Multiple subqueries, filters, and bindings with geographic calculations",
        "complexity": "complex"
    },
    {
        "id": "1470",
        "valid_gpt_response": true,
        "query": "SELECT ?name ?nameLabel ?women ?total ?ratio (ABS(?ratio-0.5) AS ?diffFrom5050) WHERE {\n{\nSELECT ?name (COUNT(*) AS ?total) (SUM(?woman) AS ?women) (SUM(?woman)/COUNT(*) AS ?ratio) WHERE { # should be (?women/?total AS ?ratio) - see T172113\n?person wdt:P31 wd:Q5;\nwdt:P735 ?name;\nwdt:P21 ?sexOrGender;\nwdt:P569 ?dob.\nBIND(IF(?sexOrGender IN (wd:Q6581072, wd:Q1052281), 1, 0) AS ?woman)\n}\nGROUP BY ?name\nHAVING(?total >= 10 && 0.4 <= ?ratio && ?ratio <= 0.6) # arbitrary limits, feel free to tweak\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?total)",
        "complexity_description": "Multiple subqueries, grouping, and filtering with arithmetic operations",
        "complexity": "complex"
    },
    {
        "id": "1471",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?portLabel\nWHERE\n{\n?item wdt:P31 wd:Q15836568 .\n?item wdt:P1641 ?port .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "1472",
        "valid_gpt_response": true,
        "query": "SELECT ?developer ?developerLabel (COUNT(?software) AS ?count) WHERE {\n?software (p:P31/ps:P31/wdt:P279*) wd:Q7397.\n?software wdt:P178 ?developer.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?developer ?developerLabel\nORDER BY DESC(?count)\nLIMIT 100",
        "complexity_description": "Multiple triple patterns, service call, group by and order by",
        "complexity": "complex"
    },
    {
        "id": "1473",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?obj ?objLabel ?objDescription ?nom ?nomLabel ?nomDescription\nWHERE {\n{?obj wdt:P31/wdt:P279* wd:Q40218 } # type of spacecraft\nUNION { ?obj wdt:P31/wdt:P279* wd:Q13226541 } # or spaceflight programme\n?obj wdt:P138 ?nom #named after\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ASC(?objLabel)",
        "complexity_description": "Union, property paths, and service call",
        "complexity": "medium"
    },
    {
        "id": "1474",
        "valid_gpt_response": true,
        "query": "SELECT ?body ?bodyLabel (COUNT(?standard) AS ?count)\nWHERE {\n?standard wdt:P1462 ?body .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}\nGROUP BY ?body ?bodyLabel\nORDER BY DESC(?count)",
        "complexity_description": "Uses SERVICE, GROUP BY and ORDER BY",
        "complexity": "medium"
    },
    {
        "id": "1475",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?label WHERE {\n?item wdt:P279 wd:Q25036597.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n?item rdfs:label ?label\n}\n}\nLIMIT 100",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "1476",
        "valid_gpt_response": true,
        "query": "SELECT ?human ?humanLabel (YEAR(?date) AS ?year)\nWHERE {\n?human wdt:P31 wd:Q5 ; wdt:P21 wd:Q6581072 ; p:P166 [ rdf:type wikibase:BestRank ; ps:P166 wd:Q38104 ; pq:P585 ?date ] .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY ?year",
        "complexity_description": "Multiple triple patterns, service call and aggregation function",
        "complexity": "medium"
    },
    {
        "id": "1477",
        "valid_gpt_response": true,
        "query": "SELECT ?award ?awardLabel ?total ?women ?women_percentage\nWHERE {\nhint:Query hint:optimizer \"None\" .\n{\nSELECT ?award (COUNT(*) AS ?total) (SUM(IF(?gender = wd:Q6581072, 1, 0)) AS ?women) (ROUND(1000 / COUNT(*) * SUM(IF(?gender = wd:Q6581072, 1, 0))) / 10 AS ?women_percentage)\nWHERE {\n?human wdt:P166 ?award ; wdt:P21 ?gender ; wdt:P31 wd:Q5 .\n}\nGROUP BY ?award\nORDER BY DESC(?total)\nLIMIT 200\n} .\n?award rdfs:label ?awardLabel .\nFILTER (LANG(?awardLabel) = \"en\") .\n}\nORDER BY DESC(?total)",
        "complexity_description": "Multiple subqueries, aggregation functions and filtering",
        "complexity": "complex"
    },
    {
        "id": "1478",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?label WHERE {\n?item wdt:P31 wd:Q3467906.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n?item rdfs:label ?label\n}\n}\nLIMIT 100",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "1479",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?unit ?unitLabel ?personLabel WHERE {\n?unit wdt:P31/wdt:P279* wd:Q47574;\nwdt:P138 ?person.\n{ ?person wdt:P27/wdt:P156* wd:Q183. } UNION\n{ ?person wdt:P103 wd:Q188. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?personLabel",
        "complexity_description": "Multiple unions, nested properties and service call",
        "complexity": "complex"
    },
    {
        "id": "1480",
        "valid_gpt_response": true,
        "query": "select ?building ?buildingLabel ?coord ?image WHERE\n{\n?building wdt:P84 wd:Q151759 ;\nwdt:P625 ?coord .\nOPTIONAL {?building wdt:P18 ?image}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, fr, de, pl\". }\n}",
        "complexity_description": "Optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1481",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?jurisdictionLabel ?count ?image WHERE {\n?item wdt:P31/wdt:P279* wd:Q14660 ;\nwdt:P18 ?image ;\nwdt:P1001 ?jurisdiction ;\np:P180 ?statement .\n?statement ps:P180/wdt:P279* wd:Q836708 ;\npq:P1114 ?count .\nFILTER ( ?count >= 5 )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY DESC(?count) ?jurisdictionLabel",
        "complexity_description": "Multiple joins, subqueries, and filters",
        "complexity": "complex"
    },
    {
        "id": "1482",
        "valid_gpt_response": true,
        "query": "select ?language ?languageLabel ?time ?image WHERE\n{\n?language wdt:P31 wd:Q9143 ;\nwdt:P571 ?time .\nOPTIONAL {?language wdt:P154 ?image .}\nOPTIONAL {?language wdt:P18 ?image .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, fr, de, pl\". }\n}",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "1483",
        "valid_gpt_response": true,
        "query": "SELECT ?count ?author ?authorLabel\nWITH {\nSELECT (COUNT(?citing_work) AS ?count) ?author WHERE {\n?work wdt:P50 ?author .\n?author wdt:P21 wd:Q6581072 .\n?citing_work wdt:P2860 ?work\n}\nGROUP BY ?author\nORDER BY DESC(?count)\n# LIMIT 100\n} AS %result\nWHERE {\nINCLUDE %result\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "1484",
        "valid_gpt_response": true,
        "query": "SELECT (AVG(?age) AS ?avgAge) WHERE {\n?mdb wdt:P31 wd:Q5;\np:P39 [\nps:P39 wd:Q1939555;\npq:P2937 wd:Q30579723\n];\nwdt:P569 ?dob.\nBIND(FLOOR((NOW() - ?dob)/365.2425) AS ?age)\n}",
        "complexity_description": "Multiple triple patterns, BIND function and aggregation",
        "complexity": "complex"
    },
    {
        "id": "1485",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coord ?prominence ?layer ?image WHERE {\n?item wdt:P31 wd:Q8502. # a mountain\n?item wdt:P625 ?coord.\n?item wdt:P17 wd:Q39. # in Switzerland\n?item wdt:P2660 ?prominence .\nBIND(\nIF(?prominence < 1000, \"<1000 metres\",\nIF(?prominence < 2000, \"1000 - 2000 metres\",\nIF(?prominence < 3000, \"2000 - 3000 metres\",\nIF(?prominence < 4000, \"3000 - 4000 metres\",\n\"> 4000 metres\"))))\nAS ?layer).\nOPTIONAL {?item wdt:P18 ?image.}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple filters, conditional binding and optional pattern",
        "complexity": "medium"
    },
    {
        "id": "1486",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coord ?height ?layer ?image WHERE { ?item wdt:P31 wd:Q8502. ?item wdt:P625 ?coord. ?item wdt:P17 wd:Q39. ?item wdt:P2044 ?height . BIND( IF(?height < 1000, \"<1000 metres\", IF(?height < 2000, \"1000 - 2000 metres\", IF(?height < 3000, \"2000 - 3000 metres\", IF(?height < 4000, \"3000 - 4000 metres\", \"> 4000 metres\")))) AS ?layer). OPTIONAL {?item wdt:P18 ?image.}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } }",
        "complexity_description": "Multiple filters, conditional binding and optional clause",
        "complexity": "complex"
    },
    {
        "id": "1487",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?denkmal ?denkmalLabel ?coordinates WHERE {\n?denkmal wdt:P2424 ?id ;\nwdt:P625 ?coordinates .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de,en\". }\n}",
        "complexity_description": "Simple query with 2 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "1488",
        "valid_gpt_response": true,
        "query": "SELECT ?character (COUNT(DISTINCT ?item) AS ?count) WHERE {\n{ ?item p:P31/ps:P31/wdt:P279* wd:Q341. } UNION\n{ ?item wdt:P31/wdt:P279* wd:Q7397; wdt:P275/(wdt:P31|wdt:P279)* wd:Q3943414. }\n?item rdfs:label ?label.\nFILTER(LANG(?label) = \"en\")\nBIND(UCASE(SUBSTR(?label, 1, 1)) AS ?character)\n}\nGROUP BY ?character",
        "complexity_description": "Multiple UNION patterns, FILTER, BIND, and GROUP BY",
        "complexity": "complex"
    },
    {
        "id": "1489",
        "valid_gpt_response": true,
        "query": "SELECT ?character (COUNT(DISTINCT ?item) AS ?count) WHERE {\n?item wdt:P31/wdt:P279* wd:Q7397.\nMINUS { ?item p:P31/ps:P31/wdt:P279* wd:Q341. }\nMINUS { ?item wdt:P275/(wdt:P31|wdt:P279)* wd:Q3943414. }\n?item rdfs:label ?label.\nFILTER(LANG(?label) = \"en\")\nBIND(UCASE(SUBSTR(?label, 1, 1)) AS ?character)\n}\nGROUP BY ?character",
        "complexity_description": "Multiple MINUS clauses and FILTER with BIND",
        "complexity": "complex"
    },
    {
        "id": "1490",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?countryLabel (YEAR(?date) AS ?year) ?coords ?image WHERE {\n{\nSELECT (MIN(?date) AS ?date) ?country WHERE {\n?item p:P1435 ?statement ;\nwdt:P17 ?country .\n?statement ps:P1435 wd:Q9259 ;\npq:P580 ?date .\n}\nGROUP BY ?country\n}\n?item p:P1435 ?statement ;\nwdt:P17 ?country ;\nwdt:P625 ?coords .\nOPTIONAL { ?item wdt:P18 ?image }\n?statement ps:P1435 wd:Q9259 ;\npq:P580 ?date .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" . }\n} ORDER BY ?countryLabel ?itemLabel",
        "complexity_description": "Multiple subqueries, grouping, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "1491",
        "valid_gpt_response": true,
        "query": "SELECT ?compound ?compoundLabel ?image WHERE {\n?compound wdt:P279+|wdt:P31+ wd:Q421948 ;\nwdt:P18 ?image .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "1492",
        "valid_gpt_response": true,
        "query": "SELECT ?aLabel ?bLabel WHERE {\n?a wdt:P22 ?b.\n?b wdt:P22 ?a.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}",
        "complexity_description": "Two-way join with a service call",
        "complexity": "medium"
    },
    {
        "id": "1493",
        "valid_gpt_response": true,
        "query": "SELECT ?district ?districtLabel ?districtNumber ?mdb ?mdbLabel ?party ?partyLabelCONF (?partyLabel AS ?layer) ?votesPercentage ?rgb ?shape ?sanityCheckMdb WHERE {\n# find districts with shape\n?district wdt:P3896 ?shape;\n# successful candidate for 19th German Bundestag with party and % votes\np:P991 [\nps:P991 ?mdb;\npq:P2937 wd:Q30579723;\npq:P1268 ?party;\npqv:P1111 [ wikibase:quantityAmount ?votesPercentage; wikibase:quantityUnit wd:Q11229 ]\n];\n# district number in 2017 Bundestag constituencies\np:P528 [\nps:P528 ?districtNumberString;\npq:P972 wd:Q26971257\n].\n# turn string district number into integer\nBIND(xsd:integer(?districtNumberString) AS ?districtNumber)\n# sanity check\nOPTIONAL {\n?mdb p:P39 [\nps:P39 wd:Q1939555;\npq:P2937 wd:Q30579723;\npq:P768 ?district;\npq:P4100 ?party\n].\nBIND(true AS ?sanityCheckMdb)\n}\n# find original color of party\n?party wdt:P462?/wdt:P465 ?rgbOriginal.\n# fade color depending on % votes, knowing that the original colors are only composed of FF, 80, 00: shift 80 to A0 or C0, and 00 to 40 or 80\n# (using separate calls to replace R, G, and B components so that the replacements are aligned to them)\nBIND(IF(?votesPercentage >= (100/2),\n?rgbOriginal,\nIF(?votesPercentage >= (100/3),\nREPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(?rgbOriginal, \"80(..)(..)\", \"A0$1$2\"), \"(..)80(..)\", \"$1A0$2\"), \"(..)(..)80\", \"$1$2A0\"), \"00(..)(..)\", \"40$1$2\"), \"(..)00(..)\", \"$140$2\"), \"(..)(..)00\", \"$1$240\"),\nREPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(?rgbOriginal, \"80(..)(..)\", \"C0$1$2\"), \"(..)80(..)\", \"$1C0$2\"), \"(..)(..)80\", \"$1$2C0\"), \"00(..)(..)\", \"80$1$2\"), \"(..)00(..)\", \"$180$2\"), \"(..)(..)00\", \"$1$280\")\n)\n) AS ?rgb)\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?district rdfs:label ?districtLabel.\n?party rdfs:label ?partyLabel.\n?mdb rdfs:label ?mdbLabel.\n}\n}\nORDER BY ?districtNumber",
        "complexity_description": "Multiple joins, subqueries, and complex string manipulation",
        "complexity": "complex"
    },
    {
        "id": "1494",
        "valid_gpt_response": true,
        "query": "SELECT ?city ?cityLabel ?count WHERE {\n{\nSELECT ?city (COUNT(DISTINCT ?performance) AS ?count) WHERE {\n?work p:P1191 ?performance.\n?performance pq:P276 ?location. hint:Prior hint:runFirst true.\n?location wdt:P276?/wdt:P131* ?city.\n?city p:P31/ps:P31/wdt:P279* wd:Q515.\n}\nGROUP BY ?city\nHAVING(?count > 1)\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?count) ?cityLabel",
        "complexity_description": "Multiple subqueries, grouping and filtering",
        "complexity": "complex"
    },
    {
        "id": "1495",
        "valid_gpt_response": true,
        "query": "SELECT ?date ?count ?label WITH {\n# all MPs with their associated parliament\nSELECT DISTINCT ?mp ?parliament WHERE {\n?mp wdt:P31 wd:Q5.\n{\n# new data model: position held - Member of the nth Parliament of the United Kingdom\n?mp p:P39/ps:P39 ?position.\n?position wdt:P279 wd:Q16707842;\np:P279/pq:P2937|wdt:P2937 ?parliament.\n} UNION {\n# old data model: member of - nth Parliament of the United Kingdom\n?mp p:P463/ps:P463 ?parliament.\n?parliament wdt:P31 wd:Q21094819.\n}\n}\n} AS %MPsWithParliament WITH {\n# count of Johns in each parliament\nSELECT ?parliament (COUNT(DISTINCT ?mp) AS ?johns) WHERE {\nINCLUDE %MPsWithParliament.\n?mp wdt:P735 wd:Q4925477.\n}\nGROUP BY ?parliament\n} AS %johns WITH {\n# count of women in each parliament\nSELECT ?parliament (COUNT(DISTINCT ?mp) AS ?women) WHERE {\nINCLUDE %MPsWithParliament.\n?mp wdt:P21/wdt:P279* wd:Q6581072. # (P279*: include transgender females - non yet, but will probably happen in the future)\n}\nGROUP BY ?parliament\n} AS %women WHERE {\n# get ?johns and ?women\nINCLUDE %johns.\nINCLUDE %women.\n# fan out single result\n# ?parliament ?johns ?women\n# into two results\n# ?parliament \"Johns\" ?johns\n# ?parliament \"women\" ?women\n# so the line chart works\nVALUES ?label { \"Johns\"@en \"women\"@en }\nBIND(IF(?label = \"Johns\"@en, ?johns, ?women) AS ?count)\n# get parliament date for the chart\n?parliament wdt:P571|wdt:P580 ?date.\n# add labels\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?date",
        "complexity_description": "Multiple subqueries, unions, and complex filtering",
        "complexity": "complex"
    },
    {
        "id": "1496",
        "valid_gpt_response": true,
        "query": "SELECT (100*SUM(?diedInRome)/COUNT(?pope) AS ?percentDiedInRome) WHERE {\n?pope wdt:P31 wd:Q5;\nwdt:P39 wd:Q19546.\nOPTIONAL {\n?pope wdt:P20/(wdt:P276|wdt:P131|wdt:P501)* wd:Q18288160.\nBIND(1 AS ?diedInRome)\n}\n}",
        "complexity_description": "Multiple patterns, optional clause and aggregation",
        "complexity": "complex"
    },
    {
        "id": "1497",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?countryLabel (YEAR(?date) AS ?year) ?coords ?image WHERE {\n{\nSELECT (MIN(?date) AS ?date) ?country WHERE {\n?item p:P1435 ?statement ;\nwdt:P17 ?country .\n?statement ps:P1435 wd:Q9259 ;\npq:P580 ?date .\n}\nGROUP BY ?country\n}\n?item p:P1435 ?statement ;\nwdt:P17 ?country ;\nwdt:P625 ?coords .\nOPTIONAL { ?item wdt:P18 ?image }\n?statement ps:P1435 wd:Q9259 ;\npq:P580 ?date .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,fr\" . }\n} ORDER BY ?countryLabel ?itemLabel",
        "complexity_description": "Multiple subqueries, grouping, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "1498",
        "valid_gpt_response": true,
        "query": "SELECT ?species ?speciesLabel ?image WHERE {\n?species wdt:P31 wd:Q16521; # taxon\nwdt:P171* wd:Q28319; # in the Lepidoptera order\n# wdt:P105/wdt:P361* wd:Q7432; # species or subdivision thereof\nwdt:P183/wdt:P17 wd:Q664; # endemic to New Zealand\nwdt:P18 ?image. # with image\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple filters and joins, but no subqueries or complex aggregations.",
        "complexity": "medium"
    },
    {
        "id": "1499",
        "valid_gpt_response": true,
        "query": "SELECT ?subject ?subjectLabel ?image WHERE {\n?tafel wdt:P31 wd:Q721747; # instances of commemorative plaques\nwdt:P131 wd:Q3150 ; # located in the administrative territorial entity of the city of Jena\nwdt:P547 ?subject . # subject of the commemoration\n?subject wdt:P18 ?image . # image of the subject\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de,en\". } # labels\n}\n#defaultView:ImageGrid",
        "complexity_description": "Multiple filters, joins and service call",
        "complexity": "medium"
    },
    {
        "id": "1500",
        "valid_gpt_response": true,
        "query": "select DISTINCT ?urlatlas ?item ?itemLabel ?lieuLabel ?dateconsult\nwhere {\n?item wdt:P195/wdt:P361* wd:Q3044768.\n?item (wdt:P276|wdt:P361)/(wdt:P276*|wdt:P361*) wd:Q1075988.\nMINUS{?item wdt:P276 wd:Q1075988.}\nMINUS{?item wdt:P276 wd:Q40091273.}\nMINUS{?item wdt:P276 wd:Q19675. }\n?item wdt:P276 ?lieu.\nOPTIONAL{\n?item p:P276 ?declarationloc.\n?declarationloc prov:wasDerivedFrom ?ref.\n?ref pr:P854 ?URLref.\nFILTER regex(str(?URLref), \"cartelfr.louvre\")\n?ref pr:P813 ?dateconsult .\n}\nMINUS{?item wdt:P18 ?img.}\nOPTIONAL{\n?item wdt:P1212 ?IDatlas .\nwd:P1212 wdt:P1630 ?formatterurl .\nBIND(IRI(REPLACE(?IDatlas, '^(.+)$', ?formatterurl)) AS ?urlatlas)\n}\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"fr\"}\n}ORDER BY ?LieuLabel",
        "complexity_description": "Multiple filters, MINUS clauses, and OPTIONAL patterns with regex and BIND functions",
        "complexity": "complex"
    },
    {
        "id": "1501",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?beskaeftigelse ?sitelink\nWITH {\nSELECT DISTINCT ?person ?sitelink (GROUP_CONCAT(?occupation_label; separator=\", \") AS ?beskaeftigelse) WHERE {\n?person wdt:P570 ?date_of_death .\nBIND(YEAR(?date_of_death) AS ?year)\nFILTER (?year = 1947)\n?sitelink schema:about ?person .\n?sitelink schema:inLanguage \"da\" .\nOPTIONAL { ?person wdt:P106 ?occupation . ?occupation rdfs:label ?occupation_label . FILTER (LANG(?occupation_label) = 'da') }\n}\nGROUP BY ?person ?sitelink\n} AS %results\nWHERE {\nINCLUDE %results\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"da,en\". }\n}\nORDER BY ?personLabel",
        "complexity_description": "Multiple subqueries, grouping, and filtering",
        "complexity": "complex"
    },
    {
        "id": "1502",
        "valid_gpt_response": true,
        "query": "SELECT ?ideology ?ideologyLabel ?imageI ?political_ideology ?political_ideologyLabel ?political_party ?political_partyLabel ?image ?political_alignment ?political_alignmentLabel ?country ?countryLabel WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de,en,es,fr,it\". }\n?political_party (wdt:P31/wdt:P279*) wd:Q7278.\n?political_party wdt:P1142 ?political_ideology.\n?political_ideology wdt:P279 ?ideology.\n?ideology wdt:P31 wd:Q14934048.\nOPTIONAL { ?political_party wdt:P1387 ?political_alignment. }\nOPTIONAL { ?political_party wdt:P18 ?image. }\nOPTIONAL { ?ideology wdt:P18 ?imageI. }\nOPTIONAL { ?political_party wdt:P17 ?country. }\n}",
        "complexity_description": "Multiple joins, optional patterns and service call",
        "complexity": "complex"
    },
    {
        "id": "1503",
        "valid_gpt_response": true,
        "query": "SELECT ?compound ?compoundLabel ?image WHERE {\n?compound wdt:P279+|wdt:P31+ wd:Q421948 ;\nwdt:P18|wdt:P117 ?image .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple predicates, property paths and service call",
        "complexity": "medium"
    },
    {
        "id": "1504",
        "valid_gpt_response": true,
        "query": "SELECT ?level ?levelLabel ?partOfLabel ?same ?sameLabel\nWHERE {\n?level p:P31 [ rdf:type wikibase:BestRank ; ps:P31 wd:Q42606026 ; pq:P1545 ?order ] . # niveau de scolarite\n?level wdt:P17 wd:Q142 . # France\n?level wdt:P361 ?partOf .\nOPTIONAL { ?level wdt:P460 ?same . ?same wdt:P17 wd:Q30 . } . # equivalent USA\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr,en\" . }\n}\nORDER BY xsd:integer(?order)",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1505",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?placeLabel ?coords ?image WHERE {\n?item wdt:P31 wd:Q42661374 ;\nwdt:P625 ?coords ;\nwdt:P131 ?place .\nOPTIONAL { ?item wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1506",
        "valid_gpt_response": true,
        "query": "SELECT ?retrieved ?count WITH {\nSELECT ?retrieved (COUNT(?reference) AS ?count) WHERE {\n?reference pr:P813 ?retrieved.\n}\nGROUP BY ?retrieved\n} AS %results WHERE {\nINCLUDE %results.\nwd:Q2013 wdt:P571 ?wikidataInception.\nFILTER(?retrieved >= ?wikidataInception && ?retrieved <= NOW())\n}",
        "complexity_description": "Multiple subqueries, grouping and filtering",
        "complexity": "complex"
    },
    {
        "id": "1507",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?t ?value ?valueLabel ?rrLabel ?rr (SAMPLE(?image) as ?img)\nWHERE\n{\nVALUES ?person {wd:Q1512}\n{?person wdt:P570 ?death .\n?person ?prop ?t FILTER (datatype(?t)=xsd:dateTime) FILTER (?t <= ?death) .\n?value wikibase:directClaim ?prop. }\nUNION\n{\n?person ?q ?statement FILTER regex (STR(?q),\"prop/P\") . #exclude P:describedBy\n?person wdt:P570 ?death .\n?statement ?p ?t FILTER regex (STR(?p), \"prop/qualifier/P\") FILTER (datatype(?t)=xsd:dateTime) FILTER (?t <= ?death).\n?statement ?r ?value FILTER regex (STR(?r),\"prop/statement/\") .\nBIND(IRI(CONCAT(CONCAT(SUBSTR(STR(?r),1,29),\"direct/\"),SUBSTR(STR(?r),40))) as ?rprop)\n?rr wikibase:directClaim ?rprop .\nOPTIONAL {?value wdt:P18 ?image}\n}\nUNION { # author of / creator of\n?value wdt:P50|wdt:P98|wdt:P655|wdt:P1773|wdt:P170 ?person .\n?person wdt:P570 ?death ;\nwdt:P569 ?birth .\n?value wdt:P571|wdt:P577 ?t .\nFILTER ((?t <= ?death)&&(?t >= ?birth))\n#FILTER NOT EXISTS {?value wdt:P629 ?x }\nFILTER NOT EXISTS {?person wdt:P800 ?value } .\nOPTIONAL {?value wdt:P1433 ?rr .}\nOPTIONAL {?value wdt:P18 ?image .}\n}\nUNION #Notable Works\n{\n?person wdt:P800 ?rr ;\nwdt:P570 ?death ;\nwdt:P569 ?birth .\n?rr wdt:P577|wdt:P571|wdt:P1191 ?t FILTER ((?t <= ?death)&&(?t >= ?birth)).\nOPTIONAL {?rr wdt:P18 ?image .}\n}\nUNION #discoverer or inventor\n{\n?rr wdt:P61 ?person .\n?person wdt:P570 ?death ;\nwdt:P569 ?birth .\n?rr wdt:P575|wdt:P571|wdt:P585 ?t FILTER ((?t <= ?death)&&(?t >= ?birth)).\nOPTIONAL {?rr wdt:P18 ?image .}\n}\nUNION #architect\n{\n?rr wdt:P84 ?person .\n?person wdt:P570 ?death ;\nwdt:P569 ?birth .\n?rr wdt:P571|wdt:P1619 ?t FILTER ((?t <= ?death)&&(?t >= ?birth)).\nOPTIONAL {?rr wdt:P18 ?image .}\n}\nUNION #composer\n{\n?rr wdt:P86 ?person .\n?person wdt:P570 ?death ;\nwdt:P569 ?birth .\n?rr wdt:P571|wdt:P1191|wdt:P577 ?t FILTER ((?t <= ?death)&&(?t >= ?birth)).\nOPTIONAL {?rr wdt:P18 ?image .}\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, fr, de\". }\n} GROUP BY ?t ?value ?rr ?rrLabel ?valueLabel\nORDER BY ?t",
        "complexity_description": "Multiple UNIONs with complex filters and regex patterns",
        "complexity": "complex"
    },
    {
        "id": "1508",
        "valid_gpt_response": true,
        "query": "SELECT ?place ?placeLabel ?location\nWHERE\n{\n# Glasgow coordinates\nwd:Q4093 wdt:P625 ?GlasgowLoc .\nSERVICE wikibase:around {\n?place wdt:P625 ?location .\nbd:serviceParam wikibase:center ?GlasgowLoc .\nbd:serviceParam wikibase:radius \"800\" .\n} .\n# Is a canal\nFILTER EXISTS { ?place wdt:P31/wdt:P279* wd:Q12284 } .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n} .\n}",
        "complexity_description": "Multiple services, filter and exists clause",
        "complexity": "complex"
    },
    {
        "id": "1509",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?devLabel ?date ?osLabel\nWHERE\n{\n?item (p:P31/ps:P31/wdt:P279*) wd:Q174989.\nOPTIONAL {?item wdt:P178 ?dev}\nOPTIONAL {?item wdt:P577 ?date}\nOPTIONAL {?item wdt:P306 ?os}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "1510",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?coords ?itemLabel (?connecting_line AS ?layer) WHERE {\n?item (wdt:P31/wdt:P279*) wd:Q928830.\n?item wdt:P625 ?coords.\n?item wdt:P361 wd:Q325309.\n?item wdt:P81 ?connecting_line.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"eu\". }\nOPTIONAL { ?item wdt:P197 ?adjacent_station. }\n}\nORDER BY ?itemLabel",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1511",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?department ?departmentLabel ?highest_pointLabel ?elevation ?coords ?image WHERE {\n?department wdt:P31/wdt:P279* wd:Q6465 ;\nwdt:P610 ?highest_point .\n?highest_point wdt:P625 ?coords ;\np:P2044/psv:P2044 [\nwikibase:quantityAmount ?baseElevation;\nwikibase:quantityUnit [\np:P2370/psv:P2370 [\nwikibase:quantityAmount ?unitElevation;\nwikibase:quantityUnit wd:Q11573\n]\n]\n] .\nBIND(ROUND(?baseElevation * ?unitElevation) AS ?elevation)\nOPTIONAL { ?highest_point wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" . }\n} ORDER BY ?elevation ?departmentLabel",
        "complexity_description": "Multiple joins, subqueries, and functions",
        "complexity": "complex"
    },
    {
        "id": "1512",
        "valid_gpt_response": true,
        "query": "SELECT ?creator ?creatorLabel ?spouseLabel ?pic\nWHERE\n{\n?art wdt:P180 ?spouse.\n?art wdt:P170 ?creator.\n?spouse wdt:P31 wd:Q5.\n?creator wdt:P26 ?spouse.\nOPTIONAL { ?art wdt:P18 ?pic }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, optional clause and service call",
        "complexity": "complex"
    },
    {
        "id": "1513",
        "valid_gpt_response": true,
        "query": "SELECT ?painting ?depictsLabel ?location ?pic\nWHERE\n{\n?painting wdt:P31/wdt:P279* wd:Q4502142.\n?painting wdt:P170 wd:Q5582.\n?painting wdt:P180 ?depicts.\n?depicts wdt:P625 ?location.\nOPTIONAL { ?painting wdt:P18 ?pic }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1514",
        "valid_gpt_response": true,
        "query": "SELECT ?sexo_ou_g_neroLabel (COUNT(?ser_humano) AS ?count) WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?ser_humano wdt:P31 wd:Q5.\n?ser_humano wdt:P4431 ?Google_Doodle.\nOPTIONAL { }\nOPTIONAL { ?ser_humano wdt:P21 ?sexo_ou_g_nero. }\n}\nGROUP BY ?sexo_ou_g_neroLabel",
        "complexity_description": "Multiple optional patterns, grouping and aggregation",
        "complexity": "medium"
    },
    {
        "id": "1515",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel WHERE {\n?person wdt:P31 wd:Q5;\np:P166 [\nps:P166 wd:Q207826;\npq:P585 ?pointInTime1\n];\np:P166 [\nps:P166 wd:Q207826;\npq:P585 ?pointInTime2\n].\nFILTER(YEAR(?pointInTime1) = YEAR(?pointInTime2) + 1)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, property paths and filter with function",
        "complexity": "complex"
    },
    {
        "id": "1516",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?character1 ?character2 ?character1Label ?character2Label ?universeLabel WHERE {\nhint:Query hint:optimizer \"None\".\n?character1 wdt:P1080 ?universe;\nwdt:P460|^wdt:P460 ?character2.\n?character2 wdt:P1080 ?universe.\nFILTER(STR(?character1) < STR(?character2))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?universeLabel",
        "complexity_description": "Multiple joins, filter and service",
        "complexity": "medium"
    },
    {
        "id": "1517",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person ?name ?birthplace ?birthyear ?coord ?layer WHERE {\n{ ?person wdt:P106 wd:Q2306091. }\nUNION\n{ ?person wdt:P101 wd:Q21201. }\n?person wdt:P570 ?dod.\n?person wdt:P19 ?place.\n?place wdt:P625 ?coord.\nOPTIONAL { ?person wdt:P569 ?dob. }\nBIND(YEAR(?dob) AS ?birthyear)\nBIND(IF(?birthyear < 1700, \"Pre-1700\", IF(?birthyear < 1751, \"1700-1750\", IF(?birthyear < 1801, \"1751-1800\", IF(?birthyear < 1851, \"1801-1850\", IF(?birthyear < 1901, \"1851-1900\", IF(?birthyear < 1951, \"1901-1950\", \"Post-1950\")))))) AS ?layer)\n?person rdfs:label ?name.\n?place rdfs:label ?birthplace.\nFILTER((LANG(?name)) = \"en\")\nFILTER((LANG(?birthplace)) = \"en\")\n}\nORDER BY ?birthyear",
        "complexity_description": "Multiple UNION, OPTIONAL, BIND, and FILTER clauses with nested conditional statements",
        "complexity": "complex"
    },
    {
        "id": "1518",
        "valid_gpt_response": true,
        "query": "SELECT ?library ?libraryLabel ?coordinate_location WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?library wdt:P31 wd:Q7075.\n?library wdt:P17 wd:Q668.\nOPTIONAL { ?library wdt:P625 ?coordinate_location. }\n}",
        "complexity_description": "Multiple triple patterns with OPTIONAL clause",
        "complexity": "medium"
    },
    {
        "id": "1519",
        "valid_gpt_response": true,
        "query": "SELECT ?train_station ?coordinate_location ?layer WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"eu\". }\n?train_station (wdt:P31/wdt:P279*) wd:Q719456.\n{ ?train_station wdt:P361 wd:Q10862037. }\nUNION\n{ ?train_station wdt:P361 wd:Q123955. }\nUNION\n{ ?train_station wdt:P361 wd:Q149274. }\nUNION\n{ ?train_station wdt:P361 wd:Q2946410. }\nUNION\n{ ?train_station wdt:P81 wd:Q43283383. }\nUNION\n{ ?train_station wdt:P361 wd:Q3239365. }\nUNION\n{ ?train_station wdt:P81 wd:Q43283518. }\nUNION\n{ ?train_station wdt:P81 wd:Q43325427. }\nMINUS { ?train_station (wdt:P131/wdt:P131) wd:Q55180. }\nMINUS { ?train_station (wdt:P131/wdt:P131) wd:Q55271. }\n?train_station wdt:P625 ?coordinate_location.\n?train_station wdt:P81 ?connecting_line.\nMINUS { ?connecting_line wdt:P81 wd:Q5852245. }\nMINUS { ?connecting_line wdt:P81 wd:Q801991. }\n?connecting_line rdfs:label ?layer.\nFILTER((LANG(?layer)) = \"eu\")\n}",
        "complexity_description": "Multiple UNION and MINUS clauses with multiple filters",
        "complexity": "complex"
    },
    {
        "id": "1520",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?t ?value ?valueLabel ?rrLabel ?rr (SAMPLE(?image) as ?img)\nWHERE\n{\nVALUES ?person {wd:Q1512}\n{?person wdt:P570 ?death .\n?person ?prop ?t FILTER (datatype(?t)=xsd:dateTime) FILTER (?t <= ?death) .\n?value wikibase:directClaim ?prop. }\nUNION\n{\n?person ?q ?statement FILTER regex (STR(?q),\"prop/P\") . #exclude P:describedBy\n?person wdt:P570 ?death .\n?statement ?p ?t FILTER regex (STR(?p), \"prop/qualifier/P\") FILTER (datatype(?t)=xsd:dateTime) FILTER (?t <= ?death).\n?statement ?r ?value FILTER regex (STR(?r),\"prop/statement/\") .\nBIND(IRI(CONCAT(CONCAT(SUBSTR(STR(?r),1,29),\"direct/\"),SUBSTR(STR(?r),40))) as ?rprop)\n?rr wikibase:directClaim ?rprop .\nOPTIONAL {?value wdt:P18 ?image}\n}\nUNION { # author of / creator of\n?value wdt:P50|wdt:P98|wdt:P655|wdt:P1773|wdt:P170 ?person .\n?person wdt:P570 ?death .\n?value wdt:P571|wdt:P577 ?t .\nFILTER (?t <= ?death)\n#FILTER NOT EXISTS {?value wdt:P629 ?x }\nFILTER NOT EXISTS {?person wdt:P800 ?value } .\nOPTIONAL {?value wdt:P1433 ?rr .}\nOPTIONAL {?value wdt:P18 ?image .}\n}\nUNION #Notable Works\n{\n?person wdt:P800 ?rr ;\nwdt:P570 ?death ;\nwdt:P569 ?birth .\n?rr wdt:P577|wdt:P571|wdt:P1191 ?t FILTER ((?t <= ?death)&&(?t >= ?birth)).\nOPTIONAL {?rr wdt:P18 ?image .}\n}\nUNION #discoverer or inventor\n{\n?rr wdt:P61 ?person .\n?person wdt:P570 ?death ;\nwdt:P569 ?birth .\n?rr wdt:P575|wdt:P571|wdt:P585 ?t FILTER ((?t <= ?death)&&(?t >= ?birth)).\nOPTIONAL {?rr wdt:P18 ?image .}\n}\nUNION #architect\n{\n?rr wdt:P84 ?person .\n?person wdt:P570 ?death ;\nwdt:P569 ?birth .\n?rr wdt:P571|wdt:P1619 ?t FILTER ((?t <= ?death)&&(?t >= ?birth)).\nOPTIONAL {?rr wdt:P18 ?image .}\n}\nUNION #composer\n{\n?rr wdt:P86 ?person .\n?person wdt:P570 ?death ;\nwdt:P569 ?birth .\n?rr wdt:P571|wdt:P1191|wdt:P577 ?t FILTER ((?t <= ?death)&&(?t >= ?birth)).\nOPTIONAL {?rr wdt:P18 ?image .}\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, fr, de\". }\n} GROUP BY ?t ?value ?rr ?rrLabel ?valueLabel\nORDER BY ?t",
        "complexity_description": "Multiple UNIONs with complex filters and regex patterns",
        "complexity": "complex"
    },
    {
        "id": "1521",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?_image ?publication_date WHERE {\n?item wdt:P161 wd:Q221074.\n?item wdt:P161 wd:Q243430.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\nOPTIONAL { ?item wdt:P18 ?_image. }\nOPTIONAL { ?item wdt:P577 ?publication_date. }\n}",
        "complexity_description": "Multiple filters, optional patterns",
        "complexity": "medium"
    },
    {
        "id": "1522",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?dob WITH {\nSELECT ?photograph ?inception WHERE {\n?photograph wdt:P31/wdt:P279* wd:Q125191;\nwdt:P571 ?inception.\n}\nORDER BY ?inception\nLIMIT 1\n} AS %earliestPhotograph WHERE {\n?person wdt:P106/wdt:P279* wd:Q33231;\nwdt:P569 ?dob.\nINCLUDE %earliestPhotograph.\nFILTER(?dob < ?inception)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple subqueries, filtering and ordering",
        "complexity": "complex"
    },
    {
        "id": "1523",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?placeLabel ?coord ?page WHERE {\n?person wdt:P19 ?place .\n?place wdt:P625 ?coord .\n?page schema:about ?person .\n?page schema:isPartOf <https://fr.wikisource.org/> .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, service call",
        "complexity": "medium"
    },
    {
        "id": "1524",
        "valid_gpt_response": true,
        "query": "SELECT ?year (COUNT(?film) AS ?nb_films) ?statusLabel WHERE {\n?film wdt:P31/wdt:P279* wd:Q11424 ;\nwdt:P577 ?date ;\nwdt:P1552 ?status.\nBIND(STR(YEAR(?date)) AS ?year)\nVALUES ?status { wd:Q45171911 wd:Q45172088 }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?year ?statusLabel",
        "complexity_description": "Multiple triple patterns, BIND function, VALUES clause, SERVICE keyword, and GROUP BY",
        "complexity": "complex"
    },
    {
        "id": "1525",
        "valid_gpt_response": true,
        "query": "SELECT ?artist ?artistLabel ?art ?artLabel ?image ?date WHERE {\n{\nSELECT ?artist ?art (SAMPLE(?image) AS ?image) (MIN(?date) AS ?date) WHERE {\n?art wdt:P170 ?artist;\nwdt:P18 ?image;\nwdt:P571 ?date.\n?artist wdt:P31 wd:Q5.\n{ ?artist wdt:P21 wd:Q6581072. } UNION { ?artist wdt:P21 wd:Q1052281. } # using ?artist wdt:P21/wdt:P279? wd:Q6581072 instead would be nice, but is unfortunately too inefficient\n}\nGROUP BY ?artist ?art\nORDER BY ASC(?date)\nLIMIT 1000\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY SHA256(CONCAT(STR(NOW()), STR(?art))) # simulate random order - ORDER BY RAND() doesn't have the desired effect\nLIMIT 100",
        "complexity_description": "Multiple subqueries, UNION, GROUP BY, and ORDER BY with functions",
        "complexity": "complex"
    },
    {
        "id": "1526",
        "valid_gpt_response": true,
        "query": "SELECT ?compound ?compoundLabel ?discoverer ?discovererLabel ?date WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nVALUES ?thing { wd:Q11344 wd:Q11173 wd:Q79529 }\n?compound wdt:P31 ?thing ;\nwdt:P61 ?discoverer .\nOPTIONAL { ?compound wdt:P575 ?date }\n}",
        "complexity_description": "Multiple triple patterns, VALUES clause and OPTIONAL block",
        "complexity": "medium"
    },
    {
        "id": "1527",
        "valid_gpt_response": true,
        "query": "SELECT ?city ?cityLabel ?image ?cityB\nWHERE {\n?cityB wdt:P31 wd:Q1637706 .\n?city wdt:P31 wd:Q1637706 ;\nwdt:P190 ?cityB ;\nwdt:P18 ?image\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "1528",
        "valid_gpt_response": true,
        "query": "SELECT ?age (COUNT(?gender) as ?count) (SAMPLE(?genderLabel) AS ?genderLabel ) WHERE {\n?film wdt:P31 wd:Q11424.\n?film wdt:P577 ?date .\n?film wdt:P161 ?cast .\n# 57=director 58=screenwriter 86=composer 161=cast member 162=producer 344=photography 1431=executive producer\n?cast wdt:P27 wd:Q30 .\n?cast wdt:P569 ?dob .\n?cast wdt:P21 ?gender .\n?gender rdfs:label ?genderLabel .\nFILTER((LANG(?genderLabel)) = \"en\")\nbind( 1000+year(?date)-year(?dob) as ?age_num )\nbind( SUBSTR(str(?age_num),1,4) as ?age )\nFILTER(BOUND(?age_num))\nFILTER(?age_num<=1100)\nFILTER(?age_num>=1000)\nFILTER(year(?date)>2000)\n#FILTER(year(?date)<2010)\n}\nGROUP BY ?genderLabel ?age\n#ORDER BY ?genderLabel ?age",
        "complexity_description": "Multiple filters, bindings, and grouping",
        "complexity": "complex"
    },
    {
        "id": "1529",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?saint (COUNT(?item) AS ?count) WHERE {\n?item wdt:P31 wd:Q484170 .\n?item rdfs:label ?itemL filter (lang(?itemL) = \"fr\") .\nFILTER regex(?itemL, \"^saint-\", \"i\")\nBIND (REPLACE(STRAFTER(?itemL, \"Saint-\"), \"-.*$\", \"\", \"i\") AS ?saint)\n}\nGROUP BY ?saint\nHAVING (?count >= 3)\nORDER BY DESC(?count) ?saint",
        "complexity_description": "Multiple filters, regex, and string manipulation",
        "complexity": "complex"
    },
    {
        "id": "1530",
        "valid_gpt_response": true,
        "query": "SELECT (?q AS ?Date) (SUM(?mon) AS ?Mon) (SUM(?tue) AS ?Tue) (SUM(?wed) AS ?Wed) (SUM(?thu) AS ?Thu) (SUM(?fri) AS ?Fri) (SUM(?sat) AS ?Sat) (SUM(?sun) AS ?Sun) (COUNT(?start_time) AS ?Tot) WHERE {\n{\n?disaster wdt:P31/wdt:P279* wd:Q3839081 ;\np:P580 ?start_time_stm . # find the date multi-day disasters started\n?start_time_stm ps:P580 ?start_time .\n?start_time_stm psv:P580 ?start_time_node .\n?start_time_node wikibase:timePrecision ?tp . FILTER(?tp=11)\n}\nUNION\n{\n?disaster wdt:P31/wdt:P279* wd:Q3839081 ;\np:P585 ?start_time_stm . # find all those which have \"point in time\" (ie one-day events)\n?start_time_stm ps:P585 ?start_time .\n?start_time_stm psv:P585 ?start_time_node .\n?start_time_node wikibase:timePrecision ?tp . FILTER(?tp=11)\n}\n# this beautiful bit of code finds all the relevant days of the week\n# using https://cs.wikipedia.org/wiki/Algoritmus_pro_v%C3%BDpo%C4%8Det_dne_v_t%C3%BDdnu#Zeller%C5%AFv_algoritmus\nBIND( DAY( ?start_time ) AS ?q ) .\nBIND( MONTH( ?start_time ) + IF( MONTH( ?start_time ) < 3, 12, 0 ) AS ?m ) .\nBIND( YEAR( ?start_time ) - IF( MONTH( ?start_time ) < 3, 1, 0 ) AS ?_year ) .\nBIND( ?_year - FLOOR( ?_year / 100 ) * 100 AS ?K ) . # modulo\nBIND( FLOOR( YEAR( ?start_time ) / 100 ) AS ?J ) .\nBIND( ?q + FLOOR( 13 * ( ?m + 1 ) / 5 ) + ?K + FLOOR( ?K / 4 ) + FLOOR( ?J / 4 ) - 2 * ?J AS ?_h ) .\nBIND( ?_h - FLOOR( ?_h / 7 ) * 7 AS ?weekday) . # modulo, 0 is Saturday\nBIND(IF(?weekday=2,1,0) AS ?mon)\nBIND(IF(?weekday=3,1,0) AS ?tue)\nBIND(IF(?weekday=4,1,0) AS ?wed)\nBIND(IF(?weekday=5,1,0) AS ?thu)\nBIND(IF(?weekday=6,1,0) AS ?fri)\nBIND(IF(?weekday=0,1,0) AS ?sat)\nBIND(IF(?weekday=1,1,0) AS ?sun)\n}\nGROUP BY ?q\nORDER BY ?Date",
        "complexity_description": "Complex query with multiple UNION patterns, BIND operations, and conditional statements",
        "complexity": "complex"
    },
    {
        "id": "1531",
        "valid_gpt_response": true,
        "query": "select ?building ?buildingLabel ?coord ?image WHERE\n{\n?building wdt:P84 wd:Q134165 ;\nwdt:P625 ?coord .\nOPTIONAL {?building wdt:P18 ?image}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, fr, de, pl\". }\n}",
        "complexity_description": "Optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1532",
        "valid_gpt_response": true,
        "query": "SELECT ?property ?propertyLabel ?count WHERE {\n{\nSELECT ?property (COUNT(?statement) AS ?count) WHERE {\n?property a wikibase:Property;\n# wikibase:claim ?p;\nwikibase:novalue ?wdno.\n# ?entity ?p ?statement.\n?statement a ?wdno. # note: if lines 7 and 9 are commented, ?statement may also be an entity with a truthy \"no value\" statement\n}\nGROUP BY ?property\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "1533",
        "valid_gpt_response": true,
        "query": "SELECT ?article ?articleLabel ?authorLabel WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?article wdt:P31 wd:Q13442814.\n?article wdt:P50 ?author.\n?author wdt:P31/wdt:P279* wd:Q729\n}\nLIMIT 100",
        "complexity_description": "Multiple triple patterns, service call and property paths",
        "complexity": "medium"
    },
    {
        "id": "1534",
        "valid_gpt_response": true,
        "query": "SELECT ?crypto ?cryptoLabel ?namesakeLabel ?image\nWHERE {\n?crypto wdt:P31 wd:Q13479982.\n?crypto wdt:P138 ?namesake.\n?namesake wdt:P18 ?image.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}",
        "complexity_description": "Simple query with 3 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "1535",
        "valid_gpt_response": true,
        "query": "select ?building ?buildingLabel ?coord ?image WHERE\n{\n?building wdt:P31 wd:Q184356 ;\nwdt:P625 ?coord .\nOPTIONAL {?building wdt:P18 ?image}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, fr, de, pl\". }\n}",
        "complexity_description": "Optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1536",
        "valid_gpt_response": true,
        "query": "SELECT ?child ?childLabel ?motherLabel ?date ?causeLabel WHERE {\n{\nSELECT ?child ?mother ?date ?cause WHERE {\n?child wdt:P31 wd:Q5;\np:P569/psv:P569 [ wikibase:timeValue ?date; wikibase:timePrecision 11 ].\n?mother wdt:P31 wd:Q5;\np:P570/psv:P570 [ wikibase:timeValue ?date; wikibase:timePrecision 11 ].\n?child wdt:P25 ?mother.\nOPTIONAL { ?mother wdt:P509 ?cause. }\n}\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?date",
        "complexity_description": "Multiple nested queries, multiple filters and optional clause",
        "complexity": "complex"
    },
    {
        "id": "1537",
        "valid_gpt_response": true,
        "query": "SELECT ?country ?entity ?countryLabel ?entityLabel ?area WHERE {\n{\nSELECT ?country (MAX(?a) AS ?a) WHERE {\n?entity wdt:P31/wdt:P279* wd:Q10864048 ;\np:P2046/psn:P2046/wikibase:quantityAmount ?a ;\nwdt:P17 ?country .\n?country wdt:P31 wd:Q3624078 .\nFILTER NOT EXISTS { ?entity wdt:P31/wdt:P279* wd:Q15042037 }\n}\nGROUP BY ?country\n}\n?entity wdt:P31/wdt:P279* wd:Q10864048 ;\np:P2046/psn:P2046/wikibase:quantityAmount ?a ;\nwdt:P17 ?country .\n?country wdt:P31 wd:Q3624078 .\nFILTER NOT EXISTS { ?entity wdt:P31/wdt:P279* wd:Q15042037 }\nBIND(ROUND(?a / 1000000) AS ?area)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?countryLabel",
        "complexity_description": "Multiple subqueries, filters, and service calls",
        "complexity": "complex"
    },
    {
        "id": "1538",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?dataSet ?dataSetLabel ?dataSetDescription ?licenseLabel WHERE {\nVALUES ?NoDerivatives { wd:Q6999319 wd:Q6937225 }\n?dataSet wdt:P31/wdt:P279* wd:Q1172284;\nwdt:P275 ?license.\n?license wdt:P629?/wdt:P156* ?NoDerivatives.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?licenseLabel ?dataSetLabel",
        "complexity_description": "Multiple triple patterns, VALUES clause, and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "1539",
        "valid_gpt_response": true,
        "query": "SELECT ?foundry ?foundryLabel ?rgb ?item ?itemLabel WHERE {\n?item wdt:P31 wd:Q17451.\n?item wdt:P4586 ?foundry.\nBIND( \"3182BD\" AS ?rgb) #color code foundry nodes\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,de\". }\n}",
        "complexity_description": "Simple query with 2 triple patterns and a bind function",
        "complexity": "simple"
    },
    {
        "id": "1540",
        "valid_gpt_response": true,
        "query": "SELECT ?tradition ?traditionLabel ?coordinates ?image WHERE {\n?tradition (wdt:P31|wdt:P279|wdt:P361)+ wd:Q717040;\nwdt:P625 ?coordinates.\nOPTIONAL { ?tradition wdt:P18 ?image. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1541",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?christmasTraditionMovie ?christmasTraditionMovieLabel WHERE {\n?christmasTraditionMovie p:P31/ps:P31 wd:Q717040, [ wdt:P279* wd:Q11424 ].\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,sv\". }\n}",
        "complexity_description": "Multiple triple patterns with property paths and a service call",
        "complexity": "medium"
    },
    {
        "id": "1542",
        "valid_gpt_response": true,
        "query": "SELECT ?team ?teamLabel ?genderLabel (YEAR(?inception) as ?founded) (count(?player) as ?playerCount)\nWHERE\n{\n?player wdt:P31 wd:Q5. # Player is a human\n?player wdt:P106 wd:Q12299841. # Player's occupation is a cricketer\n?player wdt:P54 ?team. # Player is a member of a sporting team\n?player wdt:P21 ?gender. # Get gender of the player\n{?team wdt:P641 wd:Q5375.} # Sporting team plays cricket\nUNION\n{?team wdt:P31 wd:Q17376093.} # Sporting team is a cricket team\nOPTIONAL{ ?team wdt:P571 ?inception.} # Get date of inception of the team\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?team ?teamLabel ?inception ?gender ?genderLabel\nORDER BY ?inception",
        "complexity_description": "Multiple filters, UNION, OPTIONAL clause and GROUP BY",
        "complexity": "complex"
    },
    {
        "id": "1543",
        "valid_gpt_response": true,
        "query": "select ?building ?buildingLabel ?coord ?image WHERE\n{\n?building wdt:P84 wd:Q134165 ;\nwdt:P625 ?coord .\nOPTIONAL {?building wdt:P18 ?image}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, fr, de, pl\". }\n}",
        "complexity_description": "Optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1544",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?taxonName WHERE {\n?item wdt:P225 ?taxonName.\n?item wdt:P105 wd:Q7432.\n?item wdt:P138 wd:Q22686.\n}",
        "complexity_description": "Simple query with 3 triple patterns",
        "complexity": "simple"
    },
    {
        "id": "1545",
        "valid_gpt_response": true,
        "query": "SELECT ?q ?qLabel ?catchphrase { ?q wdt:P6251 ?catchphrase . SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } }",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "1546",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription\n{\n?item wdt:P921 wd:Q309481 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "1547",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?ESD ?coord ?image ?layer\nWHERE\n{\n?item wdt:P1587 ?ESD .\nOPTIONAL { ?item wdt:P625 ?coord }\nOPTIONAL { ?item wdt:P18 ?image }\nOPTIONAL { ?item wdt:P1435 ?type }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n?item rdfs:label ?itemLabel .\n?type rdfs:label ?layer .\n}\n}",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "1548",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?id WHERE { ?id wdt:P31/wdt:P279* wd:Q3624078; p:P463 ?memberOfStatement. ?memberOfStatement a wikibase:BestRank; ps:P463 wd:Q1065. MINUS { ?memberOfStatement pq:P582 ?endTime. } MINUS { ?id wdt:P576|wdt:P582 ?end. } }",
        "complexity_description": "Multiple MINUS clauses, property paths and filters",
        "complexity": "complex"
    },
    {
        "id": "1549",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?pers ?persLabel ?item ?itemLabel WHERE {\n?item wdt:P31/wdt:P279* wd:Q3624078.\n?item wdt:P138/wdt:P138* ?pers.\n?pers wdt:P31/wdt:P279* wd:Q5.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} order by ?persLabel",
        "complexity_description": "Multiple joins, recursive property paths, and service call",
        "complexity": "complex"
    },
    {
        "id": "1550",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?name WHERE {\n?item wdt:P1448 ?name.\nFILTER(LANG(?name) = \"mul\")\nFILTER(CONTAINS(?name, \"/\"))\n}",
        "complexity_description": "Two filters and a simple triple pattern",
        "complexity": "medium"
    },
    {
        "id": "1551",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?street ?streetLabel ?womanLabel WHERE {\n?street wdt:P17 wd:Q55 ;\nwdt:P31 wd:Q79007 ;\nwdt:P138 ?woman .\n?woman wdt:P21 wd:Q6581072 ;\nwdt:P1343 wd:Q20031271 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, filters and service call",
        "complexity": "medium"
    },
    {
        "id": "1552",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coords ?image WHERE {\n?item wdt:P361 wd:Q3053741 .\nOPTIONAL { ?item wdt:P625 ?coords }\nOPTIONAL { ?item wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?itemLabel",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "1553",
        "valid_gpt_response": true,
        "query": "SELECT ?q ?qLabel (COUNT(?person) AS ?count) WHERE {\n?q wdt:P31/wdt:P279* wd:Q52085914.\n?person wdt:P69 ?q.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?q ?qLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, service call and aggregation",
        "complexity": "medium"
    },
    {
        "id": "1554",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?tedtalkLabel ?image WHERE {\n?item wdt:P166 wd:Q18748039.\n?item wdt:P2611 ?ted.\nOPTIONAL { ?item wdt:P18 ?image. }\n?tedtalk wdt:P31 wd:Q23011722.\n?tedtalk wdt:P50 ?item.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1555",
        "valid_gpt_response": true,
        "query": "SELECT ?language ?languageLabel (COUNT(?lexeme) AS ?count)\nWITH {\nSELECT ?lexeme WHERE {\n?lexeme p:P5185 ?genderStatement.\n}\nGROUP BY ?lexeme\nHAVING(COUNT(?genderStatement) > 1)\n} AS %lexemesWithMultipleGenders\nWHERE {\nINCLUDE %lexemesWithMultipleGenders.\n?lexeme dct:language ?language.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?language ?languageLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, grouping and aggregation",
        "complexity": "complex"
    },
    {
        "id": "1556",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?author ?authorLabel ?date ?image WHERE {\n?author wdt:P106/wdt:P279* wd:Q2095549 .\n?author wdt:P569 ?date FILTER (YEAR(?date)<1900).\n?author wdt:P19 ?place .\n?place wdt:P17 wd:Q142 .\nOPTIONAL{?author wdt:P18 ?image .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"de, fr, en\" }\n}",
        "complexity_description": "Multiple filters and optional clause",
        "complexity": "medium"
    },
    {
        "id": "1557",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?school ?schoolLabel ?geo ?item ?itemLabel ?item1 ?item1Label ?dob ?dod\n{ ?item wdt:P1889 [] ; wdt:P31 wd:Q5 ; p:P1889/pq:P1013 wd:Q20978290 ; wdt:P69 ?school ; wdt:P569 ?dob ; wdt:P570 ?dod.\n?item1 wdt:P1889 [] ; wdt:P31 wd:Q5 ; p:P1889/pq:P1013 wd:Q20978290 ; wdt:P69 ?school .\n?school wdt:P625 ?geo .\nFILTER (?item != ?item1)\nFILTER NOT EXISTS { ?item wdt:P31 wd:Q159979 }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?dob)\nLIMIT 4000",
        "complexity_description": "Multiple filters, subqueries and joins",
        "complexity": "complex"
    },
    {
        "id": "1558",
        "valid_gpt_response": true,
        "query": "SELECT ?count ?magnus ?magnusLabel ?magnusDescription {\n{ SELECT (COUNT(*) AS ?count) ?magnus { ?magnus wdt:P735 wd:Q18109457 ; ^wdt:P50 / ^wdt:P2860 [] } GROUP BY ?magnus }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?count)",
        "complexity_description": "Subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "1559",
        "valid_gpt_response": true,
        "query": "SELECT ?exoplanet ?exoplanetLabel ?image WHERE {\n?exoplanet wdt:P31 wd:Q44559 ;\nwdt:P18 ?image .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "1560",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?type ?typeLabel (COUNT(?item) AS ?count) WHERE {\n{ ?item wdt:P481 ?palissy ;\nwdt:P131 ?commune . } UNION\n{ ?item wdt:P361 ?group .\n?group wdt:P481 ?palissy ;\nwdt:P131 ?commune . }\n?item wdt:P31 ?type .\n?commune wdt:P131 wd:Q3068 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?type ?typeLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple UNION patterns, SERVICE clause, and GROUP BY with aggregate function",
        "complexity": "complex"
    },
    {
        "id": "1561",
        "valid_gpt_response": true,
        "query": "SELECT ?w (COUNT(*) AS ?c) WHERE {\n{\nSELECT ?item ?title WHERE {\n?item wdt:P31 wd:Q13442814;\nwdt:P1476 ?title.\nFILTER(STRLEN(?title) >= 10)\n}\nLIMIT 10000\n}\nBIND(REPLACE(?title, \"^.*?(\\\\b\\\\w{10,}\\\\b).*$\", \"$1\") AS ?w1)\nBIND(REPLACE(STRAFTER(?title, ?w1), \"^.*?(\\\\b\\\\w{10,}\\\\b).*$\", \"$1\") AS ?w2)\nBIND(REPLACE(STRAFTER(?title, ?w2), \"^.*?(\\\\b\\\\w{10,}\\\\b).*$\", \"$1\") AS ?w3)\nVALUES ?w_ { 1 2 3 }\nBIND(IF(?w_ = 1, ?w1, IF(?w_ = 2, ?w2, ?w3)) AS ?w)\nFILTER(REGEX(?w, \"^\\\\w+$\")) # no idea why this is necessary\n}\nGROUP BY ?w\nORDER BY DESC(?c)",
        "complexity_description": "Multiple subqueries, regex filters, and conditional bindings",
        "complexity": "complex"
    },
    {
        "id": "1562",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?author ?authorLabel ?image ?date WHERE {\n?author wdt:P279+|wdt:P31/wdt:P279* wd:Q8192 .\n?author wdt:P571 ?date .\nOPTIONAL {?author wdt:P18 ?image . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, it, de, es, fr\" }\n}",
        "complexity_description": "Multiple triple patterns with optional and service blocks",
        "complexity": "medium"
    },
    {
        "id": "1563",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?image\nWHERE\n{\n?item wdt:P176 wd:Q296878.\n?item wdt:P18 ?image.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "1564",
        "valid_gpt_response": true,
        "query": "SELECT ?depicted ?depictedLabel ?ashcount ?ashexample ?ashexampleLabel ?clevcount ?clevexample ?clevexampleLabel WHERE {\n{SELECT ?depicted (Sample(?itemash) AS ?ashexample) (COUNT(DISTINCT ?itemash) AS ?ashcount) (sample(?itemclev) as ?clevexample) (COUNT(DISTINCT ?itemclev) AS ?clevcount) WHERE {\n?itemclev wdt:P195 wd:Q657415; wdt:P180 ?depicted.\n?itemash wdt:P195 wd:Q636400 ; wdt:P180 ?depicted.\n} GROUP BY ?depicted }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?ashcount + ?clevcount)",
        "complexity_description": "Multiple subqueries, aggregation functions and grouping",
        "complexity": "complex"
    },
    {
        "id": "1565",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel (SAMPLE(?image) AS ?image) ?sitelinks WHERE {\n{\n?item wdt:P31/wdt:P279* wd:Q34379;\nwdt:P170 wd:Q182011.\n} UNION {\n?item wdt:P31/wdt:P279* wd:Q1068162.\n}\nOPTIONAL { ?item wdt:P18 ?image. }\n?item wikibase:sitelinks ?sitelinks.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?item ?itemLabel ?sitelinks\nORDER BY DESC(?sitelinks)",
        "complexity_description": "Multiple UNION patterns, OPTIONAL clause, and SERVICE keyword make it complex.",
        "complexity": "complex"
    },
    {
        "id": "1566",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?countryLabel WHERE {\n?item wdt:P31 wd:Q4022 ;\nrdfs:label ?itemLabel;\nOPTIONAL { ?item wdt:P17 ?country . ?country rdfs:label ?countryLabel . FILTER (lang(?countryLabel) = \"fr\") }\nFILTER (lang(?itemLabel) = \"es\") .\nFILTER regex (?itemLabel, \"^Guad\") .\n}\nORDER BY ?itemLabel ?countryLabel",
        "complexity_description": "Multiple filters and optional clause",
        "complexity": "medium"
    },
    {
        "id": "1567",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?month_int ?monthLabel (?day_int as ?d) ?world_dayLabel (?world_day as ?link) (GROUP_CONCAT(DISTINCT ?countryLabel; separator=\", \") as ?countries) WHERE {\n{ SELECT ?month_int ?month ?day_int ?world_day ?country WHERE {\n?month wdt:P31 wd:Q47018901; wdt:P1545 ?month_ordinal.\n?day p:P361 [ps:P361 ?month; pq:P1545 ?day_ordinal ].\nBIND(xsd:integer(?month_ordinal) AS ?month_int)\nBIND(xsd:integer(?day_ordinal) AS ?day_int)\nVALUES ?type {wd:Q2558684 wd:Q422695} # World ___ day; Awareness day\n?world_day wdt:P31 ?type; wdt:P837 ?day\nOPTIONAL {?world_day wdt:P17 ?country}\n} }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?month rdfs:label ?monthLabel. ?world_day rdfs:label ?world_dayLabel. ?country rdfs:label ?countryLabel }\n} GROUP BY ?month_int ?monthLabel ?day_int ?world_dayLabel ?world_day\nORDER BY ?month_int ?d",
        "complexity_description": "Multiple subqueries, joins, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "1568",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?author ?authorLabel ?image ?date WHERE {\n?author wdt:P279+|wdt:P31/wdt:P279* wd:Q8192 .\n?author wdt:P571 ?date .\nOPTIONAL {?author wdt:P18 ?image . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, it, de, es, fr\" }\n}",
        "complexity_description": "Multiple triple patterns with optional and service blocks",
        "complexity": "medium"
    },
    {
        "id": "1569",
        "valid_gpt_response": true,
        "query": "SELECT ?w (COUNT(*) AS ?c) WHERE {\n{\nSELECT ?item ?title WHERE {\n?item wdt:P31 wd:Q13442814;\nwdt:P1476 ?title.\nFILTER(STRLEN(?title) >= 10)\n}\nLIMIT 10000\n}\nBIND(REPLACE(?title, \"^.*?(\\\\b\\\\w{10,}\\\\b).*$\", \"$1\") AS ?w1)\nBIND(REPLACE(STRAFTER(?title, ?w1), \"^.*?(\\\\b\\\\w{10,}\\\\b).*$\", \"$1\") AS ?w2)\nBIND(REPLACE(STRAFTER(?title, ?w2), \"^.*?(\\\\b\\\\w{10,}\\\\b).*$\", \"$1\") AS ?w3)\nVALUES ?w_ { 1 2 3 }\nBIND(IF(?w_ = 1, ?w1, IF(?w_ = 2, ?w2, ?w3)) AS ?w)\nFILTER(REGEX(?w, \"^\\\\w+$\")) # no idea why this is necessary\n}\nGROUP BY ?w\nORDER BY DESC(?c)",
        "complexity_description": "Multiple subqueries, regex filters, and conditional bindings",
        "complexity": "complex"
    },
    {
        "id": "1570",
        "valid_gpt_response": true,
        "query": "SELECT ?q ?qLabel (COUNT(?person) AS ?count) WHERE {\n?q wdt:P31/wdt:P279* wd:Q52085914.\n?person wdt:P69 ?q.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?q ?qLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, service call and aggregation",
        "complexity": "medium"
    },
    {
        "id": "1571",
        "valid_gpt_response": true,
        "query": "SELECT ?cid (str(SAMPLE(?year)) AS ?year ) (COUNT(*) AS ?count) ?cause WHERE {\n?pid wdt:P31 wd:Q11424.\n?pid wdt:P364 ?cid.\n?pid wdt:P495 wd:Q668.\n?pid wdt:P57 ?dir;\nwdt:P58 ?prod.\nFILTER(?dir = ?prod).\nOPTIONAL {\n?cid rdfs:label ?cause.\nFILTER((LANG(?cause)) = \"en\")\n}\n?pid wdt:P577 ?_date_of_death.\nBIND ( YEAR(?_date_of_death) AS ?year )\nFILTER( BOUND(?cause) )\nFILTER( BOUND(?year) )\nFILTER( ?year > 1983 )\n}\nGROUP BY ?cid ?cause ?year\n#",
        "complexity_description": "Multiple filters, optional clause, and grouping",
        "complexity": "complex"
    },
    {
        "id": "1572",
        "valid_gpt_response": true,
        "query": "SELECT ?country ?countryLabel\n(COUNT(DISTINCT ?city) AS ?cities)\n(GROUP_CONCAT(DISTINCT ?cityLabel; SEPARATOR=\", \") AS ?cityLabels) WHERE {\n{ SELECT ?country ?countryLabel (COUNT(DISTINCT ?city) AS ?cities) WHERE {\n?city wdt:P1376|^wdt:P36 ?country ;\nwdt:P31/wdt:P279* wd:Q515 .\n?country rdfs:label ?countryLabel ;\nwdt:P31/wdt:P279* wd:Q3624078 .\nFILTER (LANG(?countryLabel) = \"en\")\n} GROUP BY ?country ?countryLabel HAVING (?cities > 1)\n} ?city wdt:P1376|^wdt:P36 ?country ;\nwdt:P31/wdt:P279* wd:Q515 ;\nrdfs:label ?cityLabel .\nFILTER (LANG(?cityLabel) = \"en\")\n} GROUP BY ?country ?countryLabel ORDER BY ASC(?countryLabel)",
        "complexity_description": "Multiple subqueries, grouping, and filtering",
        "complexity": "complex"
    },
    {
        "id": "1573",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?vLabel ?pop {\n?v wdt:P31 wd:Q13005188 .\n?v wdt:P131* wd:Q15404.\n?v p:P1539 ?fps11. ?fps11 ps:P1539 ?fp11. ?fps11 pq:P585 ?fp11d. FILTER(year(?fp11d) = 2011).\n?v p:P1539 ?fps01. ?fps01 ps:P1539 ?fp01. ?fps01 pq:P585 ?fp01d. FILTER(year(?fp01d) = 2001).\n?v p:P1540 ?mps11. ?mps11 ps:P1540 ?mp11. ?mps11 pq:P585 ?mp11d. FILTER(year(?mp11d) = 2011).\n?v p:P1540 ?mps01. ?mps01 ps:P1540 ?mp01. ?mps01 pq:P585 ?mp01d. FILTER(year(?mp01d) = 2001).\nBIND((xsd:integer(?mp11)/xsd:integer(?fp11)) - (xsd:integer(?mp01)/xsd:integer(?fp01)) as ?change)\nBIND(IF(?change < 0, -1 * ?change, 0) as ?pop).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"te,en\" }\n}\nGROUP BY ?pop ?vLabel\nORDER BY DESC(?pop)\n#",
        "complexity_description": "Multiple filters, bindings and service calls",
        "complexity": "complex"
    },
    {
        "id": "1574",
        "valid_gpt_response": true,
        "query": "SELECT ?cid (STR(SAMPLE(?year)) AS ?year) (COUNT(*) AS ?count) ?journal WHERE {\nVALUES ?cid {wd:Q4767851 wd:Q6020763 wd:Q6020786 wd:Q6020785 wd:Q6020790\nwd:Q7753202 wd:Q6020793 wd:Q6020797 wd:Q6020800 wd:Q6020803\nwd:Q6020807 wd:Q6020816 wd:Q6020819 wd:Q6020821 wd:Q6020823\nwd:Q6020825 wd:Q6295323 wd:Q6295328 wd:Q6704257 wd:Q15710015\nwd:Q15710016 wd:Q15710030 wd:Q25099420 wd:Q25303369 wd:Q39048414}\n?article wdt:P31 wd:Q13442814;\nwdt:P1433 ?cid;\nwdt:P577 ?_date_of_pub.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?cid rdfs:label ?journal. }\nBIND ( YEAR(?_date_of_pub) AS ?year )\n}\nGROUP BY ?cid ?journal ?year\n#",
        "complexity_description": "Multiple filters, SERVICE clause and BIND function",
        "complexity": "complex"
    },
    {
        "id": "1575",
        "valid_gpt_response": true,
        "query": "SELECT\n(SAMPLE(?number_of_forms) / SAMPLE(?number_of_lexemes) AS ?form_to_lexeme_ratio)\n(SAMPLE(?number_of_lexemes) AS ?number_of_lexemes)\n(SAMPLE(?number_of_forms) AS ?number_of_forms)\n?language ?languageLabel\nWHERE {\n{\nSELECT ?language (COUNT(*) AS ?number_of_lexemes) WHERE {\n[] dct:language ?language .\n}\nGROUP BY ?language\n}\nUNION\n{\nSELECT ?language (COUNT(*) AS ?number_of_forms) WHERE {\n[] ^ontolex:lexicalForm / dct:language ?language .\n}\nGROUP BY ?language\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?language ?languageLabel\nHAVING (?number_of_forms > 1)\nORDER BY DESC(?form_to_lexeme_ratio)",
        "complexity_description": "Multiple subqueries, UNION operator, and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "1576",
        "valid_gpt_response": true,
        "query": "select distinct ?item ?itemLabel ?typeLabel ?countryLabel ?subjectLabel ?namesakeLabel ?namesake\nwhere\n{\n?item wdt:P31 ?type . # item is ...\n{ ?type wdt:P279* wd:Q20977775 } union # an airport (defined broadly)\n{ ?type wdt:P279* wd:Q55488 } # or a rail station (ditto)\n?item wdt:P138 ?namesake . # item is named after something\n?namesake wdt:P31 ?subject . # namesake is ...\n{ ?subject wdt:P279* wd:Q95074 } union # a fictional character\n# (definition here excludes deities & biblical figures)\n{ ?subject wdt:P279* wd:Q7725634 } union # or a literary work\n{ ?subject wdt:P279* wd:Q7725310 } # or a series of works\noptional { ?item wdt:P17 ?country } . # what country is the something in?\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n} order by ?itemLabel",
        "complexity_description": "Multiple UNIONs, OPTIONAL clause, and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "1577",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?genus ?genusLabel ?image WHERE {\n?item wdt:P31 wd:Q16521.\n?item wdt:P105 wd:Q7432.\n?item wdt:P171* wd:Q43624.\n?item wdt:P171 ?genus.\nOPTIONAL {?item wdt:P18 ?image.}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1578",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?uLabel (COUNT(?r) as ?pop) ?u\n{\n?r wdt:P31 wd:Q5.\n?r wdt:P108 ?u.\n?u wdt:P17 wd:Q668.\n?u wdt:P31/wdt:P279* wd:Q3918.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"gu,hi,en\" }\n}\nGROUP BY ?pop ?uLabel ?u\nORDER BY DESC(?pop)\n#",
        "complexity_description": "Multiple joins, subqueries and group by",
        "complexity": "complex"
    },
    {
        "id": "1579",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?image ?linkTo\nWHERE\n{\nSERVICE gas:service {\ngas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.SSSP\" ;\ngas:in wd:Q15229326;\ngas:traversalDirection \"Undirected\" ;\ngas:out ?item ;\ngas:out1 ?depth ;\ngas:maxIterations 2 ;\ngas:linkType wdt:P47 .\n}\nOPTIONAL { ?item wdt:P47 ?linkTo }\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"bn,en\" }\n}\n#",
        "complexity_description": "Multiple services, optional clause, and graph analytics",
        "complexity": "complex"
    },
    {
        "id": "1580",
        "valid_gpt_response": true,
        "query": "SELECT (\"ambassadors to India\" as ?divLabel) ?c ?cLabel ?a ?aLabel\n{\n?c wdt:P31 wd:Q30056023.\n?a wdt:P39 ?c.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\n#",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "1581",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?ownerLabel ?workLabel ?universeLabel WHERE {\n?item wdt:P31/wdt:P279* wd:Q15720873 .\nOPTIONAL { ?item wdt:P1080 ?universe }\nOPTIONAL { ?item wdt:P1441 ?work }\nOPTIONAL { ?item wdt:P127 ?owner }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?universeLabel ?itemLabel ?ownerLabel",
        "complexity_description": "Multiple optional patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "1582",
        "valid_gpt_response": true,
        "query": "SELECT ?item (\"00FFFF\" AS ?rgb) ?itemLabel ?person ?personLabel ?image\nWHERE\n{\n?item wdt:P31 wd:Q16521.\n?item wdt:P138 ?person.\n?person wdt:P21 wd:Q6581072.\n?person wdt:P106 ?occ.\n?occ wdt:P279* wd:Q901.\nOPTIONAL {?person wdt:P18 ?image}.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, optional clause and recursive property path",
        "complexity": "complex"
    },
    {
        "id": "1583",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?dob ?dod\nWHERE\n{\n?item wdt:P31 wd:Q41960.\nOPTIONAL {?item wdt:P569 ?dob}.\nOPTIONAL {?item wdt:P570 ?dod}.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr, en\". }\n}",
        "complexity_description": "Optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "1584",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel WHERE {\n?featuredArticle schema:about ?item.\n?featuredArticle schema:inLanguage \"ru\".\n?featuredArticle wikibase:badge ?badgeValues.\n?item wdt:P31 wd:Q5.\n?item wdt:P21 wd:Q6581072.\nVALUES (?badgeValues) {\n(wd:Q17437796)\n(wd:Q17437798)\n}\nOPTIONAL {\n?sitelink schema:about ?item.\n?sitelink schema:inLanguage \"fr\".\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr,en,ru\". }\nFILTER(!BOUND(?sitelink))\n}\nORDER BY ?itemLabel",
        "complexity_description": "Multiple triple patterns, optional clause, and filter",
        "complexity": "complex"
    },
    {
        "id": "1585",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?wditem ?wditemLabel ?date ?work ?workLabel ?image WHERE {\nSERVICE <http://dbpedia.org/sparql> {\n?item dct:subject|dct:subject/skos:broader|dct:subject/skos:broader/skos:broader dbc:Italian_Renaissance_humanists ;\n# ?item rdf:type yago:WikicatPioneersOfPhotography ;\nowl:sameAs ?wditem FILTER regex (?wditem, \"wikidata.org\") .\n}\nSERVICE <https://query.wikidata.org/sparql> {\n?wditem wdt:P569 ?date .\n# OPTIONAL {?wditem wdt:P800 ?work }\nOPTIONAL {?wditem wdt:P18 ?image } .\n?wditem rdfs:label ?wditemLabel FILTER (LANG(?wditemLabel)=\"en\") .\n}\n}",
        "complexity_description": "Multiple services, multiple filters, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "1586",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\n?item wdt:P31*/wdt:P279* wd:Q707813;\nwdt:P625 ?geo .\n}",
        "complexity_description": "Property paths and multiple triple patterns",
        "complexity": "medium"
    },
    {
        "id": "1587",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?after ?image WHERE {\n?item (wdt:P31/wdt:P279*) wd:Q7397.\n?item wdt:P138 ?after.\n?after wdt:P106 ?musician.\n?musician wdt:P279* wd:Q639669.\nOPTIONAL { ?after wdt:P18 ?image. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, optional clause and service call",
        "complexity": "complex"
    },
    {
        "id": "1588",
        "valid_gpt_response": true,
        "query": "SELECT ?firstLetter (COUNT(?form) AS ?count ) WHERE {\n?lexeme a ontolex:LexicalEntry ; dct:language ?language ; ontolex:lexicalForm ?form .\n?form ontolex:representation ?word .\n?language wdt:P218 'br' .\nBIND ( SUBSTR(UCASE(?word), 1, 1) AS ?firstLetter )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?firstLetter\nORDER BY DESC(?count)",
        "complexity_description": "Multiple patterns, BIND, SERVICE, and GROUP BY/ORDER BY clauses",
        "complexity": "complex"
    },
    {
        "id": "1589",
        "valid_gpt_response": true,
        "query": "SELECT ?q ?linkcount ?loc {\n?q wdt:P31 wd:Q41176 ; wdt:P625 ?loc ; wikibase:sitelinks ?linkcount MINUS { ?q wdt:P18 [] } FILTER ( ?linkcount >= 1 )\n}",
        "complexity_description": "Multiple filters and subqueries",
        "complexity": "complex"
    },
    {
        "id": "1590",
        "valid_gpt_response": true,
        "query": "SELECT ?museum ?museumLabel (avg(?dist) AS ?avgDist) WHERE {\n?museum wdt:P31/wdt:P279* wd:Q33506 ; wdt:P17 wd:Q142 .\n?museum wdt:P625 ?coordLoc .\n?q wdt:P195 ?museum ; wdt:P170/wdt:P19/wdt:P625 ?coord .\nBIND(geof:distance(?coordLoc, ?coord) AS ?dist).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?museum ?museumLabel ?coordLoc\nORDER BY DESC(?avgDist)",
        "complexity_description": "Multiple joins, subqueries, and functions",
        "complexity": "complex"
    },
    {
        "id": "1591",
        "valid_gpt_response": true,
        "query": "SELECT\n(COUNT(?person) AS ?count)\n?lexeme ?lemma ?surname\n(SAMPLE(?person) AS ?example_person)\n(GROUP_CONCAT(?person_labels; separator=\", \") AS ?names)\nWHERE {\nhint:Query hint:optimizer \"None\".\n?lexeme dct:language wd:Q9035 .\n?lexeme ontolex:lexicalForm ?form .\n?form wikibase:grammaticalFeature wd:Q52434448 .\n?lexeme wikibase:lemma ?lemma .\n?form ontolex:representation ?word .\nBIND(STRLANG(CONCAT(UCASE(SUBSTR(STR(?word), 1, 1)), SUBSTR(STR(?word), 2)), \"en\") AS ?surname)\n?surname_item rdfs:label ?surname .\n?person wdt:P734 ?surname_item .\n?person rdfs:label ?person_labels . FILTER(LANG(?person_labels) = \"en\")\n}\nGROUP BY ?lexeme ?lemma ?surname\nORDER BY DESC(?count)\nLIMIT 100",
        "complexity_description": "Multiple joins, subqueries, and functions",
        "complexity": "complex"
    },
    {
        "id": "1592",
        "valid_gpt_response": true,
        "query": "SELECT ?commune ?communeLabel ?cityHall ?cityHallLabel ?coords ?image WHERE {\n?commune wdt:P31 wd:Q484170 ;\nwdt:P47 wd:Q90 .\n?cityHall wdt:P131 ?commune ;\nwdt:P31/wdt:P279* wd:Q543654 ;\nwdt:P625 ?coords .\nOPTIONAL { ?cityHall wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?communeLabel",
        "complexity_description": "Multiple joins, optional clause and service call",
        "complexity": "complex"
    },
    {
        "id": "1593",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?award ?awardLabel (COUNT(?person) AS ?recipients) WHERE {\n?award wdt:P31 wd:Q378427.\nOPTIONAL { ?person wdt:P166 ?award. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?award ?awardLabel\nHAVING (?recipients < 3)\nORDER BY ?recipients",
        "complexity_description": "Optional clause, aggregation and filtering",
        "complexity": "medium"
    },
    {
        "id": "1594",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?gradyear ?dob ?dod ?img WHERE {\n?item p:P69 [ps:P69 wd:Q5921129; pq:P582 ?gradyear] .\n?item wdt:P21 wd:Q6581072 .\nOPTIONAL { ?item wdt:P18 ?img } .\nOPTIONAL { ?item wdt:P569 ?dob } .\nOPTIONAL { ?item wdt:P570 ?dod } .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple optional patterns, service call and property paths",
        "complexity": "medium"
    },
    {
        "id": "1595",
        "valid_gpt_response": true,
        "query": "SELECT ?personLabel ?pronoun\nWHERE {\n?person wdt:P6553 [wikibase:lemma ?pronoun].\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "1596",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?coordinates ?line ?item ?itemLabel ?connectLabel ?image ?code ?rgb\nWITH {\nSELECT ?item (SAMPLE(?coordinates) AS ?coordinates) (SAMPLE(?image) AS ?image) (sample(?lat1) as ?lat1) (sample(?lon1) as ?lon1) (sample(?code) as ?code) WHERE {\n?item wdt:P31 wd:Q2175765.\n?item wdt:P131 wd:Q3012.\n?item wdt:P625 ?coordinates .\n?item p:P625 / psv:P625 / wikibase:geoLatitude ?lat1 .\n?item p:P625 / psv:P625 / wikibase:geoLongitude ?lon1 .\nOPTIONAL { ?item wdt:P18 ?image }.\nOPTIONAL { ?item wdt:P5696 ?code }.\n} GROUP BY ?item\n} AS %stations\nWITH {\nSELECT ?nextstation (sample(?lat2) as ?lat2) (sample(?lon2) as ?lon2) WHERE {\n?nextstation wdt:P31 wd:Q2175765 .\n?nextstation wdt:P131 wd:Q3012 .\n?nextstation p:P625 / psv:P625 / wikibase:geoLatitude ?lat2 .\n?nextstation p:P625 / psv:P625 / wikibase:geoLongitude ?lon2 .\n} GROUP BY ?nextstation\n} AS %nextstations\nWITH {\nSELECT ?line ?connect (\"9B0058\" as ?rgb) WHERE {\nINCLUDE %stations .\nINCLUDE %nextstations .\n?item p:P197 ?nextstationstatement .\n?nextstationstatement ps:P197 ?nextstation .\n?nextstationstatement pq:P81 ?connect .\nFILTER(STR(?item) < STR(?nextstation)) .\nBIND(CONCAT('LINESTRING (', STR(?lon1), ' ', STR(?lat1), ',', STR(?lon2), ' ', STR(?lat2), ')') AS ?str) .\nBIND(STRDT(?str, geo:wktLiteral) AS ?line)\n}\n} AS %lines\nWHERE {\n{ INCLUDE %stations } UNION { INCLUDE %lines } .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple subqueries, nested WITH clauses, and complex filtering",
        "complexity": "complex"
    },
    {
        "id": "1597",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?monthLabel (?day_int as ?d) ?saintLabel (URI(CONCAT(\"https://tools.wmflabs.org/reasonator/?q=\", SUBSTR(STR(?saint),32) )) as ?link) WHERE {\n{ SELECT ?month_int ?month ?day_int ?saint WHERE {\n?month wdt:P31 wd:Q47018901; wdt:P1545 ?month_ordinal.\n?day p:P361 [ps:P361 ?month; pq:P1545 ?day_ordinal ].\nBIND(xsd:integer(?month_ordinal) AS ?month_int)\nBIND(xsd:integer(?day_ordinal) AS ?day_int)\n?saint wdt:P841 ?day # saint's feast day\n} }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY ?month_int ?d ?saintLabel",
        "complexity_description": "Multiple subqueries, BIND functions, and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "1598",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?library ?libraryLabel (SAMPLE(?image) AS ?image) ?sitelinks WHERE {\n?library wdt:P31/wdt:P279* wd:Q7075 . # libraries or subtypes\nMINUS {?library wdt:P31/wdt:P279* wd:Q212805} # but not digital libraries\n?library wikibase:sitelinks ?sitelinks.\nOPTIONAL {?library wdt:P18 ?img}\nBIND (IF(BOUND(?img), ?img, <http://commons.wikimedia.org/wiki/Special:FilePath/No%20image%20available.svg>) AS ?image)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?library ?libraryLabel ?sitelinks\nORDER BY DESC(?sitelinks)\nLIMIT 1000",
        "complexity_description": "Multiple filters, optional clause, and service call",
        "complexity": "complex"
    },
    {
        "id": "1599",
        "valid_gpt_response": true,
        "query": "SELECT ?day ?dayLabel (COUNT(DISTINCT ?item) AS ?songCount) WHERE {\n?day wdt:P31 wd:Q41825.\n?item wdt:P31/wdt:P279* wd:Q7366; wdt:P138 ?day.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?day ?dayLabel",
        "complexity_description": "Multiple triple patterns, optional property, and group by",
        "complexity": "medium"
    },
    {
        "id": "1600",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coord ?lieu ?lieuLabel ?image WHERE {\n?item wdt:P31 wd:Q6505.\n?item wdt:P625 ?coord.\nOPTIONAL { ?item wdt:P276 ?lieu. }\nOPTIONAL { ?item wdt:P18 ?image. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "1601",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?image (MIN(?release) AS ?release) {\n?item wdt:P31/wdt:P279* wd:Q7889 ; wdt:P577 ?release .\n?article schema:about ?item .\nFILTER (SUBSTR(str(?article), 11, 15) = \".wikipedia.org/\") .\nOPTIONAL { ?item wdt:P18 ?image . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nGROUP BY ?item ?itemLabel ?image\nHAVING (COUNT(DISTINCT ?article) >= 42)\nORDER BY ?year",
        "complexity_description": "Multiple joins, filters, optional clause and group by",
        "complexity": "complex"
    },
    {
        "id": "1602",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?wditem ?wditemLabel ?date ?image ?work ?workLabel WHERE {\nSERVICE <http://dbpedia.org/sparql> {\n?item dct:subject|dct:subject/skos:broader|dct:subject/skos:broader/skos:broader dbc:Microscopists ;\nowl:sameAs ?wditem FILTER regex (?wditem, \"wikidata.org\") .\n}\nSERVICE <https://query.wikidata.org/sparql> {\n{?wditem wdt:P569 ?date .}\n# UNION\n# {?wditem wdt:P571|wdt:P577 ?date .}\nOPTIONAL {?wditem wdt:P800 ?work. ?work rdfs:label ?workLabel FILTER (LANG(?workLabel)=\"en\") .}\nOPTIONAL {?wditem wdt:P18 ?image } .\n?wditem rdfs:label ?wditemLabel FILTER (LANG(?wditemLabel)=\"en\") .\n}\n}",
        "complexity_description": "Multiple services, UNION, OPTIONAL clauses",
        "complexity": "complex"
    },
    {
        "id": "1603",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?library ?libraryLabel (SAMPLE(?coords) AS ?coords)\n(SAMPLE(?image) AS ?image) ?website ?layer WHERE {\n?library wdt:P31 ?type .?type wdt:P279* wd:Q7075 . ?library wdt:P625 ?coords\nOPTIONAL {?library wdt:P18 ?image}\nOPTIONAL {?library wdt:P856 ?website}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?library rdfs:label ?libraryLabel. ?type rdfs:label ?layer }\n} GROUP BY ?library ?libraryLabel ?website ?layer\nORDER BY UCASE(?layer)",
        "complexity_description": "Multiple optional patterns, service call, and group by/order by clauses",
        "complexity": "complex"
    },
    {
        "id": "1604",
        "valid_gpt_response": true,
        "query": "select ?work ?workLabel ?year ?typeLabel ?namesake ?namesakeLabel ?birthyear ?deathyear\nwhere {\n?work wdt:P31 ?type . ?type wdt:P279* wd:Q7366 .\n# work is a type of song or poem\n?work wdt:P138 ?namesake . ?namesake wdt:P31 wd:Q5 .\n# named after a person\noptional { ?namesake wdt:P569 ?born . bind(year(?born) as ?birthyear) }\noptional { ?namesake wdt:P570 ?died . bind(year(?died) as ?deathyear) }\noptional { ?work wdt:P577|wdt:P571 ?date . bind(year(?date) as ?year) }\n# dates\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple optional patterns, property paths and service calls",
        "complexity": "complex"
    },
    {
        "id": "1605",
        "valid_gpt_response": true,
        "query": "SELECT ?animal ?animalLabel ?count\nWITH {\nSELECT DISTINCT ?animal ?statement WHERE {\n?work wdt:P31/wdt:P279* wd:Q838948;\np:P180 ?statement.\n?statement ps:P180 ?depicted.\nMINUS { ?statement wikibase:rank wikibase:DeprecatedRank. }\n?depicted wdt:P31? ?animal.\n?animal wdt:P279+ wd:Q729.\nMINUS { ?animal wdt:P279* wd:Q15978631. }\n}\n} AS %statements\nWITH {\nSELECT ?animal (SUM(COALESCE(?quantity, 1)) AS ?count) WHERE {\nINCLUDE %statements.\nOPTIONAL { ?statement pq:P1114 ?quantity. }\n}\nGROUP BY ?animal\nHAVING(?count >= 10)\n} AS %counts\nWHERE {\nINCLUDE %counts.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, joins, and filters",
        "complexity": "complex"
    },
    {
        "id": "1606",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?researcharea ?researchareaLabel (count(?scientist) AS ?count) WHERE {\n{\n{\nSELECT * WHERE { #Scientists born in Austria\n?scientist wdt:P496 ?oricd.\n?scientist wdt:P19 ?geburtsort.\n?geburtsort wdt:P17 wd:Q40.\n?scientist wdt:P101 ?researcharea.\n}\n}\n}\nUNION\n{\n{\nSELECT * WHERE { #Scientists with Austrian citizenship\n?scientist wdt:P496 ?oricd.\n?scientist wdt:P27 wd:Q40.\n?scientist wdt:P101 ?researcharea.\n?scientist wdt:P101 ?researcharea.\n}\n}\n}\nUNION\n{\n{\nSELECT * WHERE { #Scientists with Austrian employer\n?scientist wdt:P496 ?oricd.\n?scientist wdt:P108 ?employer.\n?employer wdt:P17 wd:Q40.\n?scientist wdt:P101 ?researcharea.\n}\n}\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\ngroup by ?researcharea ?researchareaLabel\nORDER BY DESC((count(?scientist)))",
        "complexity_description": "Multiple UNIONs, subqueries, and grouping",
        "complexity": "complex"
    },
    {
        "id": "1607",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?itemLabel ?itemDescription ?linkcount ?item\nWHERE\n{\n?item\nwdt:P31 wd:Q5 ;\nwdt:P21 wd:Q6581072 ;\nwikibase:sitelinks ?linkcount ;\nwdt:P27/wdt:P30 ?continent ;\nwdt:P27/wdt:P30 wd:Q15 .\nOPTIONAL {?article schema:about ?item ; schema:isPartOf <https://fr.wikipedia.org/> .}\nFILTER (!BOUND(?article))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\ngroup by ?itemLabel ?itemDescription ?linkcount ?item having(COUNT(DISTINCT ?continent) = 1)\nORDER BY DESC (?linkcount)",
        "complexity_description": "Multiple filters, optional clause, and group by with aggregate function",
        "complexity": "complex"
    },
    {
        "id": "1608",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?color1 ?color1Label ?color2 ?color2Label (COUNT(DISTINCT ?flag) AS ?count) WHERE {\n?flag wdt:P31/wdt:P279* wd:Q186516 ;\nwdt:P1001 ?country ;\nwdt:P462/wdt:P279* ?color1 ;\nwdt:P462/wdt:P279* ?color2 .\n?color1 wdt:P31 wd:Q1075 .\n?color2 wdt:P31 wd:Q1075 .\n?country wdt:P31 wd:Q3624078 .\nFILTER NOT EXISTS { ?country wdt:P576 ?x }\nFILTER NOT EXISTS { ?color1 wdt:P279 ?c . ?c wdt:P31 wd:Q1075 }\nFILTER NOT EXISTS { ?color2 wdt:P279 ?c . ?c wdt:P31 wd:Q1075 }\n?color1 rdfs:label ?color1L filter (lang(?color1L) = \"en\") .\n?color2 rdfs:label ?color2L filter (lang(?color2L) = \"en\") .\nFILTER(xsd:string(?color1L) < xsd:string(?color2L))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?color1 ?color1Label ?color2 ?color2Label\nORDER BY DESC(?count) ?color1Label ?color2Label",
        "complexity_description": "Multiple filters, subqueries, and group/order by clauses",
        "complexity": "complex"
    },
    {
        "id": "1609",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?author ?authorLabel ?dateOfBirth ?dateOfDeath WHERE {\n?author wdt:P31 wd:Q5;\nwdt:P21/wdt:P279* wd:Q6581072.\n# speaks/writes German, or citizen of Germany, Austria or Liechtenstein (since \"languages spoken, written or signed\" alone is not very complete; Swiss citizenship would probably include too many French- or Italian-writing authors)\n{\n?author wdt:P1412 wd:Q188.\n} UNION {\nVALUES ?country { wd:Q183 wd:Q40 wd:Q347 }\n?author wdt:P27 ?country.\n}\n# genre science fiction, or occupation science fiction author, or genre science fiction as qualifier on occupation author statement\n{\n?author wdt:P136/wdt:P279* wd:Q24925.\n} UNION {\n?author wdt:P106/wdt:P279* wd:Q28225718.\n} UNION {\n?author p:P106 [\na wikibase:BestRank;\nps:P106/wdt:P279* wd:Q482980;\npq:P136/wdt:P279* wd:Q24925\n].\n}\nOPTIONAL { ?author wdt:P569 ?dateOfBirth. }\nOPTIONAL { ?author wdt:P570 ?dateOfDeath. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple UNIONs, OPTIONAL clauses, and property paths",
        "complexity": "complex"
    },
    {
        "id": "1610",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?language ?languageLabel ?wpURL ?wiktURL ?wsURL ?wnURL ?wqURL ?wbURL ?wvURL ?wvoyURL\nWHERE\n{\n{ VALUES ?language {\nwd:Q150\nwd:Q33302\nwd:Q9051\n}\n} UNION\n{ ?language wdt:P361/wdt:P361 wd:Q496250 . }\n?wp wdt:P31 wd:Q10876391 .\n?wp p:P407 ?wpLangStatement .\n?wpLangStatement ps:P407 ?language .\n?wp wdt:P856 ?wpURL .\nOPTIONAL {\n?wikt wdt:P31 wd:Q22001389 .\n?wikt p:P407 ?wiktLangStatement .\n?wiktLangStatement ps:P407 ?language .\n?wikt wdt:P856 ?wiktURL .\n}\nOPTIONAL {\n?ws wdt:P31 wd:Q15156455 .\n?ws p:P407 ?wsLangStatement .\n?wsLangStatement ps:P407 ?language .\n?ws wdt:P856 ?wsURL .\n}\nOPTIONAL {\n?wn wdt:P31 wd:Q20671729 .\n?wn p:P407 ?wnLangStatement .\n?wnLangStatement ps:P407 ?language .\n?wn wdt:P856 ?wnURL .\n}\nOPTIONAL {\n?wq wdt:P31 wd:Q22001361 .\n?wq p:P407 ?wqLangStatement .\n?wqLangStatement ps:P407 ?language .\n?wq wdt:P856 ?wqURL .\n}\nOPTIONAL {\n?wb wdt:P31 wd:Q22001316 .\n?wb p:P407 ?wbLangStatement .\n?wbLangStatement ps:P407 ?language .\n?wb wdt:P856 ?wbURL .\n}\nOPTIONAL {\n?wv wdt:P31 wd:Q22001390 .\n?wv p:P407 ?wvLangStatement .\n?wvLangStatement ps:P407 ?language .\n?wv wdt:P856 ?wvURL .\n}\nOPTIONAL {\n?wvoy wdt:P31 wd:Q19826567 .\n?wvoy p:P407 ?wvoyLangStatement .\n?wvoyLangStatement ps:P407 ?language .\n?wvoy wdt:P856 ?wvoyURL .\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr,en\". }\n} ORDER BY ?languageLabel",
        "complexity_description": "Multiple UNION and OPTIONAL blocks with many triple patterns",
        "complexity": "complex"
    },
    {
        "id": "1611",
        "valid_gpt_response": true,
        "query": "SELECT ?degrees_Celsius ?degrees_Fahrenheit ?item ?itemLabel ?location ?locationLabel ?date ?coor ?layer\nWHERE\n{\n?item p:P6591 ?st .\n{\n?st psv:P6591 [ wikibase:quantityAmount ?degrees_Celsius ; wikibase:quantityUnit wd:Q25267 ]\nBIND ( ROUND ( ?degrees_Celsius * 1.8 + 32 ) as ?degrees_Fahrenheit )\n}\nUNION\n{\n?st psv:P6591 [ wikibase:quantityAmount ?degrees_Fahrenheit ; wikibase:quantityUnit wd:Q42289 ]\nBIND( ROUND( ( ?degrees_Fahrenheit - 32 ) / 1.8 * 10)/10 as ?degrees_Celsius )\n}\nOPTIONAL { ?st pq:P276 ?location }\nOPTIONAL { ?st pq:P585 ?date }\nOPTIONAL { ?item wdt:P625 ?coor }\nBIND( CONCAT(str(Floor(?degrees_Celsius / 10)),\"0s degC\") as ?layer)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nORDER BY DESC(?degrees_Celsius)\nLIMIT 1000",
        "complexity_description": "Multiple UNION, BIND, and OPTIONAL clauses with calculations",
        "complexity": "complex"
    },
    {
        "id": "1612",
        "valid_gpt_response": true,
        "query": "select distinct ?item ?itemLabel ?twitter1 ?twitter2 ?facebook1 ?facebook2 where\n{\n{ ?item wdt:P2002 ?twitter1 . ?item wdt:P2002 ?twitter2 .\nfilter(?twitter1 > ?twitter2) .\n# item has two values for twitter account\nfilter((lcase(?twitter1)) = (lcase(?twitter2)) ) . }\n# but they are the same case-insensitive text\nunion\n{ ?item wdt:P2013 ?facebook1 . ?item wdt:P2013 ?facebook2 .\nfilter(?facebook1 > ?facebook2) .\nfilter((lcase(?facebook1)) = (lcase(?facebook2)) ) . }\n# same but for facebook\n# as of 2019-03-19, 176 Twitter and 27 Facebook\n# nb please do *not* fix automatically by removing entries without checking them first\n# as one value may have key qualifiers (follower count, verification, sources, etc)!\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple filters and unions with case-insensitive text matching",
        "complexity": "complex"
    },
    {
        "id": "1613",
        "valid_gpt_response": true,
        "query": "SELECT ?item1 ?item1Label (year(?date1) AS ?year1) ?item2 ?item2Label (year(?date2) AS ?year2) WHERE {\n?item1 p:P166 ?prize_stmt1 .\n?prize_stmt1 ps:P166 wd:Q616568 .\nOPTIONAL {?prize_stmt1 pq:P585 ?date1} .\n?item1 wdt:P3373 ?item2 .\n?item2 p:P166 ?prize_stmt2 .\n?prize_stmt2 ps:P166 wd:Q616568 .\nOPTIONAL {?prize_stmt2 pq:P585 ?date2 } .\nFILTER ((?date1 < ?date2) || ( (!(?date2 < ?date1)) && (str(?item1) < str(?item2)) ) ).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?year1",
        "complexity_description": "Multiple joins, optional patterns, and filter with date comparisons",
        "complexity": "complex"
    },
    {
        "id": "1614",
        "valid_gpt_response": true,
        "query": "SELECT ?sort ?item ?itemLabel ?article\n(GROUP_CONCAT(DISTINCT ?occ_label; SEPARATOR = ' / ') AS ?occs)\n(GROUP_CONCAT(DISTINCT ?field_label; SEPARATOR = ' / ') AS ?fields)\n?dob ?dod\nWHERE {\nwd:Q81096 ^wdt:P279* ?occ .\nFILTER (?occ != wd:Q183945) .\n?occ ^wdt:P106 ?item .\n?item wdt:P21 wd:Q6581072 .\n?item wdt:P31 wd:Q5 .\nOPTIONAL {?item wdt:P569 ?dob} .\nBIND(COALESCE (year(?dob), 9999) AS ?sort) .\nOPTIONAL {?item wdt:P570 ?dod} .\nFILTER (!bound(?dod) || !(year(?dod) < 1919)).\nVALUES ?uk {wd:Q145 wd:Q174193}\n?item wdt:P27|((wdt:P937|wdt:P19|wdt:P20)/wdt:P131*) ?uk .\nOPTIONAL {?item wdt:P101 ?field .\nOPTIONAL {?field rdfs:label ?field_label. FILTER(lang(?field_label) = 'en') } .\n}\nOPTIONAL {?occ rdfs:label ?occ_label. FILTER(lang(?occ_label) = 'en') } .\nOPTIONAL {?article schema:about ?item . ?article schema:isPartOf <https://en.wikipedia.org/> } .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?item ?itemLabel ?article ?dob ?sort ?dod\nORDER BY ?sort ?itemLabel",
        "complexity_description": "Multiple filters, optional patterns, and group concat aggregations",
        "complexity": "complex"
    },
    {
        "id": "1615",
        "valid_gpt_response": true,
        "query": "SELECT ?human ?humanLabel WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?human wdt:P31 wd:Q5.\n?human wdt:P21 wd:Q6581072.\n?human wdt:P106 wd:Q19507792.\n}\nLIMIT 1000",
        "complexity_description": "Multiple triple patterns with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "1616",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?img ?occupation ?occupationLabel WHERE {\n?item wdt:P31 wd:Q5.\n?item wdt:P106 wd:Q635734.\n?item wdt:P27 wd:Q142.\n?item wdt:P18 ?img.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nOPTIONAL { ?item wdt:P106 ?occupation. }\n}",
        "complexity_description": "Multiple triple patterns, optional clause",
        "complexity": "medium"
    },
    {
        "id": "1617",
        "valid_gpt_response": true,
        "query": "SELECT ?institution ?institutionLabel (COUNT(?item) AS ?total) (GROUP_CONCAT(DISTINCT ?LieuLabel; SEPARATOR = \", \") AS ?Lieux) WHERE {\n?institution (wdt:P31/wdt:P279*) wd:Q166118.\n?institution wdt:P17 wd:Q39.\nOPTIONAL {\n?institution wdt:P131 ?Lieu.\nOPTIONAL {\n?Lieu rdfs:label? ?LieuLabel.\nFILTER((LANG(?LieuLabel)) = \"fr\")\n}\n}\nOPTIONAL { ?item wdt:P485 ?institution. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr,de,it,en\". }\n}\nGROUP BY ?institution ?institutionLabel\nORDER BY DESC(?total) ?institutionLabel",
        "complexity_description": "Multiple optional patterns, subqueries, and filters",
        "complexity": "complex"
    },
    {
        "id": "1618",
        "valid_gpt_response": true,
        "query": "SELECT ?software ?softwareLabel ?field ?fieldLabel {\n{ ?software wdt:P31/wdt:P279* wd:Q5500964. }\nUNION\n{ ?software wdt:P275/wdt:P279* wd:Q1156659. }\n?software wdt:P101|wdt:P136|wdt:P366 ?field.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple UNION patterns, multiple triple patterns and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "1619",
        "valid_gpt_response": true,
        "query": "SELECT ?char ?charLabel ?group ?groupLabel (\"7FFF00\" as ?rgb)\nWHERE {\n?group wdt:P31 wd:Q14514600 ; # group of fictional characters\nwdt:P1080 wd:Q931597. # from Marvel universe\n?char wdt:P463 ?group # member of group\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".}\n}",
        "complexity_description": "Multiple triple patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "1620",
        "valid_gpt_response": true,
        "query": "SELECT ?type ?typeLabel (COUNT(?q) AS ?c) WHERE {\n?q wdt:P31/wdt:P279* wd:Q738680 ; wdt:P276/wdt:P31 ?type .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\". }\n}\nGROUP BY ?type ?typeLabel",
        "complexity_description": "Multiple triple patterns, service call and grouping",
        "complexity": "medium"
    },
    {
        "id": "1621",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?image ?coor\nWHERE\n{\n?item wdt:P136 wd:Q557141 .\n?item wdt:P131 ?sub0 . ?sub0 (wdt:P131)* wd:Q23939248;\nOPTIONAL { ?item wdt:P625 ?coor }\nOPTIONAL { ?item wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Multiple optional patterns, recursive property path",
        "complexity": "medium"
    },
    {
        "id": "1622",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?mascot ?mascotLabel ?image WHERE {\n?item (wdt:P31/wdt:P279) wd:Q7397;\nwdt:P822 ?mascot.\nOPTIONAL { ?mascot wdt:P18 ?image. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1623",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?article ?title WHERE {\n?item wdt:P31 wd:Q5;\n# transgender or non-binary\nwdt:P21/wdt:P279* wd:Q17884;\n# deadnames are any names with an end time qualifier\np:P735 [\nps:P735/wdt:P1705 ?deadname;\npq:P582 ?deadnameEndTime\n].\n# find articles (any project, not just Wikipedias) containing the deadname\n?article schema:about ?item;\nschema:name ?title.\nFILTER(CONTAINS(?title, ?deadname))\n# remove articles that actually use the new name, but it's a variant of the deadname (e. g. Andrej - Andreja) so they contain the deadname as well\nFILTER NOT EXISTS {\n?item p:P735 ?nameStatement.\nMINUS { ?nameStatement pq:P582 ?nameEndTime. }\n?nameStatement ps:P735/wdt:P1705 ?name.\nFILTER(CONTAINS(?name, ?deadname) && CONTAINS(?title, ?name))\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?itemLabel ?article",
        "complexity_description": "Multiple filters, subqueries and property paths",
        "complexity": "complex"
    },
    {
        "id": "1624",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?3dmodel\nWHERE {\n?item wdt:P4896 ?3dmodel.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n}\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "1625",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?party1 ?party1Label ?rgb (count(DISTINCT(?item)) as ?count)\n{\n?item p:P39 ?positionStatement . ?positionStatement ps:P39 ?term . ?term wdt:P279* wd:Q16707842 .\n?positionStatement ps:P39 ?term .\n?positionStatement pq:P768 ?constituency .\n?positionStatement pq:P2715 wd:Q119524 . # relevant general election\n?positionStatement pq:P4100 ?party .\nBIND(IF(?party = wd:Q6467393, wd:Q9630 , ?party) AS ?party1) .\noptional { ?party1 wdt:P465 ?rgb } . # colour if known\nSERVICE wikibase:label { bd:serviceParam wikibase:language 'en' }\n} group by ?party1 ?party1Label ?rgb order by desc(?count)\n#defaultView:BubbleChart",
        "complexity_description": "Multiple joins, subqueries, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "1626",
        "valid_gpt_response": true,
        "query": "SELECT ?s ?sLabel ?coor ?operator ?operatorLabel ?image ?layer WHERE {\n?s wdt:P31/wdt:P279* wd:Q28564 ;\nwdt:P17 wd:Q145 ;\nwdt:P625 ?coor ;\nwdt:P137 ?operator ;\nOPTIONAL {?s wdt:P18 ?image .}\nVALUES ?operator { wd:Q4923796 wd:Q4966533 wd:Q5016926 wd:Q5038400 wd:Q5043224 wd:Q5064127 wd:Q5166758 wd:Q5256629 wd:Q16837157\nwd:Q5623821 wd:Q6083890 wd:Q16997658 wd:Q6901162 wd:Q6984500 wd:Q16998902 wd:Q7161994 wd:Q7236943 wd:Q7321391\nwd:Q5123523 wd:Q7825688 wd:Q7909538 wd:Q8038115 }\nBIND(\nIF(?operator = wd:Q4923796, \"Blaenau Gwent\",\nIF(?operator = wd:Q4966533, \"Bridgend\",\nIF(?operator = wd:Q5016926, \"Caerphilly\",\nIF(?operator = wd:Q5038400, \"Cardiff\",\nIF(?operator = wd:Q5043224, \"Carmarthenshire\",\nIF(?operator = wd:Q5064127, \"Ceredigion\",\nIF(?operator = wd:Q5166758, \"Conwy\",\nIF(?operator = wd:Q5256629, \"Denbighshire\",\nIF(?operator = wd:Q16837157, \"Flintshire\",\nIF(?operator = wd:Q5623821, \"Gwynedd\",\nIF(?operator = wd:Q6083890, \"Isle of Anglesey\",\nIF(?operator = wd:Q16997658, \"Merthyr Tydfil\",\nIF(?operator = wd:Q6901162, \"Monmouthshire\",\nIF(?operator = wd:Q6984500, \"Neath Port Talbot\",\nIF(?operator = wd:Q16998902, \"Newport\",\nIF(?operator = wd:Q7161994, \"Pembrokeshire\",\nIF(?operator = wd:Q7236943, \"Powys\",\nIF(?operator = wd:Q7321391, \"Rhondda Cynon Taf\",\nIF(?operator = wd:Q5123523, \"Swansea\",\nIF(?operator = wd:Q7825688, \"Torfaen\",\nIF(?operator = wd:Q7909538, \"Vale of Glamorgan\",\nIF(?operator = wd:Q8038115, \"Wrexham\",\n\"\")))))))))))))))))))))) AS ?layer).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nORDER BY ?operatorLabel ?sLabel",
        "complexity_description": "Multiple filters, optional clause, and nested IF statements",
        "complexity": "complex"
    },
    {
        "id": "1627",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?coordinates ?line ?item ?itemLabel ?connectLabel ?image ?code ?rgb\nWITH {\nSELECT ?item (SAMPLE(?coordinates) AS ?coordinates) (SAMPLE(?image) AS ?image) (sample(?lat1) as ?lat1) (sample(?lon1) as ?lon1) (sample(?code) as ?code) WHERE {\n?item wdt:P31 wd:Q2175765.\n?item wdt:P131 wd:Q8678.\n?item wdt:P625 ?coordinates .\n?item p:P625 / psv:P625 / wikibase:geoLatitude ?lat1 .\n?item p:P625 / psv:P625 / wikibase:geoLongitude ?lon1 .\nOPTIONAL { ?item wdt:P18 ?image }.\nOPTIONAL { ?item wdt:P5696 ?code }.\n} GROUP BY ?item\n} AS %stations\nWITH {\nSELECT ?nextstation (sample(?lat2) as ?lat2) (sample(?lon2) as ?lon2) WHERE {\n?nextstation wdt:P31 wd:Q2175765 .\n?nextstation wdt:P131 wd:Q8678 .\n?nextstation p:P625 / psv:P625 / wikibase:geoLatitude ?lat2 .\n?nextstation p:P625 / psv:P625 / wikibase:geoLongitude ?lon2 .\n} GROUP BY ?nextstation\n} AS %nextstations\nWITH {\nSELECT ?line ?connect (\"9B0058\" as ?rgb) WHERE {\nINCLUDE %stations .\nINCLUDE %nextstations .\n?item p:P197 ?nextstationstatement .\n?nextstationstatement ps:P197 ?nextstation .\n?nextstationstatement pq:P81 ?connect .\nFILTER(STR(?item) < STR(?nextstation)) .\nBIND(CONCAT('LINESTRING (', STR(?lon1), ' ', STR(?lat1), ',', STR(?lon2), ' ', STR(?lat2), ')') AS ?str) .\nBIND(STRDT(?str, geo:wktLiteral) AS ?line)\n}\n} AS %lines\nWHERE {\n{ INCLUDE %stations } UNION { INCLUDE %lines } .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],pt,en\". }\n}",
        "complexity_description": "Multiple subqueries, nested WITH clauses, and complex filtering",
        "complexity": "complex"
    },
    {
        "id": "1628",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?book ?commonsCategoryBook ?commonsCategoryAuth\nWITH {\nSELECT ?book ?auth WHERE {\n?book wdt:P195 wd:Q53764729 .\n?book wdt:P50|wdt:P767 ?auth .\n}\n} AS %pairs\nWITH {\nSELECT ?auth ?commonsCategoryAuth WHERE {\nhint:SubQuery hint:optimizer \"None\". # we have to disable the optimizer for this subquery because it gets confused by the ?commonsCategoryStatementEn part\nINCLUDE %pairs.\nOPTIONAL {\n?auth wdt:P373 ?commonsCategoryStatement.\nBIND(STRLANG(CONCAT(\"Category:\", ?commonsCategoryStatement), \"en\") AS ?commonsCategoryStatementEn)\n?commonsCategoryFromStatement schema:name ?commonsCategoryStatementEn;\nschema:isPartOf <https://commons.wikimedia.org/>.\n}\nOPTIONAL {\n?commonsCategoryFromSitelink schema:about ?auth;\nschema:isPartOf <https://commons.wikimedia.org/>.\nFILTER(STRSTARTS(STR(?commonsCategoryFromSitelink), \"https://commons.wikimedia.org/wiki/Category:\"))\n}\nBIND(COALESCE(?commonsCategoryFromStatement, ?commonsCategoryFromSitelink) AS ?commonsCategoryAuth)\nFILTER(BOUND(?commonsCategoryAuth))\n}\n} AS %authsWithCommonsCategories\nWITH {\nSELECT ?book ?commonsCategoryBook WHERE {\nhint:SubQuery hint:optimizer \"None\". # we have to disable the optimizer for this subquery because it gets confused by the ?commonsCategoryStatementEn part\nINCLUDE %pairs.\nOPTIONAL {\n?book wdt:P373 ?commonsCategoryStatement.\nBIND(STRLANG(CONCAT(\"Category:\", ?commonsCategoryStatement), \"en\") AS ?commonsCategoryStatementEn)\n?commonsCategoryFromStatement schema:name ?commonsCategoryStatementEn;\nschema:isPartOf <https://commons.wikimedia.org/>.\n}\nOPTIONAL {\n?commonsCategoryFromSitelink schema:about ?book;\nschema:isPartOf <https://commons.wikimedia.org/>.\nFILTER(STRSTARTS(STR(?commonsCategoryFromSitelink), \"https://commons.wikimedia.org/wiki/Category:\"))\n}\nBIND(COALESCE(?commonsCategoryFromStatement, ?commonsCategoryFromSitelink) AS ?commonsCategoryBook)\nFILTER(BOUND(?commonsCategoryBook))\n}\n} AS %booksWithCommonsCategories\nWITH {\nSELECT ?book ?auth ?commonsCategoryBook ?commonsCategoryAuth WHERE {\nINCLUDE %pairs\nINCLUDE %booksWithCommonsCategories.\nINCLUDE %authsWithCommonsCategories.\n}\n} AS %pairCats\nWHERE {\nINCLUDE %booksWithCommonsCategories\nSERVICE <https://query.wikidata.org/bigdata/namespace/categories/sparql> {\n?commonsCategoryBook mediawiki:isInCategory ?commonsCategoryAuth .\n?commonsCategoryAuth mediawiki:isInCategory <https://commons.wikimedia.org/wiki/Category:People_by_name> .\n}\nMINUS {\nINCLUDE %pairCats\n}\n}",
        "complexity_description": "Multiple subqueries, complex filtering and binding",
        "complexity": "complex"
    },
    {
        "id": "1629",
        "valid_gpt_response": true,
        "query": "SELECT ?prop ?propLabel ?prop_items ?prop_stmts ?val ?valLabel ?val_count ?samp ?sampLabel\nWITH {\nSELECT ?item ?prop ?stmt ?val WHERE {\nhint:Query hint:optimizer \"None\" .\nwd:Q4006 ^wdt:P279*/^wdt:P31 ?item .\nMINUS {?item wdt:P31 wd:Q17146139}\n?item ?p ?stmt .\n?prop wikibase:claim ?p .\n?prop wikibase:statementProperty ?ps .\nMINUS {\n{?prop wdt:P31/wdt:P279* wd:Q19847637} # Wikidata property representing a unique identifier\nUNION\n{?prop wdt:P31/wdt:P279* wd:Q18614948} # Wikidata property for authority control\n}\n?stmt ?ps ?val .\n} #LIMIT 2000\n} AS %maps_props_vals\nWITH {\nSELECT ?prop (COUNT(DISTINCT(?item)) AS ?prop_items) (COUNT(DISTINCT(?stmt)) AS ?prop_stmts) WHERE {\nINCLUDE %maps_props_vals\n} GROUP BY ?prop\n} AS %prop_stats\nWITH {\nSELECT ?prop ?val (COUNT(DISTINCT(?item)) AS ?val_count) (SAMPLE(?item) AS ?samp) WHERE {\nINCLUDE %maps_props_vals\n} GROUP BY ?prop ?val\nHAVING (?val_count > 3)\n} AS %prop_val_counts\nWITH {\nSELECT ?prop ?val ?samp ?val_count (COUNT(DISTINCT(?val1)) AS ?val_rank) WHERE {\nINCLUDE %prop_val_counts .\n{\nSELECT ?prop (?val AS ?val1) (?val_count AS ?val1_count) WHERE {\nINCLUDE %prop_val_counts\n}\n}\nFILTER (?val1_count >= ?val_count)\n} GROUP BY ?prop ?val ?val_count ?samp\n} AS %prop_val_ranks\nWHERE {\nINCLUDE %prop_stats .\nINCLUDE %prop_val_ranks .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nFILTER (?val_rank < 6) .\n} ORDER BY DESC(?prop_items) DESC(?prop_stmts) ?prop ?val_rank",
        "complexity_description": "Multiple subqueries, complex filtering and grouping",
        "complexity": "complex"
    },
    {
        "id": "1630",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?name ?work_link ?work ?creatorLabel ?date\nWITH {\nSELECT ?creator WHERE {\nVALUES ?citizenship {wd:Q145 wd:Q174193} . # UK, Britain & Ireland\n?creator wdt:P6698 []; # Only get things with a Japan Search ID\nwdt:P27 ?citizenship; wdt:P106 wd:Q1281618} # sculptors\n} AS %creators\nWHERE {\ninclude %creators\nSERVICE <https://jpsearch.go.jp/rdf/sparql/> {\n?jps_creator owl:sameAs ?creator . # convert Wikidata ID to Japan Search ID\n?work schema:creator ?jps_creator . # Works by this artist\nOPTIONAL {?work schema:name ?name } # This will return separate names in English and Japanese names\nOPTIONAL {?work schema:dateCreated ?date}\n}\nFILTER (lang(?name)=\"en\") # Show only the English name\nBIND(URI( REPLACE(STR(?work), \"/data/\", \"/item/\") ) AS ?work_link)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?date",
        "complexity_description": "Multiple services, subqueries, and filters",
        "complexity": "complex"
    },
    {
        "id": "1631",
        "valid_gpt_response": true,
        "query": "SELECT ?date ?cumulativecount\n{\nhint:Query hint:optimizer \"None\".\n{ SELECT ?milestonep (COUNT(?item) as ?cumulativecount)\nWHERE\n{\n{ SELECT ?item { ?item wdt:P17 wd:Q408 } LIMIT 190000 }\nBIND( xsd:integer( substr(str(?item), 33)) as ?qid)\nwd:Q38074555 p:P1114 ?milestonep .\n?milestonep ps:P1114 ?milestone .\nFILTER( ?milestone > ?qid )\n}\nGROUP BY ?milestonep\n}\n?milestonep pq:P585 ?date\n}",
        "complexity_description": "Multiple subqueries, grouping and filtering",
        "complexity": "complex"
    },
    {
        "id": "1632",
        "valid_gpt_response": true,
        "query": "SELECT ?total ?count ?depicts_class ?depicts_classLabel ?prop ?propLabel ?samp\nWITH {\nSELECT ?item ?depicts_stmt WHERE {\n?item p:P180 ?depicts_stmt .\n} # LIMIT 100000\n} AS %stmts\nWITH {\nSELECT ?prop (COUNT(DISTINCT(?depicts_stmt)) AS ?total) WHERE {\nINCLUDE %stmts .\n?depicts_stmt ?qual [] .\n?prop wikibase:qualifier ?qual .\n} GROUP BY ?prop\n} AS %totals\nWITH {\nSELECT ?depicts_class ?prop (COUNT(DISTINCT(?depicts_stmt)) AS ?count) (SAMPLE(?item) AS ?samp) WHERE {\nINCLUDE %stmts .\n?depicts_stmt ps:P180 ?depicts_val .\n?depicts_val wdt:P31? ?depicts_class .\n?depicts_stmt ?qual [] .\n?prop wikibase:qualifier ?qual .\n} GROUP BY ?depicts_class ?prop\nORDER BY DESC(?count)\nLIMIT 5000\n} AS %data\nWITH {\nSELECT ?depicts_class ?prop (COUNT(DISTINCT(?depicts_class1)) AS ?rank) WHERE {\nINCLUDE %data .\n{\nSELECT (?depicts_class AS ?depicts_class1) ?prop (?count AS ?count1) WHERE {\nINCLUDE %data .\n}\n}\nFILTER (?count1 >= ?count) .\n} GROUP BY ?depicts_class ?prop\n} AS %ranks\nWHERE {\nINCLUDE %data .\nINCLUDE %ranks .\nINCLUDE %totals .\nFILTER (?rank < 11) .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?total) ?prop DESC(?count)",
        "complexity_description": "Multiple subqueries, joins, and filters with aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "1633",
        "valid_gpt_response": true,
        "query": "SELECT ?count ?property ?propertyLabel ?samp WHERE {\n{\nSELECT (COUNT(?item) AS ?count) ?property (SAMPLE(?item) AS ?samp) WHERE {\nhint:Query hint:optimizer \"None\".\n?org_class wdt:P279* wd:Q17149090.\n?org wdt:P31? ?org_class .\n?item ?prop ?org .\n?item wdt:P106 ?role .\n?role wdt:P279* wd:Q1250916 .\n?property wikibase:directClaim ?prop .\n} GROUP BY ?property\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC (?count)",
        "complexity_description": "Multiple subqueries, joins and filters",
        "complexity": "complex"
    },
    {
        "id": "1634",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?ct\nWHERE\n{\n{\nSELECT ?item (count(*) as ?ct)\nWHERE\n{\n?stmt pr:P143 ?item\n}\nGROUP BY ?item\nHAVING(?ct > 100)\nORDER BY DESC(?ct)\nLIMIT 100\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?ct) ASC(?itemLabel)",
        "complexity_description": "Multiple subqueries, grouping, and ordering",
        "complexity": "complex"
    },
    {
        "id": "1635",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT\n?area ?areaLabel\n?2011\n?WelshSpeakerPercentage\n?geoshape\n?rgb\nWHERE {\n?area wdt:P3896 ?geoshape .\n{ SELECT ?area ?2011 ?2011_percent WHERE {\nBIND(CONCAT(\"2001: \", ?2011_Population, \" ; \", ?2011_Speakers, \" \", ?2011_Percent) as ?2011)\n{ SELECT ?area ?2011_Population ?2011_Speakers ?2011_Percent ?2011_percent WHERE {\nBIND(CONCAT(\"Population: \", STR(?2011_population)) as ?2011_Population)\nBIND(CONCAT(\"Welsh speakers: \", STR(?2011_speakers)) as ?2011_Speakers)\nBIND(CONCAT(\"(\", SUBSTR(STR(?2011_percent),0,5), \"%).\") as ?2011_Percent)\n{ SELECT ?area ?2011_speakers ?2011_population ?2011_percent WHERE {\nBIND(100 * ?2011_speakers / ?2011_population AS ?2011_percent)\n{ SELECT ?area ?2011_speakers ?2011_population WHERE {\n?area wdt:P31 wd:Q15979307 ;\np:P2936 ?2011_SpeakersStatement ;\np:P1082 ?2011_PopulationStatement .\n?2011_SpeakersStatement ?pq_qual ?pq_obj .\n?qual wikibase:qualifier ?pq_qual .\n?2011_SpeakersStatement pq:P585 \"2011-00-00T00:00:00Z\"^^xsd:dateTime ;\npq:P1098 ?2011_speakers .\n?2011_PopulationStatement ?pq_qual ?pq_obj .\n?qual wikibase:qualifier ?pq_qual .\n?2011_PopulationStatement pq:P585 \"2011-00-00T00:00:00Z\"^^xsd:dateTime ;\nps:P1082 ?2011_population .\n} }\n} }\n} }\n} }\nBIND(\nIF(?2011_percent < 10, \"0-10%\",\nIF(?2011_percent < 20, \"10-20%\",\nIF(?2011_percent < 30, \"20-30%\",\nIF(?2011_percent < 40, \"30-40%\",\nIF(?2011_percent < 50, \"40-50%\",\nIF(?2011_percent < 60, \"50-60%\",\nIF(?2011_percent < 70, \"60-70%\",\n\"70%+\")))))))\nAS ?WelshSpeakerPercentage).\nBIND(\nIF(?2011_percent < 10, \"ffe6e6\",\nIF(?2011_percent < 20, \"ffb3b3\",\nIF(?2011_percent < 30, \"ff8080\",\nIF(?2011_percent < 40, \"ff4d4d\",\nIF(?2011_percent < 50, \"ff1a1a\",\nIF(?2011_percent < 60, \"e60000\",\nIF(?2011_percent < 70, \"b30000\",\n\"800000\")))))))\nAS ?rgb).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?WelshSpeakerPercentage",
        "complexity_description": "Multiple nested subqueries, complex conditional bindings and usage of SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "1636",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?site ?siteLabel ?place ?placeLabel ?countryLabel ?coords ?image ?unescoUrl ?layer WHERE {{\nSELECT DISTINCT ?site ?place ?country ?coords ?image ?unescoUrl ?layer WHERE {{\nSELECT ?country WHERE {{ ?country wdt:P463 wd:Q7809;wdt:P30 wd:Q46 . } UNION { ?country wdt:P361 wd:Q1191549 } UNION { ?country wdt:P31 wd:Q15304003 }}}\n{SELECT DISTINCT ?site ?protection ?country (group_concat(DISTINCT ?siteType) AS ?siteType) WHERE {\n?site p:P1435 ?protectionStatement ;wdt:P17 ?country .\nFILTER NOT EXISTS { ?x wdt:P527 ?site . ?x wdt:P1435 ?protection }\n?protectionStatement ps:P1435 ?protection .\nFILTER NOT EXISTS { ?protectionStatement pq:P582 ?x }\nVALUES ?protection { wd:Q9259 wd:Q17278671 wd:Q52683530 wd:Q16617071 wd:Q52683527}\nOPTIONAL {?site wdt:P2614 ?criteria .\nBIND (IF ((?criteria in (wd:Q23038972, wd:Q23038976, wd:Q23038977, wd:Q23038978, wd:Q23038979, wd:Q23038980)), \"Cultural\", \"Natural\") AS ?siteType)\n}}\nGROUP BY ?site ?protection ?country\n}\n{\n?site p:P757 ?idStatement .\n?idStatement ps:P757 ?id .\nFILTER NOT EXISTS { ?idStatement pq:P582 ?x }\nwd:P757 p:P1630 ?formatterUrlStatement .\n} UNION {\n?site p:P4171 ?idStatement .\n?idStatement ps:P4171 ?id .\nFILTER NOT EXISTS { ?idStatement pq:P582 ?x }\nwd:P4171 p:P1630 ?formatterUrlStatement .\n}\n?formatterUrlStatement ps:P1630 ?formatterurl ;\npq:P407 wd:Q1860 .\nBIND(IRI(REPLACE(?id, '^(.+)$', ?formatterurl)) AS ?unescoUrl).\n{?site wdt:P527+ ?place .\n?place wdt:P17 ?country ;\nOPTIONAL { ?place wdt:P625 ?coords }\nOPTIONAL { ?place wdt:P18 ?image }\n} UNION {\nFILTER NOT EXISTS { ?site wdt:P527 ?x }\nOPTIONAL { ?site wdt:P625 ?coords . }\nOPTIONAL { ?site wdt:P18 ?image }\n}\nBIND (IF (?protection = wd:Q17278671, \"Tentative list\", \"World heritage\") AS ?siteProtection)\nBIND (IF (?siteType != \"\", CONCAT(?siteProtection, \" - \", IF (?siteType = \"Cultural Natural\" || ?siteType = \"Natural Cultural\", \"Mixed\", ?siteType)), ?siteProtection) AS ?layer)\n}\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?layer) ?siteLabel ?placeLabel",
        "complexity_description": "Multiple subqueries, unions, and complex filtering",
        "complexity": "complex"
    },
    {
        "id": "1637",
        "valid_gpt_response": true,
        "query": "SELECT ?date (COUNT(DISTINCT ?item) AS ?count)\nWITH {\n# get all the dates where the number of living people who have walked on the moon changed\n# (person walked on the moon or person died)\nSELECT DISTINCT ?date WHERE {\n{\n# person walked on the moon\n?item p:P793 [\nps:P793 wd:Q42882411;\npq:P580 ?date_\n].\n} UNION {\n# person died\n?item p:P793/ps:P793 wd:Q42882411;\nwdt:P570 ?date_.\n}\n# for each date, inject a second date, one day before,\n# so that we get a straight line until that date and then a steep climb/drop for the real change,\n# instead of a diagonal slope over the entire preceding period\nVALUES ?toggle { true false }\nBIND(IF(?toggle, ?date_, ?date_ - \"P1D\"^^xsd:duration) AS ?date)\n}\n} AS %dates\nWHERE {\n# inject the current time as another date, so that the chart continues until the present day\n{ INCLUDE %dates. } UNION { BIND(NOW() AS ?date) }\n# main query: find all living people who have walked on the moon at each date\n?item p:P793 [\nps:P793 wd:Q42882411;\npq:P580 ?walkdate\n].\nFILTER(?date >= ?walkdate) # must have walked on the moon already\nOPTIONAL { ?item wdt:P570 ?died. }\nFILTER(!BOUND(?died) || ?date < ?died) # must not yet have died\n}\nGROUP BY ?date\nORDER BY ?date",
        "complexity_description": "Multiple subqueries, UNION, OPTIONAL, and complex filtering",
        "complexity": "complex"
    },
    {
        "id": "1638",
        "valid_gpt_response": true,
        "query": "SELECT\n?person # find persons ...\n?personLabel # ... their label\n?secondsInSpace # ... seconds spent in space\n(GROUP_CONCAT(DISTINCT ?countryLabel; # ... and all operating countries\nSEPARATOR=\", \") AS ?countries)\nWITH {\n# this subquery finds all humans on spaceflights and their operators\nSELECT ?person ?flight ?country WHERE {\n?flight wdt:P31 wd:Q752783 ; # human spaceflight ...\nwdt:P620 [] ; # ... has landed\nwdt:P619 [] ; # ... has launched\nwdt:P137/wdt:P17 ?country ; # ... sovereign state of operator\nwdt:P1029 ?person . # ... with ?person as crew member\n}\n} AS %spaceflight WITH {\n# this subquery finds two distinct launch operators for humans on\n# spaceflights. we order countries A and B by their URI, so that we\n# can more easily filter out duplicates\nSELECT DISTINCT ?person ?countryA ?countryB WHERE {\n{ SELECT ?person ?flightA ?countryA WHERE { # find a spaceflight for ?person\nINCLUDE %spaceflight .\nBIND(?flight AS ?flightA)\nBIND(?country AS ?countryA)\n}}\n{ SELECT ?person ?flightB ?countryB WHERE { # find a second spaceflight for the ?person\nINCLUDE %spaceflight .\nBIND(?flight AS ?flightB)\nBIND(?country AS ?countryB)\n}}\nFILTER (STR(?flightA) < STR(?flightB)) # enforce that the launches are distinct\nFILTER (STR(?countryA) < STR(?countryB)) # enforce that the operating countries are distinct\n}} AS %flightCountries\nWHERE {\n{ SELECT ?person ?country WHERE { # now get both results into the same column\n{ SELECT ?person ?country WHERE { # find ?countryA for ?person\nINCLUDE %flightCountries .\nBIND(?countryA AS ?country)\n}} UNION { SELECT ?person ?country WHERE { # find ?countryB for ?person\nINCLUDE %flightCountries .\nBIND(?countryB AS ?country)\n}}\n}}\n?person wdt:P2873 ?secondsInSpace . # also get the time spent in space\nSERVICE wikibase:label { # finally, get the labels ...\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .\n?person rdfs:label ?personLabel . # ... for person\n?country rdfs:label ?countryLabel . # ... and for the country\n}\n} GROUP BY ?person ?secondsInSpace ?personLabel # group by ?person ...\nORDER BY DESC(?secondsInSpace) ASC(?personLabel) # ... and order by time in space and name",
        "complexity_description": "Multiple subqueries, joins, filters, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "1639",
        "valid_gpt_response": true,
        "query": "select distinct ?item ?itemLabel ?leadership_start_time (MAX(?elec_date) AS ?elec_date) (MIN(?days) AS ?days)\nwith {\nselect ?elec ?elec_date WHERE {\n?elec wdt:P31 wd:Q15283424 .\n?elec wdt:P585 ?elec_date .\n}\n} AS %elections\nwhere {\nhint:Query hint:optimizer \"None\".\n?role wdt:P279? wd:Q1553195 .\n?pos_stmt ps:P39 ?role .\n?pos_stmt pq:P580 ?leadership_start_time .\nFILTER (year(?leadership_start_time) > 1945) .\nMINUS {?role p:P279/pq:P642/wdt:P31 wd:Q848197} .\n?item p:P39 ?pos_stmt .\n?item wdt:P39/wdt:P279 wd:Q16707842 .\nINCLUDE %elections .\nFILTER (?elec_date < ?leadership_start_time).\nBIND ((?leadership_start_time - ?elec_date) AS ?days)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } .\n} GROUP BY ?item ?itemLabel ?leadership_start_time\nORDER BY DESC(?days)",
        "complexity_description": "Multiple subqueries, filters, and joins with aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "1640",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?creator ?creatorLabel WHERE\n{\n?item wdt:P136 wd:Q557141 .\n?item wdt:P131 ?sub0 .\n?sub0 (wdt:P131)* wd:Q23939248 .\n?item wdt:P170 ?creator .\n?creator wdt:P21 wd:Q6581072 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, recursive pattern and service call",
        "complexity": "complex"
    },
    {
        "id": "1641",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?country1Label ?country2Label ?capital1Label ?capital2Label ?distance WHERE {\n{\nSELECT DISTINCT ?country1 ?country2 ?capital1 ?capital2 ?distance WHERE {\n?country1 p:P463 ?statement1 ;\nwdt:P36 ?capital1 .\n?statement1 ps:P463 wd:Q1065 .\nFILTER NOT EXISTS { ?statement1 pq:P582 ?x }\nFILTER NOT EXISTS { ?country1 wdt:P31 wd:Q3024240 }\n?country2 p:P463 ?statement2 ;\nwdt:P36 ?capital2 .\n?statement2 ps:P463 wd:Q1065 .\nFILTER NOT EXISTS { ?statement2 pq:P582 ?x }\nFILTER NOT EXISTS { ?country2 wdt:P31 wd:Q3024240 }\n?capital1 wdt:P625 ?coords1 .\n?capital2 wdt:P625 ?coords2 .\nFILTER(xsd:string(?country1) < xsd:string(?country2))\nFILTER NOT EXISTS {\n?country1 p:P47 ?statementBorder .\n?statementBorder ps:P47 ?country2 .\n{ FILTER NOT EXISTS { ?statementBorder pq:P5102 ?x } } UNION\n{ ?statementBorder pq:P5102 wd:Q15104814 }\n}\nBIND(ROUND(geof:distance(?coords1, ?coords2)) AS ?distance) .\nFILTER (?distance<200)\n}\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?distance",
        "complexity_description": "Multiple nested filters, subqueries and geospatial function",
        "complexity": "complex"
    },
    {
        "id": "1642",
        "valid_gpt_response": true,
        "query": "SELECT ?point ?line ?par ?parLabel ?sett ?settLabel (?parLabel AS ?layer)\nWITH {\nSELECT ?par (AVG(?lat) AS ?avg_lat) (AVG(?long) AS ?avg_long) WHERE {\n?item wdt:P709 [] .\n?item p:P131 ?adm_stmt .\n?adm_stmt pq:P3831 wd:Q5124673 .\n?adm_stmt ps:P131 ?par .\n?item p:P625 ?coord_stmt .\n?coord_stmt psv:P625/wikibase:geoLatitude ?lat .\n?coord_stmt psv:P625/wikibase:geoLongitude ?long .\n} GROUP BY ?par\n} AS %par_data\nWITH {\nSELECT ?par ?point WHERE {\nINCLUDE %par_data\nBIND(CONCAT('POINT (', str(?avg_long), ' ', str(?avg_lat), ')') AS ?str)\nBIND(STRDT(?str, geo:wktLiteral) AS ?point) .\n}\n} AS %points\nWITH {\nSELECT ?sett ?par ?line ?point WHERE {\nINCLUDE %par_data\n?par wdt:P1383 ?sett .\n?sett p:P625 ?sett_stmt .\n?sett_stmt ps:P625 ?point .\n?sett_stmt psv:P625/wikibase:geoLatitude ?sett_lat .\n?sett_stmt psv:P625/wikibase:geoLongitude ?sett_long .\nBIND(CONCAT('LINESTRING (', STR(?sett_long), ' ', STR(?sett_lat), ',', STR(?avg_long), ' ', STR(?avg_lat), ')') AS ?str) .\nBIND(STRDT(?str, geo:wktLiteral) AS ?line) .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n} AS %lines\nWHERE {\n{ INCLUDE %points } UNION { INCLUDE %lines } .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple subqueries, grouping, and complex string manipulation",
        "complexity": "complex"
    },
    {
        "id": "1643",
        "valid_gpt_response": true,
        "query": "SELECT ?item1 ?image1 ?item1Label ?rgb ?item2 ?image2 ?item2Label ?edgeLabel\nWITH {\nSELECT ?item1 ?rgb WHERE {\n{\nSELECT (?character as ?item1) WHERE {\n?game wdt:P31 wd:Q7889.\n?game wdt:P179 wd:Q219623.\n?game wdt:P674 ?character.\n}\n}\nUNION\n{\n# Find sport -\nSELECT (?sport as ?item1) WHERE {\n?game wdt:P31 wd:Q7889.\n?game wdt:P179 wd:Q219623.\n?game wdt:P674 ?character.\n?character wdt:P641 ?sport.\n}\n}\nUNION\n{\n# Find games\nSELECT (?game as ?item1) ?rgb WHERE {\n?game wdt:P31 wd:Q7889.\n?game wdt:P179 wd:Q219623.\nBIND(\"7FFF00\" as ?rgb)\n}\n}\n}\n} AS %item1\nWITH {\nSELECT (?item1 AS ?item2) WHERE {\nINCLUDE %item1.\n}\n} AS %item2\nWHERE {\nINCLUDE %item1 .\nINCLUDE %item2 .\n?item1 ?wdt ?item2 .\n?edge wikibase:directClaim ?wdt;\na wikibase:Property .\nOPTIONAL { ?item1 wdt:P18 ?image1 . }\nOPTIONAL { ?item2 wdt:P18 ?image2 . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple UNIONs, nested WITH clauses, and multiple OPTIONAL patterns",
        "complexity": "complex"
    },
    {
        "id": "1644",
        "valid_gpt_response": true,
        "query": "SELECT ?animal ?deLemmas ?frLemmas ?image\nWITH {\nSELECT ?animal (STRLANG(GROUP_CONCAT(?deLemma; separator = \"/\"), \"de\") AS ?deLemmas) (STRLANG(GROUP_CONCAT(?frLemma; separator = \"/\"), \"fr\") AS ?frLemmas) WHERE {\n?de dct:language wd:Q188;\nwikibase:lexicalCategory wd:Q1084;\nwikibase:lemma ?deLemma;\nwdt:P5185 wd:Q1775415;\nontolex:sense [ wdt:P5137 ?animal ].\n?fr dct:language wd:Q150;\nwikibase:lexicalCategory wd:Q1084;\nwikibase:lemma ?frLemma;\nwdt:P5185 wd:Q499327;\nontolex:sense [ wdt:P5137 ?animal ].\n?animal wdt:P279+ wd:Q729.\n}\nGROUP BY ?animal\n} AS %animals\nWITH {\nSELECT ?animal ?animalLabel ?deLemmas ?frLemmas WHERE {\nINCLUDE %animals.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n} AS %animalsWithLabels\nWHERE {\nINCLUDE %animalsWithLabels.\nBIND(CONCAT(\"haswbstatement:P180=\", STRAFTER(STR(?animal), STR(wd:))) AS ?search)\nSERVICE wikibase:mwapi {\nbd:serviceParam wikibase:api \"Search\";\nwikibase:endpoint \"commons.wikimedia.org\";\nmwapi:srsearch ?search;\nmwapi:srnamespace \"6\"; # NS_FILE\nmwapi:srlimit \"max\".\n?title wikibase:apiOutput mwapi:title.\n}\nBIND(IRI(CONCAT(\"http://commons.wikimedia.org/wiki/Special:FilePath/\", STRAFTER(?title, \"File:\"))) AS ?image)\n}",
        "complexity_description": "Multiple subqueries, grouping, and service calls",
        "complexity": "complex"
    },
    {
        "id": "1645",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?image ?linkTo WHERE\n{\nSERVICE gas:service {\ngas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.SSSP\" ;\ngas:in wd:Q320578;\ngas:traversalDirection \"Forward\" ;\ngas:out ?item ;\ngas:out1 ?depth ;\ngas:maxIterations 10 ;\ngas:linkType wdt:P184 .\n}\nOPTIONAL { ?item wdt:P184 ?linkTo }\nOPTIONAL { ?item wdt:P18 ?image }\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"en\" }\n}\n#",
        "complexity_description": "Multiple services, optional patterns, and custom analytics program",
        "complexity": "complex"
    },
    {
        "id": "1646",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?partyLabel ?seatLabel ?mpLabel ?image ?coords ?rgb (?partyLabel AS ?layer)\nwhere {\n?mp p:P39 ?currps . ?currps ps:P39 ?currterm . ?currterm wdt:P279 wd:Q16707842 .\nfilter not exists { ?currps pq:P582 ?currend } .\n?currps pq:P768 ?seat . ?seat wdt:P625 ?coords . ?currps pq:P4100 ?party .\noptional { ?mp wdt:P18 ?image }\n?party wdt:P465 ?rgb .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\n#defaultView:Map{\"hide\":[\"?coords\", \"?layer\", \"?rgb\"]}",
        "complexity_description": "Multiple joins, filters and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "1647",
        "valid_gpt_response": true,
        "query": "SELECT ?degrees_Celsius ?degrees_Fahrenheit ?item ?itemLabel ?location ?locationLabel ?date ?coor ?layer\nWHERE\n{\n?item p:P7422 ?st .\n{\n?st psv:P7422 [ wikibase:quantityAmount ?degrees_Celsius ; wikibase:quantityUnit wd:Q25267 ]\nBIND ( ROUND ( ?degrees_Celsius * 1.8 + 32 ) as ?degrees_Fahrenheit )\n}\nUNION\n{\n?st psv:P7422 [ wikibase:quantityAmount ?degrees_Fahrenheit ; wikibase:quantityUnit wd:Q42289 ]\nBIND( ROUND( ( ?degrees_Fahrenheit - 32 ) / 1.8 * 10)/10 as ?degrees_Celsius )\n}\nOPTIONAL { ?st pq:P276 ?location OPTIONAL { ?location wdt:P625 ?coor0 } }\nOPTIONAL { ?st pq:P585 ?date }\nOPTIONAL { ?item wdt:P625 ?coor1 }\nBIND( COALESCE(?coor0, ?coor1) as ?coor)\nBIND( CONCAT(str(Floor(?degrees_Celsius / 10)),\"0s degC\") as ?layer)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nORDER BY ASC(?degrees_Celsius)\nLIMIT 1000",
        "complexity_description": "Multiple UNION, OPTIONAL, BIND, and SERVICE clauses with calculations",
        "complexity": "complex"
    },
    {
        "id": "1648",
        "valid_gpt_response": true,
        "query": "SELECT ?men ?women ?award ?awardLabel WHERE {\n{ SELECT (COUNT(?recipient_male) AS ?men) (COUNT(?recipient_female) AS ?women) ?award WHERE {\n?award wdt:P31 wd:Q1792571 # art prize\n{\n?recipient_male wdt:P166 ?award .\n?recipient_male wdt:P21 wd:Q6581097 .\n}\nUNION\n{\n?recipient_female wdt:P166 ?award .\n?recipient_female wdt:P21 wd:Q6581072 .\n}\n}\nGROUP BY ?award\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple subqueries, UNION operator and SERVICE keyword used",
        "complexity": "complex"
    },
    {
        "id": "1649",
        "valid_gpt_response": true,
        "query": "select distinct ?image (count(distinct ?item) as ?count) where\n{ ?item wdt:P31 wd:Q5 . ?item2 wdt:P31 wd:Q5 . # both are people\n?item wdt:P18 ?image . ?item2 wdt:P18 ?image . # both have the same image\nfilter(?item != ?item2) . # ensure different item IDs (no duplicates)\n} group by ?image order by desc(?count)",
        "complexity_description": "Multiple joins, filter, and aggregation",
        "complexity": "complex"
    },
    {
        "id": "1650",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?placeLabel ?roadLabel ?coords WHERE {\n?item wdt:P170 wd:Q1671666 ;\nwdt:P131 ?place ;\nwdt:P669 ?road ;\nwdt:P625 ?coords ;\nrdfs:label ?itemL filter (lang(?itemL) = \"fr\") .\nFILTER (CONTAINS(?itemL, \"VRS_\"))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?itemLabel",
        "complexity_description": "Multiple filters and service call",
        "complexity": "medium"
    },
    {
        "id": "1651",
        "valid_gpt_response": true,
        "query": "SELECT ?English_alphabet ?English_alphabetLabel ?media WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?English_alphabet wdt:P361 wd:Q754673.\nOPTIONAL { ?English_alphabet p:P2919 ?label_in_sign_language.\n?label_in_sign_language ps:P2919 ?media.\n?label_in_sign_language pq:P407 wd:Q14759.\nFILTER(regex(str(?media), \"\\\\.svg$\", \"i\"))\n}\n}\nORDER BY ?English_alphabetLabel",
        "complexity_description": "Multiple triple patterns, optional clause, regex filter and service call",
        "complexity": "complex"
    },
    {
        "id": "1652",
        "valid_gpt_response": true,
        "query": "SELECT ?French_alphabet ?French_alphabetLabel ?media WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?French_alphabet wdt:P361 wd:Q755124.\nOPTIONAL { ?French_alphabet p:P2919 ?label_in_sign_language.\n?label_in_sign_language ps:P2919 ?media.\n?label_in_sign_language pq:P407 wd:Q33302\n}\n}\nORDER BY ?French_alphabetLabel",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1653",
        "valid_gpt_response": true,
        "query": "SELECT ?character ?characterLabel ?imgself ?imgactor ?killerLabel ?methodLabel ?genusLabel ?placeLabel ?episodeLabel WHERE {\n?character wdt:P1080 wd:Q2461698.\nOPTIONAL { ?character wdt:P509 ?method. }\nOPTIONAL { ?character wdt:P157 ?killer. }\nOPTIONAL { ?character wdt:P175 ?actor.\n?actor wdt:P18 ?imgactor.}\nOPTIONAL {?character wdt:P18 ?imgself.}\n?character p:P1196 ?statement.\n?statement ps:P1196 ?genus.\nOPTIONAL {?character wdt:P20 ?place}\nOPTIONAL {?statement prov:wasDerivedFrom [ pr:P248 ?episode ].}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?dod",
        "complexity_description": "Multiple optional patterns, multiple services, and ordering",
        "complexity": "complex"
    },
    {
        "id": "1654",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel (YEAR(?incept) AS ?start) ?time_precision ?older_than_Notre_Dame WHERE {\n?item (wdt:P31/(wdt:P279*)) wd:Q41176;\np:P571 _:b3.\n_:b3 ps:P571 ?incept;\npsv:P571 _:b2.\n_:b2 wikibase:timePrecision ?time_precision.\nFILTER((YEAR(?incept)) < 1163 )\nBIND(IF((?time_precision >= 9 ) || ((YEAR(?incept)) < 1100 ), \"definitely\", \"maybe\") AS ?older_than_Notre_Dame)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY (?incept) (?time_precision)",
        "complexity_description": "Multiple filters, subqueries and conditional bindings",
        "complexity": "complex"
    },
    {
        "id": "1655",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?wditem ?wditemLabel ?date ?image ?work ?workLabel WHERE {\nSERVICE <http://dbpedia.org/sparql> {\n?item dct:subject|dct:subject/skos:broader dbc:History_of_telecommunications ;\nowl:sameAs ?wditem FILTER regex (?wditem, \"wikidata.org\") .\n}\nSERVICE <https://query.wikidata.org/sparql> {\n{?wditem wdt:P569 ?date FILTER (YEAR(?date)>1700).}\nUNION\n{?wditem wdt:P571|wdt:P577|wdt:P580 ?date .}\nOPTIONAL {?wditem wdt:P800 ?work. ?work rdfs:label ?workLabel FILTER (LANG(?workLabel)=\"en\") .}\nOPTIONAL {?wditem wdt:P18 ?image } .\n?wditem rdfs:label ?wditemLabel FILTER (LANG(?wditemLabel)=\"en\") .\n}\n}",
        "complexity_description": "Multiple services, unions, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "1656",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?line ?lineLabel ?rgb ?p ?pLabel WHERE {\nVALUES $IS_ON_LINE { wdt:P81 }\nVALUES $IS_PART_OF { wdt:P361 }\nVALUES $LONDON_UNDERGROUND { wd:Q20075 }\n?p $IS_ON_LINE ?line .\n?line $IS_PART_OF $LONDON_UNDERGROUND .\n?line wdt:P465 ?rgb . # gets the tube line's colour\n{ # inner select returns all stations which are on 3 or more London Underground lines\nSELECT ?p (COUNT(?line) AS ?count) WHERE {\nVALUES $IS_A { wdt:P31 }\nVALUES $TUBE_STATION { wd:Q14562709 }\nVALUES $IS_ON_LINE { wdt:P81 }\nVALUES $IS_PART_OF { wdt:P361 }\nVALUES $LONDON_UNDERGROUND { wd:Q20075 }\n?p $IS_A $TUBE_STATION .\n?p $IS_ON_LINE ?line .\n?line $IS_PART_OF $LONDON_UNDERGROUND .\n} GROUP BY ?p\nHAVING (?count >= 3)\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple VALUES, nested SELECT with COUNT and GROUP BY",
        "complexity": "complex"
    },
    {
        "id": "1657",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?esglesia ?esglesialabel ?coor\nWHERE {\n?esglesia wdt:P31 wd:Q16970 ;\n?range wd:Q854;\nwdt:P625 ?coor.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Simple query with 3 variables and 2 triple patterns",
        "complexity": "simple"
    },
    {
        "id": "1658",
        "valid_gpt_response": true,
        "query": "SELECT ?nigerianwomen ?nigerianwomenLabel ?placeofbirthLabel ?datebirth ?locationLabel?image\nWHERE {\n?nigerianwomen wdt:P31 wd:Q5.\n?nigerianwomen wdt:P21 wd:Q6581072.\n?nigerianwomen wdt:P27 wd:Q1033.\nOPTIONAL {?nigerianwomen wdt:P19 ?placeofbirth}.\nOPTIONAL {?nigerianwomen wdt:P569 ?datebirth}.\nOPTIONAL {?nigerianwomen wdt:P18 ?image}.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }}",
        "complexity_description": "Multiple optional patterns, multiple triple patterns",
        "complexity": "medium"
    },
    {
        "id": "1659",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?accusedwitch ?precision ?coords ?Occupation ?Residence ?image (?Occupation as ?layer)\nWHERE {\n?person wdt:P4478 ?accusedwitch .\n?person wdt:P31 wd:Q5.\n?person wdt:P21 ?gender .\n?person wdt:P551 ?residence .\nOPTIONAL { ?person wdt:P106 ?occupation}\nOPTIONAL { ?person wdt:P3716 ?socialclassification }\n?residence wdt:P625 ?coords.\nOPTIONAL { ?article schema:about ?person. }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\".\n?person rdfs:label ?personLabel.\n?residence rdfs:label ?Residence .\n?occupation rdfs:label ?Occupation.\n?gender rdfs:label ?Gender.\n?socialclassification rdfs:label ?SocialClassification .\n}\n}",
        "complexity_description": "Multiple optional patterns, service call and multiple labels",
        "complexity": "complex"
    },
    {
        "id": "1660",
        "valid_gpt_response": true,
        "query": "SELECT ?thing ?label ?img ?loc ?layer ?propertyLabel WHERE {\nVALUES $ST_GEORGE { wd:Q48438 }\n?thing ?p $ST_GEORGE .\n?thing wdt:P18 ?img .\n?thing wdt:P625 ?loc .\n?property wikibase:directClaim ?p . # needed to get property labels\n# does the item have English labels?\nOPTIONAL {\n?thing rdfs:label ?label\nFILTER (LANG(?label) = \"en\")\n}\nBIND(IF(BOUND(?label), \"Items with English Labels\", \"Items without English Labels\") AS ?layer)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, optional clause, and service call",
        "complexity": "complex"
    },
    {
        "id": "1661",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?_coordinates ?_image ?death_placeLabel (year(?death_date) as ?year) WHERE {\n?item wdt:P106 wd:Q212948;\nwdt:P20/wdt:P17 wd:Q38;\nwdt:P20/wdt:P625 ?_coordinates; # their deathplace, specifically the coordinates of their birthplace\nwdt:P20 ?death_place;\np:P570/psv:P570 ?death_date_node .\n?death_date_node wikibase:timeValue ?death_date .\nOPTIONAL { ?item wdt:P18 ?_image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" } # labels in English\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1662",
        "valid_gpt_response": true,
        "query": "SELECT ?count ?typeLabel ?example ?exampleLabel ?exampleDescription ?afterLabel ?afterDescription WHERE {\n{\nselect distinct ?type (count(distinct ?item) as ?count) (SAMPLE(?item) AS ?example) WHERE {\n?item wdt:P138 ?namesake . ?namesake wdt:P31 ?type .\n?item wdt:P31 wd:Q5 .\n} group by ?type\n}\n?example wdt:P138 ?after. ?after wdt:P31 ?type .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} order by desc(?count)",
        "complexity_description": "Multiple subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "1663",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?wditem ?wditemLabel ?date ?image ?work ?workLabel ?coord WHERE {\nSERVICE <http://dbpedia.org/sparql> {\n?item dct:subject|dct:subject/skos:broader dbc:Illuminati_members ;\nowl:sameAs ?wditem FILTER regex (?wditem, \"wikidata.org\") .\n}\nSERVICE <https://query.wikidata.org/sparql> {\n{?wditem wdt:P569 ?date FILTER (YEAR(?date)<2050).}\n#UNION\n#{?wditem wdt:P571|wdt:P577|wdt:P580|wdt:P619 ?date .}\n#{?wditem wdt:P625 ?coord .}\n# OPTIONAL {?wditem wdt:P800 ?work. ?work rdfs:label ?workLabel FILTER (LANG(?workLabel)=\"en\") .}\nOPTIONAL {?wditem wdt:P18 ?image } .\n?wditem rdfs:label ?wditemLabel FILTER (LANG(?wditemLabel)=\"en\") .\n}\n}",
        "complexity_description": "Multiple services, unions, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "1664",
        "valid_gpt_response": true,
        "query": "SELECT ?Periodikum ?PeriodikumLabel (YEAR(?Jahr) AS ?Inception) (IRI(CONCAT('https://twitter.com/hashtag/',?Twitter_Hashtag,'?src=hash')) AS ?TwitterURL) WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?Periodikum (wdt:P31/(wdt:P279*)) wd:Q1002697;\nwdt:P571 ?Jahr.\nFILTER(?Jahr < \"1900-01-01\"^^xsd:dateTime)\n?Periodikum wdt:P2572 ?Twitter_Hashtag.\n}\nLIMIT 100",
        "complexity_description": "Multiple filters, service call and complex property paths",
        "complexity": "complex"
    },
    {
        "id": "1665",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?signImage ?namedAfter ?namedAfterLabel ?fantoir {\n?item wdt:P31/wdt:P279* wd:Q83620 ; wdt:P17 wd:Q142 ; wdt:P131 wd:Q647 ; wdt:P1766 ?signImage .\nOPTIONAL { ?item wdt:P138 ?namedAfter }\nOPTIONAL { ?item wdt:P3182 ?fantoir }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" . }\n}\nORDER BY ?itemLabel",
        "complexity_description": "Multiple triple patterns, optional blocks and service call",
        "complexity": "medium"
    },
    {
        "id": "1666",
        "valid_gpt_response": true,
        "query": "SELECT ?mp ?mpLabel ?image ?pob ?pobLabel ?pobCoords ?con ?conLabel ?conCoords ?line ?rgb ?layer WHERE {\n$mp wdt:P19 ?pob .\nOPTIONAL { ?mp wdt:P18 ?image .}\n?pob wdt:P625 ?pobCoords .\n?pob p:P625 [ ps:P625 []; psv:P625 [ wikibase:geoLongitude ?poblon; wikibase:geoLatitude ?poblat; ] ].\n$mp p:P39 ?mpstmt .\n?mpstmt ps:P39 wd:Q30524710 .\n?mpstmt pq:P768 ?con .\n?con wdt:P625 ?conCoords .\n?con p:P625 [\nps:P625 [];\npsv:P625 [\nwikibase:geoLongitude ?conlon;\nwikibase:geoLatitude ?conlat;\n]\n].\nMINUS {?mpstmt pq:P582 ?e }\n?mpstmt pq:P4100 ?party .\n?party wdt:P465 ?rgb .\n?party rdfs:label ?layer .\nFILTER (LANG(?layer) = \"en\")\nBIND(CONCAT('LINESTRING (', STR(?poblon), ' ', STR(?poblat), ',', STR(?conlon), ' ', STR(?conlat), ')') AS ?str) .\nBIND(STRDT(?str, geo:wktLiteral) AS ?line)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, optional patterns, and complex filter/bind operations",
        "complexity": "complex"
    },
    {
        "id": "1667",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person ?personLabel ?born ?bornLabel ?coord {\n?position wdt:P279 wd:Q1711695 . # 1. find all the MSP positions\n?person wdt:P39 ?position . # 2. did they hold any MSP position\n?person wdt:P31 wd:Q5 . # 2a. check they were actually people (in case we have any fictional MSPs)\n?person wdt:P19 ?born . # 3. where were they born\nMINUS { ?born wdt:P131* wd:Q22 . } # 4. this bit filters down to just \"not in Scotland\"\nOPTIONAL { ?born wdt:P625 ?coord . } # 5. coordinates if available\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}\n#defaultView:Map",
        "complexity_description": "Multiple joins, filters and optional patterns",
        "complexity": "medium"
    },
    {
        "id": "1668",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?geo ?type WHERE {\n{ ?item wdt:P31*/wdt:P279* wd:Q12323 . }\nUNION\n{ ?item wdt:P31*/wdt:P279* wd:Q131681 . }\n?item wdt:P625 ?geo .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple UNION patterns, multiple triple patterns, and a SERVICE call",
        "complexity": "complex"
    },
    {
        "id": "1669",
        "valid_gpt_response": true,
        "query": "SELECT\n# ?language1\n?language1Label\n# ?language2\n?language2Label\n(COUNT(?concept) AS ?count)\n{\n?concept ^wdt:P5137 / ^ontolex:sense ?lexeme1, ?lexeme2 .\n?lexeme1 dct:language ?language1 .\n?lexeme2 dct:language ?language2 .\n?language1 wdt:P218 ?language1Label .\n?language2 wdt:P218 ?language2Label .\n# FILTER (?language1 != ?language2)\n}\nGROUP BY ?language1 ?language1Label ?language2 ?language2Label\nHAVING (COUNT(?concept) > 10)",
        "complexity_description": "Multiple joins, filters and aggregations",
        "complexity": "complex"
    },
    {
        "id": "1670",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?wditem ?wditemLabel ?date ?image ?work ?workLabel ?coord WHERE {\nSERVICE <http://dbpedia.org/sparql> {\n?item dct:subject dbc:Pioneers_of_photography ;\n#?item dct:subject|dct:subject/skos:broader|dct:subject/skos:broader/skos:broader dbc:Pioneers_of_photography ;\nowl:sameAs ?wditem FILTER regex (?wditem, \"wikidata.org\") .\n#?item dct:subject|dct:subject/skos:broader|dct:subject/skos:broader/skos:broader dbc:19th_century_in_art .\n}\nSERVICE <https://query.wikidata.org/sparql> {\n{?wditem wdt:P569 ?date FILTER (YEAR(?date)<1901).}\n# UNION\n# {?wditem wdt:P571|wdt:P577|wdt:P580|wdt:P619 ?date.}\n# FILTER (YEAR(?date)<1914).\n#{?wditem wdt:P625 ?coord .}\n# OPTIONAL {?wditem wdt:P800 ?work. ?work rdfs:label ?workLabel FILTER (LANG(?workLabel)=\"en\") .}\nOPTIONAL {?wditem wdt:P18 ?image } .\n?wditem rdfs:label ?wditemLabel FILTER (LANG(?wditemLabel)=\"en\") .\n}\n}",
        "complexity_description": "Multiple services, filters, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "1671",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?synagoga ?synagogaLabel ?coor ?kategorie_na_Commons ?obr WHERE {\n?synagoga wdt:P31 wd:Q34627;\n?range wd:Q213;\nwdt:P625 ?coor.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"cs\". }\nOPTIONAL { ?synagoga wdt:P373 ?kategorie_na_Commons. }\nOPTIONAL { ?synagoga wdt:P18 ?obr. }\n}",
        "complexity_description": "Multiple optional patterns, service call and language filter",
        "complexity": "medium"
    },
    {
        "id": "1672",
        "valid_gpt_response": true,
        "query": "SELECT ?l ?lemma ?example WHERE {\n?l a ontolex:LexicalEntry ; dct:language ?language ;\nwikibase:lemma ?lemma .\n?language wdt:P218 'sv'.\n?l wdt:P5831 ?example.\nFILTER NOT EXISTS {?l ontolex:sense ?sense }\n}\nORDER BY ?lemma",
        "complexity_description": "Multiple triple patterns, filter and order by",
        "complexity": "medium"
    },
    {
        "id": "1673",
        "valid_gpt_response": true,
        "query": "SELECT ?country ?countryLabel ?street ?streetLabel ?image WHERE {\n?country wdt:P31 wd:Q3624078 ; wdt:P463 wd:Q458 .\nOPTIONAL {\n?street wdt:P31/wdt:P279* wd:Q83620 ; wdt:P131 wd:Q647 ; wdt:P138 ?country .\nOPTIONAL { ?street wdt:P18 ?image } .\n} .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr\" . }\n}\nORDER BY ?countryLabel",
        "complexity_description": "Multiple optional patterns, nested queries and service call",
        "complexity": "complex"
    },
    {
        "id": "1674",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?author ?authorLabel ?coord ?image WHERE {\n?author wdt:P31 wd:Q55818 .\n?author wdt:P625 ?coord\nOPTIONAL {?author wdt:P18 ?image .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, de, fr, es, it\" }\n}",
        "complexity_description": "Optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1675",
        "valid_gpt_response": true,
        "query": "SELECT ?p ?pLabel ?size ?rgb WHERE {\n?p wdt:P31 wd:Q1075 .\n?p wdt:P465 ?rgb . # sRGB color hex triplet\nBIND (1 AS ?size)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ASC (LCASE(?pLabel))",
        "complexity_description": "Simple query with 2 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "1676",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?riot) AS ?numOfRiots) ?country ?countryLabel\nWHERE {\n?riot wdt:P31/wdt:P279* wd:Q124757 .\n?riot wdt:P17 ?country .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?country ?countryLabel ORDER BY DESC(?numOfRiots)",
        "complexity_description": "Multiple triple patterns, service call and grouping",
        "complexity": "medium"
    },
    {
        "id": "1677",
        "valid_gpt_response": true,
        "query": "SELECT ?countryFemale ?countryFemaleLabel (?countFemales / (?countMales + ?countFemales) AS ?ratioFemales) WHERE {\n{\nSELECT ?countryMale (COUNT(?itemMale) AS ?countMales) WHERE {\n?itemMale wdt:P106 wd:Q82955;\nwdt:P569 ?dateBirthMale;\nwdt:P31 wd:Q5;\nwdt:P21 wd:Q6581097;\nwdt:P27 ?countryMale.\nFILTER((YEAR(?dateBirthMale)) > 1960 )\n}\nGROUP BY ?countryMale\n}\n{\nSELECT ?countryFemale (COUNT(?itemFemale) AS ?countFemales) WHERE {\n?itemFemale wdt:P106 wd:Q82955;\nwdt:P569 ?dateBirthFemale;\nwdt:P31 wd:Q5;\nwdt:P21 wd:Q6581072;\nwdt:P27 ?countryFemale.\nFILTER((YEAR(?dateBirthFemale)) > 1960 )\n}\nGROUP BY ?countryFemale\n}\nFILTER(?countryMale = ?countryFemale)\nFILTER((?countMales + ?countFemales) > 300 )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC (?ratioFemales)",
        "complexity_description": "Multiple subqueries, grouping, filtering and aggregation",
        "complexity": "complex"
    },
    {
        "id": "1678",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?data (URI(CONCAT(\"https://facebook.com/\",?facebook)) AS ?fb) (SAMPLE(?coord) AS ?coord) WHERE {\n?item wdt:P31 wd:Q51404, wd:Q27968055;\nwdt:P17 wd:Q38;\nwdt:P131 ?paese;\nwdt:P361 ?partof;\nwdt:P585 ?data.\n?paese wdt:P625 ?coord.\n?partof wdt:P2013 ?facebook.\nFILTER((?data >= \"2019-01-01T00:00:00Z\"^^xsd:dateTime) && (?data <= \"2019-12-31T00:00:00Z\"^^xsd:dateTime))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?item ?itemLabel ?data ?facebook ?fb",
        "complexity_description": "Multiple joins, filters and services",
        "complexity": "complex"
    },
    {
        "id": "1679",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\n?comm1 wdt:P31 wd:Q484170 ; wdt:P131 wd:Q12549 ; wdt:P625 ?coord1 ; wdt:P47 ?comm2.\nMINUS { ?comm1 p:P31 [ ps:P31 wd:Q484170 ; pq:P582 [] ] . }\nMINUS { ?comm2 p:P31 [ ps:P31 wd:Q484170 ; pq:P582 [] ] . }\n?comm2 wdt:P625 ?coord2 .\n?comm1 p:P625 [ ps:P625 []; psv:P625 [ wikibase:geoLongitude ?coord1lon; wikibase:geoLatitude ?coord1lat; ] ].\n?comm2 p:P625 [ ps:P625 []; psv:P625 [ wikibase:geoLongitude ?coord2lon; wikibase:geoLatitude ?coord2lat; ] ].\nBIND(CONCAT('LINESTRING (', STR(?coord1lon), ' ', STR(?coord1lat), ',', STR(?coord2lon), ' ', STR(?coord2lat), ')') AS ?str) .\nBIND(STRDT(?str, geo:wktLiteral) AS ?line)\n}",
        "complexity_description": "Multiple MINUS clauses, property paths, and BIND functions",
        "complexity": "complex"
    },
    {
        "id": "1680",
        "valid_gpt_response": true,
        "query": "SELECT ?print ?printLabel ?image ?pop ?popLabel ?popCoords ?subject ?subjectLabel ?subjectCoords ?line ?layer WHERE {\n$print wdt:P361 wd:Q21542493 ;\nwdt:P291 ?pop .\nOPTIONAL { ?print wdt:P18 ?image .}\n?pop wdt:P625 ?popCoords .\n?pop p:P625 [ ps:P625 []; psv:P625 [ wikibase:geoLongitude ?poplon; wikibase:geoLatitude ?poplat; ] ].\n$print p:P921 ?printstmt .\n?printstmt ps:P921 ?subject .\n?subject wdt:P625 ?subjectCoords .\n?subject p:P625 [\nps:P625 [];\npsv:P625 [\nwikibase:geoLongitude ?subjectlon;\nwikibase:geoLatitude ?subjectlat;\n]\n].\n?pop rdfs:label ?layer .\nFILTER (LANG(?layer) = \"en\")\nBIND(CONCAT('LINESTRING (', STR(?poplon), ' ', STR(?poplat), ',', STR(?subjectlon), ' ', STR(?subjectlat), ')') AS ?str) .\nBIND(STRDT(?str, geo:wktLiteral) AS ?line)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, optional patterns, and complex filter/bind operations",
        "complexity": "complex"
    },
    {
        "id": "1681",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?countryLabel ?coords WHERE\n{\n?item wdt:P31 wd:Q25391.\nOPTIONAL { ?item wdt:P17 ?country }\nOPTIONAL { ?item wdt:P625 ?coords }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?countryLabel ?itemLabel",
        "complexity_description": "Multiple optional patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "1682",
        "valid_gpt_response": true,
        "query": "SELECT\n?author1 ?author1Label ?image1 ?rgb\n?author2 ?author2Label ?image2\nWITH {\nSELECT\n?author1 (SAMPLE(?image1_) AS ?image1)\n?author2 (SAMPLE(?image2_) AS ?image2)\n(SAMPLE(?rgb_) AS ?rgb)\nWHERE {\n?work wdt:P50 ?author1 , ?author2 ;\nwdt:P1433 wd:Q6294930 .\n# Only display co-authorship for certain types of documents\n# Journal and conference articles, books, not (yet?) software\nVALUES ?publication_type { wd:Q13442814 wd:Q571 wd:Q26973022 wd:Q17928402 wd:Q947859 }\nFILTER EXISTS { ?work wdt:P31 ?publication_type . }\n# No self-links.\nFILTER (?author1 != ?author2)\n# Images\nOPTIONAL { ?author1 wdt:P18 ?image1_ }\nOPTIONAL { ?author2 wdt:P18 ?image2_ }\n# Coloring of the nodes\nBIND(\"FFFFFF\" AS ?rgb_)\n}\nGROUP BY ?author1 ?author2\n} AS %result\nWHERE {\nINCLUDE %result\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,sv,ru,zh\".\n}\n}",
        "complexity_description": "Multiple subqueries, filters, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "1683",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\n?item wdt:P31*/wdt:P279* wd:Q166118;\nwdt:P625 ?geo .\n}#opendata",
        "complexity_description": "Two triple patterns with a property path",
        "complexity": "medium"
    },
    {
        "id": "1684",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?taxonname (group_concat(?letter; separator='') AS ?reversetaxonname ) with {\nSELECT ?item ?taxonname WHERE {\n?item wdt:P31 wd:Q16521 ;\nwdt:P105 wd:Q7432 ;\nwdt:P171* wd:Q7367 ;\nwdt:P225 ?taxonname .\n} limit 100 } as %i\nwhere {\ninclude %i\nBIND (?taxonname AS ?s)\nVALUES ?d1 { 0 1 2 3 4 5 6 7 8 9 }\nVALUES ?d2 { 0 1 2 3 4 5 6 7 8 9 }\nVALUES ?d3 { 0 1 2 3 4 5 6 7 8 9 }\nBIND (100 * ?d3 + 10 * ?d2 + ?d1 + 1 AS ?i)\nBIND (SUBSTR(?s, ?i, 1) AS ?letter)\n}\nGROUP BY ?item ?taxonname",
        "complexity_description": "Multiple subqueries, grouping, and string manipulation",
        "complexity": "complex"
    },
    {
        "id": "1685",
        "valid_gpt_response": true,
        "query": "SELECT ?lexeme ?word WHERE {\n?lexeme a ontolex:LexicalEntry ; dct:language ?language ; ontolex:lexicalForm ?form .\n?form ontolex:representation ?word .\n?language wdt:P218 'en' .\nfilter(strlen(?word)=5)\nfilter(strstarts(ucase(?word),\"F\"))\n} order by ?word",
        "complexity_description": "Multiple filters, multiple joins",
        "complexity": "medium"
    },
    {
        "id": "1686",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?image WHERE {\n?item wdt:P31/wdt:P279* wd:Q7578326 ; wdt:P131+ wd:Q456 .\nOPTIONAL { ?item wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr\" . }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1687",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(*) AS ?count) ?lexeme ?lemma {\n?lexeme wikibase:lemma ?lemma ;\nwdt:P5238 ?parts .\nFILTER (!CONTAINS(?lemma, \" \"))\n}\nGROUP BY ?lexeme?lemma\nORDER BY DESC(?count)\nLIMIT 100",
        "complexity_description": "Filter, Group By, Order By and Limit",
        "complexity": "medium"
    },
    {
        "id": "1688",
        "valid_gpt_response": true,
        "query": "SELECT ?airport ?airportLabel ?location ?person ?personLabel ?gender WHERE {\n?airport wdt:P31/wdt:P279* wd:Q1248784;\nwdt:P625 ?location;\nwdt:P138 ?person.\n?person wdt:P31 wd:Q5.\nOPTIONAL {\n?person wdt:P21/wdt:P279* wd:Q6581072.\nBIND(\"female\"@en AS ?female)\n}\nOPTIONAL {\n?person wdt:P21/wdt:P279* wd:Q6581097.\nBIND(\"male\"@en AS ?male)\n}\nOPTIONAL {\n?person wdt:P21 ?gender.\nMINUS { ?gender wdt:P279* wd:Q6581097. }\nMINUS { ?gender wdt:P279* wd:Q6581072. }\nFILTER(!ISBLANK(?gender))\nBIND(\"other\"@en AS ?other)\n}\nBIND(COALESCE(?female, ?male, ?other, \"unknown\"@en) AS ?gender)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple optional patterns with filters and binds",
        "complexity": "complex"
    },
    {
        "id": "1689",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?startdate (SAMPLE(?image) AS ?image)\nWHERE\n{\n?item wdt:P31 wd:Q146.\n?item p:P39 ?mouserOffice.\n?mouserOffice ps:P39 wd:Q198641.\n?mouserOffice pq:P580 ?startdate .\n#?item wdt:P569 ?startdate .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\nOPTIONAL { ?item wdt:P18 ?image }\n}\nGROUP BY ?item ?itemLabel ?startdate",
        "complexity_description": "Multiple joins, optional clause and group by",
        "complexity": "medium"
    },
    {
        "id": "1690",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel\nWHERE\n{\n?item wdt:P31 wd:Q12308941;\n# ?item wdt:P31/wdt:P279* wd:Q12308941;\nrdfs:label ?itemLabel;\nFILTER (lang(?itemLabel) = \"fr\") .\nFILTER regex (?itemLabel, \"(ee)$\").\n}\nLIMIT 100",
        "complexity_description": "Filter and regex functions",
        "complexity": "medium"
    },
    {
        "id": "1691",
        "valid_gpt_response": true,
        "query": "SELECT ?l ?lemma WHERE {\n?l a ontolex:LexicalEntry ; dct:language ?language ;\nwikibase:lexicalCategory wd:Q1084;\nwikibase:lemma ?lemma .\n?language wdt:P218 'cs'\nMINUS { ?l wdt:P5185 []. }\n}\nORDER BY ?lemma",
        "complexity_description": "Multiple filters, MINUS clause",
        "complexity": "medium"
    },
    {
        "id": "1692",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?constituencyLabel ?partyLabel ?linkcount\n{\n?item p:P39 ?ps .\n?ps ps:P39 wd:Q30524710 . # current Parliament\nOPTIONAL { ?ps pq:P768 ?constituency . }\nOPTIONAL { ?ps pq:P4100 ?party . }\nfilter not exists { ?ps pq:P582 ?end . } . ?item wikibase:sitelinks ?linkcount .\nSERVICE wikibase:label { bd:serviceParam wikibase:language 'en' }\n}ORDER BY desc(?linkcount)",
        "complexity_description": "Multiple optional patterns, filter and service clause",
        "complexity": "medium"
    },
    {
        "id": "1693",
        "valid_gpt_response": true,
        "query": "SELECT ?dessin_d_architecture ?image ?geoloc ?cr_ateurLabel ?d_peintLabel WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?dessin_d_architecture wdt:P31 wd:Q184784.\nOPTIONAL { ?dessin_d_architecture wdt:P18 ?image. }\nOPTIONAL { ?dessin_d_architecture wdt:P625 ?geoloc. }\nOPTIONAL { }\nOPTIONAL { }\nOPTIONAL { ?dessin_d_architecture wdt:P170 ?cr_ateur. }\nOPTIONAL { ?dessin_d_architecture wdt:P180 ?d_peint. }\n}\nLIMIT 100",
        "complexity_description": "Multiple optional patterns with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "1694",
        "valid_gpt_response": true,
        "query": "SELECT ?cid ?genre (COUNT(*) AS ?count) WHERE {\n?item wdt:P31 wd:Q215380;\nwdt:P138 ?ref.\n?ref wdt:P1080 wd:Q81738.\n?item wdt:P136 ?cid.\nOPTIONAL {\n?cid rdfs:label ?genre.\nFILTER((LANG(?genre)) = \"en\")\n}\n}\nGROUP BY ?cid ?genre\nORDER BY DESC (?count) (?genre)",
        "complexity_description": "Multiple joins, optional clause, and aggregation",
        "complexity": "complex"
    },
    {
        "id": "1695",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?year (COUNT(?stated_in) AS ?count ) WHERE {\n?l a ontolex:LexicalEntry;\ndct:language ?language.\n?language wdt:P218 'sv'.\n?l wdt:P5831 ?example.\n?l p:P5831 ?statement.\n?statement prov:wasDerivedFrom ?refnode.\n?refnode pr:P248 ?stated_in.\n?stated_in wdt:P577 ?date.\nBIND(str(YEAR(?date)) AS ?year)\n}\nGROUP BY ?year\nORDER BY ?year",
        "complexity_description": "Multiple joins, subqueries and aggregation",
        "complexity": "complex"
    },
    {
        "id": "1696",
        "valid_gpt_response": true,
        "query": "SELECT\n(?female_organizers / (?male_organizers + ?female_organizers) AS ?organizer_ratio)\n?female_organizers ?male_organizers\n(?female_authors / (?male_authors + ?female_authors) AS ?author_ratio)\n?female_authors ?male_authors\n?event ?eventLabel ?eventDescription\n{\n{\nSELECT\n?event\n(COUNT(DISTINCT ?male_organizer) AS ?male_organizers)\n(COUNT(DISTINCT ?female_organizer) AS ?female_organizers)\n(COUNT(DISTINCT ?male_author) AS ?male_authors)\n(COUNT(DISTINCT ?female_author) AS ?female_authors)\n{\nVALUES ?event_type { wd:Q2020153 wd:Q40444998 }\n?event wdt:P31 ?event_type .\n?proceedings wdt:P4745 ?event .\n{\n?event wdt:P664 ?male_organizer .\n?male_organizer wdt:P21 wd:Q6581097 .\n}\nUNION\n{\n?event wdt:P664 ?female_organizer .\n?female_organizer wdt:P21 wd:Q6581072 .\n}\n{\n?work wdt:P1433 ?proceedings ; wdt:P50 ?male_author .\n?male_author wdt:P21 wd:Q6581097 .\n}\nUNION\n{\n?work wdt:P1433 ?proceedings ; wdt:P50 ?female_author .\n?female_author wdt:P21 wd:Q6581072 .\n}\n}\nGROUP BY ?event\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?male_organizers)",
        "complexity_description": "Multiple subqueries, unions, and filters",
        "complexity": "complex"
    },
    {
        "id": "1697",
        "valid_gpt_response": true,
        "query": "SELECT ?sl ?slLabel ?coord ?country ?countryLabel # ?indigenous ?indigenousLabel\nWHERE\n{\n?sl wdt:P31 wd:Q34228.\n# ?sl wdt:P2341 ?indigenous.\n?sl wdt:P17 ?country.\n?country wdt:P625 ?coord.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"ca,en\". }\n}",
        "complexity_description": "Multiple joins, service call",
        "complexity": "medium"
    },
    {
        "id": "1698",
        "valid_gpt_response": true,
        "query": "SELECT ?locationLabel (COUNT(?band) AS ?count)\nWHERE {\n?band wdt:P31/wdt:P279* wd:Q25391823 ;\nwdt:P495 wd:Q252;\nOPTIONAL {\n?band wdt:P856 ?website\n}\nOPTIONAL {\n?band wdt:P740 ?location\n}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en,id\" .\n}\n}\nGROUP BY ?locationLabel",
        "complexity_description": "Multiple optional patterns, service call and aggregation",
        "complexity": "complex"
    },
    {
        "id": "1699",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?parish ?parishLabel ?coords ?county ?countyLabel WHERE {\n?parish wdt:P31/wdt:P279* wd:Q28931907 .\n?county wdt:P31/wdt:P279* wd:Q20974973 .\n?parish wdt:P131 ?county .\n?parish wdt:P625 ?coords.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}\nLIMIT 15000",
        "complexity_description": "Multiple triple patterns, joins and service call",
        "complexity": "medium"
    },
    {
        "id": "1700",
        "valid_gpt_response": true,
        "query": "SELECT ?item (SAMPLE(?label) AS ?label) (SAMPLE(?coords) AS ?coords) (GROUP_CONCAT(?lang) AS ?langs) (COUNT(DISTINCT ?label) as ?desccount)\nWHERE {\n?item wdt:P17 wd:Q16 .\n?item wdt:P625 ?coords.\nFILTER NOT EXISTS {\n?item rdfs:label ?englishLabel .\nFILTER(LANGMATCHES(LANG(?englishLabel),\"EN\"))\n} .\n?item rdfs:label ?label\nBIND (LANG(?label) AS ?lang)\n} GROUP BY ?item\nORDER BY DESC(?desccount)",
        "complexity_description": "Multiple aggregations, subqueries and filters",
        "complexity": "complex"
    },
    {
        "id": "1701",
        "valid_gpt_response": true,
        "query": "SELECT ?languageLabel (COUNT(?example) AS ?count ) WHERE {\n?l a ontolex:LexicalEntry; dct:language ?language.\n?l wdt:P5831 ?example.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?languageLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, SERVICE clause, GROUP BY and ORDER BY",
        "complexity": "complex"
    },
    {
        "id": "1702",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person ?personLabel ?accusedwitch ?precision ?coords ?Occupation ?Residence ?image (?Gender as ?layer)\nWHERE {\n?person wdt:P4478 ?accusedwitch .\n?person wdt:P31 wd:Q5.\n?person wdt:P21 ?gender .\n?person wdt:P551 ?residence .\n?residence wdt:P625 ?coords.\nOPTIONAL { ?article schema:about ?person. }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\".\n?person rdfs:label ?personLabel.\n?residence rdfs:label ?Residence .\n?occupation rdfs:label ?Occupation.\n?gender rdfs:label ?Gender.\n}\n}",
        "complexity_description": "Multiple joins, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1703",
        "valid_gpt_response": true,
        "query": "SELECT ?symphony ?symphonyLabel (YEAR(?inception) AS ?year)\nWHERE\n{\n?symphony wdt:P31 wd:Q9734;\nwdt:P86 wd:Q150445;\nwdt:P571 ?inception.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?inception",
        "complexity_description": "Simple query with 3 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "1704",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?creatorLabel ?image WHERE {\n?item wdt:P31*/wdt:P279* wd:Q838948.\n?item wdt:P180 wd:Q405.\n?item wdt:P170 ?creator\nOPTIONAL { ?item wdt:P18 ?image } # Optionally with an image\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr\" }\n}",
        "complexity_description": "Multiple triple patterns and optional clause",
        "complexity": "medium"
    },
    {
        "id": "1705",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?year (COUNT(?published) AS ?count) WHERE {\n?item wdt:P31 wd:Q3331189;\nwdt:P407 wd:Q9027;\nwdt:P577 ?published.\nFILTER(!(ISBLANK(?published)))\nBIND(STR(YEAR(?published)) AS ?year)\n}\nGROUP BY ?year\nORDER BY (?year)",
        "complexity_description": "Filter, Bind, Group By and Order By",
        "complexity": "medium"
    },
    {
        "id": "1706",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?Donejakue_bidea ?Donejakue_bideaLabel ?koordenatuak ?layerLabel WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"eu,es,en\". }\n?Donejakue_bidea (wdt:P361*) wd:Q41150.\n?Donejakue_bidea wdt:P131*/^wdt:P527 wd:Q47588.\n?Donejakue_bidea wdt:P625 ?koordenatuak.\n?Donejakue_bidea wdt:P361 ?bidea.\n?bidea wdt:P31 wd:Q337912.\nBIND (?bidea AS ?layer)\n}",
        "complexity_description": "Multiple triple patterns, SERVICE clause and property paths",
        "complexity": "medium"
    },
    {
        "id": "1707",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person ?personLabel ?associated ?precision ?coords ?Residence ?image (?Gender as ?layer)\nWHERE {\n?person wdt:P4524 ?associated.\n?person wdt:P31 wd:Q5.\nOPTIONAL\n{\n?person wdt:P21 ?gender .\n}\n?person wdt:P551 ?residence .\n?residence wdt:P625 ?coords.\nOPTIONAL { ?article schema:about ?person. }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\".\n?person rdfs:label ?personLabel.\n?residence rdfs:label ?Residence .\n?gender rdfs:label ?Gender.\n}\n}",
        "complexity_description": "Multiple joins, optional patterns and service calls",
        "complexity": "complex"
    },
    {
        "id": "1708",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?language ?groupeLabel ?languageLabel ?sitelink\nWHERE {\n{\nVALUES (?language ?groupe) {\n(wd:Q33302 wd:Q496250)\n(wd:Q150 wd:Q23492)\n}\n} UNION {\n?language wdt:P361 ?groupe .\n?groupe wdt:P361 wd:Q496250 .\n}\nOPTIONAL {\n?sitelink schema:about ?language .\n?sitelink schema:inLanguage \"fr\" .\n?sitelink schema:isPartOf <https://fr.wikipedia.org/>.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\". }\n} ORDER BY ?languageLabel",
        "complexity_description": "Multiple UNION and OPTIONAL blocks, SERVICE keyword, and VALUES clause",
        "complexity": "complex"
    },
    {
        "id": "1709",
        "valid_gpt_response": true,
        "query": "SELECT ?autrice ?autriceLabel ?lieuNaissance ?lieuNaissanceLabel ?lieuMort ?lieuMortLabel (MIN(?img) AS ?image) ?prenomLabel (MIN(?idIsni) as ?isni) ?idBnf (MIN(?n) AS ?naissance) (MAX(?m) AS ?mort) WHERE {\n?autrice wdt:P106 wd:Q36180.\n?autrice wdt:P21 wd:Q6581072.\n?autrice wdt:P570 ?m.\n{ ?autrice wdt:P1412 wd:Q150. }\nUNION\n{ ?autrice wdt:P1412 wd:Q1473289. }\nOPTIONAL { ?autrice wdt:P569 ?n.}\nOPTIONAL { ?autrice wdt:P19 ?lieuNaissance.}\nOPTIONAL { ?autrice wdt:P20 ?lieuMort.}\nOPTIONAL { ?autrice wdt:P18 ?img. }\nOPTIONAL { ?autrice wdt:P735 ?prenom. }\nOPTIONAL { ?autrice wdt:P213 ?idIsni. }\nOPTIONAL { ?autrice wdt:P268 ?idBnf. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr,en\". }\nFILTER((YEAR(?m)) < 1949)\n}\nGROUP BY ?autrice ?autriceLabel ?lieuNaissance ?lieuNaissanceLabel ?lieuMort ?lieuMortLabel ?image ?prenomLabel ?isni ?idBnf ?mort ?naissance\nORDER BY DESC(?naissance)",
        "complexity_description": "Multiple UNION, OPTIONAL clauses and FILTER with YEAR function",
        "complexity": "complex"
    },
    {
        "id": "1710",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?start ?image (GROUP_CONCAT(DISTINCT ?creatorLabel;separator=\", \") AS ?creators) WHERE {\n{\n{ ?item wdt:P31 wd:Q65966993 } # direct instances of hypertext systems\nUNION\n{ ?item wdt:P279 wd:Q65966993 } # specific types of hypertext systems\n}\nOPTIONAL {\n{ ?item wdt:P50 ?creator } UNION # author\n{ ?item wdt:P170 ?creator } UNION # creator\n{ ?item wdt:P61 ?creator } UNION # discoverer or inventor\n{ ?item wdt:P178 ?creator } # developer\n}\nOPTIONAL {\n{ ?item wdt:P571 ?start } UNION\n{ ?item wdt:P580 ?start }\n}\nOPTIONAL { ?item wdt:P18 ?image } .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n?item rdfs:label ?itemLabel .\n?creator rdfs:label ?creatorLabel .\n}\n} GROUP BY ?item ?itemLabel ?start ?image",
        "complexity_description": "Multiple UNIONs, OPTIONALs, and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "1711",
        "valid_gpt_response": true,
        "query": "SELECT ?koord ?megalito ?megalitoLabel ?layerLabel WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"eu,es,en\". }\n?megalito wdt:P1435 wd:Q66112157.\n?megalito wdt:P625 ?koord.\n?megalito wdt:P31 ?mota\nBIND (?mota AS ?layer)\n}",
        "complexity_description": "Multiple triple patterns, SERVICE clause and BIND function",
        "complexity": "medium"
    },
    {
        "id": "1712",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?band ?bandLabel ?image ?date_image WHERE {\n?band wdt:P31 wd:Q215380. #music band\n?band wdt:P136*/wdt:P279* wd:Q38848. #playing heavy metal or a sub-genre of it\n?band wdt:P495 wd:Q33. # coming from Finland \\../.\nOPTIONAL {?band p:P18 ?istat. # with an image\n?istat ps:P18 ?image.}\nOPTIONAL {?band p:P18 ?istat. # with a date for the image\n?istat pq:P585 ?date_image.}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en, fi\". }\n}",
        "complexity_description": "Multiple filters and optional patterns with service call",
        "complexity": "medium"
    },
    {
        "id": "1713",
        "valid_gpt_response": true,
        "query": "SELECT ?typeLabel (COUNT(?item) AS ?count) WHERE {\n?item (wdt:P31/(wdt:P279*)) wd:Q1030034;\nwdt:P31 ?type.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?typeLabel\nLIMIT 50",
        "complexity_description": "Multiple triple patterns, service call and grouping",
        "complexity": "medium"
    },
    {
        "id": "1714",
        "valid_gpt_response": true,
        "query": "SELECT ?band ?bandLabel\nWHERE {\n?band wdt:P31/wdt:P279* wd:Q215380 ;\nwdt:P138 ?name .\n?name wdt:P1080 wd:Q81738 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "1715",
        "valid_gpt_response": true,
        "query": "SELECT\n?farm ?farmLabel\n?geo\n?operator ?operatorLabel\n{\n?farm wdt:P31 wd:Q1357601 .\n?farm wdt:P625 ?geo .\nOPTIONAL {\n?farm wdt:P137 ?operator .\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da\". }\n}",
        "complexity_description": "Optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1716",
        "valid_gpt_response": true,
        "query": "SELECT ?country ?countryLabel ?countrySitelinks ?city ?cityLabel ?citySitelinks ?rate\nWHERE\n{\n?city wdt:P31/wdt:P279* wd:Q515 .\n?city wdt:P17 ?country .\n?city wikibase:sitelinks ?citySitelinks .\n?country wikibase:sitelinks ?countrySitelinks .\n#MINUS { ?country wdt:P582 ?_ . }\n#MINUS { ?country wdt:P576 ?__ . }\nFILTER (?citySitelinks > ?countrySitelinks )\nBIND ( ROUND((?citySitelinks / ?countrySitelinks)*100)/100 AS ?rate)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr, en\". }\n} ORDER BY DESC(?rate)",
        "complexity_description": "Multiple joins, filters, and subqueries",
        "complexity": "complex"
    },
    {
        "id": "1717",
        "valid_gpt_response": true,
        "query": "SELECT\n?item ?itemLabel ?siteLink\nWHERE {\n?siteLink schema:about ?item;\nschema:isPartOf <https://bn.wikisource.org/>;\nwikibase:badge wd:Q20748093.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"bn,en\".}\n}",
        "complexity_description": "Simple query with 3 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "1718",
        "valid_gpt_response": true,
        "query": "SELECT ?flightlessbird ?flightlessbirdLabel ?image WHERE {\n?bird wdt:P3512 wd:Q372949 ;\nwdt:P18 ?image ;\nwdt:P183 wd:Q664 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Three triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "1719",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coordinates\nWHERE\n{\n#ist Klasse Insel\n?item wdt:P31 wd:Q23442 ;\n#in Verwaltungseinheit Deutschland\n?range wd:Q183;\nwdt:P625 ?coordinates.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Simple query with 3 variables and 4 triple patterns",
        "complexity": "simple"
    },
    {
        "id": "1720",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?comienzo ?lugar ?imagen ?paisLabel {\n?item wdt:P31 wd:Q8343784.\n{?item wdt:P17 wd:Q77} UNION {?item wdt:P17 wd:Q414} UNION {?item wdt:P17 wd:Q298}.\n?item wdt:P17 ?pais.\nOPTIONAL {?item wdt:P18 ?imagen}.\nOPTIONAL {?item wdt:P625 ?lugar}.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],es\". }\n}",
        "complexity_description": "Multiple UNIONs, multiple OPTIONALs, and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "1721",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person1 ?person2 ?person1Label ?person1Description ?person2Label ?person2Description WHERE {\n?person1 wdt:P31 wd:Q5;\nwdt:P21 ?gender;\nwdt:P569 ?dob1;\nwdt:P26 ?person2.\n?person2 wdt:P31 wd:Q5;\nwdt:P569 ?dob2;\nwdt:P21 ?gender.\nMINUS { ?person1 wdt:P91 ?orientation. }\nMINUS { ?person2 wdt:P91 ?orientation. }\n# arbitrarily filter out some early results, we're more likely to find references for recent people\nFILTER(?dob1 >= \"1950-01-01\"^^xsd:dateTime)\nFILTER(?dob2 >= \"1950-01-01\"^^xsd:dateTime)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple filters, minus clauses and service calls",
        "complexity": "complex"
    },
    {
        "id": "1722",
        "valid_gpt_response": true,
        "query": "SELECT ?competition ?competitionLabel ?date ?end WHERE {\n{ ?competition wdt:P31 wd:Q2990963. }\nUNION\n{\n?competition wdt:P31 wd:Q16510064.\n?competition wdt:P361 ?comp.\n?comp wdt:P31 wd:Q2990963.\n}\nUNION\n{\n?competition wdt:P361 ?segment.\n?segment wdt:P31 wd:Q16510064.\n}\nOPTIONAL { ?competition wdt:P580 ?start. }\nOPTIONAL { ?competition wdt:P582 ?end. }\nOPTIONAL { ?competition wdt:P585 ?pointInTime. }\nBIND(COALESCE(?start, ?pointInTime) AS ?date)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nFILTER((BOUND(?start)) || (BOUND(?pointInTime)))\nFILTER(?date >= (NOW() - \"P1D\"^^xsd:duration))\n}\nORDER BY ?date",
        "complexity_description": "Multiple UNIONs, OPTIONAL clauses, and FILTERs with date calculations",
        "complexity": "complex"
    },
    {
        "id": "1723",
        "valid_gpt_response": true,
        "query": "SELECT ?competition ?competitionLabel ?date ?end WHERE {\n{ ?competition wdt:P31 wd:Q2990963. }\nUNION\n{\n?competition wdt:P31 wd:Q16510064.\n?competition wdt:P361 ?comp.\n?comp wdt:P31 wd:Q2990963.\n}\nUNION\n{\n?competition wdt:P361 ?segment.\n?segment wdt:P31 wd:Q16510064.\n}\nOPTIONAL { ?competition wdt:P580 ?start. }\nOPTIONAL { ?competition wdt:P582 ?end. }\nOPTIONAL { ?competition wdt:P585 ?pointInTime. }\nBIND(COALESCE(?start, ?pointInTime) AS ?date)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nFILTER((BOUND(?start)) || (BOUND(?pointInTime)))\nFILTER(?end >= (NOW() - \"P1D\"^^xsd:duration))\nFILTER((NOW()) >= ?date)\n}\nORDER BY ?date",
        "complexity_description": "Multiple UNIONs, OPTIONAL clauses, and FILTERs with date calculations",
        "complexity": "complex"
    },
    {
        "id": "1724",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?image {\n?item wdt:P31/wdt:P279* wd:Q1229765 ; wdt:P17 wd:Q142 ; rdfs:label ?itemLabel .\nFILTER (LANG(?itemLabel) = \"fr\" && STRSTARTS(?itemLabel, \"A\")) .\nOPTIONAL { ?item wdt:P18 ?image } .\n}\nORDER BY ?itemLabel",
        "complexity_description": "Multiple filters and optional clause",
        "complexity": "medium"
    },
    {
        "id": "1725",
        "valid_gpt_response": true,
        "query": "select ?item ?itemLabel ?place ?placeLabel ?coords ?born where\n{\n?item wdt:P39 wd:Q66688984 . optional { ?item wdt:P19 ?place . ?place wdt:P625 ?coords } . optional { ?item wdt:P569 ?born . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple optional patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "1726",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel (count(?example) as ?example_count) (count(?property) as ?property_count) WHERE\n{\n?property p:P1855 ?example . ?example ps:P1855 ?item .\n?item wdt:P31 wd:Q5 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} group by ?item ?itemLabel order by desc(?property_count)",
        "complexity_description": "Multiple COUNT aggregations, SERVICE clause, and GROUP BY",
        "complexity": "complex"
    },
    {
        "id": "1727",
        "valid_gpt_response": true,
        "query": "select ?site ?siteLabel ?siteDescription ?location ?photo ?placeNameLabel ?heritageLabel (?heritage as ?layer)\nWHERE {\n?site wdt:P31 ?place. ?place wdt:P279* wd:Q744099 .\n?site wdt:P625 ?location.\noptional {\n?site wdt:P31 ?placeName.\n?site wdt:P18 ?photo.\n}\n?site wdt:P1435 ?heritage.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,lt,es,[AUTO_LANGUAGE]\". }\n}\n#defaultView:Map",
        "complexity_description": "Multiple joins and optional patterns with a SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "1728",
        "valid_gpt_response": true,
        "query": "SELECT ?youtuber ?youtuberLabel ?image WHERE {\n?youtuber wdt:P106 wd:Q17125263.\nMINUS { ?youtuber wdt:P2397 ?channel. }\nOPTIONAL { ?youtuber wdt:P18 ?image. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Uses MINUS and OPTIONAL clauses",
        "complexity": "medium"
    },
    {
        "id": "1729",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?death ?itemLabel {\n?item wdt:P31 wd:Q5 ; wdt:P106 wd:Q10349745 ; wdt:P509 wd:Q61037771 .\nOPTIONAL { ?item wdt:P570 ?death }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?death",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1730",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?positionLabel ?date (URI(CONCAT(\"https://discovery.nationalarchives.gov.uk/details/c/\",?ukna)) AS ?url) WHERE {\n?person wdt:P3029 ?ukna; # person in UK National Archives\nwdt:P39 ?position . ?position wdt:P361 wd:Q112014. # held position in Cabinet of the UK\n?person wdt:P570 ?date # death date\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple filters, joins and service call",
        "complexity": "medium"
    },
    {
        "id": "1731",
        "valid_gpt_response": true,
        "query": "SELECT ?property ?propertyLabel ?count WITH {\nSELECT ?property (COUNT(?statement) AS ?count) WHERE {\nhint:SubQuery hint:optimizer \"None\".\n?lexeme ontolex:sense ?sense.\n?sense ?p ?statement.\n?property wikibase:claim ?p.\n}\nGROUP BY ?property\n} AS %results WHERE {\nINCLUDE %results.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "1732",
        "valid_gpt_response": true,
        "query": "select ?actor ?actorLabel ?pobLabel ?geo ?image {\nwd:Q83495 wdt:P161 ?actor .\n# ?movie wdt:P179 wd:Q1210827 .\noptional { ?actor wdt:P19 ?pob . }\noptional { ?pob wdt:P625 ?geo . }\noptional { ?actor wdt:P18 ?image . }\nservice wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "1733",
        "valid_gpt_response": true,
        "query": "SELECT ?item (?ibpCode AS ?itemLabel) ?image ?genus ?genusLabel WHERE {\n?item wdt:P31 wd:Q16521.\n?item wdt:P105 wd:Q7432.\n?item wdt:P171* wd:Q18789.\n?item wdt:P171 ?genus.\n?item wdt:P7182 ?ibpCode.\nOPTIONAL {?item wdt:P18 ?image.}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1734",
        "valid_gpt_response": true,
        "query": "SELECT\n(REPLACE(STR(?item),\".*Q\",\"Q\") AS ?qid)\n(REPLACE(STR(?tgt),\".*Q\",\"Q\") AS ?tgtQid)\n?tgtLabel\n(URI(CONCAT(\"https://www.wikidata.org/w/index.php?title=\",?qid,\"&action=history\")) as ?history)\nWHERE\n{\n?tgt wdt:P31 wd:Q5 .\n?tgt wdt:P106 wd:Q2374149 .\n?item owl:sameAs ?tgt .\nFILTER ( contains(STR(?tgt), \"Q1043\"))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,en\" }\n}\nORDER BY ?qid",
        "complexity_description": "Multiple filters, service call and string operations",
        "complexity": "medium"
    },
    {
        "id": "1735",
        "valid_gpt_response": true,
        "query": "SELECT ?personLabel ?item ?itemLabel ?img ?Alvin WHERE {\n?person wdt:P6821 ?id.\nBIND(URI(CONCAT(\"http://www.alvin-portal.org/alvin/view.jsf?pid=\", ?id)) AS ?Alvin)\n?item p:P225 ?ScienceNameStat.\n?ScienceNameStat pq:P405 ?person.\n?item wdt:P18 ?img.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple joins, BIND function and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "1736",
        "valid_gpt_response": true,
        "query": "SELECT ?personLabel ?item ?itemLabel ?img ?Alvin WHERE {\n?person wdt:P6821 ?id.\nBIND(URI(CONCAT(\"http://www.alvin-portal.org/alvin/view.jsf?pid=\", ?id)) AS ?Alvin)\n?item p:P225 ?ScienceNameStat.\n?ScienceNameStat pq:P405 ?person.\nminus {?item wdt:P18 ?img}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple joins, minus clause and service call",
        "complexity": "complex"
    },
    {
        "id": "1737",
        "valid_gpt_response": true,
        "query": "SELECT ?twin1 ?birth1 ?twin2 ?birth2 ?twin1Label ?birth1Label ?twin2Label ?birth2Label WHERE {\n?twin1 wdt:P31 wd:Q5;\nwdt:P19 ?birth1;\np:P3373 ?siblingStatement.\n?siblingStatement ps:P3373 ?twin2.\n{ ?siblingStatement pq:P1039/wdt:P279* wd:Q14756018. } UNION\n{ ?twin1 p:P569/psv:P569 ?dateOfBirth. ?twin2 p:P569/psv:P569 ?dateOfBirth. ?dateOfBirth wikibase:timePrecision \"11\"^^xsd:integer. }\n?twin2 wdt:P31 wd:Q5;\nwdt:P19 ?birth2.\nFILTER(?birth1 != ?birth2)\nFILTER(STR(?twin1) < STR(?twin2))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple filters, unions and subqueries",
        "complexity": "complex"
    },
    {
        "id": "1738",
        "valid_gpt_response": true,
        "query": "select ?item ?itemLabel ?coords ?elseLabel (?else as ?layer)\nwhere {\n?item wdt:P131 ?else . ?else wdt:P131+ wd:Q22 .\n?item wdt:P625 ?coords .\nfilter not exists { ?item wdt:P131 ?else2 . filter(str(?else2) != str(?else)) }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } }\n#defaultView:Map",
        "complexity_description": "Multiple triple patterns, property paths and filter with exists clause",
        "complexity": "complex"
    },
    {
        "id": "1739",
        "valid_gpt_response": true,
        "query": "SELECT ?lib ?libLabel ?coord ?kindOfLibLabel (?kindOfLibLabel AS ?layer) WHERE {\nhint:Query hint:optimizer \"None\".\n?lib (wdt:P131+) wd:Q40;\n(wdt:P31/(wdt:P279*)) wd:Q7075;\nwdt:P31 ?kindOfLib;\nwdt:P625 ?coord.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE/wd],en\". }\n}",
        "complexity_description": "Multiple triple patterns, service call and property paths",
        "complexity": "medium"
    },
    {
        "id": "1740",
        "valid_gpt_response": true,
        "query": "SELECT ?libSystem ?libSystemLabel ?centralLibrary ?centralLibraryLabel ?clCoord ?branchLibrary ?branchLibraryLabel ?blCoord ?line ?layer WHERE {\n?libSystem wdt:P31/wdt:P279* wd:Q28324850 ; wdt:P131 ?loc ;\nwdt:P527 ?centralLibrary ;\nwdt:P527 ?branchLibrary .\n?centralLibrary wdt:P31 wd:Q12317349 ;\nwdt:P625 ?clCoord .\n?branchLibrary wdt:P31 wd:Q11396180 ;\nwdt:P625 ?blCoord .\n?centralLibrary p:P625 [ ps:P625 []; psv:P625 [ wikibase:geoLongitude ?clLon; wikibase:geoLatitude ?clLat; ] ].\n?branchLibrary p:P625 [ ps:P625 []; psv:P625 [ wikibase:geoLongitude ?blLon; wikibase:geoLatitude ?blLat; ] ].\nBIND(CONCAT('LINESTRING (', STR(?clLon), ' ', STR(?clLat), ',', STR(?blLon), ' ', STR(?blLat), ')') AS ?str1) .\nBIND(STRDT(?str1, geo:wktLiteral) AS ?line) .\nBIND(?libSystem as ?layer)\n{ SELECT * { ?loc wdt:P131* wd:Q99 . } }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, subqueries, and complex data manipulation",
        "complexity": "complex"
    },
    {
        "id": "1741",
        "valid_gpt_response": true,
        "query": "SELECT ?waterfall ?waterfallLabel ?coord WHERE {\n?waterfall wdt:P31 wd:Q34038;\nwdt:P625 ?coord.\nMINUS { ?waterfall wdt:P4614 ?range. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple triple patterns, MINUS clause and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "1742",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?pic WHERE {\n?item wdt:P180 wd:Q7307;\nwdt:P18 ?pic.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "1743",
        "valid_gpt_response": true,
        "query": "PREFIX dct: <http://purl.org/dc/terms/> # workaround for T233148\nSELECT ?lexeme ?lemma (STRLEN(?lemma) AS ?length) WHERE {\nBIND(wd:Q1860 AS ?language)\n?lexeme dct:language ?language;\nwikibase:lemma ?lemma.\nFILTER(STRLEN(?lemma) >= 10) # cheap filter to avoid running REGEX() on too many lemmata\nFILTER(!REGEX(LCASE(?lemma), \"(.).*\\\\1\"))\nFILTER(!CONTAINS(?lemma, \" \"))\n}\nORDER BY DESC(?length)\nLIMIT 10",
        "complexity_description": "Multiple filters and regex usage",
        "complexity": "medium"
    },
    {
        "id": "1744",
        "valid_gpt_response": true,
        "query": "PREFIX dct: <http://purl.org/dc/terms/> # workaround for T233148\nSELECT ?lexeme ?lemma (STRLEN(?lemma) AS ?length) WHERE {\nBIND(wd:Q1860 AS ?language)\n?lexeme dct:language ?language;\nwikibase:lemma ?lemma.\nFILTER(STRLEN(?lemma) >= 5)\n# first version allows repeated letters, second one doesn't\n# FILTER(REGEX(?lemma, \"^A*B*C*D*E*F*G*H*I*J*K*L*M*N*O*P*Q*R*S*T*U*V*Q*X*Y*Z*$\", \"i\"))\nFILTER(REGEX(?lemma, \"^A?B?C?D?E?F?G?H?I?J?K?L?M?N?O?P?Q?R?S?T?U?V?Q?X?Y?Z?$\", \"i\"))\n}\nORDER BY DESC(?length)",
        "complexity_description": "Multiple filters, regex and bind",
        "complexity": "complex"
    },
    {
        "id": "1745",
        "valid_gpt_response": true,
        "query": "select distinct ?item ?itemLabel ?elseLabel ?coords (?elseLabel as ?layer)\nwhere\n{ ?item wdt:P131 ?else .\n?else wdt:P31 wd:Q5124673 .\n?item wdt:P625 ?coords .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n#defaultView:Map",
        "complexity_description": "Multiple triple patterns, service call and distinct",
        "complexity": "medium"
    },
    {
        "id": "1746",
        "valid_gpt_response": true,
        "query": "SELECT ?seq ?item ?itemLabel ?countyLabel ?councilLabel ?area ?pop ?vob_url WHERE {\n?item p:P528 ?seq_stmt .\n?seq_stmt ps:P528 ?seq .\n?seq_stmt pq:P972 wd:Q68810696 .\n?item p:P131 ?adm_stmt .\n?adm_stmt pq:P580 ?d\nFILTER(xsd:date(?d) = \"1996-04-01\"^^xsd:date) .\n?adm_stmt ps:P131 ?council .\n?item p:P131 ?adm_stmt2 .\n?adm_stmt2 pq:P582 ?d2\nFILTER(xsd:date(?d2) = \"1975-05-15\"^^xsd:date) .\n?adm_stmt2 ps:P131 ?county .\nOPTIONAL{?item wdt:P2046 ?area} .\nOPTIONAL{?item wdt:P1082 ?pop} .\nOPTIONAL{\n?item wdt:P3615 ?vob .\nwd:P3615 wdt:P1630 ?fmt .\nBIND(IRI(REPLACE(?fmt, '\\\\$1' , ?vob)) AS ?vob_url) .\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?seq",
        "complexity_description": "Multiple filters, optional blocks, and service call",
        "complexity": "complex"
    },
    {
        "id": "1747",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?countryLabel ?coords WHERE {\n?item (wdt:P31/(wdt:P279*)) wd:Q7075;\nwdt:P17 ?country.\n?country wdt:P30 wd:Q15.\nOPTIONAL{?item wdt:P625 ?coords.}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, optional block and service call",
        "complexity": "medium"
    },
    {
        "id": "1748",
        "valid_gpt_response": true,
        "query": "SELECT ?company ?companyLabel ?founded ?dissolved (xsd:integer((?dissolved - ?founded)/365.2425) AS ?years) WHERE {\n?company wdt:P1454/wdt:P279* wd:Q6881511; # the instance/subclass tree for companies seems to be a bit messy, so go via \"legal form\" instead\nwdt:P571 ?founded;\nwdt:P576 ?dissolved.\nFILTER(?founded < (NOW() - \"P200Y\"^^xsd:duration))\nFILTER(?dissolved > (?founded + \"P200Y\"^^xsd:duration))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,de\". } # final fallback to German because as of 2019-09-26, many results were German(-language) companies\n}\nORDER BY DESC(?dissolved)\nLIMIT 25",
        "complexity_description": "Multiple filters and subqueries with arithmetic operations",
        "complexity": "complex"
    },
    {
        "id": "1749",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?i ?iLabel ?layer ?c {\n?item wdt:P31/wdt:P279* wd:Q4260475 ; wdt:P31 ?thing ; wdt:P17 wd:Q668 ; wdt:P131/wdt:P131* wd:Q1546240 ; wdt:P625 ?c.\n?thing rdfs:label ?tl. FILTER(LANG(?tl)=\"en\")\nBIND(?tl as ?layer)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple triple patterns, property paths, and service call",
        "complexity": "complex"
    },
    {
        "id": "1750",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?cd ?l ?i ?iLabel ?ct ?ctLabel ?rgb ?x WITH{SELECT ?i ?cd ?lat1 ?lon1 ?x(sample(?op)as?op)WHERE{{?i wdt:P31 wd:Q1248784}UNION{?i wdt:P31 wd:Q644371}?i wdt:P625 ?cd;wdt:P17 wd:Q668;p:P625/psv:P625 ?y.?y wikibase:geoLatitude ?lat1;wikibase:geoLongitude ?lon1.OPTIONAL{?i wdt:P137 ?op}}GROUP BY ?i ?cd ?lat1 ?lon1 ?x}AS%s\nWITH{SELECT ?l ?o ?t WHERE{INCLUDE %s.?i wdt:P17 wd:Q668;p:P521 ?nss.?nss ps:P521 ?ns.?ns wdt:P17 wd:Q668;p:P625/psv:P625 ?z.?z wikibase:geoLatitude ?lat2;wikibase:geoLongitude ?lon2.OPTIONAL{?nss pq:P137 ?o}FILTER(STR(?i)< STR(?ns)).BIND(CONCAT('LINESTRING(',STR(?lon1),' ',STR(?lat1),',',STR(?lon2),' ',STR(?lat2),')')AS?str).BIND(STRDT(?str,geo:wktLiteral)AS?l)}}AS%l\nWHERE{{INCLUDE%s}UNION{INCLUDE%l}.BIND(IF(BOUND(?l),\"f0f\",\"007f00\") as ?rgb)SERVICE wikibase:label{bd:serviceParam wikibase:language \"en\".}}#",
        "complexity_description": "Multiple subqueries, unions, and complex filtering",
        "complexity": "complex"
    },
    {
        "id": "1751",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?layerLabel ?coords WHERE {\nwd:Q25579 (p:P625/psv:P625/wikibase:geoLatitude) ?threshold.\n?item (wdt:P31/(wdt:P279*)) wd:Q1030034;\n(p:P625/psv:P625) _:b12.\n_:b12 wikibase:geoLatitude ?northernmostLat.\nOPTIONAL { ?item wdt:P17 ?layer. }\n?item wdt:P625 ?coords.\nFILTER(?northernmostLat > ?threshold)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],sv,ru,en\". }\n}",
        "complexity_description": "Multiple joins, optional clause, and filter",
        "complexity": "complex"
    },
    {
        "id": "1752",
        "valid_gpt_response": true,
        "query": "SELECT ?match ?seriesLabel ?time ?home_teamLabel ?home_goals ?away_teamLabel ?away_goals {\n# uncomment next line if you only want the match or matches specified within the { }\n# VALUES ?match { wd:Q29877824 }\n?match wdt:P179 ?series .\n?series wdt:P3450 wd:Q82595 .\n?match wdt:P585 ?time .\n?match p:P1923 ?p1923stm_home.\n?p1923stm_home ps:P1923 ?home_team .\n?p1923stm_home pq:P2868 wd:Q24633211 .\n?p1923stm_home pq:P1351 ?home_goals .\n?match p:P1923 ?p1923stm_away.\n?p1923stm_away ps:P1923 ?away_team .\n?p1923stm_away pq:P2868 wd:Q24633216 .\n?p1923stm_away pq:P1351 ?away_goals .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?time ?home_teamLabel",
        "complexity_description": "Multiple joins, multiple services, and ordering",
        "complexity": "complex"
    },
    {
        "id": "1753",
        "valid_gpt_response": true,
        "query": "SELECT ?pLabel ?sideLabel ?shape ?rgb WHERE {\nOPTIONAL { ?p wdt:P1622 ?side } # driving side\nOPTIONAL { ?p wdt:P3896 ?shape } # geoshape\nBIND ( COALESCE(\nIF(?side = wd:Q14565199, \"0066B4\", 1/0), # blue\nIF(?side = wd:Q13196750, \"F5831A\", 1/0), # orange\n\"000000\"\n) AS ?rgb )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple OPTIONAL patterns, COALESCE function and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "1754",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?opeLabel ?image ?villeLabel ?coord\nWHERE\n{\n?item wdt:P31 wd:Q3917681.\n?item wdt:P17 wd:Q31.\n?item wdt:P137 ?ope.\noptional {?item wdt:P18 ?image }\noptional {?item wdt:P131 ?ville}\noptional {?item wdt:P625 ?coord}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".}\n}\nOrder by ?opeLabel",
        "complexity_description": "Multiple filters, optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "1755",
        "valid_gpt_response": true,
        "query": "SELECT ?level ?item ?relation ?linkTo ?itemLabel ?pic\n{\nhint:Query hint:optimizer \"None\"\n{ BIND(0 AS ?level) BIND(wd:Q560197 AS ?item) } UNION\n{\nVALUES ?relation { wdt:P22 wdt:P25 }\n{ BIND(1 AS ?level) BIND(wd:Q560197 AS ?linkTo) }\nUNION\n{ BIND(2 AS ?level) ?linkTo wdt:P22|wdt:P25 wd:Q560197 }\nUNION\n{ BIND(3 AS ?level) ?linkTo (wdt:P22|wdt:P25)/(wdt:P22|wdt:P25) wd:Q560197 }\nUNION\n{ BIND(4 AS ?level) ?linkTo (wdt:P22|wdt:P25)/(wdt:P22|wdt:P25)/(wdt:P22|wdt:P25) wd:Q560197 }\n?item ?relation ?linkTo\n}\nOPTIONAL { ?item wdt:P18 ?pic }\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\"}\n}\nORDER BY ?level",
        "complexity_description": "Multiple UNIONs, property paths, and OPTIONAL clause",
        "complexity": "complex"
    },
    {
        "id": "1756",
        "valid_gpt_response": true,
        "query": "SELECT (REPLACE(REPLACE(?nobelPrizeLabel_, \"^Nobel Prize in \", \"\"), \"^Nobel (.*) Prize$\", \"$1\") AS ?nobelPrizeLabel) (COUNT(DISTINCT ?winner) AS ?winners) (COALESCE(?genderLabel_, \"N/A\"@en) AS ?genderLabel) WHERE {\n?nobelPrize wdt:P361 wd:Q7191.\n?winner p:P166 [\nps:P166 ?nobelPrize;\npq:P585 ?date\n].\nOPTIONAL { ?winner wdt:P21 ?gender. } # optional because organizations can win the Peace Prize\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?nobelPrize rdfs:label ?nobelPrizeLabel_.\n?gender rdfs:label ?genderLabel_.\n}\n}\nGROUP BY ?nobelPrizeLabel_ ?genderLabel_",
        "complexity_description": "Multiple functions, optional clause, and service call",
        "complexity": "complex"
    },
    {
        "id": "1757",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?communeLabel ?coords ?image WHERE {\nwd:Q2789507 wdt:P527 ?commune .\n?item wdt:P31/wdt:P279* wd:Q751876 ;\nwdt:P131 ?commune .\nOPTIONAL { ?item wdt:P625 ?coords }\nOPTIONAL { ?item wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?communeLabel ?itemLabel",
        "complexity_description": "Multiple optional patterns, property paths and service call",
        "complexity": "medium"
    },
    {
        "id": "1758",
        "valid_gpt_response": true,
        "query": "select ?flight ?flightLabel ?image ?start ?end where {\n?flight p:P39 ?pstmt.\n{?pstmt ps:P39 wd:Q55018634}\nUNION\n{?pstmt ps:P39 wd:Q221922}\n?pstmt pq:P580 ?start . OPTIONAL {?pstmt pq:P582 ?end_tmp}.\nBIND(IF(BOUND(?end_tmp),?end_tmp,NOW()) as ?end)\nOPTIONAL { ?flight wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple UNION patterns, OPTIONAL clauses, and BIND function",
        "complexity": "complex"
    },
    {
        "id": "1759",
        "valid_gpt_response": true,
        "query": "SELECT ?lang (count(?item) as ?nr)\nWHERE\n{\n?item wdt:P1260 ?KsamURI.\n?item schema:description ?itemDescription\nBIND (lang(?itemDescription) AS ?lang)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"sv\"}\n} group by ?lang",
        "complexity_description": "Multiple patterns, aggregation and service call",
        "complexity": "medium"
    },
    {
        "id": "1760",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?team ?teamLabel ?image WHERE {\n?item wdt:P54 ?team. ?team wdt:P118 wd:Q16056350.\nOPTIONAL { ?item wdt:P18 ?image. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1761",
        "valid_gpt_response": true,
        "query": "SELECT ?state ?stateLabel ?item ?itemLabel{\n?item p:P39 ?pstmt.\n?pstmt ps:P39 wd:Q42509248 ; pq:P768 ?dst. ?dst wdt:P131+ ?state. ?state wdt:P31/wdt:P279 wd:Q131541.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, property paths and service call",
        "complexity": "complex"
    },
    {
        "id": "1762",
        "valid_gpt_response": true,
        "query": "SELECT ?bus_geltokia ?bus_geltokiaLabel ?koordenatuak WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"eu,es,en\". }\n?bus_geltokia wdt:P31 wd:Q953806.\n?bus_geltokia wdt:P131 wd:Q93366.\n?bus_geltokia wdt:P625 ?koordenatuak.\n}",
        "complexity_description": "Three triple patterns with one service call",
        "complexity": "medium"
    },
    {
        "id": "1763",
        "valid_gpt_response": true,
        "query": "select distinct ?property ?propertyLabel (count(distinct ?item) as ?count)\nwhere { ?item ?property wd:Q24238356 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} group by ?propertyLabel ?property order by desc(?count)",
        "complexity_description": "Multiple clauses, aggregation and ordering",
        "complexity": "complex"
    },
    {
        "id": "1764",
        "valid_gpt_response": true,
        "query": "SELECT ?city ?cityLabel ?pop ?coord ?dist ?img\nWHERE {\n?city wdt:P31 wd:Q515.\n?city wdt:P1082 ?pop.\n?city wdt:P625 ?coord.\noptional {?city wdt:P18 ?img}\nfilter (?pop > 200000).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"es,en\". }\nBIND(geof:distance(\"Point(0 90)\"^^geo:wktLiteral, ?coord) as ?dist)\n}\norder by ?dist\nLIMIT 100",
        "complexity_description": "Multiple triple patterns, optional clause, filter, service and bind functions",
        "complexity": "complex"
    },
    {
        "id": "1765",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?coactorLabel (COUNT(?film) as ?films) WHERE {\n?film wdt:P31 wd:Q11424 ; wdt:P161 wd:Q9535 ; wdt:P161 ?coactor.\nFILTER(?coactor != wd:Q9535)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?coactorLabel",
        "complexity_description": "Multiple filters, service call and group by",
        "complexity": "medium"
    },
    {
        "id": "1766",
        "valid_gpt_response": true,
        "query": "select ?WikiTree ?person ?personLabel ?statedinLabel ?refURL ?named ?cite ?page\n{\n?person wdt:P2949 ?WikiTreeID. #personer kopplade till SKBL\n# ?person wdt:P27 wd:Q34.\nBIND (URI(CONCAT(\"https://www.wikitree.com/wiki/\",?WikiTreeID)) AS ?WikiTree)\n?person ?prop ?statement. #all props\n{?statement prov:wasDerivedFrom ?ref}\nOPTIONAL {?ref pr:P854 ?refURL}\n{?ref pr:P248 ?statedin}\nOPTIONAL {?ref pr:P1810 ?named}\nOPTIONAL {?ref pr:P1476 ?named}\nOPTIONAL {?ref pr:P1683 ?cite}\nOPTIONAL {?ref pr:P304 ?page}\nminus { ?ref pr:P248 wd:Q379406}\n{\n{ ?ref pr:P248 wd:Q10478639} #Deathbook\nUNION\n{ ?ref pr:P248 wd:Q10501038} #Birthbook\nUNION\n{ ?ref pr:P248 wd:Q10527384} #Householdrecords\n}\nFILTER (CONTAINS(str(?refURL),'riksarkivet')) .\n?property wikibase:claim ?prop .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,sv\"}\n}\nGroup by ?person ?personLabel ?statedin ?statedinLabel ?refURL ?named ?SPA ?cite ?page ?WikiTree\nOrder by ?personLabel ?statedinLabel",
        "complexity_description": "Multiple optional patterns, unions, and filters with multiple conditions",
        "complexity": "complex"
    },
    {
        "id": "1767",
        "valid_gpt_response": true,
        "query": "SELECT ?d ?dLabel ?shape ?ratio ?rgb WHERE {\n?d wdt:P31 wd:Q1149652; p:P6499 ?litpopstmt ; p:P6498 ?illitpopstmt ; wdt:P3896 ?shape.\n?litpopstmt ps:P6499 ?litpop ; pq:P585 \"+2011-01-01T00:00:00Z\"^^xsd:dateTime.\n?illitpopstmt ps:P6498 ?illitpop ; pq:P585 \"+2011-01-01T00:00:00Z\"^^xsd:dateTime.\nBIND(xsd:integer(?illitpop)/xsd:integer(?litpop) AS ?ratio)\nBIND(IF(?ratio < 0.2, \"00008b\", IF(?ratio < 0.4, \"006400\", IF(?ratio < 0.6, \"008000\", IF(?ratio < 0.8, \"32cd32\", IF(?ratio < 1, \"7fff00\", IF(?ratio < 1.2, \"ffa500\", IF(?ratio < 1.4, \"ff6347\", \"ff0000\"))))))) AS ?rgb)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple joins, subqueries, and conditional bindings",
        "complexity": "complex"
    },
    {
        "id": "1768",
        "valid_gpt_response": true,
        "query": "SELECT ?tv_episode ?tv_episodeLabel ?ja_title ?romaji ?date ?placeLabel ?seasonLabel ?series WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?tv_episode wdt:P31 wd:Q21191270;\nwdt:P179 wd:Q5363072.\nOPTIONAL {\n?tv_episode p:P1476 ?title.\n?title ps:P1476 ?ja_title;\npq:P2125 ?romaji.\n}\nOPTIONAL {\n?tv_episode p:P577 ?publication_date_node.\n?publication_date_node ps:P577 ?date;\npq:P291 ?place.\n}\nOPTIONAL {\n?tv_episode p:P179 ?qual.\n?qual pq:P1545 ?series.\n}\nOPTIONAL { ?tv_episode wdt:P4908 ?season. }\n}\nORDER BY ?date",
        "complexity_description": "Multiple optional patterns, multiple services, and ordering",
        "complexity": "complex"
    },
    {
        "id": "1769",
        "valid_gpt_response": true,
        "query": "SELECT ?parentLabel ?parentStateLabel ?childLabel ?childStateLabel ?childDOB WHERE {\n?parent wdt:P40 ?child.\n?child wdt:P569 ?childDOB.\n?parent wdt:P39 ?parentOffice.\n?parentOffice wdt:P279 wd:Q889821.\n?parentOffice wdt:P361 ?parentGovt.\n?parentGovt wdt:P1001 ?parentState.\n?parentState wdt:P31 wd:Q35657.\n?child wdt:P39 ?childOffice.\n?childOffice wdt:P279 wd:Q889821.\n?childOffice wdt:P361 ?childGovt.\n?childGovt wdt:P1001 ?childState.\n?childState wdt:P31 wd:Q35657.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n} ORDER BY ?childDOB",
        "complexity_description": "Multiple joins, filters and service calls",
        "complexity": "complex"
    },
    {
        "id": "1770",
        "valid_gpt_response": true,
        "query": "SELECT ?name ?nameLabel ?dod ?image WHERE {\n?name wdt:P27 wd:Q31 .\n?name wdt:P570 ?dod .\nOPTIONAL {?name wdt:P18 ?image} .\nFILTER (YEAR(?dod) = 1949) .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and filter",
        "complexity": "medium"
    },
    {
        "id": "1771",
        "valid_gpt_response": true,
        "query": "select distinct ?item (year(?release) AS ?released) ?name ?itemDescription\n(GROUP_CONCAT(distinct ?areaLabel;separator=\"; \") as ?setting) ?period\n(GROUP_CONCAT(distinct ?awardLabel;separator=\"; \") as ?awards)\nwhere {\n?item wdt:P144* wd:Q213019 .\noptional { ?item wdt:P840 ?area }\noptional { ?item wdt:P2408 ?date }\noptional { ?item wdt:P166 ?award }\noptional { ?item wdt:P577|wdt:P1191|wdt:P580 ?release }\nSERVICE wikibase:label\n{ bd:serviceParam wikibase:language \"en\".\n?item rdfs:label ?name .\n?area rdfs:label ?areaLabel .\n?award rdfs:label ?awardLabel .\n?date rdfs:label ?period . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} group by ?item ?name ?period ?itemDescription ?release\norder by ?released",
        "complexity_description": "Multiple optional patterns, grouping and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "1772",
        "valid_gpt_response": true,
        "query": "SELECT ?book ?bookLabel ?url ?person ?personLabel ?personDescription ?page ?quote WHERE {\n{\nBIND( wd:Q61765464 AS ?book)\n?person wdt:P119 wd:Q657118;\np:P119 ?statement.\n{ ?statement prov:wasDerivedFrom ?ref. }\n{ ?ref pr:P248 wd:Q61765464. }\nOPTIONAL { ?book wdt:P953 ?url. }\nOPTIONAL { ?ref pr:P304 ?page. }\nOPTIONAL { ?ref pr:P1683 ?quote. }\nFILTER(STRSTARTS(STR(?person), \"http://www.wikidata.org/entity/Q\"))\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,sv\". }\n}",
        "complexity_description": "Multiple optional patterns, filters and service calls",
        "complexity": "complex"
    },
    {
        "id": "1773",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?cds ?line ?item ?itemLabel ?layer\nWITH {\nSELECT ?item ?cds ?lat1 ?lon1 ?layer WHERE {\n?item wdt:P17 wd:Q668; wdt:P625 ?cds ; wdt:P190 [].\n?item p:P625/psv:P625/wikibase:geoLatitude ?lat1 .\n?item p:P625/psv:P625/wikibase:geoLongitude ?lon1 .\n?item rdfs:label ?nl. FILTER(LANG(?nl)=\"en\")\nBIND(?nl as ?layer)\n}\n} AS %stations\nWITH {\nSELECT ?line ?layer WHERE {\nINCLUDE %stations .\n?item wdt:P190 ?ns.\n?item rdfs:label ?nl. FILTER(LANG(?nl)=\"en\")\n?ns p:P625/psv:P625/wikibase:geoLatitude ?lat2 .\n?ns p:P625/psv:P625/wikibase:geoLongitude ?lon2 .\nBIND(CONCAT('LINESTRING(', STR(?lon1), ' ', STR(?lat1), ',', STR(?lon2), ' ', STR(?lat2), ')') AS ?str) .\nBIND(STRDT(?str, geo:wktLiteral) AS ?line)\nBIND(?nl as ?layer)\n}\n} AS %lines\nWHERE {\n{ INCLUDE %stations } UNION { INCLUDE %lines } .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} #",
        "complexity_description": "Multiple subqueries, unions, and complex filter conditions",
        "complexity": "complex"
    },
    {
        "id": "1774",
        "valid_gpt_response": true,
        "query": "SELECT ?language ?languageLabel ?coord WHERE {\n?language wdt:P31 wd:Q34770 ; wdt:P625 ?coord .\nMINUS { ?l a ontolex:LexicalEntry ; dct:language ?language }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, MINUS clause and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "1775",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\n?item wdt:P31 wd:Q3305213 .\n?item wdt:P136 wd:Q134307 .\n?item wdt:P180 wd:Q146 .\n?item wdt:P18 ?img .\n}\nlimit 100",
        "complexity_description": "Simple query with multiple filters",
        "complexity": "simple"
    },
    {
        "id": "1776",
        "valid_gpt_response": true,
        "query": "SELECT ?firstLetter (COUNT(?form) AS ?count ) WHERE {\n?lexeme a ontolex:LexicalEntry ; dct:language ?language ; ontolex:lexicalForm ?form .\n?form ontolex:representation ?word .\n?language wdt:P218 'en' .\nBIND ( SUBSTR(UCASE(STR(?word)), 1, 1) AS ?firstLetter )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?firstLetter\nORDER BY DESC(?count)",
        "complexity_description": "Multiple patterns, BIND, SERVICE, and GROUP BY/ORDER BY clauses",
        "complexity": "complex"
    },
    {
        "id": "1777",
        "valid_gpt_response": true,
        "query": "SELECT ?prize ?prizeLabel ?winner ?winnerLabel {\n?winner p:P166 ?pstmt. ?pstmt ps:P166 ?prize. ?prize wdt:P31 wd:Q1350697.\n?pstmt pq:P585 ?time. BIND(YEAR(?time) as ?year)\nFILTER(?year >= 1990)\nFILTER(?year < 2000)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple filters, service call and property paths",
        "complexity": "medium"
    },
    {
        "id": "1778",
        "valid_gpt_response": true,
        "query": "SELECT ?disputed_area ?disputed_areaLabel ?article ?alternate_names ?part_ofLabel ?countryLabel ?located_in_the_administrative_territorial_entityLabel ?territory_claimed_byLabel ?image ?locator_map_image ?website ?coordinate_location ?geoshape WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?disputed_area wdt:P31 wd:Q15239622.\nOPTIONAL {\n?article schema:about ?disputed_area .\n?article schema:isPartOf <https://en.wikipedia.org/>.\n}\nOPTIONAL { ?disputed_area wdt:P361 ?part_of. }\nOPTIONAL { ?disputed_area wdt:P4970 ?alternate_names. }\nOPTIONAL { ?disputed_area wdt:P361 ?part_of. }\nOPTIONAL { ?disputed_area wdt:P17 ?country. }\nOPTIONAL { ?disputed_area wdt:P131 ?located_in_the_administrative_territorial_entity. }\nOPTIONAL { ?disputed_area wdt:P1336 ?territory_claimed_by. }\nOPTIONAL { ?disputed_area wdt:P18 ?image. }\nOPTIONAL { ?disputed_area wdt:P242 ?locator_map_image. }\nOPTIONAL { ?disputed_area wdt:P856 ?website. }\nOPTIONAL { ?disputed_area wdt:P625 ?coordinate_location. }\nOPTIONAL { ?disputed_area wdt:P3896 ?geoshape. }\n}",
        "complexity_description": "Multiple optional patterns with many variables",
        "complexity": "complex"
    },
    {
        "id": "1779",
        "valid_gpt_response": true,
        "query": "SELECT ?i ?iLabel ?j ?jLabel {\n?i wdt:P31 ?level. ?level wdt:P279 wd:Q877127; wdt:P279 wd:Q10864048.\n?j wdt:P31 ?level. ?level wdt:P279 wd:Q877127; wdt:P279 wd:Q10864048.\n?i wdt:P47 ?j.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"my,en\". }\n}",
        "complexity_description": "Multiple joins, filters and service call",
        "complexity": "complex"
    },
    {
        "id": "1780",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?l ?lemma ?word WHERE {\n?l a ontolex:LexicalEntry ; dct:language wd:Q188 ; wikibase:lemma ?lemma ; ontolex:lexicalForm ?form .\n?form ontolex:representation ?word ; wikibase:grammaticalFeature wd:Q146786 .\nFILTER regex (?word, \"[^e]n$\").\n}",
        "complexity_description": "Multiple triple patterns with filter",
        "complexity": "medium"
    },
    {
        "id": "1781",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?official_website WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?item wdt:P1343 wd:Q76510930.\nOPTIONAL { ?item wdt:P856 ?official_website. }\n}\nORDER BY ASC(?itemLabel)",
        "complexity_description": "Simple query with optional pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "1782",
        "valid_gpt_response": true,
        "query": "SELECT ?lang ?langLabel (COUNT(?lexeme) as ?lexemes) {\n?lexeme dct:language ?lang.\nwd:Q668 p:P2936/ps:P2936 ?lang.\nFILTER(?lang != wd:Q1860)\nFILTER(?lang != wd:Q150)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?lang ?langLabel",
        "complexity_description": "Multiple filters, service call and group by",
        "complexity": "medium"
    },
    {
        "id": "1783",
        "valid_gpt_response": true,
        "query": "SELECT ?collecting ?collectingLabel WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?collecting wdt:P195 wd:Q2087788.\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "1784",
        "valid_gpt_response": true,
        "query": "SELECT ?director (MIN(?date) AS ?first) (MAX(?date) AS ?last) (MAX(?date)-MIN(?date) AS ?span) WHERE {\n?movie wdt:P57 ?director ; wdt:P577 ?date .\n}\nGROUP BY ?director\nHAVING (?span > 20000 )\nORDER BY DESC(?span)",
        "complexity_description": "Aggregation, grouping, and filtering",
        "complexity": "complex"
    },
    {
        "id": "1785",
        "valid_gpt_response": true,
        "query": "SELECT ?id ?idLabel ?idDescription ?new {\n?id wikibase:directClaim ?pid .\n# ?id wikibase:propertyType wikibase:ExternalId .\nBIND(Replace(STR(?id),\"http://www.wikidata.org/entity/P\",\" \") as ?new)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,sv\". }\n}\nORDER BY DESC(xsd:integer(?new))",
        "complexity_description": "Uses BIND, SERVICE and ORDER BY with functions",
        "complexity": "medium"
    },
    {
        "id": "1786",
        "valid_gpt_response": true,
        "query": "SELECT ?id ?idLabel ?idDescription ?new{\n?id wikibase:directClaim ?pid .\n?id wikibase:propertyType wikibase:ExternalId .\nBIND(Replace(STR(?id),\"http://www.wikidata.org/entity/P\",\" \") as ?new)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,sv\". }\n}\nORDER BY DESC(xsd:integer(?new))",
        "complexity_description": "Multiple triple patterns, BIND and SERVICE keywords, ORDER BY with function",
        "complexity": "complex"
    },
    {
        "id": "1787",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?loc ?c ?cLabel ?pop WHERE {\n# comment out the next line to hide WD's idea of \"big\"\n?item wdt:P31 wd:Q1549591 . # big city 'a population of more than 100,000 inhabitants'\n?item wdt:P625 ?loc .\n?item wdt:P17 ?c .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n?item wdt:P1082 ?pop .\n# FILTER( ?pop > 100000) # actually biggish cities\n}\nORDER BY DESC (?pop)",
        "complexity_description": "Multiple triple patterns, service call and filter",
        "complexity": "medium"
    },
    {
        "id": "1788",
        "valid_gpt_response": true,
        "query": "SELECT ?seat ?seatLabel ?party2017Label ?party2019Label ?mp2017 ?mp2017Label ?mp2019 ?mp2019Label ?article WHERE {\n?mp2017 p:P39 ?mp2017stmt.\n?mp2017stmt pq:P4100 ?party2017;\npq:P2715 wd:Q25052149;\npq:P768 ?seat.\n?mp2019 p:P39 ?mp2019stmt.\n?mp2019stmt pq:P4100 ?party2019;\npq:P2715 wd:Q30173038;\npq:P768 ?seat.\nFILTER(?party2019 != ?party2017)\nMINUS {\nVALUES ?LabourVariant {wd:Q9630 wd:Q6467393}\nVALUES ?LabourVariant1 {wd:Q9630 wd:Q6467393}\n?mp2017stmt pq:P4100 ?LabourVariant . ?mp2019stmt pq:P4100 ?LabourVariant1\n}.\nOPTIONAL {\n?article schema:about ?mp2019 .\n?article schema:isPartOf <https://en.wikipedia.org/>.\nBIND('Y' AS ?art)\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY (?seatLabel)",
        "complexity_description": "Multiple joins, filters, and optional patterns with minus clause",
        "complexity": "complex"
    },
    {
        "id": "1789",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?SwedishNationalmuseum WHERE {\n?item wdt:P2538 ?NatMusID.\nminus {?item wdt:P7704 ?EropeanaentityID}\nBIND(URI(CONCAT(\"http://data.europeana.eu/\",?EropeanaentityID)) AS ?Eropeanaentity)\nBIND(URI(CONCAT(\"http://collection.nationalmuseum.se/eMuseumPlus?service=ExternalInterface&module=artist&objectId=\",?NatMusID)) AS ?SwedishNationalmuseum)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,de,nl,sv\". }\n} order by ?itemLabel",
        "complexity_description": "Multiple filters, bindings and services",
        "complexity": "complex"
    },
    {
        "id": "1790",
        "valid_gpt_response": true,
        "query": "select ?subj ?coord ?img ?pic ?article ?subjLabel ?subjDescription ?personLabel ?Europeana\n{\n?person wdt:P7704 ?EE.\n?person wdt:P31 wd:Q5. # personer\n?subj wdt:P138 ?person # P138 uppkallad efter\nOPTIONAL {?subj wdt:P625 ?coord}\nOPTIONAL {?subj wdt:P18 ?img}\nBIND (URI(CONCAT(\"http://data.europeana.eu/\",?EE)) AS ?Europeana)\nOPTIONAL{ ?person wdt:P18 ?pic .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\"}\n}",
        "complexity_description": "Multiple optional patterns, service call and bind function",
        "complexity": "medium"
    },
    {
        "id": "1791",
        "valid_gpt_response": true,
        "query": "SELECT ?location ?locationLabel (COUNT(?item) AS ?count) WHERE {\n?item wdt:P1071 ?location .\n?item wdt:P31 wd:Q3305213 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?location ?locationLabel\nORDER BY DESC (?count)\nLIMIT 250",
        "complexity_description": "Multiple triple patterns, service call, group by and order by",
        "complexity": "medium"
    },
    {
        "id": "1792",
        "valid_gpt_response": true,
        "query": "SELECT ?name ?nameLabel (GROUP_CONCAT(DISTINCT ?profLabel; SEPARATOR = \", \") AS ?professions) ?image ?linkcount WHERE {\n?name wdt:P27 wd:Q34;\nwdt:P570 ?dod;\nwikibase:sitelinks ?linkcount .\nOPTIONAL { ?name wdt:P18 ?image. }\nOPTIONAL { ?name wdt:P106 ?prof.}\nFILTER((YEAR(?dod)) = 1949 )\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"sv,en\".\n?name rdfs:label ?nameLabel.\n?prof rdfs:label ?profLabel.\n}\n}\nGROUP BY ?name ?nameLabel ?linkcount ?image\nORDER BY DESC (?linkcount)",
        "complexity_description": "Multiple optional patterns, filter, service, and group by/order by clauses",
        "complexity": "complex"
    },
    {
        "id": "1793",
        "valid_gpt_response": true,
        "query": "SELECT ?metro ?metroLabel ?locationLabel ?openingDate\nWHERE {\n?metro wdt:P31 wd:Q5503.\n?metro wdt:P131 ?location.\n?metro wdt:P1619 ?openingDate.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } }\norder by ?openingDate\nlimit 20",
        "complexity_description": "Simple query with 3 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "1794",
        "valid_gpt_response": true,
        "query": "SELECT ?parent ?parentLabel ?child ?childLabel WHERE {\n?parent wdt:P40 ?child;\nwdt:P39 wd:Q19546.\n?child wdt:P39 wd:Q19546.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,de\". }\n}",
        "complexity_description": "Multiple triple patterns with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "1795",
        "valid_gpt_response": true,
        "query": "SELECT ?state ?stateLabel (COUNT(?color) AS ?count) ?image WITH {\nSELECT DISTINCT ?state WHERE {\n?state wdt:P31/wdt:P279* wd:Q3624078;\np:P463 ?memberOfStatement.\n?memberOfStatement a wikibase:BestRank;\nps:P463 wd:Q1065.\nMINUS { ?memberOfStatement pq:P582 ?endTime. }\nMINUS { ?state wdt:P576|wdt:P582 ?end. }\n}\n} AS %states WHERE {\nINCLUDE %states.\n?state wdt:P163 ?flag.\n?flag wdt:P462 ?color.\nOPTIONAL { ?flag wdt:P18 ?image. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?state ?stateLabel ?image\nORDER BY DESC(?count)\nLIMIT 25",
        "complexity_description": "Multiple subqueries, joins, and filters",
        "complexity": "complex"
    },
    {
        "id": "1796",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?audio ?coor ?img ?filename\nWHERE\n{\n?item p:P443 [ ps:P443 ?audio ; pq:P407 wd:Q652 ] .\n?item wdt:P131 wd:Q16137 .\nOPTIONAL { ?item wdt:P625 ?coor }\nOPTIONAL { ?item wdt:P18 ?img }\nBIND(uri(concat(\"https://commons.wikimedia.org/wiki/File:\",strafter(wikibase:decodeUri(str(?audio)),\"FilePath/\"))) as ?filename)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"it,en\" }\n}",
        "complexity_description": "Multiple optional patterns, service call and bind function",
        "complexity": "complex"
    },
    {
        "id": "1797",
        "valid_gpt_response": true,
        "query": "#defaultView:Graph\nSELECT DISTINCT ?cited_country ?cited_countryLabel ?cited_flag ?citing_country ?citing_countryLabel ?citing_flag\nWITH {\n  SELECT DISTINCT ?cited_country ?citing_country (COUNT(?citing_country) AS ?count)\n                                  WHERE {\n    ?citing_work wdt:P50 ?citing_author . \n    ?citing_work wdt:P921 wd:Q84263196 . # Replace Q84263196 (COVID-19)with Wikidata ID of your concept of interest, e.g. Q202864 (Zika virus) \n    ?cited_work wdt:P921 wd:Q84263196: . # Replace Q84263196 (COVID-19)with Wikidata ID of your concept of interest, e.g. Q202864 (Zika virus) \n    ?citing_work wdt:P2860 ?cited_work . \n    ?cited_work wdt:P50 ?cited_author .  \n    FILTER (?citing_work != ?cited_work)\n    FILTER NOT EXISTS {\n      ?citing_work wdt:P50 ?author .\n      ?citing_work wdt:P2860 ?cited_work .\n      ?cited_work  wdt:P50 ?author .\n    }\n    ?citing_author (wdt:P108|wdt:P1416) ?citing_organization . \n    ?cited_author (wdt:P108|wdt:P1416) ?cited_organization . \n    ?cited_organization wdt:P17 ?cited_country.\n    ?citing_organization wdt:P17 ?citing_country.\n    FILTER (?citing_country != ?cited_country)\n  }\n  GROUP BY ?cited_country ?citing_country\n  ORDER BY DESC(?count)\n  LIMIT 30 # Adjust number of connections to display\n} AS %results\nWHERE {\n  INCLUDE %results\n  ?cited_country wdt:P163 / wdt:P18 ?cited_flag . \n  ?citing_country wdt:P163 / wdt:P18 ?citing_flag . \n SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n }",
        "complexity_description": "Multiple filters, subqueries, and joins with grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "1798",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?osm ?ceremonial ?ceremonialLabel ?ceremonialDescription ?ceremonialosm ?administrative ?administrativeLabel ?administrativeDescription ?administrativeosm WHERE {\n?item wdt:P31 wd:Q1138494.\nOPTIONAL { wd:P402 wdt:P1630 ?formatterurl . ?item wdt:P402 ?osmid . BIND(IRI(REPLACE(?osmid, '^(.+)$', ?formatterurl)) AS ?osm). }\nOPTIONAL {\n?item wdt:P1889 ?ceremonial.\n?ceremonial wdt:P31 wd:Q180673 .\nOPTIONAL { wd:P402 wdt:P1630 ?formatterurl .\n?ceremonial p:P402 ?ceremonialstatement.\n?ceremonialstatement ps:P402 ?ceremonialosmid .\n?ceremonialstatement pq:P518 wd:Q180673 .\nBIND(IRI(REPLACE(?ceremonialosmid, '^(.+)$', ?formatterurl)) AS ?ceremonialosm). }\nOPTIONAL { wd:P402 wdt:P1630 ?formatterurl . ?ceremonial wdt:P402 ?ceremonialosmid . BIND(IRI(REPLACE(?ceremonialosmid, '^(.+)$', ?formatterurl)) AS ?ceremonialosm). }\n}\nOPTIONAL {\n?item wdt:P1889 ?administrative.\n?administrative wdt:P31/wdt:P279* wd:Q643815 .\nOPTIONAL { wd:P402 wdt:P1630 ?formatterurl .\n?administrative p:P402 ?administrativestatement.\n?administrativestatement ps:P402 ?administrativeosmid .\n?administrativestatement pq:P518/wdt:P279* wd:Q643815 .\nBIND(IRI(REPLACE(?administrativeosmid, '^(.+)$', ?formatterurl)) AS ?administrativeosm). }\nOPTIONAL { wd:P402 wdt:P1630 ?formatterurl . ?administrative wdt:P402 ?administrativeosmid . BIND(IRI(REPLACE(?administrativeosmid, '^(.+)$', ?formatterurl)) AS ?administrativeosm). }\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n} ORDER BY (?itemLabel)\nLIMIT 49",
        "complexity_description": "Multiple optional patterns, complex filtering and binding",
        "complexity": "complex"
    },
    {
        "id": "1799",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\n?lac1 wdt:P138 ?person1 ; wdt:P131 ?loc ; wdt:P31 wd:Q23397 .\n?lac2 wdt:P138 ?person2 ; wdt:P131 ?loc ; wdt:P31 wd:Q23397 .\n?person1 wdt:P26 ?person2 .\nFILTER ( str(?lac1) > str(?lac2) )\n}\nLIMIT 10",
        "complexity_description": "Multiple joins, filter and limit",
        "complexity": "medium"
    },
    {
        "id": "1800",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?pic ?datedied ?placediedLabel ?placedied ?child ?childLabel ?ownedby ?ownedbyLabel ?depicts ?depictsLabel ?depictedby ?depictedbyLabel ?countryLabel ?ownerof ?ownerofLabel ?spouse ?employer ?employerLabel ?spouseLabel ?mother ?motherLabel ?father ?fatherLabel ?sibling ?siblingLabel ?investby ?investbyLabel ?sigperson ?sigpersonLabel ?party ?partyLabel ?partner ?partnerLabel WHERE {\n{ ?item wdt:P106 wd:Q1792450.} UNION { ?item wdt:P31 wd:Q1007870. } UNION { ?item wdt:P106 wd:Q173950.} UNION { ?item wdt:P921 wd:Q328376.} UNION { ?item wdt:P106 wd:Q10732476.} UNION { ?item wdt:P106 wd:Q446966.} UNION { ?item wdt:P106 wd:Q22132694.} UNION { ?item wdt:P106 wd:Q674426.}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n{?item wdt:P20 wd:Q7341.} UNION {?item wdt:P20 wd:Q160175.}\n?item wdt:P18 ?pic.\nOPTIONAL { ?item wdt:P127 ?ownedby. }\nOPTIONAL { ?item wdt:P570 ?datedied. }\nOPTIONAL { ?item wdt:P20 ?placedied. }\nOPTIONAL { ?item wdt:P180 ?depicts. }\nOPTIONAL { ?item wdt:P921 ?plunder. }\nOPTIONAL { ?item wdt:P1830 ?ownerof. }\nOPTIONAL { ?item wdt:P108 ?employer. }\nOPTIONAL { ?item wdt:P569 ?birth. }\nOPTIONAL { ?item wdt:P40 ?child. }\nOPTIONAL { ?item wdt:P214 ?VIAF_ID. }\nOPTIONAL { ?item wdt:P19 ?place_birth. }\nOPTIONAL { ?item wdt:P244 ?Library_of_Congress_authority_ID. }\nOPTIONAL { ?item wdt:P227 ?GND_ID. }\nOPTIONAL { ?item wdt:P245 ?ULAN_ID. }\nOPTIONAL { ?item wdt:P26 ?spouse. }\nOPTIONAL { ?item wdt:P27 ?country. }\nOPTIONAL { ?item wdt:P3342 ?sigperson. }\nOPTIONAL { ?item wdt:P102 ?party. }\nOPTIONAL { ?item wdt:P1327 ?partner. }\nOPTIONAL { ?item wdt:P1840 ?investby. }\nOPTIONAL { ?item wdt:P25 ?mother. }\nOPTIONAL { ?item wdt:P22 ?father. }\nOPTIONAL { ?item wdt:P3373 ?sibling. }\nOPTIONAL { ?item wdt:P1299 ?depictedby. }\nOPTIONAL { ?item wdt:P39 ?position. }\n# FILTER (YEAR(?birth) = 1860 && YEAR(?birth) <= 1990)\nFILTER (YEAR(?datedied) >= 1933 )\n}\nLIMIT 20000",
        "complexity_description": "Multiple UNION and OPTIONAL clauses with many variables",
        "complexity": "complex"
    },
    {
        "id": "1801",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?country ?countryLabel ?daysInUN (SUM(?daysInOffice) AS ?daysKnown) ((100* ?daysKnown / ?daysInUN) AS ?filledPercent) WHERE {\n# Current UN Member States\n?country wdt:P31 wd:Q3624078 ; p:P463 ?ms .\n?ms ps:P463 wd:Q1065 ; pq:P580 ?joined .\nFILTER NOT EXISTS { ?ms pq:P582 [] }\nBIND(FLOOR(NOW()-?joined) AS ?daysInUN)\n# what office(s) = head of government, and when?\n?country p:P1313 ?os .\n?os ps:P1313 ?office .\nOPTIONAL { ?os pq:P580 ?officeStart }\nOPTIONAL { ?os pq:P582 ?officeEnd }\nFILTER ( !BOUND(?officeEnd) || (?officeEnd > ?joined) )\n# Who has held office in that period?\nBIND(IF(BOUND(?officeStart), IF(?officeStart < ?joined, ?joined, ?officeStart), ?joined) AS ?effectiveStart)\nBIND(IF(BOUND(?officeEnd), ?officeEnd, NOW()) AS ?effectiveEnd)\n?person wdt:P31 wd:Q5 ; p:P39 ?ps .\n?ps ps:P39 ?office ; pq:P580 ?heldStart .\nOPTIONAL { ?ps pq:P582 ?heldEnd }\nFILTER ( !BOUND(?heldEnd) || (?heldEnd > ?effectiveStart) )\nBIND(IF(BOUND(?heldEnd), ?heldEnd, NOW()) AS ?heldPeriodEnd)\nBIND(IF(?heldStart < ?effectiveStart, ?effectiveStart, ?heldStart) AS ?heldPeriodStart)\nBIND(FLOOR(?heldPeriodEnd - ?heldPeriodStart) AS ?daysInOffice)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?country ?countryLabel ?daysInUN\nORDER BY DESC(?filledPercent) ?countryLabel",
        "complexity_description": "Multiple filters, bindings, and optional patterns with complex date calculations",
        "complexity": "complex"
    },
    {
        "id": "1802",
        "valid_gpt_response": true,
        "query": "SELECT ?x ?xLabel ?description ?x_coords ?rgb WITH {\n# extract the data\nSELECT ?data ?x ?x_coords WHERE {\n?x wdt:P31 wd:Q8502 .\n?x p:P2044/psn:P2044 [\nwikibase:quantityAmount ?data\n] .\n?x wdt:P17 wd:Q40 .\n?x wdt:P625 ?x_coords .\n}\n} AS %totals\n# determine the max and min values (used to calculate the spread\nWITH {\nSELECT (MAX(?data) AS ?max_data) (MIN(?data) AS ?min_data) WHERE {\nINCLUDE %totals\n}} AS %min_max\nWHERE {\nINCLUDE %totals\nINCLUDE %min_max\n?x rdfs:label ?xLabel. FILTER (LANG(?xLabel) = \"en\") .\nBIND (CONCAT(\"The height of \", ?xLabel, \" is about \", STR(ROUND(?data)), \" metres\" ) AS ?description)\nBIND ( ?max_data - ?min_data AS ?spread )\nBIND ( xsd:integer( 100 * (?data - ?min_data) / ?spread) AS ?percent ) # 0 -> 100\n# some example hues 0:red, 20:orange, 50:yellow, 90:green, 180:cyan, 220:blue, 280:indigo, 330:violet, 340:red\n# varying hue\n# BIND ( 255 * ?percent / 100 + 0 AS ?hue )\n# BIND (1 AS ?value) #\n# BIND (1 AS ?saturation) . # 0 -> 1\n# varying the hue's value\nBIND ( (1 - ?percent / 100 + 0) AS ?value ) # to black\nBIND ( 255 * ?percent / 100 + 0 AS ?hue )\nBIND (1 AS ?saturation) . # 0 -> 1\n# varying the hue's saturation\n# BIND ( (1 - ?percent / 100 + 0) AS ?saturation ) # to -> white\n# BIND (0 AS ?hue) # red\n# BIND (1 AS ?value) . # 0 -> 1\n# the following algorithm based on https://stackoverflow.com/questions/3018313/algorithm-to-convert-rgb-to-hsv-and-hsv-to-rgb-in-range-0-255-for-both\nBIND ( ?hue / 60 AS ?hh )\nBIND ( FLOOR (?hh) AS ?i ) .\nBIND ( ?hh - ?i AS ?ff) .\nBIND ( ?value * ( 1 - ?saturation ) AS ?p) .\nBIND ( ?value * ( 1 - ( ?saturation * ?ff)) AS ?q ) .\nBIND ( ?value * ( 1 - ( ?saturation * (1 - ?ff ))) AS ?t ) .\nBIND ( COALESCE(\nIF(?i = 0, ?value, 1/0),\nIF(?i = 1, ?q, 1/0),\nIF(?i = 2, ?p, 1/0),\nIF(?i = 3, ?p, 1/0),\nIF(?i = 4, ?t, 1/0),\nIF(?i = 5, ?value, 1/0),\n?value\n) AS ?r )\nBIND ( COALESCE(\nIF(?i = 0, ?t, 1/0),\nIF(?i = 1, ?value, 1/0),\nIF(?i = 2, ?value, 1/0),\nIF(?i = 3, ?q, 1/0),\nIF(?i = 4, ?p, 1/0),\nIF(?i = 5, ?p, 1/0),\n?p\n) AS ?g )\nBIND ( COALESCE(\nIF(?i = 0, ?p, 1/0),\nIF(?i = 1, ?p, 1/0),\nIF(?i = 2, ?t, 1/0),\nIF(?i = 3, ?value, 1/0),\nIF(?i = 4, ?value, 1/0),\nIF(?i = 5, ?q, 1/0),\n?q\n) AS ?b )\nBIND (FLOOR(255 * ?r) AS ?red)\nBIND (FLOOR(255 * ?g) AS ?green)\nBIND (FLOOR(255 * ?b) AS ?blue)\n# red\nBIND ( FLOOR (?red / 16) AS ?red_1 )\nBIND ( COALESCE(\nIF(?red_1 < 10, STR(?red_1), 1/0),\nIF(?red_1 = 10, \"a\", 1/0),\nIF(?red_1 = 11, \"b\", 1/0),\nIF(?red_1 = 12, \"c\", 1/0),\nIF(?red_1 = 13, \"d\", 1/0),\nIF(?red_1 = 14, \"e\", 1/0),\nIF(?red_1 = 15, \"f\", 1/0),\n\"ERROR\"\n) AS ?red_hex1 )\nBIND (FLOOR(?red - (16 * xsd:integer( ?red / 16 ))) AS ?red_2)\nBIND ( COALESCE(\nIF(?red_2 < 10, STR(?red_2), 1/0),\nIF(?red_2 = 10, \"a\", 1/0),\nIF(?red_2 = 11, \"b\", 1/0),\nIF(?red_2 = 12, \"c\", 1/0),\nIF(?red_2 = 13, \"d\", 1/0),\nIF(?red_2 = 14, \"e\", 1/0),\nIF(?red_2 = 15, \"f\", 1/0),\n\"ERROR\"\n) AS ?red_hex2 )\nBIND (CONCAT(STR(?red_hex1), STR(?red_hex2)) AS ?red_hex )\n# green\nBIND ( FLOOR (?green / 16) AS ?green_1 )\nBIND ( COALESCE(\nIF(?green_1 < 10, STR(?green_1), 1/0),\nIF(?green_1 = 10, \"a\", 1/0),\nIF(?green_1 = 11, \"b\", 1/0),\nIF(?green_1 = 12, \"c\", 1/0),\nIF(?green_1 = 13, \"d\", 1/0),\nIF(?green_1 = 14, \"e\", 1/0),\nIF(?green_1 = 15, \"f\", 1/0),\n\"ERROR\"\n) AS ?green_hex1 )\nBIND (FLOOR(?green - (16 * xsd:integer( ?green / 16 ))) AS ?green_2)\nBIND ( COALESCE(\nIF(?green_2 < 10, STR(?green_2), 1/0),\nIF(?green_2 = 10, \"a\", 1/0),\nIF(?green_2 = 11, \"b\", 1/0),\nIF(?green_2 = 12, \"c\", 1/0),\nIF(?green_2 = 13, \"d\", 1/0),\nIF(?green_2 = 14, \"e\", 1/0),\nIF(?green_2 = 15, \"f\", 1/0),\n\"ERROR\"\n) AS ?green_hex2 )\nBIND (CONCAT(STR(?green_hex1), STR(?green_hex2)) AS ?green_hex )\n# blue\nBIND ( FLOOR (?blue / 16) AS ?blue_1 )\nBIND ( COALESCE(\nIF(?blue_1 < 10, STR(?blue_1), 1/0),\nIF(?blue_1 = 10, \"a\", 1/0),\nIF(?blue_1 = 11, \"b\", 1/0),\nIF(?blue_1 = 12, \"c\", 1/0),\nIF(?blue_1 = 13, \"d\", 1/0),\nIF(?blue_1 = 14, \"e\", 1/0),\nIF(?blue_1 = 15, \"f\", 1/0),\n\"ERROR\"\n) AS ?blue_hex1 )\nBIND (FLOOR(?blue - (16 * xsd:integer( ?blue / 16 ))) AS ?blue_2)\nBIND ( COALESCE(\nIF(?blue_2 < 10, STR(?blue_2), 1/0),\nIF(?blue_2 = 10, \"a\", 1/0),\nIF(?blue_2 = 11, \"b\", 1/0),\nIF(?blue_2 = 12, \"c\", 1/0),\nIF(?blue_2 = 13, \"d\", 1/0),\nIF(?blue_2 = 14, \"e\", 1/0),\nIF(?blue_2 = 15, \"f\", 1/0),\n\"ERROR\"\n) AS ?blue_hex2 )\nBIND (CONCAT(STR(?blue_hex1), STR(?blue_hex2)) AS ?blue_hex )\nBIND (CONCAT(STR(?red_hex), STR(?green_hex), STR(?blue_hex)) AS ?rgb)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Nested queries, multiple BIND operations, color conversion logic.",
        "complexity": "complex"
    },
    {
        "id": "1803",
        "valid_gpt_response": true,
        "query": "SELECT ?decade ?genre ?genreLabel ?count ?decadeCount (100 * ?count / ?decadeCount AS ?percentage) WHERE {\n{\nSELECT ?decade ?genre (count(?x) as ?count) WHERE {\n{\n# TOP 20 Genres\nSELECT ?top20Genre ?count WHERE {\n{\nSELECT ?genre (count(?x) as ?count) WHERE {\n?x wdt:P31 wd:Q11424.\n?x wdt:P136 ?genre.\n# Exclude silent film; doesn't make a ton of sense\n# in this context, since it's more about the medium\n# than the content\nFILTER(?genre != wd:Q226730)\n}\nGROUP BY ?genre\n}\nBIND(?genre as ?top20Genre)\n}\nORDER BY DESC(?count)\nLIMIT 20\n}\n{\nSELECT ?x (min(?pubDate) as ?firstPubDate) WHERE {\n?x wdt:P31 wd:Q11424.\n?x wdt:P577 ?pubDate.\n}\nGROUP BY ?x\n}\n?x wdt:P136 ?top20Genre.\nBIND(?top20Genre as ?genre)\nBIND(concat(str(floor(year(?firstPubDate) / 10)), \"0s\") as ?decade)\nFILTER(!isBlank(?decade))\n}\nGROUP BY ?decade ?genre\n}\n{\n# Movies per decade\nSELECT ?decade (count(?x) as ?decadeCount) WHERE {\n{\nSELECT ?x (min(?pubDate) as ?firstPubDate) WHERE {\n?x wdt:P31 wd:Q11424.\n?x wdt:P577 ?pubDate.\n}\nGROUP BY ?x\n}\nBIND(concat(str(floor(year(?firstPubDate) / 10)), \"0s\") as ?decade)\n# This filter is very important (in both subqueries)! Otherwise\n# the results of the sub queries can't be properly aligned.\nFILTER(!isBlank(?decade))\n}\nGROUP BY ?decade\n}\n# See https://www.wikidata.org/wiki/Q22917333\nFILTER(?decade != \"2110s\")\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple subqueries, nested queries, and complex filtering",
        "complexity": "complex"
    },
    {
        "id": "1804",
        "valid_gpt_response": true,
        "query": "SELECT ?horse ?birthdate ?deathdate ?age ?horseLabel ?horseDescription\nWHERE {\n?horse wdt:P31/wdt:P279* wd:Q726 .\n?horse wdt:P569 ?birthdate .\n?horse wdt:P570 ?deathdate .\nBIND(?deathdate - ?birthdate AS ?age)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr\" . }\n}\nORDER BY DESC (?age)",
        "complexity_description": "Multiple triple patterns, BIND function and SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "1805",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?localeLabel ?inception ?official_website ?Twitter_username ?image WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?item wdt:P1416 wd:Q7157308.\nOPTIONAL { ?item wdt:P856 ?official_website. }\nOPTIONAL {\n?item (wdt:P131/(wdt:P131*)) ?locale.\n?locale wdt:P31 wd:Q35657.\n}\nOPTIONAL { ?item wdt:P2002 ?Twitter_username. }\nOPTIONAL { ?item wdt:P571 ?inception. }\nOPTIONAL { ?item wdt:P18 ?image. }\n}\nORDER BY (?localeLabel)\nLIMIT 1000",
        "complexity_description": "Multiple optional patterns, service call and property paths",
        "complexity": "complex"
    },
    {
        "id": "1806",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?image WHERE {\n?item wdt:P31 wd:Q3305213 .\n?item wdt:P180/wdt:P131 wd:Q9920 .\n?item wdt:P18 ?image .\nBIND(MD5(CONCAT(str(?item),str(RAND()))) as ?random)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\"}\n} ORDER BY ?random\nLIMIT 100",
        "complexity_description": "Multiple triple patterns, BIND clause, SERVICE keyword and ORDER BY/LIMIT clauses",
        "complexity": "complex"
    },
    {
        "id": "1807",
        "valid_gpt_response": true,
        "query": "select distinct ?pub ?jo ?joLabel ?item ?itemLabel ?itemDescription where\n{\n?item wdt:P144 wd:Q523076 . ?item wdt:P577 ?pub .\n?item p:P161 ?cs . ?cs ps:P161 ?jo . ?cs pq:P453 wd:Q27902552 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} order by desc(?year)\n#defaultView:Timeline",
        "complexity_description": "Multiple joins, subqueries and filters",
        "complexity": "complex"
    },
    {
        "id": "1808",
        "valid_gpt_response": true,
        "query": "SELECT ?i ?iLabel (SAMPLE(?image) as ?photo) {\n?i wdt:P31 wd:Q5 ; wdt:P27 wd:Q668 ; wdt:P570 ?date.\nOPTIONAL { ?i wdt:P18 ?image }\nFILTER(YEAR(?date)=1959)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?i ?iLabel",
        "complexity_description": "Multiple filters, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1809",
        "valid_gpt_response": true,
        "query": "select ?album ?performer ?performerLabel ?albumLabel ?location where {\n?album wdt:P31/wdt:P279* wd:Q482994;\nwdt:P175 ?performer;\nwdt:P1259 ?location.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "1810",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?line ?coords ?length WHERE {\n{\n?item wdt:P31 wd:Q80830021.\nOPTIONAL {\n?item p:P625 ?coords_stmt_west.\n?coords_stmt_west pq:P518 wd:Q80981719;\nps:P625 ?coords_west;\n(psv:P625/wikibase:geoLatitude) ?lat1;\n(psv:P625/wikibase:geoLongitude) ?lon1.\n}\nOPTIONAL {\n?item p:P625 ?coords_stmt_east.\n?coords_stmt_east pq:P518 wd:Q80982256;\nps:P625 ?coords_east;\n(psv:P625/wikibase:geoLatitude) ?lat2;\n(psv:P625/wikibase:geoLongitude) ?lon2.\n}\nOPTIONAL { ?item wdt:P2043 ?length. }\nBIND(CONCAT(\"LINESTRING (\", STR(?lon1), \" \", STR(?lat1), \",\", STR(?lon2), \" \", STR(?lat2), \")\") AS ?str)\nBIND(STRDT(?str, geo:wktLiteral) AS ?line)\n}\nUNION\n{\n?item wdt:P31 wd:Q80962689;\nwdt:P625 ?coords.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY (?coords_west)",
        "complexity_description": "Multiple optional patterns, unions, and complex bindings",
        "complexity": "complex"
    },
    {
        "id": "1811",
        "valid_gpt_response": true,
        "query": "SELECT ?languageLabel (COUNT(DISTINCT ?l) AS ?count) WHERE {\n?l a ontolex:LexicalEntry ; ontolex:lexicalForm ?form ; dct:language ?language .\n?form wdt:P443 ?file .\nFILTER regex (str(?file), \"^http://commons.wikimedia.org/wiki/Special:FilePath/LL-\").\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?languageLabel",
        "complexity_description": "Multiple joins, regex filter, and group by",
        "complexity": "complex"
    },
    {
        "id": "1812",
        "valid_gpt_response": true,
        "query": "SELECT ?occ ?occLabel (COUNT(?occLabel) AS ?occ_count) WHERE {\nBIND(wd:Q72752496 as ?album)\n#VALUES ?school {}\n#VALUES ?university {}\n#VALUES ?religion {}\n#VALUES ?health {}\n#VALUES ?art {}\n#VALUES ?science {}\n?album wdt:P767 ?contributor.\n?contributor wdt:P106 ?occ.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nGROUP BY ?occ ?occLabel\nORDER BY DESC(?occ_count)",
        "complexity_description": "Multiple joins, subqueries and grouping",
        "complexity": "complex"
    },
    {
        "id": "1813",
        "valid_gpt_response": true,
        "query": "SELECT ?coauthor_countryLabel (COUNT(?author1) AS ?numberOfCoAuthors)\nWITH {\nSELECT (COUNT(?work) AS ?count) ?author1 ?author2 WHERE {\n# Find co-authors\n?searched_author wdt:P496 \"0000-0002-6778-0887\".\n?work wdt:P50 ?searched_author, ?author1, ?author2 .\n}\nGROUP BY ?author1 ?author2\nORDER BY DESC(?count)\n# Limit the size of the graph, to avoid overburdening the browser\nLIMIT 1000\n} AS %authors\nWITH {\nSELECT ?author1 ?author2 ?coauthor_country WHERE {\nINCLUDE %authors\n# Exclude self-links\nFILTER (?author1 != ?author2)\n?author1 wdt:P27 ?coauthor_country.\n}\n} AS %result\nWHERE {\nINCLUDE %result\n# Label the results\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,fr,de,ru,es,zh,jp\". }\n}GROUP BY ?coauthor_countryLabel\nORDER BY DESC(?numberOfCoAuthors)",
        "complexity_description": "Multiple subqueries, grouping, filtering, and ordering",
        "complexity": "complex"
    },
    {
        "id": "1814",
        "valid_gpt_response": true,
        "query": "SELECT ?ranking ?song ?songLabel (GROUP_CONCAT(DISTINCT ?performerLabel;separator=\", \") AS ?performers) (GROUP_CONCAT(DISTINCT ?ytVideoLink;separator=\", \") AS ?musicVideos) WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?song p:P2291 ?chartedIn.\n?chartedIn ps:P2291 wd:Q83572751.\n?chartedIn pq:P1352 ?ranking.\n?song wdt:P175 ?performer.\n?performer rdfs:label ?performerLabel FILTER(lang(?performerLabel)='en').\n?song wdt:P1651 ?ytVideo.\nBIND(CONCAT(\"https://youtube.com/watch/\", ?ytVideo) AS ?ytVideoLink).\n}\nGROUP BY ?song ?songLabel ?ranking\nORDER BY ?ranking",
        "complexity_description": "Multiple group concat, filter, and bind functions",
        "complexity": "complex"
    },
    {
        "id": "1815",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?cd ?l ?i ?iLabel ?ct ?ctLabel ?rgb ?o ?oLabel WITH{SELECT ?i ?cd ?lat1 ?lon1 (sample(?op)as?op)WHERE{{VALUES ?i {wd:Q601091}}UNION{wd:Q601091 wdt:P521 ?i} ?i wdt:P625 ?cd;p:P625/psv:P625 ?y.?y wikibase:geoLatitude ?lat1;wikibase:geoLongitude ?lon1.}GROUP BY ?i ?cd ?lat1 ?lon1}AS%s\nWITH{SELECT ?l ?o ?t WHERE{INCLUDE %s.wd:Q601091 p:P521 ?nss; p:P625/psv:P625 ?y2.?y2 wikibase:geoLatitude ?lati1;wikibase:geoLongitude ?long1 .?nss ps:P521 ?ns.?ns p:P625/psv:P625 ?z.?z wikibase:geoLatitude ?lat2;wikibase:geoLongitude ?lon2.OPTIONAL{?nss pq:P137 ?o}FILTER(STR(?i)< STR(?ns)).BIND(CONCAT('LINESTRING(',STR(?long1),' ',STR(?lati1),',',STR(?lon2),' ',STR(?lat2),')')AS?str).BIND(STRDT(?str,geo:wktLiteral)AS?l)}}AS%l\nWHERE{{INCLUDE%s}UNION{INCLUDE%l}.BIND(IF(BOUND(?l),IF(BOUND(?o),\"00f\",\"f00\"),\"007f00\") as ?rgb)SERVICE wikibase:label{bd:serviceParam wikibase:language \"zh,zh-cn,en\".}}#",
        "complexity_description": "Multiple subqueries, unions, and complex filtering",
        "complexity": "complex"
    },
    {
        "id": "1816",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?personDBP ?personWD ?personWDLabel ?BirthDateDBP ?BirthDateWD\nWHERE {\nSERVICE <http://dbpedia.org/sparql> {\n?personDBP a dbo:Philosopher ;\ndbo:birthDate ?BirthDate_DBP;\nowl:sameAs ?personWD .\nFILTER regex (?personWD, \"wikidata.org\")\nBIND (xsd:date(?BirthDate_DBP) AS ?BirthDateDBP)\n}\nSERVICE <https://query.wikidata.org/sparql> {\n?personWD wdt:P569 ?BirthDate_WD .\nBIND (xsd:date(?BirthDate_WD) AS ?BirthDateWD)\n}\nFILTER (?BirthDateDBP != ?BirthDateWD)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?BirthDateDBP)\nLIMIT 50",
        "complexity_description": "Multiple services, filters, and bindings",
        "complexity": "complex"
    },
    {
        "id": "1817",
        "valid_gpt_response": true,
        "query": "SELECT ?geo ?causes ?countryLabel ?rgb ?population (CONCAT(str(year(?datum)),\"-\",CONCAT(IF(month(?datum)<10,\"0\",\"\"),str(month(?datum))),\"-\",CONCAT(IF(day(?datum)<10,\"0\",\"\"),str(day(?datum)))) AS ?when) {\n?item wdt:P1269 wd:Q81068910 .\n?item wdt:P17 ?country .\n?country wdt:P1082 ?pop.\n?country wdt:P3896 ?geo .\nMINUS { ?item wdt:P31 wd:Q186117 . }\nOPTIONAL { ?item p:P1603 ?p1603stm .\n?p1603stm ps:P1603 ?nr_causes .\n?p1603stm wikibase:rank ?rank . FILTER(?rank=wikibase:PreferredRank)\nOPTIONAL{?p1603stm pq:P585 ?datum }\n}\nBIND(IF(?nr_causes>=100,'FF0000',IF(?nr_causes>=10,'FF3333',IF(?nr_causes>=5,'FF6666',IF(?nr_causes>=2,'FF9999',IF(?nr_causes>0,'FFCCCC','FFFFFF'))))) AS ?rgb)\nBIND(CONCAT(\"Number of cases coronavirus reported: \", str(?nr_causes)) AS ?causes)\nBIND((round(?pop/100000)/10) AS ?popM )\nBIND(CONCAT(\"Population (million): \", str(round(?popM))) AS ?population)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple joins, filters, and optional patterns with complex bindings",
        "complexity": "complex"
    },
    {
        "id": "1818",
        "valid_gpt_response": true,
        "query": "SELECT ?artistName ?albumTitle ?releaseDate\nWHERE {\n?artist wdt:P136 wd:Q851213 ; # artist has genre of EDM\nrdfs:label ?artistName .\nFILTER ( lang(?artistName) = \"en\" )\n?album wdt:P31 wd:Q482994 .\n?album wdt:P175 ?artist ; # album has performer\nrdfs:label ?albumTitle ;\np:P577 ?releaseDateThing .# release date as (claim about the date?)\n?releaseDateThing ps:P577 ?releaseDate . # release date as ISO 8601\nFILTER (?releaseDate < \"1980-01-01T00:00:00Z\"^^xsd:dateTime)\nFILTER ( lang(?albumTitle) = \"en\" )\n}",
        "complexity_description": "Multiple filters, multiple triple patterns",
        "complexity": "medium"
    },
    {
        "id": "1819",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?book ?bookLabel\n{\nVALUES ?booktype {wd:Q3331189 wd:Q571}\nVALUES ?topic {wd:Q17884 wd:Q165371 wd:Q6517455 wd:Q33487 wd:Q51415\nwd:Q718858 wd:Q6636 wd:Q17625913 wd:Q189125\nwd:Q7458838 wd:Q43200 wd:Q486680 wd:Q206621\nwd:Q337084 wd:Q4162339 wd:Q1097630\n}\n?book wdt:P31/wdt:P279* ?booktype;\nwdt:P921 ?topic.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple VALUES clauses, property paths and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "1820",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?i ?iLabel ?layer ?c {\n?item wdt:P31/wdt:P279* wd:Q4260475 ; wdt:P31 ?thing ; wdt:P17 wd:Q668 ; wdt:P131/wdt:P131* wd:Q28769140 ; wdt:P625 ?c.\n?thing rdfs:label ?tl. FILTER(LANG(?tl)=\"en\")\nBIND(?tl as ?layer)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple triple patterns, property paths, and service call",
        "complexity": "complex"
    },
    {
        "id": "1821",
        "valid_gpt_response": true,
        "query": "SELECT ?marriage ?time ?countryLabel ?image\n{\nwd:Q17422 wdt:P527 ?marriage.\n?marriage wdt:P580 ?time.\nOPTIONAL{ ?marriage wdt:P17 ?country.\n?country wdt:P18 ?image.}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1822",
        "valid_gpt_response": true,
        "query": "SELECT ?date ?count ?measureLabel\nWHERE {\nBIND(wd:Q81068910 AS ?outbreak).\n{\nBIND(wd:Q166231 AS ?measure).\n?outbreak p:P1603 ?cases.\n?cases prov:wasDerivedFrom/pr:P248/wdt:P50 wd:Q7817.\n?cases pqv:P585/wikibase:timeValue ?date.\n?cases psv:P1603/wikibase:quantityAmount ?count.\n?cases psv:P1603/wikibase:quantityAmount ?infection_count.\n} UNION {\nBIND(wd:Q4 AS ?measure).\n?outbreak p:P1120 ?deaths.\n?deaths prov:wasDerivedFrom/pr:P248/wdt:P50 wd:Q7817.\n?deaths pqv:P585/wikibase:timeValue ?date.\n?deaths psv:P1120/wikibase:quantityAmount ?count.\n?deaths psv:P1120/wikibase:quantityAmount ?death_count.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ASC(?date) DESC(?measure)",
        "complexity_description": "Multiple UNION patterns, multiple variables, and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "1823",
        "valid_gpt_response": true,
        "query": "SELECT ?awardLabel ?item ?itemLabel (GROUP_CONCAT(?winnerLabel; SEPARATOR = \", \") AS ?winners) ?work ?workLabel ?role ?roleLabel WHERE {\n?item p:P166 ?awardStatement.\n?awardStatement ps:P166 ?award;\npq:P805 wd:Q47496499.\nOPTIONAL { ?awardStatement pq:P1346 ?winner. }\nOPTIONAL { ?awardStatement pq:P1686 ?work. }\nOPTIONAL { ?awardStatement pq:P453 ?role. }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?award rdfs:label ?awardLabel.\n?item rdfs:label ?itemLabel.\n?winner rdfs:label ?winnerLabel.\n?work rdfs:label ?workLabel.\n?role rdfs:label ?roleLabel.\n}\n}\nGROUP BY ?awardLabel ?item ?itemLabel ?work ?workLabel ?role ?roleLabel",
        "complexity_description": "Multiple optional patterns, group by and aggregation function",
        "complexity": "complex"
    },
    {
        "id": "1824",
        "valid_gpt_response": true,
        "query": "SELECT ?lexeme ?lemma ?languageLabel ?number WHERE {\n?lexeme wikibase:lemma ?lemma;\ndct:language ?language;\nontolex:sense/wdt:P5137 [\nwdt:P31 wd:Q21199; # exclude ordinal numbers (\"fifth\" is 5 letters long)\nwdt:P1181 ?number\n].\nFILTER(STRLEN(?lemma) = ?number)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?number",
        "complexity_description": "Multiple filters, subqueries and services",
        "complexity": "complex"
    },
    {
        "id": "1825",
        "valid_gpt_response": true,
        "query": "SELECT ?item1 ?image1 ?item1Label ?item2 ?image2 ?item2Label ?edgeLabel\nWITH {\nSELECT ?item1 WHERE {\nVALUES ?item1 { wd:Q575689 wd:Q1816737 wd:Q1138235 wd:Q26318 wd:Q231270 wd:Q186304 wd:Q1375057 wd:Q1770624 wd:Q7883337 wd:Q59532027 wd:Q59532183 wd:Q59532283 wd:Q16113908 wd:Q48016876 wd:Q296403 wd:Q973212 wd:Q59532454 wd:Q21013519 wd:Q15935 wd:Q363421 wd:Q55428718 wd:Q55428786 wd:Q56034652 wd:Q63927876 wd:Q358087 wd:Q13605596 wd:Q59534229 wd:Q54997217 wd:Q365144 wd:Q780846 wd:Q20026735 wd:Q554091 wd:Q16209581}\n}\n} AS %item1\nWITH {\nSELECT (?item1 AS ?item2) WHERE {\nINCLUDE %item1.\n}\n} AS %item2\nWHERE {\nINCLUDE %item1.\nINCLUDE %item2.\n?item1 ?wdt ?item2.\n?edge wikibase:directClaim ?wdt;\na wikibase:Property.\nOPTIONAL { ?item1 wdt:P18 ?image1. }\nOPTIONAL { ?item2 wdt:P18 ?image2. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple WITH clauses, OPTIONAL patterns, and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "1826",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel\nWHERE\n{\n?item wdt:P709 ?stat .\n?article schema:about ?item ;\nschema:isPartOf <https://commons.wikimedia.org/> .\nfilter not exists {?item wdt:P18 [] .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, filter and service",
        "complexity": "medium"
    },
    {
        "id": "1827",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?country ?countryLabel (count(?film) as ?count){\nVALUES ?countryproperty {wdt:P17 wdt:P495}\n?film wdt:P136 wd:Q20442589;\n?countryproperty ?country.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP by ?country ?countryLabel\nORDER by ?count",
        "complexity_description": "Multiple triple patterns, VALUES clause, SERVICE keyword, GROUP BY and ORDER BY",
        "complexity": "complex"
    },
    {
        "id": "1828",
        "valid_gpt_response": true,
        "query": "SELECT (SAMPLE(?date) AS ?date) (SUM(?count) AS ?cumulative_count) ?milestone\n{\n{ SELECT ?qid_rounded (count(?item) AS ?count) WHERE {\n?item wdt:P735 wd:Q4925477 .\nBIND( xsd:integer( substr(str(?item), 33)) as ?qid)\nBIND(xsd:integer(?qid/50000) as ?qid_cut)\nBIND(?qid_cut*50000 as ?qid_rounded)\n}\nGROUP BY ?qid_rounded\n}\nwd:Q38074555 p:P1114 ?milestonep .\n?milestonep ps:P1114 ?milestone .\nFILTER(?milestone > ?qid_rounded) .\n?milestonep pq:P585 ?date .\n}\nGROUP BY ?milestone",
        "complexity_description": "Multiple subqueries, grouping, and filtering",
        "complexity": "complex"
    },
    {
        "id": "1829",
        "valid_gpt_response": true,
        "query": "select distinct ?person ?personLabel ?placeLabel ?workLabel ?roleLabel where\n{ ?person wdt:P19 ?place . ?place wdt:P131* wd:Q23100 .\n?work p:P161 ?cs . ?cs ps:P161 ?person . ?cs pq:P453 ?role .\n?work wdt:P136 ?sf . ?sf wdt:P279* wd:Q5967378 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} order by ?workLabel",
        "complexity_description": "Multiple joins, property paths and service calls",
        "complexity": "complex"
    },
    {
        "id": "1830",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?code ?native_label (lang(?native_label) AS ?lang) ?missing1 ?missing2\nWITH {\nSELECT ?item ?native_label ?code WHERE {\n?item wdt:P463 wd:Q8908 .\n?item wdt:P1705 ?native_label .\n?item wdt:P297 ?code .\n}\n} AS %countries\nWHERE {\nINCLUDE %countries .\nOPTIONAL {\nINCLUDE %countries .\nBIND(SUBSTR(?code,1,1) AS ?first) .\nBIND(?first AS ?missing1) .\nFILTER(! CONTAINS(UCASE(?native_label), ?first) )\n}\nOPTIONAL {\nINCLUDE %countries .\nBIND(SUBSTR(?code,2,1) AS ?second) .\nBIND(?second AS ?missing2) .\nFILTER(! CONTAINS(UCASE(?native_label), ?second) ) .\n}\nFILTER(bound(?missing1) || bound(?missing2)) .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple optional patterns, subqueries, and filter conditions",
        "complexity": "complex"
    },
    {
        "id": "1831",
        "valid_gpt_response": true,
        "query": "SELECT\n?item ?label_and_description\n?audio ?coor ?img ?filename\nWHERE\n{\n?item p:P443 [ ps:P443 ?audio ; pq:P407 wd:Q9309 ] .\n?item wdt:P131+ wd:Q25 .\n?item wdt:P625 ?coor .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"cy\" . ?item rdfs:label ?cy .\n?item schema:description ?cyDescription . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . ?item rdfs:label ?en .\n?item schema:description ?enDescription . }\nOPTIONAL { ?item wdt:P18 ?img }\nBIND(uri(concat(\"https://commons.wikimedia.org/wiki/File:\",strafter(wikibase:decodeUri(str(?audio)),\"FilePath/\"))) as ?filename)\nBIND( CONCAT ( COALESCE(?cy,\"\"), \"--\", COALESCE(?cyDescription,\"\"), \" [cy]; \", COALESCE(?en,\"\"), \"--\", COALESCE(?enDescription,\"\"), \" [en]\") as ?label_and_description)\n}",
        "complexity_description": "Multiple services, optional clause, and complex bindings",
        "complexity": "complex"
    },
    {
        "id": "1832",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?s ?sLabel ?coor ?layer ?typeLabel ?website ?end ?end1\nWHERE {\nhint:Query hint:optimizer \"None\" .\n?s wdt:P131* wd:Q25 .\n{ ?s wdt:P31/wdt:P279* wd:Q33506 }\nUNION { ?s wdt:P31/wdt:P279* wd:Q7075 }\nUNION { ?s wdt:P31/wdt:P279* wd:Q166118 } .\n?s wdt:P625 ?coor .\n?s wdt:P31 ?type .\n?type wdt:P279* wd:Q1030034 .\nOPTIONAL { ?s wdt:P856 ?website . }\nOPTIONAL { ?s wdt:P576 ?end . }\nOPTIONAL { ?s wdt:P582 ?end1 . }\nFILTER NOT EXISTS { ?s wdt:P576 ?end }.\nFILTER NOT EXISTS { ?s wdt:P582 ?end1}.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Multiple UNION, OPTIONAL and FILTER NOT EXISTS clauses",
        "complexity": "complex"
    },
    {
        "id": "1833",
        "valid_gpt_response": true,
        "query": "SELECT ?date (MAX(?count) AS ?max_count) ?measureLabel\nWHERE {\nBIND(wd:Q81068910 AS ?outbreak).\n{\nBIND(wd:Q166231 AS ?measure).\n?outbreak p:P1603 ?cases.\n?cases prov:wasDerivedFrom/pr:P248/wdt:P50 wd:Q7817.\n?cases pqv:P585/wikibase:timeValue ?date.\n?cases psv:P1603/wikibase:quantityAmount ?count.\n?cases psv:P1603/wikibase:quantityAmount ?infection_count.\n} UNION {\nBIND(wd:Q4 AS ?measure).\n?outbreak p:P1120 ?deaths.\n?deaths prov:wasDerivedFrom/pr:P248/wdt:P50 wd:Q7817.\n?deaths pqv:P585/wikibase:timeValue ?date.\n?deaths psv:P1120/wikibase:quantityAmount ?count.\n?deaths psv:P1120/wikibase:quantityAmount ?death_count.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?date ?measureLabel\nORDER BY ASC(?date) DESC(?measure)",
        "complexity_description": "Multiple UNION patterns, BINDs, and SERVICE calls with grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "1834",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?start ?end ?child ?childLabel (MAX(?child_dob) AS ?child_dob1) (MIN(?child_age) AS ?child_age1) WHERE {\n?item p:P39 ?pm_stmt .\n?pm_stmt ps:P39 wd:Q14211 .\n?pm_stmt pq:P580 ?start .\nOPTIONAL {?pm_stmt pq:P582 ?end} .\n?item wdt:P40 ?child .\n?child wdt:P569 ?child_dob .\nFILTER(! (?child_dob > ?end)) .\nBIND (((?start - ?child_dob) / 365.24) AS ?child_age) .\nFILTER (?child_age < 5)\nFILTER NOT EXISTS {\n?child wdt:P570 ?child_dod .\nFILTER (?child_dod < ?start) .\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?item ?itemLabel ?start ?end ?child ?childLabel\nORDER BY DESC(?start) ?child_dob1",
        "complexity_description": "Multiple filters, optional patterns, and subqueries with aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "1835",
        "valid_gpt_response": true,
        "query": "SELECT ?countryLabel (STR(YEAR(?date)) AS ?year) ?title WHERE {\n#getting award winners for each year\n?item p:P166 ?st1; wdt:P31 wd:Q11424. ?st1 ps:P166 wd:Q777921; pq:P585 ?date.\n#making sure the statement is sourced with a page from the domain \"www.europeanfilmacademy.org\"\n?st1 prov:wasDerivedFrom ?ref1.\n?ref1 pr:P854 ?url1. FILTER(CONTAINS(STR(?url1), \"www.europeanfilmacademy.org\"))\n#getting country of origin\n?item p:P495 ?st2.\n#making sure the country of origin is sourced with a page from the domain \"www.europeanfilmawards.eu\"\n?st2 ps:P495 ?country; prov:wasDerivedFrom ?ref2.\n?ref2 pr:P854 ?url2. FILTER(CONTAINS(STR(?url2), \"www.europeanfilmawards.eu\"))\n#getting the titles\n?item wdt:P1476 ?orig_title; rdfs:label ?label. FILTER(LANG(?label)=\"en\")\nBIND(IF(LANG(?orig_title) IN (\"en\", \"en-gb\", \"en-us\") || STR(?orig_title)=STR(?label), ?orig_title, CONCAT(?orig_title, \" (\", ?label, \")\")) AS ?title)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?year ?countryLabel",
        "complexity_description": "Multiple filters, subqueries, and complex bindings",
        "complexity": "complex"
    },
    {
        "id": "1836",
        "valid_gpt_response": true,
        "query": "SELECT ?image ?webpage ?person ?personLabel WHERE {\n?person wdt:P31 wd:Q5.\n?person wdt:P7943 ?id.\nwd:P7943 wdt:P1630 ?url .\nBIND(IRI(REPLACE(?id, '^(.+)$', ?url)) AS ?webpage).\nOPTIONAL { ?person wdt:P18 ?image. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, fr\". }\n}",
        "complexity_description": "Multiple joins, optional clause, and service call",
        "complexity": "complex"
    },
    {
        "id": "1837",
        "valid_gpt_response": true,
        "query": "select distinct ?episode ?episodeLabel ?date ?bbc_link\n(GROUP_CONCAT(DISTINCT ?panelistLabel;separator=\"; \") as ?panelists)\n(count(DISTINCT ?panelist) as ?panelists_on_wd)\n(count(DISTINCT ?wp) as ?panelists_on_wp)\n?topic # (GROUP_CONCAT(DISTINCT ?topic;separator=\" ; \") as ?wikipedia_topics)\nwhere\n{ ?episode wdt:P31 wd:Q57608327 . ?episode wdt:P179 wd:Q3149655 . optional { ?episode wdt:P577 ?date }\noptional { ?episode wdt:P710 ?panelist . optional { ?wp schema:about ?panelist . ?wp schema:isPartOf <https://en.wikipedia.org/>. } }\noptional { ?episode wdt:P953 ?bbc_link }\noptional { ?episode wdt:P921 ?subj . ?topic schema:about ?subj . ?topic schema:isPartOf <https://en.wikipedia.org/>. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?panelist rdfs:label ?panelistLabel .\n?episode rdfs:label ?episodeLabel . }\n} group by ?episode ?episodeLabel ?date ?bbc_link ?topic order by desc(?date)",
        "complexity_description": "Multiple optional patterns, grouping and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "1838",
        "valid_gpt_response": true,
        "query": "SELECT ?image ?person ?personLabel WHERE {\n?person wdt:P31 wd:Q5.\n?person wdt:P1050 wd:Q84263196.\nOPTIONAL { ?person wdt:P18 ?image. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, fr\". }\n}",
        "complexity_description": "Multiple triple patterns with OPTIONAL and SERVICE",
        "complexity": "medium"
    },
    {
        "id": "1839",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?coor ?image\nWHERE\n{\n?item wdt:P31/wdt:P279* wd:Q744099 .\n?item wdt:P17 wd:Q145 .\nOPTIONAL { ?item wdt:P625 ?coor }\nOPTIONAL { ?item wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?item ?itemLabel ?coor ?image",
        "complexity_description": "Multiple filters, optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "1840",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?image\nWHERE\n{\n?item wdt:P31/wdt:P279* wd:Q34770 .\n?item wdt:P18 ?image .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?itemLabel",
        "complexity_description": "Two triple patterns, one service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "1841",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?film ?filmLabel ?argitaratze_data WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?film wdt:P31 wd:Q11424;\nwdt:P921 wd:Q44512.\n?film wdt:P577 ?argitaratze_data.\n}",
        "complexity_description": "Multiple triple patterns with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "1842",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\n?item wdt:P31/wdt:P279* wd:Q16917;\nwdt:P625 ?geo .\n}",
        "complexity_description": "Two triple patterns with a property path",
        "complexity": "medium"
    },
    {
        "id": "1843",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?item ?itemLabel ?twitter ?facebook ?linkedin ?instagram ?website WHERE\n{\nVALUES ?thing {\nwd:Q87764400 # NHS group\nwd:Q6954197 # NHS trust\nwd:Q6954187 # NHS foundation trust\nwd:Q6954188 # NHS hospital trust\nwd:Q6954189 # NHS mental health trust\nwd:Q16986400 # NHS ambulance services trust\nwd:Q16988141 # Community health NHS trust\nwd:Q6664153 # Local health board (Wales)\nwd:Q83425186 # NHS board (Scotland)\n}\n?item wdt:P31 ?thing.\nminus { ?item wdt:P576 ?dissolved . }\noptional { ?item wdt:P2002 ?twitter . }\noptional { ?item wdt:P2013 ?facebook . }\noptional { ?item wdt:P4264 ?linkedin . }\noptional { ?item wdt:P2003 ?instagram . }\noptional { ?item wdt:P856 ?website . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} order by ?itemLabel",
        "complexity_description": "Multiple VALUES, multiple optional patterns, and SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "1844",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?developerLabel ?publisherLabel (COUNT(?award) AS ?nominations) WHERE {\n?item p:P1411 ?awardStat.\n?awardStat ps:P1411 ?award;\npq:P805 wd:Q84950595.\n?item wdt:P178 ?developer;\nwdt:P123 ?publisher.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?item ?itemLabel ?developerLabel ?publisherLabel\nORDER BY DESC (?nominations)",
        "complexity_description": "Multiple joins, subqueries, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "1845",
        "valid_gpt_response": true,
        "query": "SELECT ?anc ?dob ?dod ?ancLabel WITH {SELECT ?ancestor {\n{SELECT ?ancestor {wd:Q207 (wdt:P22|wdt:P25)* ?ancestor.}}\n{SELECT ?ancestor {wd:Q9682 (wdt:P22|wdt:P25)* ?ancestor.}}\n}} AS %an WITH {SELECT ?ap {\nINCLUDE %an\n?ancestor wdt:P22|wdt:P25 ?ap\n}} AS %an2 WHERE {\n{SELECT DISTINCT (?ancestor AS ?anc) {INCLUDE %an}} MINUS {SELECT DISTINCT (?ap AS ?anc) {INCLUDE %an2}}\nOPTIONAL {?anc wdt:P569 ?dob.}\nOPTIONAL {?anc wdt:P570 ?dod.}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?dob)",
        "complexity_description": "Multiple nested subqueries, multiple optional patterns, and a service call",
        "complexity": "complex"
    },
    {
        "id": "1846",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?portrait ?article ?sitelinks\nWHERE\n{\n?person wdt:P31 wd:Q5 .\n?person wdt:P1050 wd:Q84263196 .\n?person wikibase:sitelinks ?sitelinks\nOPTIONAL {\n?person wdt:P18 ?portrait\n}\nOPTIONAL {\n?article schema:about ?person .\n?article schema:isPartOf <https://en.wikipedia.org/> .\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?sitelinks)",
        "complexity_description": "Multiple filters, optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "1847",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?state ?stateLabel ?cases ?shape ?rgb ?time WHERE {\nwd:Q84055514 wdt:P527 ?item.\n?item wdt:P276 ?state ; p:P1603 ?casestmt.\n?state wdt:P3896 ?shape.\n?casestmt ps:P1603 ?cases ; pq:P585 ?time .\n{ SELECT (MAX(?cases_) as ?mc) {\nwd:Q84055514 wdt:P527/wdt:P1603 ?cases_\n} }\nFILTER NOT EXISTS { ?item p:P1603/pq:P585 ?time_. FILTER(?time < ?time_) }\nBIND(IF(?cases > (5 * ?mc)/6,\"a50f15\", IF(?cases > (2 * ?mc)/3,\"de2d26\",\nIF(?cases > ?mc/2,\"fb6a4a\", IF(?cases > ?mc/3,\"fc9272\",\nIF(?cases > ?mc/6,\"fcbba1\", \"fee5d9\"))))) as ?rgb)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, subqueries, and conditional logic",
        "complexity": "complex"
    },
    {
        "id": "1848",
        "valid_gpt_response": true,
        "query": "SELECT ?state ?time ?cases ?stateLabel {\nwd:Q84055514 wdt:P527 ?statecases.\n?statecases wdt:P276 ?state ; p:P1603 ?casestmt.\n?casestmt ps:P1603 ?cases ; pq:P585 ?time.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, service call",
        "complexity": "medium"
    },
    {
        "id": "1849",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?count\nWHERE\n{\n{\nSELECT ?item (COUNT(DISTINCT ?country) AS ?count) WHERE {\n?item wdt:P31/wdt:P279* wd:Q23397 ;\nwdt:P17 ?country .\nFILTER NOT EXISTS { ?item wdt:P31 wd:Q47486890 }\n}\nGROUP BY ?item ?itemLabel\nHAVING (?count >= 3)\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE], en\". }\n}\nORDER BY DESC(?count) ?itemLabel",
        "complexity_description": "Multiple subqueries, grouping and filtering",
        "complexity": "complex"
    },
    {
        "id": "1850",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?geo ?layer WHERE {\n?item (wdt:P31/(wdt:P279*)) wd:Q11707;\nwdt:P166 wd:Q20824563;\nwdt:P17 wd:Q32;\nwdt:P625 ?geo.\n?item p:P166 [ps:P166 wd:Q20824563; pq:P1114 ?layer]\nMINUS {?item wdt:P576 []}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, property paths, and minus clause",
        "complexity": "complex"
    },
    {
        "id": "1851",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?born ?parent ?parentLabel ?parentdied ?days_posthumous WITH {\nSELECT DISTINCT ?item ?born ?parent ?parentdied ?days_posthumous WHERE {\n?item wdt:P31 wd:Q5 . # people only, avoid racehorses!\n# add an additional generator here if desired, ie \"Swedish people\" # ?item wdt:P27 wd:Q34\n?item wdt:P25|wdt:P22 ?parent . ?item wdt:P569 ?born .\n?parent wdt:P570 ?parentdied . filter(?parentdied < ?born) .\nbind(round((?born-?parentdied)) as ?days_posthumous) . filter(?days_posthumous > 365) .\n# filter to just those that are over a year different\n# remember that some people can be born the year after their father died!\n}\n} AS %results WHERE {\nINCLUDE %results.\n?item p:P569 [ a wikibase:BestRank; psv:P569 [ wikibase:timeValue ?born; wikibase:timePrecision ?prec1 ] ] .\n?parent p:P570 [ a wikibase:BestRank; psv:P570 [ wikibase:timeValue ?parentdied; wikibase:timePrecision ?prec2 ] ] .\nfilter (?prec1 >= 9) . filter (?prec2 >= 9)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} order by desc(?born)",
        "complexity_description": "Multiple filters, subqueries, and joins with multiple predicates",
        "complexity": "complex"
    },
    {
        "id": "1852",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?born ?father ?fatherLabel ?fatherdied ?days_posthumous WHERE {\n?item p:P39 ?statement. ?statement ps:P39 ?position . ?position wdt:P279* wd:Q16707842 .\n?item wdt:P569 ?born .\n?item wdt:P22 ?father . ?father wdt:P570 ?fatherdied . filter(?fatherdied < ?born) .\nbind(round((?born-?fatherdied)) as ?days_posthumous) .\nfilter(?days_posthumous < 1000) # omit one massively wrong\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} order by ?born",
        "complexity_description": "Multiple filters, bindings and service calls",
        "complexity": "complex"
    },
    {
        "id": "1853",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?flag ?flagLabel ?countryLabel ?mountainLabel ?imageFlag\nWHERE\n{\n?flag wdt:P31 wd:Q186516;\nwdt:P1001 ?country ;\nwdt:P180* ?mountain ;\nwdt:P18 ?imageFlag .\n{ ?mountain wdt:P279* wd:Q8502 . } UNION\n{ ?mountain wdt:P31/wdt:P279* wd:Q8502 . } UNION\n{ ?mountain wdt:P279* wd:Q46831 . } UNION\n{ ?mountain wdt:P31/wdt:P279* wd:Q46831 . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?countryLabel ?mountainLabel",
        "complexity_description": "Multiple UNION patterns, multiple triple patterns, and a SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "1854",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\n?item (wdt:P31*/wdt:P279*) wd:Q1362233.\n?item wdt:P625 ?geo.\nOPTIONAL { ?item wdt:P6375 ?Adresse. filter(lang(?Adresse)=\"de\")}\nOPTIONAL { ?item wdt:P18 ?Bild. }\n}",
        "complexity_description": "Multiple optional patterns, property paths",
        "complexity": "medium"
    },
    {
        "id": "1855",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?commune ?communeLabel ?coords ?image\nWHERE {\n{ ?item wdt:P31/wdt:P279* wd:Q164240 } UNION\n{ ?item wdt:P31/wdt:P279* wd:Q34023 }\n?item wdt:P131 ?commune .\n?commune p:P31 ?communeStatement ;\nwdt:P131 wd:Q12642 .\n?communeStatement ps:P31/wdt:P279* wd:Q484170 .\nFILTER NOT EXISTS { ?communeStatement pq:P582 ?x }\nOPTIONAL { ?item wdt:P625 ?coords }\nOPTIONAL { ?item wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?communeLabel ?itemLabel",
        "complexity_description": "Multiple UNION, FILTER NOT EXISTS, OPTIONAL clauses and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "1856",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?film ?filmLabel (GROUP_CONCAT(DISTINCT(?realLabel); separator=\", \") as ?reals) ?duree (MIN(?date) as ?oldest_date) ?acces\nWHERE\n{\n?film wdt:P1344 wd:Q89370484;\nwdt:P2047 ?duree;\nwdt:P577 ?date;\nwdt:P57 ?real.\n?film p:P973 ?describestmt.\n?describestmt ps:P973 ?acces.\n?describestmt pq:P407 wd:Q150.\nFILTER STRSTARTS(STR(?acces), \"https://www.artfilm.ch\").\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,de,it,es\".\n?real rdfs:label ?realLabel.\n?film rdfs:label ?filmLabel.\n}\n}\nGROUP BY ?film ?filmLabel ?duree ?acces\nORDER BY ?oldest_date",
        "complexity_description": "Multiple joins, subqueries, and filters",
        "complexity": "complex"
    },
    {
        "id": "1857",
        "valid_gpt_response": true,
        "query": "SELECT\n?topic1 ?topic1Label ?topic2 ?topic2Label\nWITH {\nSELECT\n(COUNT(?work) AS ?count) ?topic1 ?topic2\nWHERE {\n# Find works that are marked with main subject of the topic.\n?work wdt:P921 / ( wdt:P31*/wdt:P279* | wdt:P361+ | wdt:P1269+ ) wd:Q82069695 .\n# Identify co-occuring topics.\n?work wdt:P921 ?topic1, ?topic2 .\n# Exclude the topic it self\nFILTER (wd:Q82069695 != ?topic1 && wd:Q82069695 != ?topic2 && ?topic1 != ?topic2)\n}\nGROUP BY ?topic1 ?topic2\nORDER BY DESC(?count)\n# There a performance problems in the browser: We cannot show large graphs,\n# so we put a limit on the number of links displayed.\nLIMIT 400\n} AS %results\nWHERE {\nINCLUDE %results\n# Label the results\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\".\n}\n}",
        "complexity_description": "Multiple subqueries, filters, and group by",
        "complexity": "complex"
    },
    {
        "id": "1858",
        "valid_gpt_response": true,
        "query": "SELECT ?fibule ?fibuleLabel (SAMPLE(?date) AS ?dates) (GROUP_CONCAT(DISTINCT ?materiauLabel;separator=\", \") AS ?materiaux) ?lieuLabel ?image ?identifiant_Joconde WHERE {\n?fibule wdt:P31 wd:Q324926.\n?fibule wdt:P195 wd:Q1376.\nOPTIONAL { ?fibule wdt:P571 ?date }\nOPTIONAL { ?fibule wdt:P186 ?materiau }\nOPTIONAL { ?fibule wdt:P189 ?lieu }\nOPTIONAL { ?fibule wdt:P18 ?image }\nOPTIONAL { ?fibule wdt:P347 ?identifiant_Joconde }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". ?fibule rdfs:label ?fibuleLabel . ?materiau rdfs:label ?materiauLabel . ?lieu rdfs:label ?lieuLabel }\n}\nGROUP BY ?fibule ?fibuleLabel ?lieuLabel ?image ?identifiant_Joconde",
        "complexity_description": "Multiple optional patterns, aggregation functions and service call",
        "complexity": "complex"
    },
    {
        "id": "1859",
        "valid_gpt_response": true,
        "query": "SELECT ?country ?countryLabel WHERE {\n?country wdt:P31 wd:Q3624078 . # sovereign state\n?country rdfs:label ?countryLabel .\nfilter(!regex(?countryLabel, 'a')) .\n}",
        "complexity_description": "Filter and label",
        "complexity": "medium"
    },
    {
        "id": "1860",
        "valid_gpt_response": true,
        "query": "SELECT ?diseaseLabel (MAX(?cases) AS ?numOfCases)\nWHERE {\n?disease wdt:P31/wdt:P279* wd:Q18123741 . # infectious disease\n?disease wdt:P1603 ?cases . # number of cases\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?diseaseLabel ORDER BY DESC(?numOfCases)",
        "complexity_description": "Multiple triple patterns, service call and aggregation function",
        "complexity": "medium"
    },
    {
        "id": "1861",
        "valid_gpt_response": true,
        "query": "select ?x ?xLabel ?image ?loc {\n?x wdt:P31 wd:Q182676 ; wdt:P17 wd:Q219 ; wdt:P625 ?loc .\noptional{?x wdt:P18 ?image}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"bg,en,pl\". }\n}",
        "complexity_description": "Multiple triple patterns with optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1862",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?img\nWHERE\n{\n?item wdt:P31/wdt:P279* wd:Q3305213 .\n?item wdt:P180 wd:Q146 .\n?item wdt:P180 wd:Q467 .\nOPTIONAL { ?item wdt:P18 ?img }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1863",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?film ?filmLabel (GROUP_CONCAT(DISTINCT(?realLabel); separator=\", \") as ?reals) ?duree (MIN(?date) as ?oldest_date) ?URL\nWHERE\n{\n?film wdt:P57 wd:Q7175862;\np:P3301 ?artfilm.\n?artfilm ps:P3301 ?artfilmCH;\npq:P2699 ?URL.\nFILTER STRSTARTS(STR(?URL), \"https://www.artfilm.ch\").\nOPTIONAL {?film wdt:P2047 ?duree.}\nOPTIONAL {?film wdt:P577 ?date.}\nOPTIONAL {?film wdt:P57 ?real.}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,de,it,es\".\n?real rdfs:label ?realLabel.\n?film rdfs:label ?filmLabel.\n}\n}\nGROUP BY ?film ?filmLabel ?duree ?URL\nORDER BY ?oldest_date",
        "complexity_description": "Multiple optional patterns, group by, and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "1864",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?film ?filmLabel ?realLabel ?familleLabel ?duree (MIN(?date) as ?oldest_date) ?acces\nWHERE\n{\n?film p:P3301 ?artfilm.\n?artfilm ps:P3301 ?artfilmCH;\npq:P2699 ?URL.\nFILTER STRSTARTS(STR(?URL), \"https://www.artfilm.ch\").\nOPTIONAL {?film wdt:P2047 ?duree.}\nOPTIONAL {?film wdt:P57 ?real.}\nOPTIONAL {?film wdt:P577 ?date.}\nOPTIONAL {?real wdt:P734 ?famille.}\n?real wdt:P21 wd:Q6581072.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,de,it,es\".\n?real rdfs:label ?realLabel.\n?film rdfs:label ?filmLabel.\n?famille rdfs:label ?familleLabel.\n}\n}\nGROUP BY ?film ?filmLabel ?realLabel ?familleLabel ?duree ?acces\nORDER BY STR(?familleLabel) ?realLabel ?oldest_date",
        "complexity_description": "Multiple optional patterns, filter, and service calls",
        "complexity": "complex"
    },
    {
        "id": "1865",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?film ?filmLabel ?realLabel ?familleLabel ?duree (MIN(?date) as ?oldest_date) ?acces\nWHERE\n{\n?film p:P3301 ?artfilm.\n?artfilm ps:P3301 ?artfilmCH;\npq:P2699 ?URL.\nFILTER STRSTARTS(STR(?URL), \"https://www.artfilm.ch\").\nOPTIONAL {?film wdt:P2047 ?duree.}\nOPTIONAL {?film wdt:P57 ?real.}\nOPTIONAL {?film wdt:P577 ?date.}\nOPTIONAL {?real wdt:P734 ?famille.}\n?real wdt:P21 wd:Q6581072.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,de,it,es\".\n?real rdfs:label ?realLabel.\n?film rdfs:label ?filmLabel.\n?famille rdfs:label ?familleLabel.\n}\n}\nGROUP BY ?film ?filmLabel ?realLabel ?familleLabel ?duree ?acces\nORDER BY STR(?familleLabel) ?realLabel ?oldest_date",
        "complexity_description": "Multiple OPTIONAL clauses, FILTER, SERVICE, and GROUP BY/ORDER BY",
        "complexity": "complex"
    },
    {
        "id": "1866",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?langLabel ?langDate ?humanLabel ?picture WHERE {\n?lang (wdt:P31/(wdt:P279*)) wd:Q9143.\n?human wdt:P31 wd:Q5;\nwdt:P18 ?picture.\n{ ?lang wdt:P287 ?human. }\nUNION\n{ ?lang wdt:P170 ?human. }\nUNION\n{ ?lang wdt:P943 ?human. }\nUNION\n{ ?lang wdt:P178 ?human. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\nOPTIONAL { ?lang wdt:P571 ?langDate. }\n}\nLIMIT 25",
        "complexity_description": "Multiple UNIONs, OPTIONAL clause, and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "1867",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?line ?coords ?length WHERE {\n{\n?item wdt:P31 wd:Q80830021.\nOPTIONAL {\n?item p:P625 ?coords_stmt_west.\n?coords_stmt_west pq:P518 wd:Q80981719;\nps:P625 ?coords_west;\n(psv:P625/wikibase:geoLatitude) ?lat1;\n(psv:P625/wikibase:geoLongitude) ?lon1.\n}\nOPTIONAL {\n?item p:P625 ?coords_stmt_east.\n?coords_stmt_east pq:P518 wd:Q80982256;\nps:P625 ?coords_east;\n(psv:P625/wikibase:geoLatitude) ?lat2;\n(psv:P625/wikibase:geoLongitude) ?lon2.\n}\nOPTIONAL { ?item wdt:P2043 ?length. }\nBIND(CONCAT(\"LINESTRING (\", STR(?lon1), \" \", STR(?lat1), \",\", STR(?lon2), \" \", STR(?lat2), \")\") AS ?str)\nBIND(STRDT(?str, geo:wktLiteral) AS ?line)\n}\nUNION\n{\n?item wdt:P31 wd:Q80962689;\nwdt:P625 ?coords.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY (?coords_west)",
        "complexity_description": "Multiple optional patterns, unions, and complex bindings",
        "complexity": "complex"
    },
    {
        "id": "1868",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?TypeLabel ?CreateurLabel ?Date ?DepeintLabel ?DepartementLabel ?Atlas (group_concat(?INV;separator=\"; \") as ?INVs) ?image WHERE{\n?item wdt:P195/wdt:P31* wd:Q11681271.\n#OPTIONAL{?item wdt:P170 ?Createur.}\n#OPTIONAL{?item wdt:P571 ?Date.}\n#OPTIONAL{?item wdt:P180 ?Depeint.}\n#OPTIONAL{?item wdt:P195 ?Departement.}\n#OPTIONAL{?item wdt:P31 ?Type.}\nOPTIONAL{?item wdt:P18 ?image.}\nOPTIONAL{?item wdt:P217 ?INV.}\nOPTIONAL{?item wdt:P1212 ?Atlas.}\nFILTER(STRSTARTS(?INV, 'S')) .\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"fr, en\".}\n}\nGROUP BY ?item ?itemLabel ?TypeLabel ?CreateurLabel ?Date ?DepeintLabel ?DepartementLabel ?Atlas ?image\nORDER BY ?INVs",
        "complexity_description": "Multiple optional patterns, group_concat aggregation function and filter",
        "complexity": "complex"
    },
    {
        "id": "1869",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?geo ?layer ?image WHERE {\n?item (wdt:P31/(wdt:P279*)) wd:Q11707;\nwdt:P17 wd:Q39;\nwdt:P166 wd:Q20824563;\nwdt:P625 ?geo.\nOPTIONAL {?item wdt:P18 ?image}\n?item p:P166 [ps:P166 wd:Q20824563; pq:P1114 ?layer]\nMINUS {?item wdt:P576 []}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"de\". }\n}",
        "complexity_description": "Multiple triple patterns, optional clause, minus clause and service call",
        "complexity": "complex"
    },
    {
        "id": "1870",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coordinates ?rgb WHERE {\n?instance ps:P31/wdt:P279* wd:Q1115575 .\n?item p:P31 ?instance .\n#?item wdt:P131/wdt:P131 wd:Q23157 .\nMINUS { ?instance pq:P582 [] } .\nOPTIONAL { ?item wdt:P402 ?osm . BIND(\"008000\" AS ?rgb) } .\n?item wdt:P625 ?coordinates .\n?item wdt:P131 ?adm3 . ?adm3 wdt:P131 ?adm2\n}",
        "complexity_description": "Multiple joins, optional clause and minus filter",
        "complexity": "complex"
    },
    {
        "id": "1871",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?TypeLabel ?CreateurLabel ?Date ?DepeintLabel ?DepartementLabel ?Atlas (group_concat(?INV;separator=\"; \") as ?INVs) ?image WHERE{\n?item wdt:P195/wdt:P31* wd:Q11681271.\nOPTIONAL{?item wdt:P170 ?Createur.}\nOPTIONAL{?item wdt:P571 ?Date.}\nOPTIONAL{?item wdt:P180 ?Depeint.}\nOPTIONAL{?item wdt:P195 ?Departement.}\n#OPTIONAL{?item wdt:P31 ?Type.}\nOPTIONAL{?item wdt:P18 ?image.}\nOPTIONAL{?item wdt:P217 ?INV.}\nOPTIONAL{?item wdt:P1212 ?Atlas.}\nFILTER(STRSTARTS(?INV, 'MAO')) .\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"fr, en\".}\n}\nGROUP BY ?item ?itemLabel ?TypeLabel ?CreateurLabel ?Date ?DepeintLabel ?DepartementLabel ?Atlas ?image\nORDER BY ?INVs",
        "complexity_description": "Multiple optional patterns, filter, service call and group by/order by clauses",
        "complexity": "complex"
    },
    {
        "id": "1872",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?startdate (SAMPLE(?image) AS ?image)\nWHERE\n{\n?item wdt:P31 wd:Q146.\n?item p:P39 ?mouserOffice.\n?mouserOffice ps:P39 wd:Q198641.\n?mouserOffice pq:P580 ?startdate .\n#?item wdt:P569 ?startdate .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\nOPTIONAL { ?item wdt:P18 ?image }\n}\nGROUP BY ?item ?itemLabel ?startdate",
        "complexity_description": "Multiple joins, optional clause and group by",
        "complexity": "medium"
    },
    {
        "id": "1873",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?book ?title (GROUP_CONCAT (DISTINCT ?author; SEPARATOR = \", \") AS ?authors) ?pubDate\n{\nVALUES ?book {wd:Q17744504 wd:Q17744476 wd:Q61718117 wd:Q59784970 wd:Q17744339 wd:Q51601248 wd:Q17744488 wd:Q56740176 wd:Q27942623 wd:Q27942623}\n?book wdt:P1476 ?title.\nOPTIONAL {?book (wdt:P50/rdfs:label)|(wdt:P98/rdfs:label)|wdt:P2093 ?author}\nOPTIONAL {?book wdt:P577 ?pubDate}\nFILTER (LANG(?author)=\"\"||LANG(?author)=\"en\")\n}\nGROUP BY ?book ?title ?pubDate",
        "complexity_description": "Multiple optional patterns, filter and group by",
        "complexity": "complex"
    },
    {
        "id": "1874",
        "valid_gpt_response": true,
        "query": "SELECT ?river ?riverLabel (?lengthInM/1000 AS ?lengthInKm) ?mouthLabel WITH {\nSELECT DISTINCT ?river ?lengthInM ?mouth WHERE {\n?river wdt:P31/wdt:P279* wd:Q4022;\nwdt:P403 ?mouth;\np:P2043 ?lengthStatement. ?lengthStatement a wikibase:BestRank; psn:P2043/wikibase:quantityAmount ?lengthInM. hint:Prior hint:rangeSafe true.\n?mouth wdt:P31/wdt:P279* wd:Q4022.\nFILTER(?lengthInM > 1000000)\n}\nORDER BY DESC(?lengthInM)\nLIMIT 10\n} AS %results WHERE {\nINCLUDE %results.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?lengthInM)",
        "complexity_description": "Multiple subqueries, filters, and services",
        "complexity": "complex"
    },
    {
        "id": "1875",
        "valid_gpt_response": true,
        "query": "SELECT ?river ?riverLabel (?lengthInM/1000 AS ?lengthInKm) ?mouthLabel WITH {\nSELECT DISTINCT ?river ?lengthInM ?mouth WHERE {\n?river wdt:P31/wdt:P279* wd:Q4022;\nwdt:P403 ?mouth;\np:P2043 ?lengthStatement. ?lengthStatement a wikibase:BestRank; psn:P2043/wikibase:quantityAmount ?lengthInM. hint:Prior hint:rangeSafe true.\nMINUS { ?mouth wdt:P31/wdt:P279* wd:Q165. }\nMINUS { ?mouth wdt:P31/wdt:P279* wd:Q9430. }\nFILTER(?lengthInM > 1000000)\n}\nORDER BY DESC(?lengthInM)\nLIMIT 10\n} AS %results WHERE {\nINCLUDE %results.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?lengthInM)",
        "complexity_description": "Multiple subqueries, filters, and minus clauses",
        "complexity": "complex"
    },
    {
        "id": "1876",
        "valid_gpt_response": true,
        "query": "select\n?quantity\n(sample(?label) as ?label)\n(sample(?desc) as ?desc)\n(sample(?symbol) as ?symbol)\n?formula\n(\nstrdt(\nconcat(\n\"<math><mtable columnalign=left>\",\ngroup_concat(?symbolAndLabel),\n\"</mtable></math>\"\n),\n<http://www.w3.org/1998/Math/MathML>\n) as ?otherSymbols\n)\nwhere {\n?quantity wdt:P279+ wd:Q71550118 .\noptional { ?quantity rdfs:label ?label . filter (lang(?label) = \"en\") }\noptional { ?quantity schema:description ?desc . filter (lang(?desc) = \"en\") }\n?quantity wdt:P2534 ?formula .\n?quantity wdt:P7235 ?symbol .\n{\nselect distinct * where {\n?quantity p:P4934 [ pq:P7235 ?otherSymbol ; ps:P4934 / rdfs:label ?otherLabel ] .\nfilter (lang(?otherLabel) = \"en\")\nbind (\nconcat(\n\"<mrow>\",\nstr(?otherSymbol), \"<mtext>\", \": \", ?otherLabel, \"</mtext>\",\n\"</mrow>\"\n) as ?symbolAndLabel\n)\n}\n}\n}\ngroup by ?quantity ?formula\nlimit 500",
        "complexity_description": "Multiple optional patterns, subqueries, and complex string manipulations",
        "complexity": "complex"
    },
    {
        "id": "1877",
        "valid_gpt_response": true,
        "query": "SELECT ?iaLabel ?a ?ab ?abLabel WITH {\nSELECT ?a ?ia WHERE {\n?ia wdt:P31 wd:Q21199 . # natural number\n?ia wdt:P1181 ?a . # its numeric value\nFILTER (?ia != wd:Q713113 ) # we don't want 0.9999\nFILTER (?a >= 1 && ?a <= 12 ) # between 1 and 12\n} } AS %A\nWITH { SELECT ?b ?ib WHERE {\nINCLUDE %A\nBIND (?a AS ?b)\nBIND (?ia AS ?ib)\n}} AS %B\nWHERE {\nINCLUDE %A\nINCLUDE %B\nBIND (?a * ?b AS ?ab )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple subqueries, filters and service calls",
        "complexity": "complex"
    },
    {
        "id": "1878",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?human) AS ?count) { ?human wdt:P31 wd:Q5 }",
        "complexity_description": "Single pattern with a count",
        "complexity": "simple"
    },
    {
        "id": "1879",
        "valid_gpt_response": true,
        "query": "SELECT ?node ?nodeLabel ?nodeImage ?childNode ?childNodeLabel ?childNodeImage ?rgb WHERE {\n{\nBIND(wd:Q84263196 AS ?node)\n?node ?p ?i.\nOPTIONAL { ?node wdt:P18 ?nodeImage. }\n?childNode ?x ?p.\n?childNode rdf:type wikibase:Property.\nFILTER(STRSTARTS(STR(?i), \"http://www.wikidata.org/entity/Q\"))\nFILTER(STRSTARTS(STR(?childNode), \"http://www.wikidata.org/entity/P\"))\n}\nUNION\n{\nBIND(\"EFFBD8\" AS ?rgb)\nwd:Q84263196 ?p ?childNode.\nOPTIONAL { ?childNode wdt:P18 ?childNodeImage. }\n?node ?x ?p.\n?node rdf:type wikibase:Property.\nFILTER(STRSTARTS(STR(?childNode), \"http://www.wikidata.org/entity/Q\"))\n}\nOPTIONAL {\n?node wdt:P18 ?nodeImage.\n?childNode wdt:P18 ?childNodeImage.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"sv,en\". }\n}",
        "complexity_description": "Multiple UNION, OPTIONAL, and FILTER clauses with complex patterns",
        "complexity": "complex"
    },
    {
        "id": "1880",
        "valid_gpt_response": true,
        "query": "SELECT ?s ?sLabel ?coor ?operator ?operatorLabel ?layer ?capacity ?locationLabel\nWHERE {\n?s wdt:P31/wdt:P279* wd:Q4260475 ;\nwdt:P625 ?coor ;\nwdt:P137 ?operator ;\nOPTIONAL {?s wdt:P18 ?image .}\n?s wdt:P31 ?type .\nVALUES ?operator { wd:Q4898241 wd:Q2756337 wd:Q18343995 wd:Q5038490 wd:Q5197211 wd:Q4667178 wd:Q4761763 }\nBIND(\nIF(?type = wd:Q1402739, \"Field Hospital\",\nIF(?type = wd:Q569500, \"Community Health Centre\",\nIF(?type = wd:Q16917, \"Hospital\",\nIF(?type = wd:Q718966, \"Doctor's Surgery\",\n\"\")))) AS ?layer).\nminus {?s wdt:P31 wd:Q64578911 .}\nminus {?s wdt:P31 wd:Q4287745 .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Multiple filters, optional clause, and nested IF statements",
        "complexity": "complex"
    },
    {
        "id": "1881",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?coord ?img ?layer WHERE {\n?item wdt:P8024 ?Napi;\n(wdt:P19/wdt:P625) ?coord.\n?Nobel wdt:P279 wd:Q7191.\n?item wdt:P166 ?Nobel.\n?Nobel rdfs:label ?layer. FILTER(LANG(?layer) = \"en\")\nOPTIONAL { ?item wdt:P18 ?img. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple joins, optional clause and service call",
        "complexity": "complex"
    },
    {
        "id": "1882",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?name ?coord ?lat ?lon\nWHERE\n{\nhint:Query hint:optimizer \"None\" .\n?item wdt:P131* wd:Q414 .\n?item wdt:P31/wdt:P279* wd:Q7075 .\n?item wdt:P625 ?coord .\n?item p:P625 ?coordinate .\n?coordinate psv:P625 ?coordinate_node .\n?coordinate_node wikibase:geoLatitude ?lat .\n?coordinate_node wikibase:geoLongitude ?lon .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"es\" .\n?item rdfs:label ?name\n}\n}\nORDER BY ASC (?name)",
        "complexity_description": "Multiple joins, subqueries and filters",
        "complexity": "complex"
    },
    {
        "id": "1883",
        "valid_gpt_response": true,
        "query": "SELECT ?recipe ?recipeLabel\nWHERE\n{\n?recipe wdt:P31?/wdt:P279* wd:Q219239;\nwdt:P527 wd:Q21546392.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\", \"fr\". }\n}\nORDER BY UCASE(STR(?recipeLabel))",
        "complexity_description": "Multiple triple patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "1884",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?image\nWHERE\n{\n?item wdt:P31 wd:Q192425.\n?item wdt:P972 wd:Q61729277.\noptional {\n?item wdt:P18 ?image\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de\". }\n}",
        "complexity_description": "Multiple triple patterns, optional block and service call",
        "complexity": "medium"
    },
    {
        "id": "1885",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?itemLabel ?NumeroInv ?item ?coord ?blason ?archives ?rgb WHERE {\n?item wdt:P485 ?archives.\n?archives wdt:P31 wd:Q2860456.\n?item p:P485 ?instat.\n?instat ps:P485 ?AD83;\npq:P217 ?NumeroInv.\n?item wdt:P31 wd:Q484170;\nwdt:P625 ?coord;\nwdt:P94 ?blason.\nBIND ( substr(str(?archives),34,6) AS ?rgb )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr\". }\n}\nORDER BY (?itemLabel)",
        "complexity_description": "Multiple triple patterns, filters and service calls",
        "complexity": "complex"
    },
    {
        "id": "1886",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?biztanleria ?koordenatuak WHERE {\n{ ?item wdt:P31 wd:Q2074737. }\nUNION\n{ ?item wdt:P31 wd:Q484170. }\n?item ((wdt:P131*)/^wdt:P527) wd:Q47588;\nwdt:P1082 ?biztanleria.\nFILTER(?biztanleria < 5000 )\n?item wdt:P625 ?koordenatuak.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"eu\" .\n}\n}",
        "complexity_description": "Multiple UNION patterns, multiple triple patterns, FILTER and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "1887",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?dob ?post ?postLabel ?birthplace ?birthplaceLabel\nWHERE {\nhint:Query hint:optimizer \"None\".\n?post wdt:P279* wd:Q2285706 .\n?item wdt:P39 ?post .\n?item wdt:P19 ?birthplace .\n?birthplace wdt:P131/(wdt:P131?)/(wdt:P131?)/(wdt:P131?) wd:Q25 .\nOPTIONAL {?item wdt:P569 ?dob}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?postLabel ?dob ?itemLabel",
        "complexity_description": "Multiple joins, optional clause and recursive property paths",
        "complexity": "complex"
    },
    {
        "id": "1888",
        "valid_gpt_response": true,
        "query": "SELECT (AVG($stardate) as $average_stardate)\nWHERE\n{\n#star trek films\n{?item wdt:P31 wd:Q61283808.}\nUNION\n{?startrek wdt:P31 wd:Q62573441. #all star trek series\n?item wdt:P179 ?startrek.} #members of star trek series\n?item wdt:P1191 ?date. #get broadcast date (will create dupes if displayed)\n?item p:P840 [ pq:P4895 ?stardate ].\nMINUS { ?item wdt:P31 wd:Q21664088. } #exclude two parter entries\nOPTIONAL {?item wdt:P2047 ?duration.} #allow no durations to examine furtherdown\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?date)",
        "complexity_description": "Multiple UNION, OPTIONAL, and SERVICE clauses with multiple filters",
        "complexity": "complex"
    },
    {
        "id": "1889",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person ?personLabel ?personImage ?parent ?parentLabel ?parentImage WITH {\nSELECT ?person WHERE {\n{SELECT DISTINCT ?person WHERE {\nVALUES $ANCESTOR { wd:Q130805 wd:Q9181 } # George I & Abraham\n$ANCESTOR wdt:P40* ?person .\n}}\nVALUES $DESCENDANT { wd:Q180589 wd:Q302 } # Boris Johnson & Jesus\n?person wdt:P40* $DESCENDANT .\n} } AS %person\nWITH {SELECT ?parent WHERE {\nINCLUDE %person\nBIND(?person AS ?parent)\n} } AS %parent\nWHERE {\nINCLUDE %person\nINCLUDE %parent\n?parent wdt:P40 ?person .\nOPTIONAL {?person wdt:P18 ?personImage}\nOPTIONAL {?parent wdt:P18 ?parentImage}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple nested subqueries, multiple VALUES clauses, and OPTIONAL patterns",
        "complexity": "complex"
    },
    {
        "id": "1890",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?collection ?collectionLabel ?pic\nWHERE\n{\n?item wdt:P170 wd:Q2939083 .\n?item wdt:P276 ?collection.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?collectionLabel",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "1891",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?TypeLabel ?CreateurLabel ?Date ?DepeintLabel ?DepartementLabel ?Atlas (group_concat(?INV;separator=\"; \") as ?INVs) ?image WHERE{\n?item wdt:P195/wdt:P31* wd:Q11681271.\n#OPTIONAL{?item wdt:P170 ?Createur.}\n#OPTIONAL{?item wdt:P571 ?Date.}\n#OPTIONAL{?item wdt:P180 ?Depeint.}\n#OPTIONAL{?item wdt:P195 ?Departement.}\n#OPTIONAL{?item wdt:P31 ?Type.}\nOPTIONAL{?item wdt:P18 ?image.}\nOPTIONAL{?item wdt:P217 ?INV.}\nOPTIONAL{?item wdt:P1212 ?Atlas.}\nFILTER(STRSTARTS(?INV, 'S')) .\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"fr, en\".}\n}\nGROUP BY ?item ?itemLabel ?TypeLabel ?CreateurLabel ?Date ?DepeintLabel ?DepartementLabel ?Atlas ?image\nORDER BY ?INVs",
        "complexity_description": "Multiple optional patterns, group_concat aggregation function and filter",
        "complexity": "complex"
    },
    {
        "id": "1892",
        "valid_gpt_response": true,
        "query": "SELECT ?artiste ?artisteLabel ?lieuN ?lieuNLabel ?coord\nWHERE {\n?artiste wdt:P6379 wd:Q2338135;\nwdt:P19 ?lieuN.\n?lieuN wdt:P625 ?coord.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Three triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "1893",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?image ?coords\nWHERE\n{\n?item wdt:P31/wdt:P279* wd:Q2977 ;\nwdt:P17 wd:Q142 ;\nwdt:P625 ?coords ;\nwdt:P18 ?image .\nFILTER NOT EXISTS { ?item wdt:P5816 wd:Q56556915 }\n{ ?item wdt:P131 wd:Q90 } UNION\n{ ?item wdt:P131/wdt:P131 wd:Q90 } UNION\n{ ?item wdt:P131/wdt:P131/wdt:P131 wd:Q90 }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?itemLabel",
        "complexity_description": "Multiple UNIONs, FILTER NOT EXISTS and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "1894",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel (MIN(YEAR(?date)) AS ?year) (COUNT(DISTINCT ?actor) AS ?number_of_cast_members) (COUNT(DISTINCT ?actress) AS ?number_of_female_cast_members) WHERE {\n?item wdt:P31/wdt:P279* wd:Q11424; wdt:P1552 wd:Q45171911.\nOPTIONAL{?item (p:P161/ps:P161|p:P725/ps:P725) ?actor\nOPTIONAL{?actor wdt:P21 wd:Q6581072. BIND(?actor AS ?actress)}\n}\nOPTIONAL{?item wdt:P577 ?date}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?item ?itemLabel\nHAVING (COUNT(DISTINCT ?actress) <2)\nORDER BY ?year",
        "complexity_description": "Multiple optional patterns, subqueries, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "1895",
        "valid_gpt_response": true,
        "query": "SELECT ?PersonLabel ?birthdate\nWHERE{\n?Person wdt:P106 wd:Q15855449.\n?Person p:P569/psv:P569 [ wikibase:timeValue ?birthdate; wikibase:timePrecision 11 ].\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "1896",
        "valid_gpt_response": true,
        "query": "SELECT ?PID ?PIDLabel (COUNT(?BBLT) AS ?Count) WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?PID wdt:P106 wd:Q12299841;\nwdt:P54 ?BBLT.\n?BBLT wdt:P118 wd:Q2470981.\n}\nGROUP BY ?PID ?PIDLabel\nORDER BY DESC (?Count)",
        "complexity_description": "Multiple triple patterns, service call, and aggregation",
        "complexity": "complex"
    },
    {
        "id": "1897",
        "valid_gpt_response": true,
        "query": "SELECT ?wetenschapper ?wetenschapperLabel ?university ?universityLabel ?twitter ?followers (CONCAT(\"https://twitter.com/\",?twitter) AS ?twitterlink) ?pic WHERE {\n?wetenschapper wdt:P108|wdt:P1416 ?university ;\np:P2002 ?twitterSt .\nOPTIONAL { ?wetenschapper wdt:P18 ?pic . }\n?twitterSt ps:P2002 ?twitter .\nOPTIONAL { ?twitterSt pqv:P3744/wikibase:quantityAmount ?followers . }\n?university wdt:P31 wd:Q3918 ;\nwdt:P17 wd:Q55 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?followers)",
        "complexity_description": "Multiple joins, optional patterns, and service calls",
        "complexity": "complex"
    },
    {
        "id": "1898",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?article ?itemLabel ?constituencyLabel ?firstpartyLabel ?electionLabel (?start as ?firstdate) ?firsttermLabel\n{\n?membership wdt:P279 wd:Q16707842 . # find all MP positions\n?item p:P39 ?positionStatement . ?positionStatement ps:P39 ?membership . # and people who held such a position\nOPTIONAL { ?positionStatement pq:P768 ?constituency . } # constituency if known\nOPTIONAL { ?positionStatement pq:P4100 ?firstparty . } # party if known\n?positionStatement pq:P580 ?start . ?positionStatement pq:P582 ?end .\n?positionStatement pq:P2715 ?election . ?membership wdt:P2937 ?firstterm\nFILTER NOT EXISTS {\n?membership2 wdt:P279 wd:Q16707842 .\n?item p:P39 ?positionStatement2 .\n?positionStatement2 ps:P39 ?membership2 .\n?positionStatement2 pq:P582 ?end2 .\nFILTER (?end2 <= ?start) . } # filter out any where they served earlier\nFILTER NOT EXISTS {\n?membership3 wdt:P279 wd:Q16707842 . ?item p:P39 ?positionStatement3 .\n?positionStatement3 ps:P39 ?membership3 . FILTER NOT EXISTS { ?positionStatement3 pq:P582 ?end3 . } }\n#not current\nfilter not exists { ?item wdt:P570 ?died } .\noptional { ?article schema:about ?item . ?article schema:isPartOf <https://en.wikipedia.org/>. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language 'en' }\n} order by ?firstdate",
        "complexity_description": "Multiple optional patterns, filters and subqueries",
        "complexity": "complex"
    },
    {
        "id": "1899",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?item) AS ?count)\nWHERE {\n?item wdt:P195 wd:Q180788 . #National Gallery\n?item wdt:P170 ?artist.\n?artist wdt:P21 wd:Q6581072. #male = Q6581097\n}",
        "complexity_description": "Two triple patterns with two filters",
        "complexity": "medium"
    },
    {
        "id": "1900",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?itemDescription ?image ?location ?distance ?sitelink WHERE {\nSERVICE wikibase:around {\n?item wdt:P625 ?location.\nbd:serviceParam wikibase:center \"[AUTO_COORDINATES]\".\nbd:serviceParam wikibase:radius \"1\".\nbd:serviceParam wikibase:distance ?distance.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,es,de\". }\nOPTIONAL { ?item wdt:P18 ?image. }\nOPTIONAL {\n?sitelink schema:about ?item.\nFILTER(REGEX(STR(?sitelink), \"[AUTO_LANGUAGE].wikipedia.org/wiki/\"))\n}\n?item wdt:P31/wdt:P279* wd:Q294440.\n}\nORDER BY asc(?distance)",
        "complexity_description": "Multiple services, filters and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "1901",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?site ?siteLabel (YEAR(?date) AS ?year) ?area ?coords ?image\nWHERE\n{\n?site wdt:P31/wdt:P279* wd:Q473972 ;\nwdt:P17 wd:Q142 ;\nwdt:P2046 ?area ;\np:P1435 ?protectionStatement ;\nwdt:P625 ?coords .\n?protectionStatement ps:P1435 wd:Q19683138 ;\npq:P580 ?date .\nOPTIONAL { ?site wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?year ?siteLabel",
        "complexity_description": "Multiple triple patterns, optional clause, and service call",
        "complexity": "complex"
    },
    {
        "id": "1902",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?version WITH {\nSELECT ?item ?version ?versionNumber WHERE {\n?item wdt:P348 ?version.\nBIND(xsd:integer(REPLACE(STRBEFORE(?version, \".\"), \"^v\", \"\")) AS ?versionNumber)\n}\nORDER BY DESC(?versionNumber)\nLIMIT 25\n} AS %results WHERE {\nINCLUDE %results.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?versionNumber)",
        "complexity_description": "Multiple subqueries, ORDER BY and LIMIT clauses",
        "complexity": "complex"
    },
    {
        "id": "1903",
        "valid_gpt_response": true,
        "query": "select\n?quantity (sample(?quantityLabel) as ?quantityLabel) (sample(?quantityDesc) as ?quantityDesc)\n?unit (sample(?unitLabel) as ?unitLabel) (sample(?unitDesc) as ?unitDesc)\n(group_concat(?unitSymbol; separator = \"; \") as ?unitSymbols)\n(sample(?unitStatus) as ?unitStatus)\nwhere {\nvalues ?source { wd:Q68977959 }\n?quantity wdt:P279+ wd:Q71550118 .\noptional { ?quantity rdfs:label ?quantityLabel . filter (lang(?quantityLabel) = \"en\") }\noptional { ?quantity schema:description ?quantityDesc . filter (lang(?quantityDesc) = \"en\") }\n?quantity p:P8111 ?quantityStatement .\n?quantityStatement prov:wasDerivedFrom [ pr:P248 ?source ] ; ps:P8111 ?unit .\noptional { ?unit rdfs:label ?unitLabel . filter (lang(?unitLabel) = \"en\") }\noptional { ?unit schema:description ?unitDesc . filter (lang(?unitDesc) = \"en\") }\noptional {\n?unit p:P5061 [ prov:wasDerivedFrom [ pr:P248 ?source ] ; ps:P5061 ?unitSymbol ] .\nfilter (lang(?unitSymbol) = \"en\")\n}\noptional { ?quantityStatement a ?bestRank . }\nbind (if(bound(?bestRank) && ?bestRank = wikibase:BestRank, \"<recommended>\", \"<accepted>\") as ?unitStatus)\n} group by ?quantity ?unit",
        "complexity_description": "Multiple optional patterns, property paths, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "1904",
        "valid_gpt_response": true,
        "query": "SELECT ?udalerria ?udalerriaLabel ?mugakideak ?mugakideakLabel WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n{ ?udalerria wdt:P31 wd:Q2074737. }\nUNION\n{ ?udalerria wdt:P31 wd:Q484170. }\n?udalerria ((wdt:P131*)/^wdt:P527) wd:Q47588.\n?udalerria wdt:P47 ?mugakideak.\n}",
        "complexity_description": "Multiple UNION patterns, multiple triple patterns",
        "complexity": "medium"
    },
    {
        "id": "1905",
        "valid_gpt_response": true,
        "query": "SELECT ?CentrosSalud ?CentrosSaludLabel ?typeOf ?typeOfLabel ?coordenadas ?ubicaci_n ?ubicaci_nLabel ?imagen ?sitelinkES\nWHERE {\n{?CentrosSalud wdt:P31 wd:Q16917.}\nUNION {?CentrosSalud wdt:P31 wd:Q569500.}\n?CentrosSalud wdt:P17 wd:Q414.\n?CentrosSalud wdt:P31 ?typeOf\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],es\". }\nOPTIONAL {?CentrosSalud wdt:P625 ?coordenadas.}\nOPTIONAL {?CentrosSalud wdt:P18 ?imagen.}\nOPTIONAL { ?sitelinkES schema:isPartOf <https://es.wikipedia.org/>;\nschema:about ?CentrosSalud.\n}\n}",
        "complexity_description": "Multiple UNION and OPTIONAL clauses",
        "complexity": "medium"
    },
    {
        "id": "1906",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?number ?loyalLabel WHERE {\n?person wdt:P31 wd:Q5.\n?person wdt:P1120 ?number.\n# ?person wdt:P1345 ?number.\nOPTIONAL {?person wdt:P945 ?loyal.}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?number)",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1907",
        "valid_gpt_response": true,
        "query": "SELECT ?sous_s_rie_F_19_des_Archives_nationales ?sous_s_rie_F_19_des_Archives_nationalesLabel ?image ?coordonn_es_g_ographiques ?date_de_fondation_ou_de_cr_ation ?cr_ateur ?cr_ateurLabel WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?sous_s_rie_F_19_des_Archives_nationales wdt:P361 wd:Q64556342.\nOPTIONAL { ?sous_s_rie_F_19_des_Archives_nationales wdt:P18 ?image. }\nOPTIONAL { ?sous_s_rie_F_19_des_Archives_nationales wdt:P625 ?coordonn_es_g_ographiques. }\nOPTIONAL { ?sous_s_rie_F_19_des_Archives_nationales wdt:P571 ?date_de_fondation_ou_de_cr_ation. }\nOPTIONAL { ?sous_s_rie_F_19_des_Archives_nationales wdt:P170 ?cr_ateur. }\n}\nLIMIT 1000",
        "complexity_description": "Multiple optional patterns with filters",
        "complexity": "medium"
    },
    {
        "id": "1908",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\n?q wdt:P17 wd:Q142 ; wdt:P31/wdt:P279* wd:Q55488 ; wdt:P625 ?coord .\n}",
        "complexity_description": "Simple query with 3 triple patterns",
        "complexity": "simple"
    },
    {
        "id": "1909",
        "valid_gpt_response": true,
        "query": "SELECT ?country ?countryLabel ?leader ?leaderLabel ?birthdate ?age\nWHERE {\n?country wdt:P31 wd:Q6256 ; wdt:P30 wd:Q15 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nOPTIONAL {\n?country wdt:P6 ?leader .\nOPTIONAL {\n?leader wdt:P569 ?birthdate .\nBIND(YEAR(NOW()) - YEAR(?birthdate) - IF(MONTH(NOW()) < MONTH(?birthdate) || (MONTH(NOW()) = MONTH(?birthdate) && DAY(NOW()) < DAY(?birthdate)), 1, 0) AS ?age) .\n}\n}\n}\nORDER BY ?countryLabel ?leaderLabel",
        "complexity_description": "Multiple optional patterns with calculations and filtering",
        "complexity": "complex"
    },
    {
        "id": "1910",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?student ?studentLabel ?advisor ?advisorLabel ?thesisLabel ?year WHERE {\nVALUES ?professions {\nwd:Q170790\nwd:Q82594\n}\n?student wdt:P184 ?advisor;\nwdt:P106 ?professions.\nOPTIONAL {\n?student wdt:P1026 ?thesis;\np:P1026 _:b1.\n_:b1 pq:P585 ?thesisDate.\nBIND(YEAR(?thesisDate) AS ?year)\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}\nLIMIT 10",
        "complexity_description": "Multiple triple patterns, OPTIONAL clause, and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "1911",
        "valid_gpt_response": true,
        "query": "SELECT ?painting ?image ?paintingLabel WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?painting wdt:P31 wd:Q93184;\nwdt:P170 wd:Q1064767.\nOPTIONAL { ?painting wdt:P18 ?image. }\n?painting wdt:P180 wd:Q11446.\n}\nLIMIT 1000",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1912",
        "valid_gpt_response": true,
        "query": "select ?shape ?parkLabel ?image {\n?park wdt:P31/wdt:P279* wd:Q46169 .\n?park wdt:P17 wd:Q34 .\n?park wdt:P3896 ?shape .\nOPTIONAL { ?park wdt:P18 ?image . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} limit 100",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1913",
        "valid_gpt_response": true,
        "query": "select ?thing ?label ?shape {\n?thing wdt:P3896 ?shape .\n?thing wdt:P17 wd:Q30 .\n?thing rdfs:label ?label .\nfilter(lang(?label) = 'en')\nfilter(contains(ucase(?label), \"A\"))\n?thing wdt:P31 wd:Q35657 .\n}",
        "complexity_description": "Multiple filters and triple patterns",
        "complexity": "medium"
    },
    {
        "id": "1914",
        "valid_gpt_response": true,
        "query": "SELECT ?mathematician ?mathematicianLabel ?dob ?sibling ?siblingLabel ?siblingProfessionsLabel\nWHERE\n{\nVALUES ?professions {wd:Q170790 wd:Q82594} .\nVALUES ?siblingProfessions {wd:Q639669 wd:Q33999}.\n?mathematician wdt:P106 ?professions ;\nwdt:P3373 ?sibling ;\nwdt:P569 ?dob .\n?sibling wdt:P106 ?siblingProfessions .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}\nORDER BY ASC(?dob)",
        "complexity_description": "Multiple VALUES, SERVICE and ORDER BY clauses",
        "complexity": "medium"
    },
    {
        "id": "1915",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\n?comm1 p:P31/ps:P31/wdt:P279* wd:Q55488 ; wdt:P17 wd:Q145 ; wdt:P625 ?coord1 ; wdt:P197 ?comm2 .\nMINUS { ?comm1 p:P31 [ ps:P31 wd:Q55488 ; pq:P582 [] ] } .\nMINUS { ?comm2 p:P31 [ ps:P31 wd:Q55488 ; pq:P582 [] ] } .\nMINUS { ?comm1 p:P31 [ ps:P31 wd:Q928830 ] } .\nMINUS { ?comm2 p:P31 [ ps:P31 wd:Q928830 ] } .\n?comm2 wdt:P625 ?coord2 .\n?comm1 p:P625 [ ps:P625 []; psv:P625 [ wikibase:geoLongitude ?coord1lon; wikibase:geoLatitude ?coord1lat; ] ] .\n?comm2 p:P625 [ ps:P625 []; psv:P625 [ wikibase:geoLongitude ?coord2lon; wikibase:geoLatitude ?coord2lat; ] ] .\nBIND(CONCAT('LINESTRING (', STR(?coord1lon), ' ', STR(?coord1lat), ',', STR(?coord2lon), ' ', STR(?coord2lat), ')') AS ?str) .\nBIND(STRDT(?str, geo:wktLiteral) AS ?line) .\n}",
        "complexity_description": "Multiple MINUS clauses, property paths, and BIND operations",
        "complexity": "complex"
    },
    {
        "id": "1916",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?uni ?uniLabel ?pr WHERE {\n?uni wdt:P31/wdt:P279* wd:Q3918.\nSERVICE <http://dbpedia.org/sparql> {\n?uni vrank:hasRank/vrank:rankValue ?pr\n}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n}\n} ORDER BY DESC(?pr) LIMIT 50",
        "complexity_description": "Multiple services, joins and ordering",
        "complexity": "complex"
    },
    {
        "id": "1917",
        "valid_gpt_response": true,
        "query": "select ?country ?countryLabel ?state ?stateLabel ?county ?countyLabel {\n?state wdt:P31/wdt:P279 wd:Q10864048 .\n?county wdt:P31/wdt:P279 wd:Q13220204 .\n?state wdt:P17 ?country .\n?county wdt:P131 ?state .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, multiple services",
        "complexity": "medium"
    },
    {
        "id": "1918",
        "valid_gpt_response": true,
        "query": "SELECT ?itemLabel (COUNT(distinct ?alfabet) AS ?cnt) WHERE {\n?item wdt:P31/wdt:P279* wd:Q9788.\nFILTER NOT EXISTS {?alfabet wdt:P31/wdt:P279* wd:Q3241972.}\nFILTER NOT EXISTS {?alfabet wdt:P279+ wd:Q9788.}\nFILTER NOT EXISTS {?alfabet wdt:P31/wdt:P279* wd:Q15139721.}\nFILTER NOT EXISTS {?alfabet wdt:P31/wdt:P279* wd:Q10856962.}\nFILTER NOT EXISTS {?alfabet wdt:P31/wdt:P279* wd:Q188725.}\n?alfabet wdt:P527 ?item.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"ru, en\" .\n}\n}\nGROUP BY ?item ?itemLabel\nORDER BY DESC(?cnt)",
        "complexity_description": "Multiple FILTER NOT EXISTS and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "1919",
        "valid_gpt_response": true,
        "query": "SELECT ?compound ?compoundLabel ?speciesLabel ?source ?sourceLabel ?doi ?wpid WHERE {\n?compound wdt:P31 wd:Q11173.\nMINUS { ?compound wdt:P31 wd:Q8054. }\n?compound p:P703 ?statement.\n?statement rdf:type wikibase:BestRank.\n?statement ps:P703 ?species.\nFILTER ( ?species != wd:Q15978631 )\nOPTIONAL {\n?statement (prov:wasDerivedFrom/pr:P248) ?source.\nOPTIONAL { ?source wdt:P2410 ?wpid. }\nOPTIONAL { ?source wdt:P356 ?doi. }\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ASC(?compound)",
        "complexity_description": "Multiple filters, optional patterns and service calls",
        "complexity": "complex"
    },
    {
        "id": "1920",
        "valid_gpt_response": true,
        "query": "SELECT ?p ?pLabel ?loc WITH {\nSELECT ?p ?longitude ?test WHERE {\n?p wdt:P17 wd:Q145 .\n?p p:P625 [\npsv:P625 [\nwikibase:geoLongitude ?longitude ]\n]\nFILTER (ABS(?longitude + 1.83333) < 0.01)\n} } AS %matches\nWHERE {\nINCLUDE %matches\n?p wdt:P625 ?loc .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple subqueries, filters and services",
        "complexity": "complex"
    },
    {
        "id": "1921",
        "valid_gpt_response": true,
        "query": "SELECT ?museum ?museumLabel ?coord ?image WHERE {\n?museum wdt:P31/wdt:P279* wd:Q33506 ; wdt:P17 wd:Q948 .\nOPTIONAL { ?museum wdt:P625 ?coord }\nOPTIONAL { ?museum wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple optional patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "1922",
        "valid_gpt_response": true,
        "query": "SELECT ?q1 ?q2 ?label ?coord1 ?coord2 ?dist ?layer ?line WHERE {\n?q1 wdt:P31 wd:Q484170 ; rdfs:label ?label ; wdt:P625 ?coord1 . FILTER (lang(?label) = \"fr\").\n?q1 p:P625/psv:P625 ?valuenode1. ?valuenode1 wikibase:geoLatitude ?lat1 . ?valuenode1 wikibase:geoLongitude ?lon1.\n?q2 wdt:P31 wd:Q484170 ; rdfs:label ?label ; wdt:P625 ?coord2 . FILTER (lang(?label) = \"fr\").\n?q2 p:P625/psv:P625 ?valuenode2. ?valuenode2 wikibase:geoLatitude ?lat2 . ?valuenode2 wikibase:geoLongitude ?lon2.\nFILTER ( str(?q1) > str(?q2) )\nBIND(geof:distance(?coord1, ?coord2) AS ?dist).\nBIND(floor(?dist/100) AS ?layer).\nBIND(CONCAT('LINESTRING (', STR(?lon1), ' ', STR(?lat1), ',', STR(?lon2), ' ', STR(?lat2), ')') AS ?str) .\nBIND(STRDT(?str, geo:wktLiteral) AS ?line)\nFILTER ( ?dist > 100 )\n}\nLIMIT 100",
        "complexity_description": "Multiple filters, bindings and geospatial functions",
        "complexity": "complex"
    },
    {
        "id": "1923",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel (SAMPLE(?occname) AS ?occname) ?sitelinks ?WDstatements ?article (SAMPLE(?birth) AS ?birth) (SAMPLE(?death) AS ?death) (SAMPLE(?bloodhound) AS ?bloodhound) (SAMPLE(?harvard) AS ?harvard) WHERE {\n#?occ wdt:P279|wdt:P279/wdt:P279* wd:Q2374149.\nVALUES ?occ { wd:Q2374149 wd:Q2083925 }\n?item wdt:P106 ?occ .\nOPTIONAL { ?item wdt:P108 ?emp . }\n?item wdt:P21 wd:Q6581072;\nwikibase:statements ?WDstatements;\nwikibase:sitelinks ?sitelinks.\nOPTIONAL {\n?article schema:about ?item;\nschema:inLanguage \"en\";\nschema:isPartOf <https://en.wikipedia.org/>.\n}\n?occ rdfs:label ?occname .\nOPTIONAL {?item wdt:P569 ?birth .}\nOPTIONAL {?item wdt:P570 ?death .}\nOPTIONAL {?item wdt:P6944 ?bloodhound .}\nOPTIONAL {?item wdt:P6264 ?harvard .}\nFILTER(LANG(?occname) = \"en\").\nFILTER((?birth<\"1900-01-01T00:00:00Z\"^^xsd:dateTime)||(?death<\"1920-01-01T00:00:00Z\"^^xsd:dateTime)).\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}\nGROUP BY ?item ?itemLabel ?sitelinks ?WDstatements ?article\nORDER BY DESC (?sitelinks)",
        "complexity_description": "Multiple optional patterns, filters and service calls",
        "complexity": "complex"
    },
    {
        "id": "1924",
        "valid_gpt_response": true,
        "query": "SELECT ?_vBIB20 ?_vBIB20Label ?datum ?tibURL WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?_vBIB20 wdt:P361 wd:Q94495218;\nwdt:P577 ?datum;\nwdt:P973 ?tibURL.\n}\nLIMIT 100",
        "complexity_description": "Simple query with 3 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "1925",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?pic ?geo ?layer ?iNatlinkI ?iNatlinkII WHERE {\n?item wdt:P31 wd:Q1221156.\n?item wdt:P7471 ?iNat.\n?item wdt:P3896 ?geo.\n?item rdfs:label ?label FILTER (lang(?label) = \"de\") .\nBIND(?label AS ?layer).\nBIND (?itemLabel AS ?rgb)\nOPTIONAL { ?item wdt:P18 ?pic. }\nBIND(URI(CONCAT(\"https://www.inaturalist.org/places/\", STR(?iNat))) AS ?iNatlinkI)\nBIND(URI(CONCAT(\"https://www.inaturalist.org/observations?subview=grid&view=species&place_id=\", STR(?iNat))) AS ?iNatlinkII)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"de,en\". }\n}",
        "complexity_description": "Multiple filters, bindings and optional clause",
        "complexity": "medium"
    },
    {
        "id": "1926",
        "valid_gpt_response": true,
        "query": "SELECT\n?author1 ?author1Label (SAMPLE(?image1_) AS ?image1) ?rgb\n?author2 ?author2Label (SAMPLE(?image2_) AS ?image2)\nWITH {\nSELECT\n?vortrag1 ?author1\n(SAMPLE(?dark_rgb_) AS ?dark_rgb)\n(SAMPLE(?light_rgb_) AS ?light_rgb)\nWHERE {\n# Find people at the event\n{\n?vortrag1 wdt:P361 wd:Q94495218; wdt:P50 ?author1 .\nBIND (\"EEEEEE\" AS ?dark_rgb_)\n}\n}\nGROUP BY ?author1 ?vortrag1\n} AS %authors\nWITH {\nSELECT DISTINCT ?author1 ?author2 ?rgb WHERE {\nINCLUDE %authors\n#wd:Q94495218 (wdt:P823 | wdt:P664 | ^wdt:P1344 | wdt:P710 | ^wdt:P4745 / ^wdt:P1433 / wdt:P50) ?author2 .\n# Find co-authors on #vBIB\n?vortrag2 wdt:P361 wd:Q94495218; wdt:P50 ?author2 .\nFILTER (?author1 != ?author2)\nFILTER (?vortrag1 = ?vortrag2)\nBIND(COALESCE(?dark_rgb, ?light_rgb) AS ?rgb)\n}\n} AS %result\nWHERE {\nINCLUDE %result\nOPTIONAL { ?author1 wdt:P18 ?image1_ . }\nOPTIONAL { ?author2 wdt:P18 ?image2_ . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,sv,ru,zh\".\n}\n}\nGROUP BY ?author1 ?author1Label ?rgb ?author2 ?author2Label ?vortrag1 ?vortrag2",
        "complexity_description": "Multiple subqueries, joins, and filters",
        "complexity": "complex"
    },
    {
        "id": "1927",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?marriage ?marriageLabel ?time ?image\n{\n{\nSELECT ?marriage ?time {\n?marriage wdt:P31|wdt:P279 wd:Q17422;\nwdt:P580 ?time.\n}\n}\nUNION {\nSELECT ?marriage ?time {\n?marriage wdt:P31|wdt:P279 wd:Q17422;\nwdt:P585 ?time.\n}\n}\nOPTIONAL{\n?marriage wdt:P18 ?image.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple UNION and OPTIONAL blocks with SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "1928",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?countryLabel ?weight ?unitLabel ?img WHERE {\n?item wdt:P31 wd:Q170984 .\nOPTIONAL {\n?item p:P2067 ?weight_stmt .\n?weight_stmt ps:P2067 ?weight .\n?weight_stmt psv:P2067/wikibase:quantityUnit ?unit .\n?weight_stmt psv:P2067/wikibase:quantityNormalized/wikibase:quantityAmount ?normalised .\n}\nOPTIONAL {?item wdt:P17 ?country} .\nOPTIONAL {?item wdt:P18 ?img} .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,de,es,it,ru\". }\n} ORDER BY DESC(?normalised) ?itemLabel",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "1929",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?state ?stateLabel ?cases ?shape ?rgb ?time WHERE {\nwd:Q84055514 wdt:P527 ?item.\n?item wdt:P276 ?state ; p:P1603 ?casestmt.\n?state wdt:P3896 ?shape.\n?casestmt ps:P1603 ?cases ; pq:P585 ?time .\n{ SELECT (MAX(?cases_) as ?mc) {\nwd:Q84055514 wdt:P527/wdt:P1603 ?cases_\n} }\nFILTER NOT EXISTS { ?item p:P1603/pq:P585 ?time_. FILTER(?time < ?time_) }\nBIND(IF(?cases > (5 * ?mc)/6,\"a50f15\", IF(?cases > (2 * ?mc)/3,\"de2d26\",\nIF(?cases > ?mc/2,\"fb6a4a\", IF(?cases > ?mc/3,\"fc9272\",\nIF(?cases > ?mc/6,\"fcbba1\", \"fee5d9\"))))) as ?rgb)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, subqueries, and conditional logic",
        "complexity": "complex"
    },
    {
        "id": "1930",
        "valid_gpt_response": true,
        "query": "SELECT ?p ?pLabel ?groupLabel (URI(CONCAT(\"https://twitter.com/\", ?tw)) AS ?twitterlink) WHERE {\n?p p:P39 ?s. ?s ps:P39 wd:Q77685926; pq:P4100 ?group\nOPTIONAL {?p wdt:P2002 ?tw}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?groupLabel ?pLabel",
        "complexity_description": "Multiple joins, optional clause, and service call",
        "complexity": "complex"
    },
    {
        "id": "1931",
        "valid_gpt_response": true,
        "query": "SELECT ?thing ?thingLabel ?count with {\nSELECT ?thing (count(?thing) as ?count) WHERE {\n?item wdt:P108 ?thing .\n?item wdt:P21 wd:Q6581072 .\n?item wdt:P31 wd:Q5 .\n} group by ?thing } as %i\nwhere\n{\ninclude %i\nminus {?thing wdt:P31/wdt:P279* wd:Q3918 . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} order by desc(?count)",
        "complexity_description": "Multiple subqueries, grouping and filtering",
        "complexity": "complex"
    },
    {
        "id": "1932",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\n?bib wdt:P31/wdt:P279* wd:Q7075 ;\nwdt:P2037 ?github ;\nwdt:P625 ?coordinate .\n}",
        "complexity_description": "Multiple triple patterns with property paths",
        "complexity": "medium"
    },
    {
        "id": "1933",
        "valid_gpt_response": true,
        "query": "SELECT ?Die_Gartenlaube ?Die_GartenlaubeLabel ?schlagwort1Label ?schlagwort2Label ?coords WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n{\nSELECT * WHERE {\n?Die_Gartenlaube wdt:P1433 wd:Q655617;\nwdt:P921 ?schlagwort1;\nwdt:P921 ?schlagwort2.\n}\n}\n{ SELECT * WHERE { ?schlagwort1 wdt:P31 wd:Q12136. } }\n{ SELECT * WHERE { ?schlagwort2 wdt:P625 ?coords. }}\n}",
        "complexity_description": "Multiple nested subqueries with multiple triple patterns",
        "complexity": "complex"
    },
    {
        "id": "1934",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?blkoe ?blkoeLabel ?image ?artikel ?artikelLabel ?edgeLabel WHERE {\n?artikel wdt:P1433 wd:Q655617;\nwdt:P921 ?schlagwort.\n?schlagwort wdt:P31 wd:Q5; wdt:P18 ?image.\n?blkoe wdt:P1433 wd:Q665807;\nwdt:P31 wd:Q19389637;\nwdt:P921 ?schlagwort.\nBIND(\"Thema in\" AS ?edgeLabel)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?schlagwort",
        "complexity_description": "Multiple triple patterns, SERVICE clause and BIND function",
        "complexity": "medium"
    },
    {
        "id": "1935",
        "valid_gpt_response": true,
        "query": "SELECT\n?char\n?charName\n(GROUP_CONCAT(DISTINCT ?occupationLabel; SEPARATOR = \",\") AS ?arrOccupations)\nWHERE {\n?char wdt:P1080 wd:Q18043309; # \"from narrative universe\" \"Start Trek multiverse\"\nwdt:P1080 ?universe; #\"from narrative universe\"\nwdt:P31 wd:Q15632617; # \"instance of\" \"fictional human\"\nwdt:P106 wd:Q87265645; # occupation \"spaceship captain\"\nwdt:P106 ?occupation.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?char rdfs:label ?charName.\n?universe rdfs:label ?universeLabel.\n?type rdfs:label ?typeLabel.\n?country_of_citizenship rdfs:label ?country_of_citizenshipLabel.\n?place_of_birth rdfs:label ?place_of_birthLabel.\n?occupation rdfs:label ?occupationLabel.\n}\n}\nGROUP BY ?char ?charName ?arrOccupations",
        "complexity_description": "Multiple filters, joins and aggregations",
        "complexity": "complex"
    },
    {
        "id": "1936",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?wditem ?wditemLabel ?date ?image ?work ?workLabel ?coord ?description WHERE {\nSERVICE <http://dbpedia.org/sparql> {\n?item dct:subject dbc:Selenographers ;\nowl:sameAs ?wditem FILTER regex (?wditem, \"wikidata.org\") .\n}\nSERVICE <https://query.wikidata.org/sparql> {\n{?wditem wdt:P569 ?date .}\nOPTIONAL {?wditem wdt:P18 ?image } .\n?wditem rdfs:label ?wditemLabel FILTER (LANG(?wditemLabel)=\"en\") .\n}\n}",
        "complexity_description": "Multiple services, filters, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "1937",
        "valid_gpt_response": true,
        "query": "SELECT ?place ?placeLabel ?location ?image ?layer WHERE {\n{\nwd:Q15296697 wdt:P625 ?arcLoc.\nSERVICE wikibase:around {\n?place wdt:P625 ?location.\nbd:serviceParam wikibase:center ?arcLoc;\nwikibase:radius \"2\".\n}\nBIND(\"pov\" AS ?layer)\nOPTIONAL { ?place wdt:P18 ?image. }\n}\nUNION\n{\nBIND(wd:Q15296697 AS ?place)\n?place wdt:P625 ?location; wdt:P18 ?image\nBIND(\"Zentrum\" AS ?layer)\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple services, UNION operator, and OPTIONAL clause",
        "complexity": "complex"
    },
    {
        "id": "1938",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?image WHERE {\n?item wdt:P921 wd:Q65560542 .\n?item wdt:P31 wd:Q3305213 .\n?item wdt:P18 ?image .\n}\nLIMIT 4000",
        "complexity_description": "Three triple patterns with constants",
        "complexity": "simple"
    },
    {
        "id": "1939",
        "valid_gpt_response": true,
        "query": "SELECT ?author ?authorLabel ?orcid ?twitter ?location\nWHERE\n{\n?author wdt:P31 wd:Q5;\nwdt:P496 ?orcid;\nwdt:P2002 ?twitter.\nOPTIONAL { ?author wdt:P551/wdt:P625 ?location. }\nOPTIONAL { ?author wdt:P19/wdt:P625 ?location. }\nFILTER(BOUND(?location)).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple optional patterns, filter and service",
        "complexity": "medium"
    },
    {
        "id": "1940",
        "valid_gpt_response": true,
        "query": "SELECT ?location ?locationLabel ?coord ?page ?point_in_time ?number_of_participants WHERE {\nwd:Q95116664 p:P276 ?statement.\n?statement ps:P276 ?location.\n?location wdt:P625 ?coord.\nOPTIONAL { ?statement pq:P856 ?page. }\nOPTIONAL { ?statement pq:P585 ?point_in_time. }\nOPTIONAL { ?statement pq:P1132 ?number_of_participants. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple optional patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "1941",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?itemDescription (URI(REPLACE(?pattern, '\\\\$1', ?carthalia)) AS ?carthalia_URL) (SAMPLE(?coord) AS ?coord)\nWHERE {\nwd:P5652 wdt:P1630 ?pattern .\n?item wdt:P5652 ?carthalia .\n?item wdt:P625 ?coord .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,de,fr,it,ru\". }\n}\nGROUP BY ?item ?itemLabel ?itemDescription ?carthalia ?carthalia_URL ?pattern ?coord\nLIMIT 6000",
        "complexity_description": "Multiple joins, service call, and group by",
        "complexity": "complex"
    },
    {
        "id": "1942",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?coor ?popul\n{\n?item wdt:P31/wdt:P279* wd:Q7930989;\nwdt:P17 wd:Q159.\nMINUS {[] (wdt:P19|wdt:P20)/wdt:P131* ?item .}\n?item wdt:P625 ?coor.\n?item wdt:P1082 ?popul.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?popul)",
        "complexity_description": "Multiple triple patterns, MINUS clause and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "1943",
        "valid_gpt_response": true,
        "query": "SELECT\n?number_of_citing_works\n?author ?authorLabel\n?organization ?organizationLabel\n?example_work ?example_workLabel\nWITH {\nSELECT DISTINCT ?author WHERE {\n?author wdt:P27 | wdt:P1416/wdt:P17 | wdt:P108/wdt:P17 wd:Q43 .\n}\n} AS %authors\nWITH {\nSELECT\n?author\n(COUNT(DISTINCT ?citing_work) AS ?number_of_citing_works)\n(SAMPLE(?organization_) AS ?organization)\n(SAMPLE(?work) AS ?example_work)\nWHERE {\nINCLUDE %authors\n?work wdt:P50 ?author .\nOPTIONAL { ?citing_work wdt:P2860 ?work . }\nOPTIONAL {\n?author wdt:P1416 | wdt:P108 ?organization_ .\n?organization_ wdt:P17 wd:Q43\n}\n}\nGROUP BY ?author\n} AS %results\nWHERE {\nINCLUDE %results\nservice wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}\nORDER BY DESC(?number_of_citing_works)",
        "complexity_description": "Multiple subqueries, joins, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "1944",
        "valid_gpt_response": true,
        "query": "SELECT ?paper ?paperLabel ?video WHERE {\n?paper wdt:P1433 wd:Q95688968 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\nOPTIONAL {?paper wdt:P973 ?video .}\n} ORDER BY ?paperLabel",
        "complexity_description": "Optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1945",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?start WHERE {\n?person wdt:P31 wd:Q5 ; wdt:P21 wd:Q6581072 ; p:P39 ?statement .\n?statement ps:P39 wd:Q258045 .\nOPTIONAL { ?statement pq:P580 ?start } .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?start",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1946",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel\nWHERE\n{\n?item wdt:P31 wd:Q16521 .\n?item wdt:P171* wd:Q5113 .\nFILTER EXISTS { ?wen schema:about ?item . ?wen schema:inLanguage \"en\" }\nFILTER NOT EXISTS {?item wdt:P18 ?pic}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" .}\n}",
        "complexity_description": "Multiple filters, service call and property paths",
        "complexity": "medium"
    },
    {
        "id": "1947",
        "valid_gpt_response": true,
        "query": "SELECT\n?year ?fellow ?fellowLabel ?fellowDescription ?image ?orcid ?twitter ?github ?homepage ?wikimedia\nWHERE {\n?fellow p:P166 ?award_statement .\n?award_statement ps:P166 wd:Q42092479 .\nOPTIONAL {\n?award_statement pq:P580 ?time\nBIND(YEAR(?time) AS ?year)\n}\nOPTIONAL { ?fellow wdt:P18 ?image }\nOPTIONAL {\n?fellow wdt:P496 ?orcid_id\nBIND(URI(CONCAT(\"https://orcid.org/\",?orcid_id)) AS ?orcid)\n}\nOPTIONAL {\n?fellow wdt:P2037 ?github_name\nBIND(URI(CONCAT(\"https://github.com/\",?github_name)) AS ?github)\n}\nOPTIONAL {\n?fellow wdt:P2002 ?twitter_name\nBIND(URI(CONCAT(\"https://twitter.com/\",?twitter_name)) AS ?twitter)\n}\nOPTIONAL {\n?fellow wdt:P856 ?homepage\n}\nOPTIONAL {\n?fellow wdt:P4174 ?wikimedia_name\nBIND(URI(CONCAT(\"https://www.wikidata.org/w/index.php?title=Special%3ACentralAuth&target=\",?wikimedia_name)) AS ?wikimedia)\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,no,ru,sv,zh\" . }\n}\nORDER BY DESC(?year)",
        "complexity_description": "Multiple optional patterns and bindings with functions",
        "complexity": "complex"
    },
    {
        "id": "1948",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?p1 ?p1Label ?p2 ?p2Label WHERE {\n?p1 wdt:P39 wd:Q1939555 .\n?p2 wdt:P39 wd:Q1939555 .\n?p1 wdt:P26 ?p2 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "1949",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?citizen_ofLabel\nWHERE {\nhint:Query hint:optimizer \"None\".\nSERVICE wikibase:mwapi {\nbd:serviceParam wikibase:api \"Search\";\nwikibase:endpoint \"www.wikidata.org\";\nmwapi:srsearch \"slave haswbstatement:P31=Q5\".\n?title wikibase:apiOutput mwapi:title.\n}\nBIND(IRI(CONCAT(STR(wd:), ?title)) AS ?item)\nFILTER NOT EXISTS { ?item wdt:P106 wd:Q17769800. }\noptional {?item wdt:P27 ?citizen_of . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n# LIMIT 10000",
        "complexity_description": "Multiple services, filters and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "1950",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?slave ?slaveLabel (SAMPLE(?image) AS ?image) ?coords WHERE {\n?slave wdt:P3716|wdt:P106 wd:Q12773225.\n?item wdt:P138|wdt:P180|wdt:P547 ?slave .\nOPTIONAL { ?item wdt:P18 ?image. }\nOPTIONAL { ?item wdt:P625 ?coords. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" } .\n}\nGROUP BY ?item ?itemLabel ?slave ?slaveLabel ?coords\nLIMIT 10000",
        "complexity_description": "Multiple optional patterns, service call and group by",
        "complexity": "medium"
    },
    {
        "id": "1951",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?year1 ?pic1 ?hasdescendant ?hasdescendantLabel ?year2 ?pic2 # ?edgeLabel\n{\n?item wdt:P31 wd:Q26817508 .\n?item ^ wdt:P1531 ?hasdescendant .\nOPTIONAL { ?item wdt:P18 ?pic1 }.\nOPTIONAL { ?hasdescendant wdt:P18 ?pic2 } .\nOPTIONAL { ?hasdescendant wdt:P170 ?edge }\nOPTIONAL { ?item wdt:P571 ?inc1 . BIND(YEAR(?inc1) as ?year1) } .\nOPTIONAL { ?hasdescendant wdt:P571 ?inc2 . BIND(YEAR(?inc2) as ?year2) } .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple optional patterns, property paths and service calls",
        "complexity": "complex"
    },
    {
        "id": "1952",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?country ?countryLabel ?capital ?capitalLabel\nWHERE\n{\n?country wdt:P31 wd:Q3624078 .\n#not a former country\nFILTER NOT EXISTS {?country wdt:P31 wd:Q3024240}\n#and no an ancient civilisation (needed to exclude ancient Egypt)\nFILTER NOT EXISTS {?country wdt:P31 wd:Q28171280}\nOPTIONAL { ?country wdt:P36 ?capital } .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nORDER BY ?countryLabel",
        "complexity_description": "Multiple filters, optional pattern and service call",
        "complexity": "medium"
    },
    {
        "id": "1953",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?country ?countryLabel ?aa WHERE {\n?country p:P31 [ps:P31 wd:Q3624078 ] . # sovereign state\n?country skos:altLabel ?alias .\nbind(str(?alias) as ?aa)\n# filter(lang(?alias)=\"en\")\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\"\n}\n}",
        "complexity_description": "Multiple triple patterns, SERVICE clause and BIND function",
        "complexity": "medium"
    },
    {
        "id": "1954",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?slave ?slaveLabel (SAMPLE(?image) AS ?image) ?coords WHERE {\n?slave wdt:P3716|wdt:P106 wd:Q12773225.\n?item wdt:P138|wdt:P180|wdt:P547 ?slave .\nOPTIONAL { ?item wdt:P18 ?image. }\nOPTIONAL { ?item wdt:P625 ?coords. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" } .\n}\nGROUP BY ?item ?itemLabel ?slave ?slaveLabel ?coords\nLIMIT 10000",
        "complexity_description": "Multiple optional patterns, service call and group by",
        "complexity": "medium"
    },
    {
        "id": "1955",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?statue ?statueLabel ?statueLocation ?statueImage ?person ?personLabel ?personDescription WHERE {\n?statue wdt:P31/wdt:P279* wd:Q860861;\nwdt:P180|wdt:P547 ?person.\nOPTIONAL { ?statue wdt:P625 ?statueLocation. }\nOPTIONAL { ?statue wdt:P18 ?statueImage. }\n?person wdt:P31 wd:Q5.\n{\nVALUES ?occupation { wd:Q10076267 wd:Q17769800 }\n?person wdt:P106 ?occupation.\n} UNION {\n?person wdt:P1830|^wdt:P127 ?slave.\n?slave wdt:P31 wd:Q5;\np:P3716/ps:P3716 wd:Q12773225.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple UNION, OPTIONAL and SERVICE clauses with property paths",
        "complexity": "complex"
    },
    {
        "id": "1956",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription WHERE {\n?item wdt:P31 wd:Q5;\nwdt:P463 wd:Q47131;\nrdfs:label ?itemLabel;\nschema:description ?itemDescription.\nFILTER(LANG(?itemLabel) = \"en\")\nFILTER(LANG(?itemDescription) = \"en\")\nFILTER(!CONTAINS(?itemDescription, \"Klux\"))\nFILTER(!CONTAINS(?itemDescription, \"KKK\"))\n}",
        "complexity_description": "Multiple filters and language constraints",
        "complexity": "medium"
    },
    {
        "id": "1957",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?base ?baseLabel ?namesake ?namesakeLabel WHERE {\n?base wdt:P31 wd:Q245016.\n?base wdt:P17 wd:Q30.\n?base wdt:P138 ?namesake.\n?namesake wdt:P241 wd:Q1752901.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .\n}\n}",
        "complexity_description": "Multiple triple patterns with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "1958",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT\n?conf ?confLabel\n?startDate ?endDate\n?url\n?hashtag\n(GROUP_CONCAT(DISTINCT ?envLabel;separator=\", \") AS ?environments)\n(GROUP_CONCAT(DISTINCT ?orgLabel;separator=\", \") AS ?organizers)\nWHERE {\n# web conferences with homepage\n?conf wdt:P31/wdt:P279* wd:Q1543677 ;\nwdt:P856 ?url .\nOPTIONAL { # which software is used?\n?conf wdt:P2283 ?env .\n?env wdt:P31/wdt:P279* wd:Q7397\n}\nOPTIONAL { ?conf wdt:P580 ?startDate }\nOPTIONAL { ?conf wdt:P582 ?endDate }\nOPTIONAL { ?conf wdt:P2572 ?hashtag }\nOPTIONAL { ?conf wdt:P664 ?org }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .\n?conf rdfs:label ?confLabel .\n?env rdfs:label ?envLabel .\n?org rdfs:label ?orgLabel .\n}\n} GROUP BY ?conf ?confLabel ?url ?startDate ?endDate ?hashtag ?organizers",
        "complexity_description": "Multiple optional patterns, group by and group concat",
        "complexity": "complex"
    },
    {
        "id": "1959",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?Juror ?JurorLabel ?imageJur ?Preistraeger ?PreistraegerLabel (YEAR(?Zeitpunkt) AS ?Jahr) ?image ?edgeLabel WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?Preistraeger p:P166 ?Preis.\nOPTIONAL { ?Preistraeger wdt:P18 ?image. }\n?Preis ps:P166 wd:Q339982;\npq:P585 ?Zeitpunkt.\nOPTIONAL {\n?Preis pq:P4353 ?Juror.\nOPTIONAL { ?Juror wdt:P18 ?imageJur. }\n}\nBIND(\"nominiert \" AS ?edgeLabel)\n}\nORDER BY DESC (?Zeitpunkt)",
        "complexity_description": "Multiple optional patterns, service call, and bind function",
        "complexity": "complex"
    },
    {
        "id": "1960",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel (COUNT(DISTINCT ?sitelink) as ?wp) {\nwd:Q720 wdt:P40+ ?item.\n?item wdt:P27 ?nat.\nVALUES ?nat {wd:Q186096 wd:Q34266 wd:Q139319 wd:Q2305208 wd:Q2184 wd:Q15180 wd:Q159}\n?sitelink schema:about ?item; schema:isPartOf ?site.\n?site wikibase:wikiGroup \"wikipedia\" .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .\n}\n} GROUP BY ?item ?itemLabel ORDER BY DESC(?wp)",
        "complexity_description": "Multiple joins, filters and aggregations",
        "complexity": "complex"
    },
    {
        "id": "1961",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel (COUNT(DISTINCT ?sitelink) as ?wp) {\n?ancestor wdt:P40* ?item.\n?ancestor wdt:P172 ?ethnics.\n?ethnics wdt:P279* wd:Q36747.\n?item wdt:P106 ?occupation.\n{?occupation wdt:P279* wd:Q1650915.} UNION {?occupation wdt:P279* wd:Q3400985.}\n?sitelink schema:about ?item; schema:isPartOf ?site.\n?site wikibase:wikiGroup \"wikipedia\" .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .\n}\n} GROUP BY ?item ?itemLabel ORDER BY DESC(?wp)",
        "complexity_description": "Multiple joins, unions, and subqueries with filtering",
        "complexity": "complex"
    },
    {
        "id": "1962",
        "valid_gpt_response": true,
        "query": "SELECT ?value ?valueLabel ?cnt\n{\n{\nSELECT ?value (COUNT(?value) AS ?cnt)\n{\n?item wdt:P172 ?value\n}\nGROUP BY ?value\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?cnt)",
        "complexity_description": "Subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "1963",
        "valid_gpt_response": true,
        "query": "SELECT ?station ?stationLabel ?coords ?line ?layer ?rgb WHERE {\n?station wdt:P31 wd:Q928830;\nwdt:P131* wd:Q104231;\nwdt:P625 ?coords;\np:P197 [ps:P197 ?pred;\npq:P81 ?subwayLine].\n?pred wdt:P625 ?cds;\nwdt:P31 wd:Q928830.\nBIND(IF(xsd:double(?depth/10) = xsd:integer(?depth/10),?cds,\"\") as ?coords)\n?pred p:P625/psv:P625/wikibase:geoLatitude ?lat1 ; p:P625/psv:P625/wikibase:geoLongitude ?lon1 .\n?station p:P625/psv:P625/wikibase:geoLatitude ?lat2 ; p:P625/psv:P625/wikibase:geoLongitude ?lon2 .\nBIND(CONCAT('LINESTRING(', STR(?lon1), ' ', STR(?lat1), ',', STR(?lon2), ' ', STR(?lat2), ')') AS ?str) . BIND(STRDT(?str, geo:wktLiteral) AS ?line)\n?subwayLine wdt:P465 ?rgb .\nVALUES (?subwayLine ?layer) {\n(wd:Q1185773 \"Grona linjen\") #Green line\n(wd:Q766945 \"Roda linjen\") #Red line\n(wd:Q887043 \"Bla linjen\") #Blue line\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"sv\". }\n}",
        "complexity_description": "Multiple joins, subqueries, and complex functions",
        "complexity": "complex"
    },
    {
        "id": "1964",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?country ?countryLabel\nWITH {\nSELECT DISTINCT ?country { ?country wdt:P31 wd:Q6256 }\n} AS %allcountries\nWITH {\nSELECT DISTINCT ?country { [] wdt:P1435 wd:Q9259 ; wdt:P17 ?country }\n} AS %heritagecountries\nWHERE {\nINCLUDE %allcountries\nMINUS { INCLUDE %heritagecountries }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?countryLabel",
        "complexity_description": "Multiple WITH clauses, MINUS operator, and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "1965",
        "valid_gpt_response": true,
        "query": "SELECT ?country ?countryLabel (COUNT(DISTINCT ?item) AS ?count) WHERE {\n?item wdt:P31/wdt:P279* wd:Q179700 ; wdt:P17 ?country ; wdt:P180 ?depicts .\n?depicts wdt:P31 wd:Q5 ; wdt:P21 wd:Q6581072 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?country ?countryLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, service call, and aggregation",
        "complexity": "complex"
    },
    {
        "id": "1966",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?region ?regionLabel ?country ?countryLabel ?area ?population ?density ?coords\nWHERE\n{\n?region wdt:P31/wdt:P279* wd:Q10864048 ;\nwdt:P17 ?country ;\nwdt:P1082 ?population ;\np:P2046/psv:P2046 [\nwikibase:quantityAmount ?baseArea ;\nwikibase:quantityUnit [\np:P2370/psv:P2370 [\nwikibase:quantityAmount ?unitArea;\nwikibase:quantityUnit wd:Q25343\n]\n]\n] ;\nwdt:P625 ?coords .\nFILTER NOT EXISTS { ?region wdt:P576 ?x }\nBIND(?baseArea * ?unitArea / 1000000 AS ?area) .\nFILTER ( ?area > 0 )\nFILTER ( ?population > 0 )\nBIND ((?population / ?area) AS ?density)\nFILTER ( ?density < 30 )\n?country wdt:P30 wd:Q46 .\nFILTER NOT EXISTS { ?country wdt:P17 wd:Q3024240 }\nFILTER NOT EXISTS { ?country wdt:P576 ?x }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?density ?countryLabel ?regionLabel",
        "complexity_description": "Multiple filters, subqueries, and complex calculations",
        "complexity": "complex"
    },
    {
        "id": "1967",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel (MAX(?end_or_now) as ?last_date) (MAX(?age_end_or_now) as ?age_at_date) (?when - YEAR(?last_date) as ?years_alive_since) ?dob ?dod ?when ?age\n{\nVALUES ?office { wd:Q11699 wd:Q11696 }\n?st ps:P39 ?office .\n?person wdt:P31 wd:Q5; p:P39 ?st .\nOPTIONAL { ?st pq:P582 ?e }\nBIND( COALESCE(?e, NOW() ) as ?end_or_now)\n?person wdt:P569 ?dob .\nOPTIONAL { ?person wdt:P570 ?dod } .\nBIND( COALESCE( YEAR( ?dod) , YEAR(NOW()) ) as ?when )\nBIND( ?when - YEAR(?dob) as ?age)\nBIND(YEAR(?end_or_now)-YEAR(?dob) as ?age_end_or_now)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nGROUP BY ?person ?personLabel ?dob ?dod ?age ?when\nORDER BY DESC(?age)",
        "complexity_description": "Multiple joins, subqueries, and complex calculations",
        "complexity": "complex"
    },
    {
        "id": "1968",
        "valid_gpt_response": true,
        "query": "SELECT ?station ?stationLabel ?coords ?line ?layer ?rgb (SAMPLE(?image) AS ?image) (sample(?opening) as ?opening) WHERE {\n?station wdt:P31 wd:Q928830;\nwdt:P131* wd:Q104231;\nwdt:P625 ?coords;\np:P197 ?pred.\n?pred ps:P197 ?conn;\npq:P81 ?subwayLine.\nMINUS { ?pred pq:P582 [] }\nOPTIONAL { ?station wdt:P18 ?image }.\nOPTIONAL { ?station wdt:P1619 ?opening }.\n?conn wdt:P625 ?cds;\nwdt:P31 wd:Q928830.\nBIND(IF(xsd:double(?depth/10) = xsd:integer(?depth/10),?cds,\"\") as ?coords)\n?conn p:P625/psv:P625/wikibase:geoLatitude ?lat1 ; p:P625/psv:P625/wikibase:geoLongitude ?lon1 .\n?station p:P625/psv:P625/wikibase:geoLatitude ?lat2 ; p:P625/psv:P625/wikibase:geoLongitude ?lon2 .\nBIND(CONCAT('LINESTRING(', STR(?lon1), ' ', STR(?lat1), ',', STR(?lon2), ' ', STR(?lat2), ')') AS ?str) . BIND(STRDT(?str, geo:wktLiteral) AS ?line)\n?subwayLine wdt:P465 ?rgb .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"sv\". ?subwayLine rdfs:label ?layer. ?station rdfs:label ?stationLabel }\n}\nGROUP BY ?station ?stationLabel ?coords ?line ?layer ?rgb",
        "complexity_description": "Multiple joins, subqueries, and complex calculations",
        "complexity": "complex"
    },
    {
        "id": "1969",
        "valid_gpt_response": true,
        "query": "SELECT DIStiNCT ?item ?itemLabel WHERE {\n?item wdt:P39/wdt:P279* wd:Q16707842; wdt:P106 wd:Q937857 .\nOPTIONAL { ?item wdt:P569 ?dob }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?dob)",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1970",
        "valid_gpt_response": true,
        "query": "SELECT ?author ?authorLabel ?birthplaceLabel ?idGND ?coord ?country\n(GROUP_CONCAT(DISTINCT ?occupation_label; SEPARATOR=\", \") as ?occupations) #thanks to @NavinoEvans for this!\nWHERE {\n?author wdt:P227 ?idGND . #has a GND id\n?author wdt:P21 wd:Q6581072 . #is female\n?author wdt:P106 wd:Q36180 . #is writer\n?author wdt:P19 ?birthplace . # born in a place...\n?birthplace wdt:P17 ?country . # which is in a country that is...\n?country p:P361/ps:P361 wd:Q12585 . # part of Latin America thanks Tony Bowden! (@tmtm)\n?birthplace wdt:P625 ?coord .\nOPTIONAL {\n?author wdt:P106 ?occupation . #get occupation\n?occupation rdfs:label ?occupation_label FILTER (lang(?occupation_label) = \"en\") #get label the 'manual' way\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?author ?authorLabel ?birthplaceLabel ?idGND ?coord ?country #GROUP BY\nLIMIT 5000",
        "complexity_description": "Multiple filters, optional clause, and group concat",
        "complexity": "complex"
    },
    {
        "id": "1971",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?personLabel ?coordinate_location WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?item wdt:P31/wdt:P279* wd:Q34442;\nwdt:P138 ?person.\n?person wdt:P31 wd:Q5;\nwdt:P106/wdt:P279* wd:Q2526255.\nOPTIONAL { ?item wdt:P625 ?coordinate_location. }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1972",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?itemDescription ?from ?to ?img\n{\n?item p:P39 [ps:P39 wd:Q11696 ; pq:P580 ?from ; pq:P582 ?to ] .\n{ ?item p:P106/ps:P106 wd:Q10076267 } UNION { VALUES ?item { wd:Q11812 wd:Q8612 wd:Q23 wd:Q11891 wd:Q11813 wd:Q11869 wd:Q11896 wd:Q11817 wd:Q11815 wd:Q11820 wd:Q34836 } }\nOPTIONAL { ?item wdt:P18 ?img }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Multiple patterns, UNION operator, and OPTIONAL clause",
        "complexity": "complex"
    },
    {
        "id": "1973",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?partyLabel ?start ?replacesLabel ?districtLabel\nWHERE\n{\n?item wdt:P31 wd:Q5;\np:P39 ?parl.\n?parl ps:P39 wd:Q10655178;\npq:P580 ?start .\nOPTIONAL { ?parl pq:P582 ?end }\nOPTIONAL { ?parl pq:P1365 ?replaces }\nOPTIONAL { ?parl pq:P4100 ?party }\nOPTIONAL { ?parl pq:P768 ?district }\nFILTER (!BOUND(?end))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"sv,en\". }\n}\nORDER BY ?itemLabel ?start ?item",
        "complexity_description": "Multiple optional patterns, filter and service clause",
        "complexity": "complex"
    },
    {
        "id": "1974",
        "valid_gpt_response": true,
        "query": "SELECT ?article ?person ?personLabel ?picGrave ?coord ?bd ?graveplot2 ?layer WHERE {\n{\n?person wdt:P119 wd:Q311 ;\np:P119 [\npq:P965 ?graveplot];\nwdt:P569 ?bd .\n?person wdt:P19 ?city .\n?city wdt:P625 ?coord .\nOPTIONAL{ ?person wdt:P1442 ?picGrave .}\nOPTIONAL {\n?article schema:about ?person .\n?article schema:inLanguage \"fr\" .\n?article schema:isPartOf <https://fr.wikipedia.org/> .}\nBIND (CONCAT(\"Division \",?graveplot) AS ?graveplot2)\nBIND(\nIF(?bd < \"1700-01-01T00:00:00Z\"^^xsd:dateTime, \"<1700\",\nIF(?bd < \"1800-01-01T00:00:00Z\"^^xsd:dateTime, \"18e siecle\",\nIF(?bd < \"1900-01-01T00:00:00Z\"^^xsd:dateTime, \"19e siecle\",\nIF(?bd < \"2000-01-01T00:00:00Z\"^^xsd:dateTime, \"20e siecle\",\n\"21e siecle\"))))\nAS ?layer).\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\"}\n}\nOrder by ?personLabel",
        "complexity_description": "Multiple optional patterns, nested IF statements, and BIND operations",
        "complexity": "complex"
    },
    {
        "id": "1975",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?geo WHERE {\n?item wdt:P31 wd:Q811534;\nwdt:P625 ?geo .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "1976",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?fairytale ?fairytaleLabel ?illustration ?illustrationLabel ?image WHERE {\n{\nSELECT DISTINCT ?fairytale (SAMPLE(?work) AS ?illustration) WHERE {\n?work wdt:P180 ?depicted.\n?depicted ?property ?fairytale.\n?fairytale wdt:P31 wd:Q699.\n?work wdt:P18 [] .\n}\nGROUP BY ?fairytale ?illustration\n}\n?illustration wdt:P18 ?image.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?fairytale ?fairytaleLabel ?illustration ?illustrationLabel ?image",
        "complexity_description": "Multiple subqueries, grouping and service calls",
        "complexity": "complex"
    },
    {
        "id": "1977",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?ministere ?ministereLabel ?datedebut ?datefin ?image WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\". }\n{\n?item p:P39 ?statement.\n?statement ps:P39 ?ministere.\n?ministere (wdt:P279*) wd:Q83307;\nwdt:P17 wd:Q142.\n}\nUNION\n{\n?item p:P39 ?statement.\n?statement ps:P39 ?ministere.\n?ministere (wdt:P279*) wd:Q736559;\nwdt:P17 wd:Q142.\n}\nOPTIONAL { ?statement pq:P580 ?datedebut. }\nOPTIONAL { ?statement pq:P582 ?datefin. }\nOPTIONAL { ?item wdt:P18 ?image. }\n}\nORDER BY DESC (?datedebut)",
        "complexity_description": "Multiple UNION patterns, OPTIONAL clauses and SERVICE usage",
        "complexity": "complex"
    },
    {
        "id": "1978",
        "valid_gpt_response": true,
        "query": "SELECT ?org ?orgLabel ?portal ?portalLabel (SAMPLE(?coord) as ?coord) (SAMPLE(?img) as ?img) WHERE {\n# ?portal wdt:P31 wd:Q27031827.\n?org wdt:P8402 ?portal.\n?org wdt:P276?/wdt:P625 ?coord.\nOPTIONAL { ?org wdt:P41 ?flag }\nOPTIONAL { ?org wdt:P94 ?coat }\nOPTIONAL { ?org wdt:P154 ?logo }\nOPTIONAL { ?org wdt:P18 ?image }\nBIND( COALESCE(?flag, ?coat, ?logo, ?image) as ?img )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?org ?orgLabel ?portal ?portalLabel",
        "complexity_description": "Multiple OPTIONAL patterns, SERVICE clause and GROUP BY",
        "complexity": "complex"
    },
    {
        "id": "1979",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?year {\n{\nSELECT ?item (year(?time) as ?year) {\n?item wdt:P138 [wdt:P31 wd:Q5];\nwdt:P571 ?time.\nFILTER (!isBLANK(?time)).\n}\nORDER by ?year\nLIMIT 20\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER by ?year",
        "complexity_description": "Subqueries, filters and ordering",
        "complexity": "complex"
    },
    {
        "id": "1980",
        "valid_gpt_response": true,
        "query": "SELECT (uri(replace(str(?l), \"L\", \"Q\")) as ?item) (MD5(CONCAT(str(?item),str(RAND()))) as ?random) ?l ?hitza ?sense ?ahotsak ?elhuyar ?audio (SAMPLE(?picture_) AS ?picture) WHERE\n{\n?l a ontolex:LexicalEntry ; dct:language ?language ; wikibase:lemma ?hitza ; ontolex:sense ?esanahia.\n?esanahia skos:definition ?sense; wdt:P5137 ?q_concept.\n?q_concept wdt:P18 ?picture_.\n?language wdt:P218 'eu'.\nFILTER (LANG(?sense) = 'eu')\nOPTIONAL {?l wdt:P7559 ?ahotsak.}\nOPTIONAL {?l wdt:P6838 ?elhuyar.}\n?l ontolex:lexicalForm ?f .\n?f ontolex:representation ?form ; wdt:P443 ?audio .\nfilter (regex(str(?f), \"-F1$\")) .\n# Exclude out of scope concepts\nMINUS {?q_concept wdt:P31 wd:Q3624078.}. # countries\nMINUS {?l wdt:P31 wd:Q1499602.}. #ad hoc hitzak\n# Exclude non suitable concepts\nVALUES ?minus {\nwd:Q47092 # rape\nwd:Q198 # war\nwd:Q124490 # violence\nwd:Q170382 # revolver\nwd:Q1576 #cigar\n#... add yours here\n}.\nMINUS {?sense wdt:P5137 ?minus.}.\n# Exclude senses not suitable for young children:\nMINUS {\nVALUES ?filter { wd:Q8102 wd:Q545779 wd:Q1521634 wd:Q571571 wd:Q184439 }\n?esanahia wdt:P6191 ?filter.\n}\n}\nGROUP BY ?l ?sense ?hitza ?ahotsak ?elhuyar ?audio\nORDER BY ?random\nLIMIT 1",
        "complexity_description": "Multiple filters, optional patterns, and minus clauses with values",
        "complexity": "complex"
    },
    {
        "id": "1981",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?start ?parl_start ?age ?dob ?dod WHERE {\nVALUES ?parl {wd:Q16707842 wd:Q18015642 wd:Q18018860}\n?item p:P39 ?pos_stmt .\n?pos_stmt ps:P39 ?pos .\n?pos wdt:P279 ?parl .\nOPTIONAL {\n?pos_stmt pq:P580 ?start .\n}\nOPTIONAL {\n?pos wdt:P571 ?parl_start .\n}\nBIND(COALESCE(?start, ?parl_start) AS ?best_start) .\n?item p:P569 ?dob_stmt .\n?dob_stmt ps:P569 ?dob .\nFILTER(isLiteral(?dob)) .\n?dob_stmt psv:P569/wikibase:timePrecision ?dob_precision .\nFILTER(?dob_precision > 8) .\nBIND (((?best_start - ?dob)/365.24) AS ?age) .\nOPTIONAL {?item wdt:P570 ?dod} .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?age)\nLIMIT 200",
        "complexity_description": "Multiple optional patterns, filters, and calculations",
        "complexity": "complex"
    },
    {
        "id": "1982",
        "valid_gpt_response": true,
        "query": "SELECT ?Archiv ?ArchivLabel ?archiviert_in ?archiviert_inLabel ?geographische_Koordinaten\nWHERE {SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?Archiv wdt:P31/wdt:P279* wd:Q166118.\nOPTIONAL { ?Archiv wdt:P625 ?geographische_Koordinaten. }\n}\nLIMIT 100000",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "1983",
        "valid_gpt_response": true,
        "query": "SELECT ?mp ?mpLabel ?person ?personLabel ?born ?died ?typeLabel WHERE {\n?mp p:P39 ?positionStatement .\n?positionStatement ps:P39 wd:Q77685926 . # this person is a member of the current parliament\n{ ?mp (wdt:P25|wdt:P22)* ?person . } # mp's mother or father, or their mother or father, and so on\nfilter not exists { ?person wdt:P31 wd:Q5 } . # the ancestor is not \"a human\"\n?person wdt:P31 ?type .\nOPTIONAL { ?person wdt:P569 ?born } .\nOPTIONAL { ?person wdt:P570 ?died } .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple optional patterns, recursive property paths, and filters",
        "complexity": "complex"
    },
    {
        "id": "1984",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?cd ?l ?i ?iLabel ?ct ?ctLabel ?rgb ?x WITH{SELECT ?i ?cd ?lat1 ?lon1 ?loc ?x(sample(?op)as?op)WHERE{VALUES ?c1{wd:Q668 wd:Q843 wd:Q902}?i wdt:P31/wdt:P279* wd:Q55488;wdt:P625 ?cd;wdt:P17 ?c1;p:P625/psv:P625 ?y.?y wikibase:geoLatitude ?lat1;wikibase:geoLongitude ?lon1.MINUS{?i wdt:P31/wdt:P279* wd:Q928830}OPTIONAL{?i wdt:P131 ?loc}OPTIONAL{?i wdt:P137 ?op}OPTIONAL{{?i wdt:P5696 ?x}UNION{?i wdt:P6785 ?x}}OPTIONAL{?i wdt:P17 wd:Q902. BIND(\"-\"as?x)}}GROUP BY ?i ?cd ?lat1 ?lon1 ?loc ?x}AS%s\nWITH{SELECT ?l ?ct ?o ?t WHERE{INCLUDE %s.?i p:P197 ?nss.?nss ps:P197 ?ns.?ns p:P625/psv:P625 ?z.?z wikibase:geoLatitude ?lat2;wikibase:geoLongitude ?lon2.OPTIONAL{?nss pq:P81 ?ct.OPTIONAL{?ct wdt:P127 ?o}}OPTIONAL{?nss pq:P5051 ?t}FILTER(STR(?i)< STR(?ns)).BIND(CONCAT('LINESTRING(',STR(?lon1),' ',STR(?lat1),',',STR(?lon2),' ',STR(?lat2),')')AS?str).BIND(STRDT(?str,geo:wktLiteral)AS?l)}}AS%l\nWHERE{{INCLUDE%s}UNION{INCLUDE%l}.BIND(IF(BOUND(?l),IF(BOUND(?ct),IF(BOUND(?t),IF(BOUND(?o),\"00f\",\"4682b4\"),\"40e0d0\"),\"0f0\"),IF(BOUND(?x),IF(BOUND(?loc),IF(BOUND(?op),\"00f\",\"4682b4\"),\"40e0d0\"),\"0f0\"))AS?rgb)SERVICE wikibase:label{bd:serviceParam wikibase:language \"en\".}}#",
        "complexity_description": "Multiple subqueries, unions, and complex filtering",
        "complexity": "complex"
    },
    {
        "id": "1985",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?countryLabel ?hgovernmentLabel ?gage ?hstateLabel ?sage WHERE {\n?country wdt:P31 wd:Q3624078.\nFILTER(NOT EXISTS { ?country wdt:P31 wd:Q3024240. })\n?country p:P6 ?statement.\n?statement ps:P6 ?hgovernment.\n?country wdt:P6 ?hgovernment.\nFILTER(NOT EXISTS { ?statement pq:P582 ?x. })\n?country p:P35 ?sstatement.\n?sstatement ps:P35 ?hstate.\n?country wdt:P35 ?hstate.\nFILTER(NOT EXISTS { ?statement pq:P582 ?x. })\n?hgovernment wdt:P569 ?dobh.\nBIND((YEAR(NOW())) - (YEAR(?dobh)) AS ?gage)\n?hstate wdt:P569 ?dobs.\nBIND((YEAR(NOW())) - (YEAR(?dobs)) AS ?sage)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY (?countryLabel)",
        "complexity_description": "Multiple filters, subqueries and bindings",
        "complexity": "complex"
    },
    {
        "id": "1986",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?city ?cityLabel ?county ?countyLabel ?state ?stateLabel ?pop ?coord\nWHERE\n{\n?city wdt:P31 wd:Q1093829 .\n?city wdt:P1082 ?pop .\nFILTER (?pop >= 100000 && ?pop <= 600000)\n?city wdt:P131 ?county .\n?county wdt:P31/wdt:P279 wd:Q47168 .\n?county wdt:P131 ?state .\n?state wdt:P31 wd:Q35657 .\n?city wdt:P625 ?coord .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?stateLabel ?countyLabel ?cityLabel",
        "complexity_description": "Multiple filters, joins and subqueries",
        "complexity": "complex"
    },
    {
        "id": "1987",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person ?personLabel ?office ?officeLabel ?end1 ?start2 (FLOOR(?days/36.525)/10 AS ?gap)\nWHERE {\n# Offices Held by Heads of Government\n?country wdt:P31 wd:Q3624078; p:P1313/ps:P1313 ?office .\n# People who have held the office more than once\n?person p:P39 [ ps:P39 ?office ; pq:P582 ?end1 ] .\n?person p:P39 [ ps:P39 ?office ; pq:P580 ?start2 ] .\nFILTER (?start2 > ?end1)\nFILTER NOT EXISTS { # but must be successive periods\n?person p:P39 [ ps:P39 ?office ; pq:P580 ?start3 ] .\nFILTER((?start3 > ?end1) && (?start3 < ?start2))\n}\n# How long between end of one term and start of the next\nBIND (?start2 - ?end1 AS ?days)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?days)\nLIMIT 10",
        "complexity_description": "Multiple filters, subqueries and calculations",
        "complexity": "complex"
    },
    {
        "id": "1988",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?item) AS ?count) ?electedLabel WHERE {\n?item p:P39 ?positionStatement .\n?positionStatement ps:P39 wd:Q10655178 .\n?positionStatement pq:P2715 ?elected\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?electedLabel\nORDER BY DESC(?electedLabel)",
        "complexity_description": "Multiple joins, subqueries and grouping",
        "complexity": "complex"
    },
    {
        "id": "1989",
        "valid_gpt_response": true,
        "query": "SELECT ?property ?propertyLabel (COUNT(?constraint) AS ?count) WHERE {\n?property a wikibase:Property.\nOPTIONAL { ?property p:P2302 ?constraint. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?property ?propertyLabel",
        "complexity_description": "Optional pattern, service call and group by",
        "complexity": "medium"
    },
    {
        "id": "1990",
        "valid_gpt_response": true,
        "query": "SELECT ?author1 ?author1Label ?img ?rgb ?author2 ?author2Label\nWITH {\nSELECT (COUNT(?item) AS ?count) ?author1 ?author2 WHERE {\n?item wdt:P8433 ?riks.\n?item wdt:P50 ?author1,?author2.\n?item wdt:P577 ?pubDate\nFILTER ( Year(?pubDate) = 2018)\n}\nGROUP BY ?author1 ?author2\nORDER BY DESC(?count)\n}\nAS %authors\nWITH {\nSELECT ?author1 ?author2 ?img ?rgb WHERE {\nINCLUDE %authors\n# Exclude self-links\nFILTER (?author1 != ?author2)\n# Color according to party\nOPTIONAL {\n?author1 wdt:P102 ?party .\nOPTIONAL {?party wdt:P154 ?img }\nOPTIONAL {?party wdt:P465 ?rgb }\n}\n}\n} AS %result\nWHERE {\nINCLUDE %result\n# Label the results\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,sv\". }\n}",
        "complexity_description": "Multiple subqueries with grouping, filtering and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "1991",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?netWorthUSD ?orientationLabel ?genderLabel WHERE {\n?person wdt:P31 wd:Q5;\np:P2218/psv:P2218 [\nwikibase:quantityAmount ?netWorthUSD;\nwikibase:quantityUnit wd:Q4917\n].\nOPTIONAL {\n?person wdt:P91 ?orientation.\n?orientation wdt:P279* wd:Q339014.\n}\nOPTIONAL {\n?person wdt:P21 ?gender.\nFILTER(?gender NOT IN (wd:Q6581097, wd:Q6581072))\n}\nFILTER(BOUND(?orientation) || BOUND(?gender))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?netWorthUSD)\nLIMIT 50",
        "complexity_description": "Multiple optional patterns, filters and service calls",
        "complexity": "complex"
    },
    {
        "id": "1992",
        "valid_gpt_response": true,
        "query": "SELECT ?winner ?winnerLabel ?colour ?count ?rgb WHERE {\n{SELECT ?winner ?count (SAMPLE(?colour) AS ?colour) WHERE {\n{SELECT ?winner (COUNT(?winner) AS ?count) WHERE {\n?event wdt:P31 wd:Q4484477.\n?event wdt:P1346 ?winner.\n}\nGROUP BY ?winner }\nOPTIONAL { ?winner wdt:P6364 ?colour }\nBIND (IF ( BOUND(?colour), ?colour, wd:Q1003676) AS ?colour)\n}\nGROUP BY ?winnerLabel ?winner ?count ?rgb }\nOPTIONAL { ?colour wdt:P465 ?rgb }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC (?count)",
        "complexity_description": "Multiple nested subqueries, grouping, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "1993",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coord\nWHERE\n{\n?item wdt:P31 wd:Q22698;\nwdt:P17 wd:Q20;\nwdt:P131 wd:Q5245991;\nwdt:P625 ?coord.\nMINUS { ?item wdt:P18 [] }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"nb,en\". }\n}",
        "complexity_description": "Multiple triple patterns, MINUS clause and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "1994",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?koord ?layer WHERE {\nwd:Q191045 ((wdt:P22|wdt:P25)*) ?item.\n?item wdt:P19 ?place.\n?place wdt:P625 ?koord.\n?item wdt:P21 ?sex.\nBIND (IF(?sex = wd:Q6581097, \"gizonezkoa\",\nIF(?sex = wd:Q6581072, \"emakumezkoa\",\n\"\")) AS ?layer)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"eu,en,fr,pl,es\". }\n}\nORDER BY (?itemLabel)",
        "complexity_description": "Multiple triple patterns, optional and alternative paths, BIND with conditional expressions",
        "complexity": "complex"
    },
    {
        "id": "1995",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?hog ?hogLabel ?party ?partyLabel\n(GROUP_CONCAT(?alignment_label; SEPARATOR=\" to \") AS ?partyAlignment)\nWHERE {\n?item wdt:P31 wd:Q3624078 ; wdt:P463 wd:Q1065 ; wdt:P6 ?hog .\nOPTIONAL {\n?hog wdt:P102 ?party .\nOPTIONAL {\n?party wdt:P1387 ?alignment .\n?alignment rdfs:label ?alignment_label FILTER (lang(?alignment_label) = 'en')\n}\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?item ?itemLabel ?hog ?hogLabel ?party ?partyLabel\nORDER BY ?itemLabel",
        "complexity_description": "Multiple joins, optional patterns, and group concat",
        "complexity": "complex"
    },
    {
        "id": "1996",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?dob ?dod WHERE {\nBIND(NOW() as $today)\nBIND(YEAR($today) AS $today_year)\nBIND(MONTH($today) AS $today_month)\nBIND(DAY($today) AS $today_day)\n?person wdt:P31 wd:Q5.\n?person wdt:P21 wd:Q6581072 .\nOPTIONAL { ?person wdt:P569 ?dob }\nOPTIONAL { ?person wdt:P570 ?dod }\n?person wdt:P106 wd:Q170790 .\nFILTER( $today_month = MONTH(?dob) && $today_day = DAY(?dob) || $today_month = MONTH(?dod) && $today_day = DAY(?dod) )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple filters, optional patterns and service call",
        "complexity": "complex"
    },
    {
        "id": "1997",
        "valid_gpt_response": true,
        "query": "SELECT ?collection ?collectionLabel (COUNT(*) AS ?count) WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],es\". }\n?thing wdt:P170 wd:Q5593.\nOPTIONAL { ?thing wdt:P195 ?collection. }\n}\nGROUP BY ?collection ?collectionLabel\nORDER BY DESC (?count)\nLIMIT 300",
        "complexity_description": "Multiple triple patterns, optional clause, group by and order by",
        "complexity": "medium"
    },
    {
        "id": "1998",
        "valid_gpt_response": true,
        "query": "SELECT ?winnerLabel1 ?ballsize ?rgb WHERE {\n# the snooker ball colours\nBIND ( COALESCE(\nIF(?wins = 1, \"ff0000\", 1/0),\nIF(?wins = 2, \"ffff00\", 1/0),\nIF(?wins = 3, \"00ff00\", 1/0),\nIF(?wins = 4, \"8b4513\", 1/0),\nIF(?wins = 5, \"0000ff\", 1/0),\nIF(?wins = 6, \"ffc0cb\", 1/0),\nIF(?wins = 7, \"000000\", 1/0),\nIF(?wins = 8, \"ffa500\", 1/0),\n\"800080\"\n) AS ?rgb )\nBIND(1 AS ?ballsize)\nBIND( CONCAT(?winnerLabel, \": \", STR(?wins)) AS ?winnerLabel1)\n# inner select generates the winners totals\n{ SELECT ?winnerLabel (COUNT (?winner) AS ?wins) WHERE {\n{ ?p wdt:P31 wd:Q502948 }\nUNION\n{ ?p wdt:P361 wd:Q502948 }\n?p wdt:P1346 ?winner .\n?winner rdfs:label ?winnerLabel .\nFILTER(LANG(?winnerLabel) = \"en\")\n# SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?winnerLabel\nORDER BY ASC (?wins )}\n}",
        "complexity_description": "Multiple BIND, IF, COALESCE, UNION, and nested SELECT with FILTER and GROUP BY",
        "complexity": "complex"
    },
    {
        "id": "1999",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?subjectLabel ?coords ?image WHERE {\n?item wdt:P31 wd:Q79007 .\n?item wdt:P131 wd:Q62274582 .\n?item wdt:P138 ?subject .\n?subject wdt:P106 wd:Q189290 .\n?subject wdt:P18 ?image .\n?item wdt:P625 ?coords .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple joins and filters",
        "complexity": "medium"
    },
    {
        "id": "2000",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item2 ?item2Label ?item1 ?item1Label WHERE {\nVALUES ?mp {wd:Q16707842 wd:Q18015642 wd:Q18018860} .\nVALUES ?mp2 {wd:Q16707842 wd:Q18015642 wd:Q18018860} .\n?item1 wdt:P39 ?mp .\n?item1 wdt:P26 ?spouse .\n?spouse wdt:P22|wdt:P25 ?item2 .\n?item2 wdt:P39 ?mp2 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?item2Label ?item1Label",
        "complexity_description": "Multiple VALUES, multiple triple patterns with UNION and SERVICE",
        "complexity": "complex"
    },
    {
        "id": "2001",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item2 ?item2Label (count(distinct ?item1) as ?count)\nWITH {\nSELECT DISTINCT ?item1 WHERE {\nVALUES ?mp {wd:Q16707842 wd:Q18015642 wd:Q18018860} .\n{ ?item1 wdt:P39 ?p . ?p ps:P39 ?t . ?t wdt:P279 ?mp } union { ?item1 wdt:P1614 [] }\n}\n} AS %mps\nWHERE {\n{INCLUDE %mps . ?item1 wdt:P26 ?spouse . ?spouse wdt:P22|wdt:P25 ?item2 }\nunion\n{INCLUDE %mps . ?item1 wdt:P22|wdt:P25 ?item2 }\nOPTIONAL {\nVALUES ?mp {wd:Q16707842 wd:Q18015642 wd:Q18018860} .\n?item2 wdt:P39 ?p . ?p ps:P39 ?t . ?t wdt:P279 ?mp .\n}\nOPTIONAL {?item2 wdt:P1614 ?hpID} .\nFILTER (bound(?mp) || bound(?hpID)) .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} group by ?item2 ?item2Label order by desc(?count) ?item2Label",
        "complexity_description": "Multiple subqueries, unions, and optional patterns with filters",
        "complexity": "complex"
    },
    {
        "id": "2002",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?depth ?descendant ?descendantLabel ?descendantDescription (YEAR(?dob) as ?yob) (YEAR(?dod) as ?yod) ?ids ?spouse_ids ?sl ?spouse_sl\nWHERE\n{\nBIND( wd:Q75891071 as ?ancestor )\nSERVICE gas:service {\ngas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.SSSP\" ;\ngas:in wd:Q75891071 ;\ngas:traversalDirection \"Forward\" ;\ngas:out ?descendant ;\ngas:out1 ?depth ;\ngas:maxIterations 100 ;\ngas:linkType wdt:P40 .\n}\nOPTIONAL { ?descendant wdt:P569 ?dob }\nOPTIONAL { ?descendant wdt:P570 ?dod }\nOPTIONAL { ?descendant wikibase:identifiers ?ids }\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"en,en\" }\nOPTIONAL { ?descendant wdt:P26 / wikibase:identifiers ?spouse_ids }\nOPTIONAL { ?descendant wikibase:sitelinks ?sl }\nOPTIONAL { ?descendant wdt:P26 / wikibase:sitelinks ?spouse_sl }\n}\nORDER BY ASC(?depth)\nLIMIT 1000",
        "complexity_description": "Multiple services, optional patterns, and bindings",
        "complexity": "complex"
    },
    {
        "id": "2003",
        "valid_gpt_response": true,
        "query": "SELECT ?language ?languageLabel (GROUP_CONCAT(DISTINCT ?creatorLabel; separator = \", \") AS ?creators) ?sitelinks WHERE {\nhint:Query hint:optimizer \"None\".\n?language wdt:P31?/wdt:P279* wd:Q9143; wdt:P170|wdt:P178|wdt:P61|wdt:P287 ?creator; wikibase:sitelinks ?sitelinks. ?creator wdt:P31 wd:Q5;\nwdt:P21/wdt:P279? wd:Q6581072.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?language rdfs:label ?languageLabel.\n?creator rdfs:label ?creatorLabel.\n}\n}\nGROUP BY ?language ?languageLabel ?sitelinks\nORDER BY DESC(?sitelinks)",
        "complexity_description": "Multiple joins, subqueries, and grouping",
        "complexity": "complex"
    },
    {
        "id": "2004",
        "valid_gpt_response": true,
        "query": "SELECT ?protein ?proteinLabel (COUNT(?work) AS ?count) WHERE {\n?protein wdt:P703 wd:Q82069695 ; wdt:P31 wd:Q8054 .\n?work wdt:P921 ?protein .\nOPTIONAL { ?work wdt:P577 ?dates . }\nOPTIONAL { ?work wdt:P356 ?doi . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,en\". }\n} GROUP BY ?protein ?proteinLabel\nORDER BY ASC(?proteinLabel)",
        "complexity_description": "Multiple optional patterns, service call and grouping",
        "complexity": "complex"
    },
    {
        "id": "2005",
        "valid_gpt_response": true,
        "query": "select ?item ?itemLabel ?sexeLabel ?cocLabel (concat(\"https://www.facebook.com/\",?fbc) as ?facebook) (concat('https://www.twitter.com/',?twc) as ?twitter) (concat('https://www.instagram.com/',?inc,'/') as ?insta){ { select distinct ?item where { ?item wdt:P106 wd:Q937857 . ?item wdt:P21 wd:Q6581072 . {?item wdt:P2013 ?fb} union {?item wdt:P2002 ?tw} union {?item wdt:P2003 ?in} } } optional {?item wdt:P2013 ?fbc} optional {?item wdt:P2002 ?twc} optional {?item wdt:P2003 ?inc} optional {?item wdt:P21 ?sexe} optional {?item wdt:P27 ?coc} SERVICE wikibase:label { bd:serviceParam wikibase:language \"nl,en\" }}",
        "complexity_description": "Multiple UNION, OPTIONAL and SERVICE clauses",
        "complexity": "complex"
    },
    {
        "id": "2006",
        "valid_gpt_response": true,
        "query": "SELECT ?VilleLabel ?Population\nWHERE\n{\n?Ville wdt:P31/wdt:P279* wd:Q515;\nwdt:P17 wd:Q142;\nwdt:P1082 ?Population .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\". }.\n}\nORDER BY DESC(?Population)\nLIMIT 30",
        "complexity_description": "Multiple triple patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "2007",
        "valid_gpt_response": true,
        "query": "select ?item ?itemLabel ?coord where {\n?item wdt:P54 wd:Q131206 .\n?item wdt:P19/wdt:P625 ?coord .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"cs,en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "2008",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?date WHERE {\n#?item wdt:P86 ?composer .\n?item wdt:P86 wd:Q103767 .\n#?item wdt:P144 ?source .\n?item wdt:P577 ?date .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?year",
        "complexity_description": "Few triple patterns, one service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "2009",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?parliament_start (round((?johns/?members)*100) as ?percent_johns) where\n{\n{ SELECT distinct ?term ?parliament_start where\n{ { ?term wdt:P279 wd:Q16707842 } union { ?term wdt:P279 wd:Q18015642 } union { ?term wdt:P279 wd:Q18018860 }\noptional { ?term wdt:P571 ?parliament_start }\n}\n}\noptional { SELECT ?term (count(distinct ?item) as ?members) where\n{ ?item p:P39 ?positionStatement . ?positionStatement ps:P39 ?term .\n{ ?term wdt:P279 wd:Q16707842 } union { ?term wdt:P279 wd:Q18015642 } union { ?term wdt:P279 wd:Q18018860 }\n# ?item wdt:P735 ?name #has a known forename\n} group by ?term\n}\noptional { SELECT ?term (count(distinct ?item) as ?johns) where\n{ ?item p:P39 ?positionStatement . ?positionStatement ps:P39 ?term .\n{ ?term wdt:P279 wd:Q16707842 } union { ?term wdt:P279 wd:Q18015642 } union { ?term wdt:P279 wd:Q18018860 }\n?item wdt:P735 wd:Q4925477 # that name is John\n} group by ?term\n}\nfilter ( ?members >= 25 ) # only terms with 25 or more people\nSERVICE wikibase:label { bd:serviceParam wikibase:language 'en' }\n} order by ?parliament_start\n#defaultView:ScatterChart",
        "complexity_description": "Multiple nested queries, unions, and subqueries with filters and aggregations.",
        "complexity": "complex"
    },
    {
        "id": "2010",
        "valid_gpt_response": true,
        "query": "select (STR(?year1) as ?year) ((count(?item) * ?sgn) as ?count) ?layer where {\n?item wdt:P19/wdt:P17 ?country . values ?country {wd:Q213 wd:Q183} . ?item wdt:P569 ?birthdate bind((FLOOR(YEAR(?birthdate)/10)*10) as ?year1) FILTER(?year1>=1800).\noptional {?item wdt:P19/wdt:P17 wd:Q213 . ?item wdt:P20/wdt:P17 wd:Q183 . bind(\"Born in Czechia, died in Germany\" as ?layer). bind(1 as ?sgn)}\noptional {?item wdt:P19/wdt:P17 wd:Q183 . ?item wdt:P20/wdt:P17 wd:Q213 . bind(\"Born in Germany, died in the Czech Republic\" as ?layer). bind(-1 as ?sgn)}\nfilter(bound(?layer)) .\n}\ngroup by ?year1 ?layer ?sgn\norder by asc(?year1)",
        "complexity_description": "Multiple optional patterns, filters, and grouping",
        "complexity": "complex"
    },
    {
        "id": "2011",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\n?comm1 wdt:P31 wd:Q55488 ; wdt:P17 wd:Q213 ; wdt:P625 ?coord1 ; wdt:P197 ?comm2.\nMINUS { ?comm1 p:P31 [ ps:P31 wd:Q55488 ; pq:P582 [] ] . }\nMINUS { ?comm2 p:P31 [ ps:P31 wd:Q55488 ; pq:P582 [] ] . }\n?comm2 wdt:P625 ?coord2 .\n?comm1 p:P625 [ ps:P625 []; psv:P625 [ wikibase:geoLongitude ?coord1lon; wikibase:geoLatitude ?coord1lat; ] ].\n?comm2 p:P625 [ ps:P625 []; psv:P625 [ wikibase:geoLongitude ?coord2lon; wikibase:geoLatitude ?coord2lat; ] ].\nBIND(CONCAT('LINESTRING (', STR(?coord1lon), ' ', STR(?coord1lat), ',', STR(?coord2lon), ' ', STR(?coord2lat), ')') AS ?str) .\nBIND(STRDT(?str, geo:wktLiteral) AS ?line)\n}",
        "complexity_description": "Multiple MINUS clauses, property paths, and BIND functions",
        "complexity": "complex"
    },
    {
        "id": "2012",
        "valid_gpt_response": true,
        "query": "select (STR(?year1) as ?year) ((count(?item) * ?sgn) as ?count) ?layer where {\n?item wdt:P19/wdt:P17 ?country . values ?country {wd:Q213 wd:Q183} . ?item wdt:P569 ?birthdate bind((FLOOR(YEAR(?birthdate)/10)*10) as ?year1) FILTER(?year1>=1800).\noptional {?item wdt:P19/wdt:P17 wd:Q213 . ?item wdt:P20/wdt:P17 wd:Q183 . bind(\"Born in Czechia, died in Germany\" as ?layer). bind(1 as ?sgn)}\noptional {?item wdt:P19/wdt:P17 wd:Q183 . ?item wdt:P20/wdt:P17 wd:Q213 . bind(\"Born in Germany, died in the Czech Republic\" as ?layer). bind(-1 as ?sgn)}\nfilter(bound(?layer)) .\n}\ngroup by ?year1 ?layer ?sgn\norder by asc(?year1)",
        "complexity_description": "Multiple optional patterns, filters, and grouping",
        "complexity": "complex"
    },
    {
        "id": "2013",
        "valid_gpt_response": true,
        "query": "SELECT ?book ?bookLabel ?pubdate ?pubdateLabel ?location ?locationLabel ?coordinates\nWHERE { ?book wdt:P31 wd:Q47461344.\n?book wdt:P50 wd:Q40909.\n?book wdt:P577 ?pubdate.\nOPTIONAL {?book wdt:P840 ?location.\n?location wdt:P625 ?coordinates}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "2014",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?age ?end_causeLabel ?end_time ?dob WHERE {\n?item wdt:P569 ?dob .\n?item p:P39 ?mp_stmt .\n?mp_stmt ps:P39 ?mp .\n?mp_stmt pq:P582 ?end_time .\nOPTIONAL {\nVALUES ?excluded_cause {wd:Q1787171 wd:Q35855188 wd:Q30580660 wd:Q35867887 wd:Q52084147} .\n?mp_stmt pq:P1534 ?excluded_cause .\n}\nFILTER(!bound(?excluded_cause)) .\n?mp_stmt pq:P1534 ?end_cause .\n?mp wdt:P279 wd:Q16707842 .\n?mp_next_parl wdt:P155 ?mp .\nMINUS {?item wdt:P39 ?mp_next_parl} .\nBIND (((?end_time - ?dob) / 365.24) AS ?age) .\nFILTER(bound(?age)) .\nFILTER(year(?end_time) > 1899) .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?age\nLIMIT 200",
        "complexity_description": "Multiple joins, optional clause, filter conditions and calculations",
        "complexity": "complex"
    },
    {
        "id": "2015",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?time ?end_causeLabel ?latest_mp ?dob1 ?dod1\nWITH {\nSELECT ?item (MAX(?end_time) AS ?latest_mp) (MAX(?dod) AS ?dod1) (MAX(?dob) AS ?dob1) WHERE {\nOPTIONAL {?item wdt:P570 ?dod} .\n?item p:P39 ?mp_stmt .\n?mp_stmt ps:P39 ?mp .\n?mp wdt:P279 wd:Q16707842 .\n?mp_stmt pq:P582 ?end_time .\nFILTER(year(?end_time) > 1899) .\nOPTIONAL {?item wdt:P569 ?dob}\n} GROUP BY ?item\n} AS %mps\nWHERE {\nINCLUDE %mps .\n?item p:P39 ?mp_stmt .\n?mp_stmt pq:P582 ?latest_mp .\n?mp_stmt pq:P1534 ?end_cause .\nBIND(COALESCE(?dod1, now()) AS ?date) .\nBIND (((?date - ?latest_mp) / 365.24) AS ?time) .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?time)\nLIMIT 200",
        "complexity_description": "Multiple subqueries, filters, and bindings with calculations",
        "complexity": "complex"
    },
    {
        "id": "2016",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?item ?itemLabel ?rankLabel ?branchLabel\nWHERE\n{\n?item wdt:P39/wdt:P361 wd:Q112014. #held job which is part of cabinet\noptional {?item wdt:P410 ?rank. } #had a military rank\noptional {?item wdt:P241 ?branch. } #associated with a military branch\nbind(coalesce(?rank,?branch) as ?test)\nfilter(bound(?test))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple optional patterns and a bind operation",
        "complexity": "medium"
    },
    {
        "id": "2017",
        "valid_gpt_response": true,
        "query": "select ?itemLabel ?zminka ?img where {\n?item wdt:P31 wd:Q5153359 .\n?item wdt:P1249 ?zminka .\n?item wdt:P18 ?img .\n?item wdt:P1082 ?populace .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"cs\". }\n}\norder by desc(?populace)\nlimit 10",
        "complexity_description": "Multiple triple patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "2018",
        "valid_gpt_response": true,
        "query": "select ?item ?itemLabel ?coord ?layer where {\n?item wdt:P31 wd:Q16970 .\n{?item wdt:P417 wd:Q196527 .} union {?item wdt:P417 wd:Q239925 .}\n?item wdt:P625 ?coord .\n?item wdt:P17 wd:Q213 .\nOPTIONAL {\n?item wdt:P417 wd:Q196527 .\nBIND(\"St. Wenceslas\" AS ?layer).\n}\nOPTIONAL {\n?item wdt:P417 wd:Q239925 .\nBIND(\"St. Cyril and Methodius\" AS ?layer).\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,cs\". }\n}",
        "complexity_description": "Multiple UNIONs, OPTIONAL clauses, and SERVICE calls",
        "complexity": "complex"
    },
    {
        "id": "2019",
        "valid_gpt_response": true,
        "query": "select * where {\n{\nselect ?item ?label ?coord (IF(strends(?label,\"ingen\"),\"-ingen\",\nIF(strends(?label,\"ing\"),\"-ing\",\nIF(strends(?label,\"heim\"),\"-heim\",\nIF(strends(?label,\"ein\"),\"\",\nIF(strends(?label,\"ain\"),\"\",\nIF(strends(?label,\"in\"),\"-in\",\"\")))))) AS ?layer) where {\n?item wdt:P31 wd:Q262166 .\n?item wdt:P625 ?coord.\n?item rdfs:label ?label filter(lang(?label)=\"fr\").\n}\n}\nfilter(?layer != \"\")\n}",
        "complexity_description": "Multiple nested IF conditions, multiple filters and joins",
        "complexity": "complex"
    },
    {
        "id": "2020",
        "valid_gpt_response": true,
        "query": "SELECT ?depth ?out ?predecessor ?outLabel ?predecessorLabel {SERVICE gas:service{gas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.BFS\";\ngas:in wd:Q23;gas:target wd:Q3044;gas:out ?out;gas:out1 ?depth;gas:out2 ?predecessor;gas:linkType wdt:P40;gas:traversalDirection \"Reverse\".}.SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }}ORDER BY DESC(?depth)",
        "complexity_description": "Multiple services, variables and filters",
        "complexity": "complex"
    },
    {
        "id": "2021",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?depth1 ?depth2 ?depth WITH{\nSELECT ?item ?depth1 ?depth2 WHERE\n{\n{\nSERVICE gas:service\n{\ngas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.SSSP\" ; gas:in wd:Q23 ; gas:traversalDirection \"Reverse\" ; gas:out ?item ;gas:out1 ?depth1 ; gas:maxIterations 1000 ; gas:linkType wdt:P40 .\n}\n}\n{\nSERVICE gas:service\n{\ngas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.SSSP\" ; gas:in wd:Q207 ; gas:traversalDirection \"Reverse\" ; gas:out ?item ;gas:out1 ?depth2 ; gas:maxIterations 1000 ; gas:linkType wdt:P40 .\n}\n}\n} } AS %1 WITH {SELECT (?item2 AS ?item1) {INCLUDE %1. ?item2 wdt:P40 ?item.}} AS %2\nWHERE {\nINCLUDE %1.\nFILTER NOT EXISTS {SELECT (?item1 AS ?item) {INCLUDE %2.}}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nBIND(?depth1+?depth2 AS ?depth)\n} ORDER BY ?depth",
        "complexity_description": "Multiple services, subqueries, and filters",
        "complexity": "complex"
    },
    {
        "id": "2022",
        "valid_gpt_response": true,
        "query": "SELECT ?artistLabel ?languages\nWITH {\nSELECT ?song WHERE {\n?song wdt:P31/wdt:P279* wd:Q7366.\n}\n} AS %songs\nWITH {\nSELECT ?artist (COUNT(DISTINCT ?language) AS ?languages)\nWHERE {\nINCLUDE %songs .\n?song wdt:P175 ?artist; wdt:P407 ?language .\n}\nGROUP BY ?artist\nHAVING(?languages > 2)\n} AS %artists\nWHERE {\nINCLUDE %artists\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC(?languages)",
        "complexity_description": "Multiple subqueries, joins, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "2023",
        "valid_gpt_response": true,
        "query": "SELECT ?itemLabel (ROUND(AVG(?age)) AS ?avg)\nWHERE\n{\n?item wdt:P31 wd:Q223371.\n?item wdt:P17 ?country.\n?item wdt:P527 ?components.\n?components wdt:P571 ?founding.\nbind( year(now())-year(?founding) as ?age )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nGROUP BY ?itemLabel\nORDER BY ?avg",
        "complexity_description": "Multiple joins, aggregation and binding functions",
        "complexity": "complex"
    },
    {
        "id": "2024",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT * WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n{ ?item wdt:P31 wd:Q2074737. }\nUNION\n{ ?item wdt:P31 wd:Q484170. }\n?item (wdt:P131/(wdt:P131*)/^wdt:P527) wd:Q47588.\n?item wdt:P190 ?hiri_senidetuak.\n?item wdt:P625 ?coord1.\n?hiri_senidetuak wdt:P625 ?coord2.\n?item p:P625 [ ps:P625 []; psv:P625 [ wikibase:geoLongitude ?coord1lon; wikibase:geoLatitude ?coord1lat; ] ].\n?hiri_senidetuak p:P625 [ ps:P625 []; psv:P625 [ wikibase:geoLongitude ?coord2lon; wikibase:geoLatitude ?coord2lat; ] ].\nBIND(CONCAT('LINESTRING (', STR(?coord1lon), ' ', STR(?coord1lat), ',', STR(?coord2lon), ' ', STR(?coord2lat), ')') AS ?str) .\nBIND(STRDT(?str, geo:wktLiteral) AS ?line)\n}",
        "complexity_description": "Multiple UNIONs, property paths, and BIND operations",
        "complexity": "complex"
    },
    {
        "id": "2025",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?org ?orgLabel ?loc\nWHERE\n{\n{ ?item wdt:P31 wd:Q87719492 } UNION {\nVALUES ?v { wd:Q84263196 wd:Q82069695 }\nVALUES ?vv { wd:Q134808 wd:Q28051899 }\n?item wdt:P31 ?vv.\n?item wdt:P1924 ?v.\n}\nOPTIONAL\n{\nVALUES ?type { wd:Q3560939 wd:Q96695067 wd:Q96841548 wd:Q578537 wd:Q97153934 wd:Q97153933 wd:Q58623657}\n?item wdt:P31 ?type\n}\nOPTIONAL {\nVALUES ?p { wdt:P176 wdt:P178 }\n?item ?p ?org.\nOPTIONAL { ?org wdt:P159 [ wdt:P625 ?hloc ]. }\nOPTIONAL { ?org wdt:P625 ?cloc. }\nBIND (IF (BOUND(?hloc), ?hloc, ?cloc) AS ?loc)\n?org rdfs:label ?orgLabel. FILTER( LANG(?orgLabel)=\"en\" )\n}\n?item rdfs:label ?itemLabel. FILTER( LANG(?itemLabel)=\"en\" )\n}",
        "complexity_description": "Multiple UNION, OPTIONAL clauses, and nested BIND with IF condition",
        "complexity": "complex"
    },
    {
        "id": "2026",
        "valid_gpt_response": true,
        "query": "SELECT ?line (CEIL(?depth/10)*10 as ?layer) {\nSERVICE gas:service {\ngas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.BFS\" ; gas:in wd:Q720102 ; gas:out ?station ; gas:out1 ?depth ; gas:out2 ?pred .\ngas:program gas:linkType wdt:P197 . }\nFILTER(?station != wd:Q720102)\n?pred wdt:P625 ?cds.\nBIND(IF(xsd:double(?depth/10) = xsd:integer(?depth/10),?cds,\"\") as ?coords)\n?pred p:P625/psv:P625/wikibase:geoLatitude ?lat1 ; p:P625/psv:P625/wikibase:geoLongitude ?lon1 .\n?station p:P625/psv:P625/wikibase:geoLatitude ?lat2 ; p:P625/psv:P625/wikibase:geoLongitude ?lon2 .\nBIND(CONCAT('LINESTRING(', STR(?lon1), ' ', STR(?lat1), ',', STR(?lon2), ' ', STR(?lat2), ')') AS ?str) . BIND(STRDT(?str, geo:wktLiteral) AS ?line)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"bn,en\". }\n}",
        "complexity_description": "Multiple services, filters, and complex bindings",
        "complexity": "complex"
    },
    {
        "id": "2027",
        "valid_gpt_response": true,
        "query": "SELECT ?Frantziako_Tourra ?Frantziako_TourraLabel ?urtea ?irabazle ?irabazleLabel ?adina WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?Frantziako_Tourra wdt:P31 wd:Q33881;\nwdt:P582 ?bukaera_data;\np:P1346 [ ps:P1346 ?irabazle; pq:P642 wd:Q20882667 ].\nBIND(YEAR(?bukaera_data) AS ?urtea)\n?irabazle wdt:P569 ?jaiotza_data.\nBIND((?bukaera_data - ?jaiotza_data) as ?adina_egunak)\nBIND(?adina_egunak/365.2425 AS ?adina_urteak).\nBIND(FLOOR(?adina_urteak) AS ?adina).\n}\nORDER by ASC (?urtea)",
        "complexity_description": "Multiple filters, bindings and calculations",
        "complexity": "complex"
    },
    {
        "id": "2028",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?layer ?coordsLabel ?DOD ?coords WHERE {\n?item wdt:P39 wd:Q18341329;\nwdt:P20 ?PoD.\n?item rdfs:label ?itemLabel.\n?item wdt:P570 ?DOD.\n?PoD wdt:P625 ?coords.\nFILTER((LANG(?itemLabel)) = \"da\")\nOPTIONAL {\n?item wdt:P1196 ?manner.\n?manner rdfs:label ?mannerLabel.\nFILTER((LANG(?mannerLabel)) = \"da\")\nBIND(?mannerLabel AS ?layer)\n}\n}",
        "complexity_description": "Multiple joins, filters and optional clause",
        "complexity": "complex"
    },
    {
        "id": "2029",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coords ?layer\nWHERE\n{\n?item wdt:P39 wd:Q842606.\n?item wdt:P20 ?PoD.\n?PoD wdt:P625 ?coords .\n?item rdfs:label ?itemLabel . filter(lang(?itemLabel)=\"en\")\noptional { ?item wdt:P1196 ?manner.\n?manner rdfs:label ?mannerLabel . filter(lang(?mannerLabel)=\"en\")\nbind(?mannerLabel as ?layer) }\n}",
        "complexity_description": "Multiple joins, filters and optional clause",
        "complexity": "medium"
    },
    {
        "id": "2030",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?constituencyLabel ?partyLabel ?image\n{\n?item p:P39 ?positionStatement .\n?positionStatement ps:P39 wd:Q61479103 .\nOPTIONAL { ?item wdt:P18 ?image. }\nOPTIONAL { ?positionStatement pq:P768 ?constituency . }\nOPTIONAL { ?positionStatement pq:P4100|pq:P102 ?party . }\nOPTIONAL { ?item wikibase:sitelinks ?linkcount. } # <<<<<< Link count\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE], en\". }\n}\nORDER BY DESC(?linkcount)",
        "complexity_description": "Multiple optional patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "2031",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?dob ?sign {\n?item wdt:P31 wd:Q5 ; p:P39/ps:P39/wdt:P279* wd:Q274948 . # all Japanese Prime Ministers\n?item p:P569/psv:P569 [ # with a known birthday\nwikibase:timeValue ?dob; wikibase:timePrecision 11 # of \"day\" precision\n].\nBIND(MONTH(?dob)AS ?month)\nBIND(DAY(?dob)AS ?day)\nBIND(IF(((?month=3)&&(?day>=21))||((?month=4)&&(?day<20)),\"Aries\",\nIF(((?month=4)&&(?day>=20))||((?month=5)&&(?day<21)),\"Taurus\",\nIF(((?month=5)&&(?day>=21))||((?month=6)&&(?day<21)),\"Gemini\",\nIF(((?month=6)&&(?day>=21))||((?month=7)&&(?day<23)),\"Cancer\",\nIF(((?month=7)&&(?day>=23))||((?month=8)&&(?day<23)),\"Leo\",\nIF(((?month=8)&&(?day>=23))||((?month=9)&&(?day<23)),\"Virgo\",\nIF(((?month=9)&&(?day>=23))||((?month=10)&&(?day<23)),\"Libra\",\nIF(((?month=10)&&(?day>=23))||((?month=11)&&(?day<22)),\"Scorpio\",\nIF(((?month=11)&&(?day>=23))||((?month=12)&&(?day<22)),\"Sagittarius\",\nIF(((?month=12)&&(?day>=22))||((?month=1)&&(?day<20)),\"Capricorn\",\nIF(((?month=1)&&(?day>=20))||((?month=2)&&(?day<19)),\"Aquarius\",\nIF(((?month=2)&&(?day>=19))||((?month=3)&&(?day<21)),\"Pisces\",\n\"unknown (this should never happen)\"\n))))))))))))\nAS ?sign)\nSERVICE wikibase:label { bd:serviceParam wikibase:language 'en' }\n}",
        "complexity_description": "Multiple nested IF conditions, BIND operations and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "2032",
        "valid_gpt_response": true,
        "query": "SELECT ?series ?seriesLabel ?years ?interval ?game ?gameLabel ?original_date_game ?sequel ?sequelLabel ?original_date_sequel WHERE {{\nSELECT ?game ?gameLabel (MIN(?game_date) AS ?original_date_game) ?sequel ?sequelLabel (MIN(?sequel_date) AS ?original_date_sequel) ?series ?seriesLabel WHERE {\n?game (wdt:P31/(wdt:P279*)) wd:Q7889; # All video games...\nwdt:P577 ?game_date. # with their publication date(s)...\n{?game p:P179 ?series_statement. # (Unpacking the series statement)\n?series_statement ps:P179 ?series; # ...in a series...\npq:P156 ?sequel. # ...with a sequel...\n} UNION { # ...or...\n?game wdt:P156 ?sequel. # ...with a sequel...\nOPTIONAL {\n?game wdt:P179 ?series # ...maybe with a series\n}}\n?sequel wdt:P577 ?sequel_date. # with its own publication date(s)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }}\nGROUP BY ?game ?gameLabel ?sequel ?sequelLabel ?series ?seriesLabel}\nBIND(?original_date_sequel - ?original_date_game AS ?interval) # Calculating the time gap between the original releases...\nBIND(ROUND(?interval / 365 ) AS ?years) # ...and converting to years, for convenience.\nFILTER(?interval > 0 ) # Only keeping sequels published after (filtering out some bad data)\n}\nORDER BY DESC (?interval)",
        "complexity_description": "Multiple subqueries, unions, and complex filtering",
        "complexity": "complex"
    },
    {
        "id": "2033",
        "valid_gpt_response": true,
        "query": "SELECT ?author ?authorLabel ?birthplaceLabel ?idELEM ?coord\n(GROUP_CONCAT(DISTINCT ?occupation_label; SEPARATOR=\", \") as ?occupations) #thanks to @NavinoEvans for this!\nWHERE {\n?author wdt:P1565 ?idELEM . #has a ELEM id\nOPTIONAL {\n?author wdt:P19 ?birthplace . # born in a place...\n?birthplace wdt:P625 ?coord .\n?author wdt:P106 ?occupation . #get occupation\n?occupation rdfs:label ?occupation_label FILTER (lang(?occupation_label) = \"es\") #get label the 'manual' way\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],es\". }\n} GROUP BY ?author ?authorLabel ?birthplaceLabel ?idELEM ?coord #GROUP BY\nLIMIT 5000",
        "complexity_description": "Multiple joins, optional patterns, and group concat",
        "complexity": "complex"
    },
    {
        "id": "2034",
        "valid_gpt_response": true,
        "query": "SELECT ?pertsona ?pertsonaLabel ?koord WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?Mikel wdt:P460 wd:Q4927524.\n?pertsona wdt:P735 ?Mikel.\n?pertsona wdt:P19 ?jaiolekua.\n?jaiolekua wdt:P625 ?koord.\n}",
        "complexity_description": "Multiple joins and filters",
        "complexity": "medium"
    },
    {
        "id": "2035",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?count ?image WHERE {\n?item wikibase:sitelinks ?count.\n?item wdt:P31/wdt:P279* wd:Q202866;\nwdt:P495 wd:Q15180.\n# FILTER (SUBSTR(str(?sitelink), 11, 15) = \".wikipedia.org/\") .\nOPTIONAL {?item wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"ru\",\"en\" }\n}\nORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, optional clause, and service call",
        "complexity": "medium"
    },
    {
        "id": "2036",
        "valid_gpt_response": true,
        "query": "SELECT ?wikidata ?wikidataLabel (?code as ?_iso3166) ?wikipedia (?wikidataAltLabel as ?alt) ?synonym ?wikidataDescription (?wikidataLabel as ?term) {\n## Forcing particular query execution order\nhint:Query hint:optimizer \"None\" .\n## all ISO countries\n?wikidata wdt:P297 ?code.\n## Optional details about the countries like links to wikipaedia pages for each country to be presented in a seperate column\nOPTIONAL { ?wikipedia schema:about ?wikidata; schema:isPartOf <https://en.wikipedia.org/> }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\".\n## Selecting the prefered label\n?wikidata skos:altLabel ?wikidataAltLabel ; rdfs:label ?wikidataLabel; schema:description ?wikidataDescription\n}\n## Making sure the RGI alphabets of the flags are not rendered as flags and they appear as simple alphabets by specifying the acceptable characters.\nBIND (REPLACE(REPLACE(?wikidataAltLabel, \"(, )?[-]{2}\", \"\"), \"^, \", \"\") AS ?synonym )\n}\nORDER BY (?wikidataLabel)",
        "complexity_description": "Multiple optional patterns, service calls, and string manipulations",
        "complexity": "complex"
    },
    {
        "id": "2037",
        "valid_gpt_response": true,
        "query": "SELECT ?personLabel (COUNT(?parti) AS ?partiC) WHERE {\n?person wdt:P102 ?parti;\nwdt:P27 wd:Q20.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"nb,en\" }\n}\nGROUP BY ?personLabel\nHAVING (?partiC > 2)\nORDER BY DESC (?partiC)\nLIMIT 100",
        "complexity_description": "Multiple clauses, aggregation and filtering",
        "complexity": "complex"
    },
    {
        "id": "2038",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?vernoemdeLabel ?coords\nWHERE\n{\n?item wdt:P31 wd:Q79007 .\n?item wdt:P131 wd:Q43631 .\n?item wdt:P138 ?vernoemde .\n?item wdt:P625 ?coords .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Simple query with 4 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "2039",
        "valid_gpt_response": true,
        "query": "SELECT ?x ?xLabel ?coords ?location ?locationLabel ?layer ?startDate WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?x wdt:P31 wd:Q54875403.\n?x wdt:P6195 wd:Q99441279;\nwdt:P580 ?date;\nwdt:P276 ?location.\n?location wdt:P625 ?coords.\nOPTIONAL { ?x wdt:P580 ?start. }\nBIND(YEAR(?start) AS ?startDate)\nBIND(IF(?startDate = 2013 , \"2013\", IF(?startDate = 2014 , \"2014\", IF(?startDate = 2015 , \"2015\", IF(?startDate = 2016 , \"2016\", IF(?startDate = 2017 , \"2017\", IF(?startDate = 2018 , \"2018\", IF(?startDate = 2019 , \"2019\", \"2020\"))))))) AS ?layer)\n}\nORDER BY (?startDate)",
        "complexity_description": "Multiple joins, optional clause, and complex bindings",
        "complexity": "complex"
    },
    {
        "id": "2040",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?sitelinks {\nSERVICE gas:service {\ngas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.SSSP\" ;\ngas:in wd:Q291877 ;\ngas:traversalDirection \"Forward\" ;\ngas:out ?item ;\ngas:linkType wdt:P40 .\n}\n?item wdt:P21 wd:Q6581072.\n?item wdt:P569 ?jaiotza.\n?item wdt:P106 wd:Q33999.\n?item wikibase:sitelinks ?sitelinks.\nBIND(YEAR(?jaiotza) as ?year).\nFILTER(?year > 1950).\nMINUS{?item wdt:P570 ?heriotza}.\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"eu,es,en\" }\n}\norder by desc(?sitelinks)",
        "complexity_description": "Multiple services, filters, and minus clause",
        "complexity": "complex"
    },
    {
        "id": "2041",
        "valid_gpt_response": true,
        "query": "SELECT ?fodselsdato ?personLabel (GROUP_CONCAT(?embede_label; separator=\", \") AS ?embeder) {\n?person wdt:P102 wd:Q212101 ;\np:P39 ?embede_statement ;\nwdt:P570 [] ;\nwdt:P569 ?fodselsdato .\n?embede_statement ps:P39 ?embede ;\npq:P580 ?start .\n?embede wdt:P361 wd:Q1503072 ;\nrdfs:label ?embede_label .\nFILTER (?start > \"1992-01-01\"^^xsd:dateTime)\nFILTER (LANG(?embede_label) = 'da')\nFILTER (wd:Q1424299 != ?person)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"da\". }\n}\nGROUP BY ?fodselsdato ?person ?personLabel ?dodsdato\nORDER BY DESC(?fodselsdato)",
        "complexity_description": "Multiple filters, joins, and subqueries",
        "complexity": "complex"
    },
    {
        "id": "2042",
        "valid_gpt_response": true,
        "query": "SELECT ?year (count(?margolan) AS ?count) WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?margolan wdt:P31 wd:Q3305213;\nwdt:P571 ?sorrera_data.\n?margolan wdt:P18 ?irudia.\nBIND(YEAR(?sorrera_data) as ?year).\nFILTER(?year > 1)\n}\nGROUP by ?year\nORDER by ASC(?year)",
        "complexity_description": "Multiple filters, grouping and ordering",
        "complexity": "medium"
    },
    {
        "id": "2043",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coord ?elev ?prom ?picture WHERE {\n?item (p:P2044/psn:P2044/wikibase:quantityAmount) ?elev;\nwdt:P625 ?coord;\nwdt:P17 wd:Q39;\nwdt:P2660 ?prom;\nwdt:P18 ?picture.\nFILTER(?prom > 100)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC (?prom)",
        "complexity_description": "Multiple triple patterns, filter and service",
        "complexity": "medium"
    },
    {
        "id": "2044",
        "valid_gpt_response": true,
        "query": "SELECT ?market ?marketLabel ?coordinate_location WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"id\". }\n?market wdt:P31 wd:Q330284;\nwdt:P276 wd:Q11462;\nwdt:P625 ?coordinate_location.\n}",
        "complexity_description": "Multiple triple patterns with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "2045",
        "valid_gpt_response": true,
        "query": "SELECT ?geo ?layer WHERE {\n?ereserki wdt:P31 wd:Q23691 ; wdt:P17 ?country ; wdt:P826 ?ton .\n?country wdt:P3896 ?geo .\n?ton rdfs:label ?tonLabel .\nFILTER (lang(?tonLabel) = \"eu\").\nBIND ( ?tonLabel AS ?layer )\n}",
        "complexity_description": "Multiple joins, filter and bind",
        "complexity": "medium"
    },
    {
        "id": "2046",
        "valid_gpt_response": true,
        "query": "SELECT ?item1 ?item1Label ?item2Label ?item3Label ?item4Label ?item5Label ?item6Label WHERE {\n?item1 wdt:P138 ?item2 .\n?item2 wdt:P138 ?item3 .\n?item3 wdt:P138 ?item4 .\n?item4 wdt:P138 ?item5 .\n?item5 wdt:P138 ?item6 .\nFILTER (?item1 != ?item2 && ?item2 != ?item3 && ?item3 != ?item4 && ?item4 != ?item5 && ?item5 != ?item6) .\nFILTER (?item1 != ?item3 && ?item2 != ?item4 && ?item3 != ?item5 && ?item4 != ?item6) .\nFILTER (?item1 != ?item4 && ?item2 != ?item5 && ?item3 != ?item6) .\nFILTER (?item1 != ?item5 && ?item2 != ?item6) .\nFILTER (?item1 != ?item6) .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,de,fr\". }\n}",
        "complexity_description": "Multiple filters and chained triple patterns",
        "complexity": "complex"
    },
    {
        "id": "2047",
        "valid_gpt_response": true,
        "query": "SELECT ?part (STR(YEAR(?pit)) AS ?year) (COUNT(*) AS ?counts)\nWHERE\n{\n?item wdt:P31 wd:Q100532807.\n?item wdt:P179 ?part.\n?part wdt:P1001 wd:Q27;\nwdt:P585 ?pit.\n}\nGROUP BY ?part ?partLabel ?pit",
        "complexity_description": "Multiple joins, grouping and aggregation",
        "complexity": "complex"
    },
    {
        "id": "2048",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?doi ?journal ?journalLabel ?date WHERE {\n?item wdt:P921 wd:Q98969121.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\nOPTIONAL { ?item wdt:P18 ?_image. }\nOPTIONAL { ?item wdt:P356 ?doi. }\nOPTIONAL { ?item wdt:P577 ?date.}\nOPTIONAL { ?item wdt:P1433 ?journal. }\n}\nORDER BY DESC(?date)\nLIMIT 100",
        "complexity_description": "Multiple optional patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "2049",
        "valid_gpt_response": true,
        "query": "SELECT ?country ?label_en ?label_fr ?label_de ?label_ru\nWHERE\n{\n?country wdt:P31 wd:Q3624078.\nOPTIONAL { ?country rdfs:label ?label_en filter (lang(?label_en) = \"en\"). }\nOPTIONAL { ?country rdfs:label ?label_fr filter (lang(?label_fr) = \"fr\"). }\nOPTIONAL { ?country rdfs:label ?label_de filter (lang(?label_de) = \"de\"). }\nOPTIONAL { ?country rdfs:label ?label_ru filter (lang(?label_ru) = \"ru\"). }\n}",
        "complexity_description": "Multiple optional patterns with filters",
        "complexity": "medium"
    },
    {
        "id": "2050",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?anotherItemLabel ?loc WHERE {\n?item wdt:P31 wd:Q3305213 .\n?item wdt:P180 ?anotherItem .\n?anotherItem wdt:P625 ?loc .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Three triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "2051",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?anotherItem) AS ?anotherItemCount) ?anotherItemLabel ?loc WHERE {\n?item wdt:P31 wd:Q3305213 .\n?item wdt:P180 ?anotherItem .\n?anotherItem wdt:P625 ?loc .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?anotherItemLabel ?anotherItemCount ?loc\nORDER BY DESC(?anotherItemCount)\nLIMIT 20",
        "complexity_description": "Multiple joins, group by and order by",
        "complexity": "medium"
    },
    {
        "id": "2052",
        "valid_gpt_response": true,
        "query": "SELECT ?i_subject ?iu_enwiki ?i_subjectLabel ?ii_pic ?rn_t_dobLabel ?i_DOB ?rn_t_dodLabel ?i_DOD ?i_place ?i_placeLabel ?i_plaque ?i_plaqueLabel\n?ii_plaqueImage ?i_occupationLabel WHERE\n{\n?i_plaque wdt:P31 wd:Q721747; wdt:P131 wd:Q62274582 .\n?i_plaque wdt:P547 ?i_subject .\n?i_subject wdt:P31 wd:Q5 .\nOPTIONAL { ?iu_enwiki schema:about ?i_subject; schema:isPartOf <https://en.wikipedia.org/> }\nOPTIONAL {?i_subject wdt:P18 ?ii_pic. }\nOPTIONAL {?i_plaque wdt:P18 ?ii_plaqueImage .}\nOPTIONAL {?rn_t_dob wikibase:directClaim wdt:P569. }\nOPTIONAL {?i_subject wdt:P569 ?i_DOB .}\nOPTIONAL {?rn_t_dod wikibase:directClaim wdt:P570. }\nOPTIONAL {?i_subject wdt:P570 ?i_DOD .}\nOPTIONAL {?i_subject wdt:P106 ?i_occupation}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple optional patterns, multiple triple patterns, and service call",
        "complexity": "complex"
    },
    {
        "id": "2053",
        "valid_gpt_response": true,
        "query": "select * {\n?city wdt:P31/wdt:P279* wd:Q515 .\n?city wdt:P6 ?mayor .\n?mayor wdt:P21 ?gender .\n?city wdt:P625 ?loc .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?gender rdfs:label ?genderLabel}\nbind(?genderLabel as ?layer)\n}",
        "complexity_description": "Multiple triple patterns, service call and bind function",
        "complexity": "medium"
    },
    {
        "id": "2054",
        "valid_gpt_response": true,
        "query": "SELECT ?country ?nameLabel ?shape ?layer WITH {\nSELECT ?item ?name ?country where {\nvalues ?name {\nwd:Q14936808\nwd:Q1183757\nwd:Q1440465\nwd:Q7648632\nwd:Q7648707\nwd:Q13138161\nwd:Q14936073\nwd:Q14936243\nwd:Q14936686\nwd:Q14936925\nwd:Q14937153\nwd:Q16281769\nwd:Q18061334\nwd:Q18067250\nwd:Q18067716\nwd:Q18067726\nwd:Q18067736\nwd:Q18067785\nwd:Q18067790\nwd:Q18199125\nwd:Q19368856\nwd:Q62595789\nwd:Q78165638\nwd:Q94368759\nwd:Q97120482\n} .\n?item wdt:P735 ?name .\n?item wdt:P19/wdt:P17 ?country .\n} LIMIT 40000\n} AS %data WITH {\nSELECT ?country ?name (COUNT(?item) AS ?pocet) {\nINCLUDE %data .\n} GROUP BY ?country ?name\n} AS %counts WITH {\nSELECT ?country (MAX(?pocet) AS ?max) {\nINCLUDE %counts .\n} GROUP BY ?country\n} AS %best WHERE {\nINCLUDE %counts .\nINCLUDE %best .\nFILTER( ?max = ?pocet ) .\n?name rdfs:label ?nameLabel filter(lang(?nameLabel)=\"en\").\n?country wdt:P3896 ?shape .\nBIND((?nameLabel) as ?layer ).\n}",
        "complexity_description": "Multiple subqueries, grouping and filtering",
        "complexity": "complex"
    },
    {
        "id": "2055",
        "valid_gpt_response": true,
        "query": "SELECT ?arthistorianLabel ?coordinates WHERE {\n?arthistorian wdt:P31 wd:Q5 ;\nwdt:P19 ?birthPlace ;\nwdt:P106 wd:Q1792450 .\n?birthPlace wdt:P625 ?coordinates .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "2056",
        "valid_gpt_response": true,
        "query": "SELECT ?taxon ?dutch ?nl ?de ?it ?en ?fr WHERE {\nbind(if(bound(?english), \"+\", \"-\") as ?en )\nbind(if(bound(?french), \"+\", \"-\") as ?fr )\nbind(if(bound(?dutch), \"+\", \"-\") as ?nl )\nbind(if(bound(?german), \"+\", \"-\") as ?de )\nbind(if(bound(?italian), \"+\", \"-\") as ?it )\n{SELECT ?taxon ?dutch ?italian ?english ?french ?german WHERE {\n?taxon wdt:P5588 wd:Q458 .\nOPTIONAL {?english schema:about ?taxon .\nFILTER (regex(str(?english), \"https://en.wikipedia\"))}\nOPTIONAL {?dutch schema:about ?taxon .\nFILTER (regex(str(?dutch), \"https://nl.wikipedia\"))}\nOPTIONAL {?french schema:about ?taxon .\nFILTER (regex(str(?french), \"https://fr.wikipedia\"))}\nOPTIONAL {?german schema:about ?taxon .\nFILTER (regex(str(?german), \"https://de.wikipedia\"))}\nOPTIONAL {?italian schema:about ?taxon .\nFILTER (regex(str(?italian), \"https://it.wikipedia\"))}\n}}}",
        "complexity_description": "Multiple nested queries with optional patterns and regex filters",
        "complexity": "complex"
    },
    {
        "id": "2057",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?nomLabel ?naissanceLabel ?coord ?debut ?fin ?matches WHERE {\n?item wdt:P31 wd:Q5;\nwdt:P106 wd:Q937857.\nOPTIONAL { ?item wdt:P734 ?nom. }\n?item wdt:P19 ?naissance.\n?naissance wdt:P625 ?coord .\n?item p:P54 ?om.\n?om ps:P54 wd:Q132885.\nOPTIONAL { ?om pq:P580 ?debut. }\nOPTIONAL { ?om pq:P582 ?fin. }\nOPTIONAL { ?om pq:P1350 ?matches. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr, en\". }\n}",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "2058",
        "valid_gpt_response": true,
        "query": "SELECT ?month ?year (count(*) as ?count) WHERE {\n?item wdt:P31 wd:Q5.\n?item (p:P570/psv:P570) ?timenode0.\n?timenode0 wikibase:timeValue ?time0.\n?timenode0 wikibase:timePrecision ?timeprecision0.\nFILTER('2019-01-01'^^xsd:dateTime <= ?time0 && ?time0 < '2021-12-31'^^xsd:dateTime).\nFILTER(?timeprecision0>=8)\n?item wdt:P570 ?time.\n?item wdt:P509 wd:Q84263196.\nbind(month(?time0) as ?month)\nbind(year(?time0) as ?year)\n}\ngroup by ?month ?year",
        "complexity_description": "Multiple filters, bindings and group by",
        "complexity": "complex"
    },
    {
        "id": "2059",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ((xsd:float(?nbRadaActors)/xsd:float(?totalNbActors)) AS ?rate) WHERE {\n{\nSELECT DISTINCT ?item (COUNT(?actors) AS ?nbRadaActors) {\n?item wdt:P31/wdt:P279* wd:Q11424 .\n?item wdt:P161 ?actors .\n?actors wdt:P69 wd:Q523926 .\n} GROUP BY ?item\n}\n{\nSELECT DISTINCT ?item (COUNT(?actors) AS ?totalNbActors) {\n?item wdt:P31/wdt:P279* wd:Q11424 .\n?item wdt:P161 ?actors .\n} GROUP BY ?item HAVING (?totalNbActors >= 5)\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY DESC(?rate)",
        "complexity_description": "Multiple subqueries, grouping and aggregation",
        "complexity": "complex"
    },
    {
        "id": "2060",
        "valid_gpt_response": true,
        "query": "SELECT ?libSystem ?libSystemLabel ?centralLibrary ?centralLibraryLabel ?clCoord ?branchLibrary ?branchLibraryLabel ?blCoord ?line ?layer WHERE {\n?libSystem wdt:P31/wdt:P279* wd:Q28324850 ; wdt:P131 ?loc ;\nwdt:P527 ?centralLibrary ;\nwdt:P527 ?branchLibrary .\n?centralLibrary wdt:P31 wd:Q12317349 ;\nwdt:P625 ?clCoord .\n?branchLibrary wdt:P31 wd:Q11396180 ;\nwdt:P625 ?blCoord .\n?centralLibrary p:P625 [ ps:P625 []; psv:P625 [ wikibase:geoLongitude ?clLon; wikibase:geoLatitude ?clLat; ] ].\n?branchLibrary p:P625 [ ps:P625 []; psv:P625 [ wikibase:geoLongitude ?blLon; wikibase:geoLatitude ?blLat; ] ].\nBIND(CONCAT('LINESTRING (', STR(?clLon), ' ', STR(?clLat), ',', STR(?blLon), ' ', STR(?blLat), ')') AS ?str1) .\nBIND(STRDT(?str1, geo:wktLiteral) AS ?line) .\nBIND(?libSystem as ?layer)\n{ SELECT * { ?loc wdt:P131* wd:Q99 . } }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, subqueries, and complex data manipulation",
        "complexity": "complex"
    },
    {
        "id": "2061",
        "valid_gpt_response": true,
        "query": "SELECT ?femmeLabel ?femme (MIN(?image) AS ?pic) (CONCAT(\"http://siefar.org/dictionnaire/fr/\", MIN(?siefarId)) AS ?siefar) WHERE {\n?femme wdt:P7962 ?siefarId;\nwdt:P106/wdt:P279* wd:Q36180.\nOPTIONAL { ?femme wdt:P18 ?image. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr\". }\n}\nGROUP BY ?femmeLabel ?femme\nORDER BY (?siefar)",
        "complexity_description": "Multiple joins, optional clause, and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "2062",
        "valid_gpt_response": true,
        "query": "SELECT ?article ?person ?personLabel ?picGrave ?coord ?bd ?graveplot2 ?layer WHERE {\n{\n?person wdt:P119 wd:Q311 ;\np:P119 [\npq:P965 ?graveplot];\nwdt:P569 ?bd .\n?person wdt:P19 ?city .\n?city wdt:P625 ?coord .\nOPTIONAL{ ?person wdt:P1442 ?picGrave .}\nOPTIONAL {\n?article schema:about ?person .\n?article schema:inLanguage \"fr\" .\n?article schema:isPartOf <https://fr.wikipedia.org/> .}\nBIND (CONCAT(\"Division \",?graveplot) AS ?graveplot2)\nBIND(\nIF(?bd < \"1700-01-01T00:00:00Z\"^^xsd:dateTime, \"<1700\",\nIF(?bd < \"1800-01-01T00:00:00Z\"^^xsd:dateTime, \"18e siecle\",\nIF(?bd < \"1900-01-01T00:00:00Z\"^^xsd:dateTime, \"19e siecle\",\nIF(?bd < \"2000-01-01T00:00:00Z\"^^xsd:dateTime, \"20e siecle\",\n\"21e siecle\"))))\nAS ?layer).\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\"}\n}\nOrder by ?personLabel",
        "complexity_description": "Multiple optional patterns, nested IF statements, and BIND operations",
        "complexity": "complex"
    },
    {
        "id": "2063",
        "valid_gpt_response": true,
        "query": "SELECT ?occupationLabel (COUNT (*) AS ?count) WHERE {\n?person wdt:P31 wd:Q5 .\n?person wdt:P509 wd:Q84263196 .\n?person wdt:P106 ?occupation .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGroup BY ?occupationLabel\nORDER BY desc( ?count)\nLIMIT 100",
        "complexity_description": "Multiple triple patterns, service call and aggregation",
        "complexity": "medium"
    },
    {
        "id": "2064",
        "valid_gpt_response": true,
        "query": "SELECT ?i_owner ?i_ownerLabel ?ii_owner ?rn_ownsLabel ?i_item ?i_itemLabel ?i_itemDescription ?ii_item WHERE {\n{\nSELECT ?i_item WHERE {\nwd:Q22686 (wdt:P1830 | ^wdt:P1830)* ?i_item.\n}\n}\nOPTIONAL {\n?i_owner wdt:P1830 ?i_item.\nOPTIONAL { ?i_owner wdt:P18 ?ii_owner. }\nOPTIONAL { ?i_item wdt:P18 ?ii_item. }\n}\nBIND (\"owns/owned\" AS ?rn_owns).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple optional patterns, subqueries and service calls",
        "complexity": "complex"
    },
    {
        "id": "2065",
        "valid_gpt_response": true,
        "query": "SELECT ?groupLabel (?groupLabel as ?layer) ?article ?person ?personLabel ?personDescription ?coord ?pic ?picGrave\nWHERE {\n?person wdt:P119 wd:Q311; #Place of burial\np:P119 [\npq:P965 ?graveplot;\npq:P625 ?coord].\nOPTIONAL{ ?person wdt:P18 ?pic .} # If we have an illustration\nOPTIONAL{ ?person wdt:P1442 ?picGrave .} # If we have a picture of the grave\nOPTIONAL {\n?article schema:about ?person .\n?article schema:inLanguage \"fr\" .\n?article schema:isPartOf <https://fr.wikipedia.org/> .\n}\nOPTIONAL { ?person wdt:P21 ?group .} # Occupation in Layer\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr, en\" .}\n}",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "2066",
        "valid_gpt_response": true,
        "query": "SELECT\n?author1 ?author1Label ?image1 ?rgb\n?author2 ?author2Label ?image2\nWITH {\nSELECT\n?author1 (SAMPLE(?image1_) AS ?image1)\n?author2 (SAMPLE(?image2_) AS ?image2)\n(SAMPLE(?rgb_) AS ?rgb)\nWHERE {\nwd:Q784171 ^wdt:P361* / ^( wdt:P108 | wdt:P1416 | wdt:P463 ) ?author1 , ?author2 .\n?work wdt:P50 ?author1 , ?author2 .\n# Only display co-authorship for certain types of documents\n# Journal and conference articles, books, not (yet?) software\nVALUES ?publication_type { wd:Q13442814 wd:Q571 wd:Q26973022 wd:Q17928402 wd:Q947859 wd:Q54670950 }\nFILTER EXISTS { ?work wdt:P31 ?publication_type . }\n# No self-links.\nFILTER (?author1 != ?author2)\n# Images\nOPTIONAL { ?author1 wdt:P18 ?image1_ }\nOPTIONAL { ?author2 wdt:P18 ?image2_ }\n# Coloring of the nodes\nBIND(\"FFFFFF\" AS ?rgb_)\n}\nGROUP BY ?author1 ?author2\n} AS %result\nWHERE {\nINCLUDE %result\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,sv,ru,zh\".\n}\n}",
        "complexity_description": "Multiple subqueries, filters, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "2067",
        "valid_gpt_response": true,
        "query": "SELECT ?year (COUNT(?person) as ?count)\nWHERE\n{\n?person wdt:P31 wd:Q5;\nwdt:P69 wd:Q49122;\np:P570/psv:P570 [\nwikibase:timeValue ?date ;\n] .\nBIND(STR(YEAR(?date)) as ?year).\nfilter (?date > \"1850-01-01\"^^xsd:dateTime && ?date < \"1950-01-01\"^^xsd:dateTime)\n}\nGROUP BY ?year",
        "complexity_description": "Multiple filters, binding and grouping",
        "complexity": "medium"
    },
    {
        "id": "2068",
        "valid_gpt_response": true,
        "query": "SELECT ?item1 ?image1 ?item1Label ?item2 ?image2 ?item2Label ?size ?rgb\nWHERE\n{\nVALUES ?creator { wd:Q1064767 }\n{ # Get works and instances\nVALUES ?rgb { \"FFBD33\" }\nVALUES ?size { 2 }\n?item1 wdt:P170 ?creator .\n?item1 wdt:P31 ?item2 .\nOPTIONAL { ?item1 wdt:P18 ?image1. }\n}\nUNION\n{ # Depictions\nVALUES ?rgb { \"fff033\" }\nVALUES ?size { 1 }\n?item1 wdt:P170 ?creator .\n?item1 wdt:P180 ?item2 .\nOPTIONAL { ?item1 wdt:P18 ?image1. }\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple UNION patterns, OPTIONAL clauses, and SERVICE keyword usage",
        "complexity": "complex"
    },
    {
        "id": "2069",
        "valid_gpt_response": true,
        "query": "SELECT\n?p ?pLabel ?comparewithLabel\n(SAMPLE(?url) AS ?url_comp2)\nWHERE\n{\nBIND(wd:Q39666 as ?comparewith)\nhint:Query hint:optimizer \"None\".\n{ ?comparewith ?wdt ?v.\n?p wikibase:directClaim ?wdt; wikibase:propertyType wikibase:ExternalId.\nFILTER NOT EXISTS { wd:Q4573 ?wdt [] }\nFILTER NOT EXISTS { ?p wdt:P31 wd:Q66712599 }\nFILTER NOT EXISTS { ?p wdt:P31 wd:Q27525351 }\nFILTER NOT EXISTS { ?p wdt:P31 wd:Q66118402 }\nOPTIONAL { ?p wdt:P1630 ?f. } BIND(URI(REPLACE(?f, \"\\\\$1\", ?v)) AS ?url)\n} UNION { BIND( wd:Q4573 as ?p) }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\"}\n}\nGROUP BY ?p ?pLabel ?comparewithLabel\nORDER BY (?url_comp2)",
        "complexity_description": "Multiple filters, optional clause, union, and service query",
        "complexity": "complex"
    },
    {
        "id": "2070",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\n?q wdt:P5375 ?id .\n?q wdt:P569 ?date .\n?q wdt:P19/wdt:P625 ?coord .\nBIND ( floor(year(?date)/100) AS ?layer )\n}",
        "complexity_description": "Multiple triple patterns, BIND clause with function",
        "complexity": "medium"
    },
    {
        "id": "2071",
        "valid_gpt_response": true,
        "query": "SELECT ?terminusLabel ?roadLabel ?location WHERE {\n?road wdt:P31 wd:Q18019452 ;\nwdt:P609 ?terminus .\n?terminus wdt:P625 ?location .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple triple patterns, SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "2072",
        "valid_gpt_response": true,
        "query": "SELECT ?date ?age ?layer WHERE {\n{\n?usPresident wdt:P31 wd:Q5;\np:P39 [\nps:P39 wd:Q11696;\npq:P580 ?usPresidentStart\n];\nwdt:P569 ?usPresidentDob.\nBIND(xsd:integer((?usPresidentStart - ?usPresidentDob) / 365.2425) AS ?usPresidentAge)\nBIND(?usPresidentStart AS ?date)\nBIND(?usPresidentAge AS ?age)\nBIND(\"US president\"@en AS ?layer)\n} UNION {\n?ukPrimeMinister wdt:P31 wd:Q5;\np:P39 [\nps:P39 wd:Q14211;\npq:P580 ?ukPrimeMinisterStart\n];\nwdt:P569 ?ukPrimeMinisterDob.\nBIND(xsd:integer((?ukPrimeMinisterStart - ?ukPrimeMinisterDob) / 365.2425) AS ?ukPrimeMinisterAge)\nBIND(?ukPrimeMinisterStart AS ?date)\nBIND(?ukPrimeMinisterAge AS ?age)\nBIND(\"UK Prime Minister\"@en AS ?layer)\n} UNION {\nwd:Q21 p:P4442 [\nps:P4442 ?englandMeanAge;\npq:P585 ?englandMeanAgeTime\n].\nBIND(?englandMeanAgeTime AS ?date)\nBIND(?englandMeanAge AS ?age)\nBIND(\"England\"@en AS ?layer)\n}\n# FILTER(?date >= \"1989\"^^xsd:dateTime)\n}",
        "complexity_description": "Multiple UNIONs, BINDs and filters",
        "complexity": "complex"
    },
    {
        "id": "2073",
        "valid_gpt_response": true,
        "query": "SELECT ?x ?xLabel ?coords ?location ?locationLabel ?layer ?startDate WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?x wdt:P31 wd:Q54875403;\nwdt:P580 ?date;\nwdt:P276 ?location.\n?location wdt:P625 ?coords.\nOPTIONAL { ?x wdt:P580 ?start. }\nBIND(YEAR(?start) AS ?startDate)\nBIND(IF(?startDate = 2013 , \"2013\", IF(?startDate = 2014 , \"2014\", IF(?startDate = 2015 , \"2015\", IF(?startDate = 2016 , \"2016\", IF(?startDate = 2017 , \"2017\", IF(?startDate = 2018 , \"2018\", IF(?startDate = 2019 , \"2019\", IF(?startDate = 2020 , \"2020\", \"other\")))))))) AS ?layer)\n?x wdt:P6195 wd:Q13583472.\n}\nORDER BY (?startDate)",
        "complexity_description": "Multiple filters, optional clause, and nested IF statements",
        "complexity": "complex"
    },
    {
        "id": "2074",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person ?personName ?image WHERE {\n?person wdt:P39 wd:Q11699.\n?person wdt:P39 wd:Q11696.\n?person wdt:P1559 ?personName.\nOPTIONAL {?person wdt:P18 ?image.}\n}",
        "complexity_description": "Multiple triple patterns with OPTIONAL clause",
        "complexity": "medium"
    },
    {
        "id": "2075",
        "valid_gpt_response": true,
        "query": "SELECT ?country ?countryLabel (count (distinct ?member) as ?count) WHERE {\n{?item wdt:P31 wd:Q18201623.} # expedition to the International Space Station\nUNION\n{ ?item p:P793 ?stat . # significant event\n?stat ps:P793 wd:Q557450 . # docking and berthing of spacecraft\n?stat pq:P276 wd:Q25271 . # with the International Space Station\n}\n?item wdt:P1029 ?member . # crew member\n?member wdt:P19 ?PoB. # their place of birth\n?PoB wdt:P17 ?country. # its country\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} group by ?country ?countryLabel order by desc(?count)",
        "complexity_description": "Multiple UNION patterns, SERVICE clause, and aggregation with GROUP BY",
        "complexity": "complex"
    },
    {
        "id": "2076",
        "valid_gpt_response": true,
        "query": "select (str(?decade) as ?dec) (count(distinct ?ps) as ?count) ?causeLabel where\n{\n?mp p:P39 ?ps . ?ps ps:P39 ?term . ?term wdt:P279 wd:Q16707842 .\n?ps pq:P582 ?pend . filter not exists { ?mp p:P39 ?ps2 . ?ps2 ps:P39 ?term . ?ps2 pq:P580 ?pend }\n# not new term starting same day - ie left Parliament\n?ps pq:P1534 ?cause .\nfilter not exists { ?ps pq:P1534 wd:Q741182 } # not dissolution\nfilter not exists { ?ps pq:P1534 wd:Q7649223 } # not suspension\nfilter not exists { ?ps pq:P1534 wd:Q35855188 } # tofix\nfilter not exists { ?ps pq:P1534 wd:Q36345696 } # tofix\nfilter not exists { ?ps pq:P1534 wd:Q30580660 } # tofix\nfilter not exists { ?ps pq:P1534 wd:Q52084147 } # tofix\nfilter not exists { ?ps pq:P1534 wd:Q35867887 } # tofix\nbind(year(?pend) as ?year) . filter(?year >= 1880) . bind((floor(?year/10)*10) as ?decade) .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} group by ?causeLabel ?decade order by ?causeLabel\n#defaultView:BarChart",
        "complexity_description": "Multiple filters, subqueries, and grouping/ordering",
        "complexity": "complex"
    },
    {
        "id": "2077",
        "valid_gpt_response": true,
        "query": "select distinct ?start (count(distinct ?ps) as ?count) ?tLabel where\n{\n?t wdt:P279 wd:Q16707842 . ?t wdt:P571 ?start . filter(year(?start) > 1858)\noptional { ?person p:P39 ?ps . ?ps ps:P39 ?t . ?ps pq:P1534 wd:Q13634247 }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} group by ?tLabel ?start order by desc(?start)\n#defaultView:BarChart",
        "complexity_description": "Multiple triple patterns, optional clause, and aggregation",
        "complexity": "complex"
    },
    {
        "id": "2078",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?length WHERE {\n?item (wdt:P31/(wdt:P279*)) wd:Q1420;\nwdt:P2043 ?length;\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC (?length) (?itemLabel)\nLIMIT 50",
        "complexity_description": "Multiple triple patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "2079",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?label ?canal ?canalLabel ?coord WHERE {\n{SELECT * {\n{SELECT * {\n?item wdt:P17 wd:Q145 ;\nwdt:P625 ?coord ;\nrdfs:label ?label .\nFILTER(LANG(?label) = \"en\").\n} }\n{ ?item p:P177 [ ps:P177 ?canal ] } UNION { ?item p:P2505 [ ps:P2505 ?canal ] } UNION { ?item p:P206 [ ps:P206 ?canal ] }\n} }\nVALUES ?watercourse { wd:Q4022 wd:Q12284 }\nFILTER EXISTS { ?canal wdt:P31/wdt:P279* ?watercourse }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?item ?label ?canal ?canalLabel ?coord\nORDER BY ?canalLabel",
        "complexity_description": "Multiple nested queries, UNION operators, and FILTER EXISTS clause",
        "complexity": "complex"
    },
    {
        "id": "2080",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?itemDescription ?coords ?image ?typeLabel\nWHERE\n{\n?item wdt:P5008 wd:Q101553389.\n?item wdt:P625 ?coords .\n?item wdt:P18 ?image .\n?item wdt:P31 ?type .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"cy,en\". }\n}",
        "complexity_description": "Multiple triple patterns, language service",
        "complexity": "medium"
    },
    {
        "id": "2081",
        "valid_gpt_response": true,
        "query": "select ?partyLabel (count(distinct ?person) as ?people) (count(distinct ?ps) as ?terms) where\n{\n?person p:P39 ?ps . ?ps ps:P39 ?term . ?term wdt:P279 wd:Q16707842 .\n?term wdt:P571 ?s . filter(year(?s) >= 1945) .\n?ps pq:P4100 ?party .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} group by ?partyLabel order by desc(?people)",
        "complexity_description": "Multiple joins, subqueries, and filters",
        "complexity": "complex"
    },
    {
        "id": "2082",
        "valid_gpt_response": true,
        "query": "select distinct ?person ?personLabel ?old_seatLabel ?resigned ?new_seatLabel ?elected ?diff where\n{\n?term wdt:P279 wd:Q16707842 .\n?person p:P39 ?ps1 . ?ps1 ps:P39 ?term . ?ps1 pq:P580 ?s1 . ?ps1 pq:P582 ?resigned .\n?ps1 pq:P768 ?old_seat . ?ps1 pq:P1534 wd:Q796919 .\n?person p:P39 ?ps2 . ?ps2 ps:P39 ?term . ?ps2 pq:P580 ?elected . ?ps2 pq:P768 ?new_seat .\nfilter (?old_seat != ?new_seat) .\nfilter (?elected > ?resigned) .\nbind(round(?elected - ?resigned) as ?diff) .\nfilter not exists {\n?person p:P39 ?ps3 . ?ps3 ps:P39 ?term . ?ps3 pq:P580 ?s3 . ?ps3 pq:P582 ?e3 .\nfilter (?s3 > ?resigned ) . filter (?elected > ?e3 ) }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} order by desc(?elected)",
        "complexity_description": "Multiple filters, subqueries, and property paths",
        "complexity": "complex"
    },
    {
        "id": "2083",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?doi ?journal ?journalLabel WHERE {\n?item wdt:P921 wd:Q98969121.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\nOPTIONAL { ?item wdt:P18 ?_image. }\nOPTIONAL { ?item wdt:P356 ?doi. }\nOPTIONAL { ?item wdt:P1433 ?journal. }\n}\nLIMIT 100",
        "complexity_description": "Multiple optional patterns, service call and limit clause",
        "complexity": "medium"
    },
    {
        "id": "2084",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?itemLabel ?date ?sourcePropertyLabel ?referenceLabel ?reference\nWHERE\n{\n?item wdt:P39/wdt:P279 wd:Q1285463.\n?item p:P569 ?dateStatement.\n?dateStatement a wikibase:BestRank; # simulate wdt:\nps:P569 ?date.\nOPTIONAL{\n?dateStatement prov:wasDerivedFrom [ ?source ?reference ].\n?sourceProperty wikibase:reference ?source.\n}\n?item p:P39 ?decla.\n?decla pq:P580 ?ddebut.\nFILTER NOT EXISTS {?decla pq:P582 ?dfin. }\nFILTER (?date > \"1952-01-01T00:00:00+00:00\"^^xsd:dateTime)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr\". }.\n}",
        "complexity_description": "Multiple filters, optional clause and service call",
        "complexity": "complex"
    },
    {
        "id": "2085",
        "valid_gpt_response": true,
        "query": "select ?countryLabel (count(distinct ?person) as ?count) ?pop ((?count/?pop)*100000 as ?per100k) where\n{\n?person wdt:P735 wd:Q1221747 . ?person wdt:P27 ?country .\nfilter not exists { ?person wdt:P570 ?d }\n?country wdt:P1082 ?pop .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} group by ?countryLabel ?pop order by desc(?per100k)",
        "complexity_description": "Multiple joins, subqueries, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "2086",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?itemDescription ?image ?collection WHERE {\n?item wdt:P31 wd:Q3305213 ; # Get items that are instances of painting\nwdt:P195/wdt:P361* ?collection . # That are in some collection\n# Only return results where 'collection' is in the Suter Art Gallery\nFILTER ( ?collection = wd:Q61797555 )\nOPTIONAL { ?item wdt:P18 ?image } # Optionally with an image\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\" }\n}",
        "complexity_description": "Multiple triple patterns, filter and optional clause",
        "complexity": "medium"
    },
    {
        "id": "2087",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?politician ?politicianLabel WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?politician wdt:P27 wd:Q298;\nwdt:P39 ?position.\n?position wdt:P279* wd:Q3304818.\nMINUS { ?politician wdt:P570 ?death. }\nMINUS {\n?politician wdt:P69 ?institution.\n?institution wdt:P31 wd:Q9826.\n}\n}",
        "complexity_description": "Multiple filters, minus clauses and property paths",
        "complexity": "complex"
    },
    {
        "id": "2088",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?dob ?start ?age1 ?end ?age2 ?rest WHERE {\n?item wdt:P31 wd:Q5.\n?item p:P39 [ps:P39 wd:Q11696; pq:P580 ?start].\nBIND ((?start-?dob)/365.25 AS ?age1)\nOPTIONAL {?item p:P39 [ps:P39 wd:Q11696; pq:P582 ?end].}\n?item wdt:P569 ?dob.\nBIND ((?end-?dob)/365.25 AS ?age2).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nOPTIONAL {?item wdt:P570 ?dod.}\nBIND ((?dod-?end)/365.25 AS ?rest)\n}\nORDER BY DESC(?age1)",
        "complexity_description": "Multiple joins, optional patterns, and calculations",
        "complexity": "complex"
    },
    {
        "id": "2089",
        "valid_gpt_response": true,
        "query": "SELECT ?station ?stationLabel ?cds ?line ?trackLabel ?track ?image {\n{SELECT * {\nSERVICE gas:service {\ngas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.BFS\" ; gas:in wd:Q1990205 ; gas:out ?station ; gas:out1 ?depth ; gas:out2 ?pred .\ngas:program gas:linkType wdt:P197 . }\nFILTER(?station != wd:Q1990205)\n?station wdt:P625 ?cds ;\nwdt:P17 wd:Q145 .\n?station p:P197 ?adjST .\n?adjST ps:P197 ?adj ;\npq:P81 ?track .\n?pred p:P625/psv:P625/wikibase:geoLatitude ?lat1 ; p:P625/psv:P625/wikibase:geoLongitude ?lon1 .\n?station p:P625/psv:P625/wikibase:geoLatitude ?lat2 ; p:P625/psv:P625/wikibase:geoLongitude ?lon2 .\nBIND(CONCAT('LINESTRING(', STR(?lon1), ' ', STR(?lat1), ',', STR(?lon2), ' ', STR(?lat2), ')') AS ?str) . BIND(STRDT(?str, geo:wktLiteral) AS ?line)}\n}\nOPTIONAL { ?station wdt:P18 ?image .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple services, subqueries, and complex filtering",
        "complexity": "complex"
    },
    {
        "id": "2090",
        "valid_gpt_response": true,
        "query": "SELECT ?station ?stationLabel ?cds ?line ?trackLabel ?track ?image {\n{SELECT * {\nSERVICE gas:service {\ngas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.BFS\" ; gas:in wd:Q1990205 ; gas:out ?station ; gas:out1 ?depth ; gas:out2 ?pred .\ngas:program gas:linkType wdt:P197 . }\nFILTER(?station != wd:Q1990205)\n?station wdt:P625 ?cds ;\nwdt:P17 wd:Q55 .\n?station p:P197 ?adjST .\n?adjST ps:P197 ?adj ;\npq:P81 ?track .\n?pred p:P625/psv:P625/wikibase:geoLatitude ?lat1 ; p:P625/psv:P625/wikibase:geoLongitude ?lon1 .\n?station p:P625/psv:P625/wikibase:geoLatitude ?lat2 ; p:P625/psv:P625/wikibase:geoLongitude ?lon2 .\nBIND(CONCAT('LINESTRING(', STR(?lon1), ' ', STR(?lat1), ',', STR(?lon2), ' ', STR(?lat2), ')') AS ?str) . BIND(STRDT(?str, geo:wktLiteral) AS ?line)}\n}\nOPTIONAL { ?station wdt:P18 ?image .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple services, subqueries, and complex filtering",
        "complexity": "complex"
    },
    {
        "id": "2091",
        "valid_gpt_response": true,
        "query": "SELECT ?language ?languageLabel ?count\nWITH {\nSELECT ?language (COUNT(DISTINCT ?lexeme) AS ?count) {\n?lexeme dct:language ?language.\n}\nGROUP by ?language\n} AS %result\nWHERE {\nINCLUDE %result\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER by DESC (?count)",
        "complexity_description": "Multiple subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "2092",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?gizaki ?gizakiLabel ?jaiolekuaLabel ?heriotzalekuaLabel ?year ?layer ?data (CONCAT(STR(?year), \"-01-01 00:00:00\") as ?concat) ?lat ?lon ?lat2 ?lon2 WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?gizaki wdt:P31 wd:Q5;\n(wdt:P19/(wdt:P131*)/^wdt:P527) wd:Q47588.\n?gizaki wdt:P19 ?jaiolekua.\n?jaiolekua p:P625 ?koordenatuak.\n?koordenatuak psv:P625 ?koord.\n?koord wikibase:geoLatitude ?lat.\n?koord wikibase:geoLongitude ?lon.\n?gizaki wdt:P570 ?data.\nBIND(YEAR(?data) as ?year).\nBIND(FLOOR((?year-1)/100)+1 AS ?mende).\nBIND(?mende as ?layer)\n?gizaki wdt:P20 ?heriotzalekua.\n?heriotzalekua p:P625 ?koordenatuak2.\n?koordenatuak2 psv:P625 ?koord2.\n?koord2 wikibase:geoLatitude ?lat2.\n?koord2 wikibase:geoLongitude ?lon2.\n}",
        "complexity_description": "Multiple joins, subqueries, and BIND operations",
        "complexity": "complex"
    },
    {
        "id": "2093",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?coords WHERE {\nVALUES ?o { wd:Q47520309 wd:Q27106436 }\n?item wdt:P131 wd:Q62274582.\n?item wdt:P31 ?o .\n?item wdt:P625 ?coords .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, VALUES clause and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "2094",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?ajedrez ?aj_pag WHERE {\n?ajedrez wdt:P106 wd:Q10873124 ;\nwdt:P21 wd:Q6581072 .\n?art schema:about ?ajedrez;\nschema:isPartOf <https://es.wikipedia.org/> ;\nschema:name ?aj_pag .\n}\nLIMIT 500",
        "complexity_description": "Two triple patterns, one join, and a LIMIT clause",
        "complexity": "medium"
    },
    {
        "id": "2095",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?wditem ?wditemLabel ?date ?image ?work ?workLabel ?coord ?description WHERE {\nSERVICE <http://dbpedia.org/sparql> {\n?item dct:subject dbc:Diet_food_advocates ;\n#?item dct:subject dbc:Sewing_machines;\n#?item dct:subject|dct:subject/skos:broader|dct:subject/skos:broader/skos:broader dbc:Ancient_Greek_philosophers ;\n#?item dct:subject|dct:subject/skos:broader dbc:Cryptography ;\nowl:sameAs ?wditem FILTER regex (?wditem, \"wikidata.org\") .\n#?item dct:subject|dct:subject/skos:broader|dct:subject/skos:broader/skos:broader dbc:Duelling_fatalities .\n}\nSERVICE <https://query.wikidata.org/sparql> {\n{?wditem wdt:P569 ?date FILTER (YEAR(?date) >= 500).}\n#{?wditem wdt:P570 ?date .}\nOPTIONAL {?wditem wdt:P18 ?image } .\n?wditem rdfs:label ?wditemLabel FILTER (LANG(?wditemLabel)=\"en\") .\n}\n}",
        "complexity_description": "Multiple services, filters, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "2096",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?i_p ?i_pLabel ?i_pDescription ?iu_p ?ii_p ?rn_t_dobLabel ?ic_dob ?rn_t_dodLabel ?ic_dod ?ic_milyear ?ic_cent ?ic_dec ?rn_country ?i_country ?i_countryLabel ?i_countryDecription\nWHERE{{\nSELECT ?ic_dec ?ic_cent WHERE{\n?p wdt:P106 wd:Q4964182; wdt:P569 ?dob.\nFILTER ((YEAR(?dob) > 100) && (YEAR(?dob) < 500)).\nBIND (xsd:integer(FLOOR(YEAR(?dob) / 10) * 10) AS ?ic_dec).\nBIND (xsd:integer(FLOOR(YEAR(?dob) / 100) * 100) AS ?ic_cent).\n}}UNION{\nSELECT ?ic_cent ?ic_milyear WHERE{\n?p wdt:P106 wd:Q4964182; wdt:P569 ?dob.\nFILTER ((YEAR(?dob) > 100) && (YEAR(?dob) < 500)).\nBIND (xsd:integer(FLOOR(YEAR(?dob) / 100) * 100) AS ?ic_cent).\nBIND (xsd:integer(FLOOR(YEAR(?dob) / 1000) * 1000) AS ?ic_milyear).\n}}UNION{\nSELECT ?i_p ?iu_p ?ii_p ?ic_dec ?rn_t_dob ?ic_dob ?rn_t_dod ?ic_dod ?rn_country ?i_country WHERE{\n?i_p wdt:P106 wd:Q4964182; wdt:P569 ?ic_dob.\nFILTER ((YEAR(?ic_dob) > 100) && (YEAR(?ic_dob) < 500)).\nBIND (xsd:integer(FLOOR(YEAR(?ic_dob) / 10) * 10) AS ?ic_dec).\n?rn_t_dob wikibase:directClaim wdt:P569.\nOPTIONAL { ?i_p wdt:P570 ?ic_dod. ?rn_t_dod wikibase:directClaim wdt:P570. }\nBIND (CONCAT (STR (?i_p), \"SSif\") AS ?iu_p).\nOPTIONAL { ?i_p wdt:P18 ?ii_p. }\nBIND (\"country\" AS ?rn_country).\nOPTIONAL { ?i_p wdt:P27 ?i_country. }\n}}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple UNIONs, FILTERs, BINDs, and OPTIONALs with complex calculations",
        "complexity": "complex"
    },
    {
        "id": "2097",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel (GROUP_CONCAT(DISTINCT ?developerLabel;separator=\", \") AS ?devs) ?publisherLabel (GROUP_CONCAT(DISTINCT ?genreLabel;separator=\", \") AS ?genres) WHERE {\nBIND(wd:Q40 AS ?country)\n?item wdt:P31 wd:Q7889. # it's a video game\n{ # Game has country of origin\n?item wdt:P495 ?country.\n} UNION { # OR Dev studio has country\n?item wdt:P178 ?dev.\n?dev wdt:P17 ?country.\n}\nOPTIONAL { ?item wdt:P178 ?developer}\nOPTIONAL { ?item wdt:P123 ?publisher}\nOPTIONAL { ?item wdt:P136 ?genre }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?item rdfs:label ?itemLabel .\n?country rdfs:label ?countryLabel.\n?genre rdfs:label ?genreLabel.\n?developer rdfs:label ?developerLabel.\n?publisher rdfs:label ?publisherLabel}\n} GROUP BY ?item ?itemLabel ?publisherLabel",
        "complexity_description": "Multiple UNION, OPTIONAL, and SERVICE clauses with grouping and aggregation",
        "complexity": "complex"
    },
    {
        "id": "2098",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person ?personLabel ?countryLabel ?cpan ?github ?wikimedia {\n?person wdt:P31 wd:Q5 .\n{\n{ ?person wdt:P8124 ?cpan } UNION\n{ ?person wdt:P2037 ?github } UNION\n{ ?person wdt:P4174 ?wikimedia }\n}\n{\n{ ?person wdt:P106 wd:Q83307 } # occupation minister\nUNION {\n?person wdt:P39 ?pos . # position held: minister\n?pos wdt:P279* wd:Q83307\n}\n}\nOPTIONAL { ?person wdt:P27 ?country }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple UNIONs, OPTIONAL clause, and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "2099",
        "valid_gpt_response": true,
        "query": "SELECT ?decade\n(100*SUM(?tuberculosiscount)/COUNT(?decade) AS ?percentage_of_deaths_cause_by_tuberculosis)\nWHERE\n{\n?item wdt:P509 ?causeofdeath.\n?item wdt:P570 ?sterbedatum.\nBIND(CONCAT(SUBSTR(CONCAT(STR(YEAR(?sterbedatum))),0,4),\"0\") as ?decade).\nFILTER( ?sterbedatum >= \"1750-01-01T00:00:00\"^^xsd:dateTime )\nFILTER( ?sterbedatum <= \"2019-12-31T00:00:00\"^^xsd:dateTime )\nBIND(\nIF(?causeofdeath = wd:Q12204,1,0)\nAS ?tuberculosiscount).\n}\nGROUP BY ?decade #?ref\nORDER BY ?decade",
        "complexity_description": "Multiple filters, bindings, and aggregation",
        "complexity": "complex"
    },
    {
        "id": "2100",
        "valid_gpt_response": true,
        "query": "SELECT ?paradigmLabel (count(?proglang) as ?count)\n{\n?proglang wdt:P31/wdt:P279* wd:Q9143;\nwdt:P3966 ?paradigm.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGroup by ?paradigmLabel",
        "complexity_description": "Medium complexity due to property path and service call",
        "complexity": "medium"
    },
    {
        "id": "2101",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?image ?distanceMiles ?coords WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nwd:Q188740 wdt:P625 ?MoMA.\nSERVICE wikibase:around {\n?item wdt:P625 ?coords.\nbd:serviceParam wikibase:center ?MoMA;\nwikibase:radius \"3.21869\";\nwikibase:distance ?distance.\n}\nFILTER(EXISTS { ?item (wdt:P31/(wdt:P279*)) wd:Q33506. })\nOPTIONAL { ?item wdt:P18 ?image. }\nBIND(CONCAT(STR((ROUND(?distance * \"62.1371192\"^^xsd:decimal)) / 100 ), \" miles FROM MoMA\") AS ?distanceMiles)\n}\nORDER BY (?distance)",
        "complexity_description": "Multiple services, filters and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "2102",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?cityLabel ?population ?gps\nWHERE\n{\n?city wdt:P31/wdt:P279* wd:Q515 .\n?city wdt:P1082 ?population .\n?city wdt:P625 ?gps .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"es\" .\n}\n}\nORDER BY DESC(?population) LIMIT 100",
        "complexity_description": "Multiple triple patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "2103",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?person ?personLabel ?gov ?govLabel ?rgb ?size\nWHERE {\n?person p:P39 ?statement.\n?person p:P39 ?statement2.\n?statement pq:P5054 ?gov;\npq:P580 ?date;\nps:P39 ?edge.\n?statement2 pq:P5054 ?gov2;\npq:P580 ?date2;\nps:P39 ?edge2.\n?edge wdt:P31 | wdt:P279 wd:Q3858501.\n?edge2 wdt:P31 | wdt:P279 wd:Q3858501.\nFILTER(YEAR(?date) >= 1990)\nFILTER(YEAR(?date2) >= 1990)\nFILTER(?gov != ?gov2)\n# cosmetic stuff\nBIND('8F2539' as ?rgb)\nBIND(2000 as ?size)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple filters, multiple joins, and subqueries",
        "complexity": "complex"
    },
    {
        "id": "2104",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person ?personLabel ?personDescription ?name WHERE {\n?person wdt:P31 wd:Q5;\nwdt:P569 ?dob. hint:Prior hint:rangeSafe true.\nFILTER(?dob >= \"1800-00-00\"^^xsd:dateTime)\n?person wdt:P1559 ?name.\nFILTER(LANG(?name) = \"la\")\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple filters, service call and language constraint",
        "complexity": "medium"
    },
    {
        "id": "2105",
        "valid_gpt_response": true,
        "query": "SELECT\n?statue ?statueLabel (SAMPLE(?statueLocation) AS ?statueLocation_) (SAMPLE(?statueImage) AS ?statueImage_)\n?person ?personLabel\n(IF(?female, \"female\"@en, \"not female\"@en) AS ?femaleLabel)\n(IF(?hasNobleTitle, \"has noble title\"@en, \"has no noble title\"@en) AS ?hasNobleTitleLabel)\n(CONCAT(?femaleLabel, \", \"@en, ?hasNobleTitleLabel) AS ?layer)\nWHERE {\n?statue wdt:P31/wdt:P279* wd:Q860861;\nwdt:P17 wd:Q145;\nwdt:P180|wdt:P547 ?person.\n?person wdt:P31 wd:Q5.\nBIND(EXISTS { ?person wdt:P21/wdt:P279* wd:Q6581072. } AS ?female)\nBIND(EXISTS { ?person wdt:P97 ?nobleTitle. } AS ?hasNobleTitle)\nOPTIONAL { ?statue wdt:P625 ?statueLocation. }\nOPTIONAL { ?statue wdt:P18 ?statueImage. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?statue ?statueLabel ?person ?personLabel ?female ?hasNobleTitle",
        "complexity_description": "Multiple filters, bindings, and optional patterns with grouping",
        "complexity": "complex"
    },
    {
        "id": "2106",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?city ?cityLabel ?population ?location ?lon ?lat WHERE {\n# get cities (or classes based on city) in germany\n?city wdt:P31/wdt:P279* wd:Q515 ;\nwdt:P17 wd:Q183 .\n# get population and location of the city\n?city wdt:P1082 ?population ;\nwdt:P625 ?location .\n# we're only interested in cities with a population count > 50.000\nFILTER (abs(?population) > 50000)\n# extract lat and lon\n?city p:P625 ?coordinate.\n?coordinate psv:P625 ?coordinate_node.\n?coordinate_node wikibase:geoLongitude ?lon.\n?coordinate_node wikibase:geoLatitude ?lat.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de,en\" }\n}",
        "complexity_description": "Multiple filters, joins and subqueries",
        "complexity": "complex"
    },
    {
        "id": "2107",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?rgb ?link ?link2\nWHERE\n{\nVALUES ?toggle { true false }\n?disease wdt:P699 ?doid;\nwdt:P279* wd:Q18123741;\nwdt:P2176 ?drug.\n?drug wdt:P3780 ?active.\n?drug rdfs:label ?drugLabel.\nFILTER(LANG(?drugLabel) = \"en\").\n?disease rdfs:label ?diseaseLabel.\nFILTER(LANG(?diseaseLabel) = \"eu\").\nBIND(IF(?toggle,?disease,?drug) AS ?item).\nBIND(IF(?toggle,?diseaseLabel,?drugLabel) AS ?itemLabel).\nBIND(IF(?toggle,\"FFA500\",\"7FFF00\") AS ?rgb).\nBIND(IF(?toggle,\"\",?disease) AS ?link).\n}",
        "complexity_description": "Multiple filters, bindings and conditional statements",
        "complexity": "complex"
    },
    {
        "id": "2108",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?image {\n?item wdt:P361 wd:Q12505 ; wdt:P18 ?image.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "2109",
        "valid_gpt_response": true,
        "query": "SELECT ?name ?nameLabel ?dod ?image (GROUP_CONCAT(DISTINCT ?occupationLabel;separator=\", \") AS ?occupations) (GROUP_CONCAT(DISTINCT ?countryLabel;separator=\", \") AS ?countries) WHERE {\n?name wdt:P27 wd:Q31 .\n?name wdt:P27 ?country .\n?name wdt:P570 ?dod .\n?name wdt:P106/wdt:P279* wd:Q483501 .\n?name wdt:P106 ?occupation .\nOPTIONAL {?name wdt:P18 ?image} .\nFILTER (YEAR(?dod) = 1950) .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?occupation rdfs:label ?occupationLabel .\n?country rdfs:label ?countryLabel .\n?name rdfs:label ?nameLabel .}\n}\nGROUP BY ?name ?dod ?image ?nameLabel",
        "complexity_description": "Multiple joins, filters, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "2110",
        "valid_gpt_response": true,
        "query": "SELECT ?lang (COUNT(?sujet) AS ?compte) WHERE {\n?page schema:about ?sujet .\n?page schema:isPartOf ?wiki .\n?page schema:inLanguage ?lang .\n?sujet wdt:P195/wdt:P361* wd:Q1429003 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?lang",
        "complexity_description": "Multiple joins, subqueries and group by",
        "complexity": "complex"
    },
    {
        "id": "2111",
        "valid_gpt_response": true,
        "query": "SELECT ?Stolperstein ?StolpersteinLabel ?geographische_Koordinaten ?Bild ?layer\nWHERE {\n?Stolperstein wdt:P31 wd:Q26703203;\nwdt:P276 wd:Q1715;\nwdt:P18 ?Bild;\nwdt:P625 ?geographische_Koordinaten.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nORDER BY ?StolpersteinLabel",
        "complexity_description": "Simple query with 4 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "2112",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?website ?facebook ?twitter ?instagram\nWHERE\n{\n?item wdt:P31 wd:Q5124370.\n?item wdt:P17 wd:Q145.\nOPTIONAL {?item wdt:P856 ?ws . BIND(IRI(?ws) as ?website) }\nOPTIONAL {?item wdt:P2013 ?fb . BIND(IRI(CONCAT(\"https://www.facebook.com/\",?fb)) as ?facebook) }\nOPTIONAL {?item wdt:P2002 ?tw . BIND(IRI(CONCAT(\"https://twitter.com/\",?tw)) as ?twitter) }\nOPTIONAL {?item wdt:P2003 ?in . BIND(IRI(CONCAT(\"https://www.instagram.com/\",?in,\"/\")) as ?instagram) }\n# OPTIONAL {?item wdt:P3267 ?fl . BIND(IRI(CONCAT(\"https://www.flickr.com/people/\",?fl)) as ?flickr) }\n# OPTIONAL {?item wdt:P2397 ?yt . BIND(IRI(CONCAT(\"https://www.youtube.com/channel/\",?yt)) as ?youtube) }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} order by ?itemLabel",
        "complexity_description": "Multiple optional patterns, data manipulation with BIND and CONCAT functions",
        "complexity": "medium"
    },
    {
        "id": "2113",
        "valid_gpt_response": true,
        "query": "SELECT\n?year\n(SUM(?pages_per_author) AS ?number_of_pages)\n?researcher_label\nWHERE {\n{\nSELECT\n?researcher_label ?work ?year\n(SAMPLE(?pages) / COUNT(?researcher_of_paper) AS ?pages_per_author)\nWHERE {\n# Find authors associated with organization\nFILTER EXISTS { ?researcher wdt:P108 | wdt:P463 | (wdt:P1416 / wdt:P361*) wd:Q27639076 . }\n?work (wdt:P50|wdt:P2093) ?researcher_of_paper .\n# Disabled to only look on scholarly articles\n# ?work wdt:P31 wd:Q13442814 .\n?work wdt:P50 ?researcher .\n?work wdt:P1104 ?pages .\n?work wdt:P577 ?date .\nBIND(STR(YEAR(?date)) AS ?year)\n?researcher rdfs:label ?researcher_label . FILTER(LANG(?researcher_label) = 'en')\n}\nGROUP BY ?work ?researcher_label ?year\n}\n}\nGROUP BY ?year ?researcher_label\nORDER BY ?year",
        "complexity_description": "Multiple subqueries, grouping and filtering",
        "complexity": "complex"
    },
    {
        "id": "2114",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?accusedurl ?coords ?residenceLabel ?image (?ritual as ?layer)\nWHERE\n{\n?item wdt:P31 wd:Q5.\n?item wdt:P4478 ?accused .\nwd:P4478 wdt:P1630 ?formatterurl .\nBIND(IRI(REPLACE(?accused, '^(.+)$', ?formatterurl)) AS ?accusedurl).\n?item wdt:P551 ?residence .\n?residence wdt:P625 ?coords.\n?item wdt:P8706 ?RitualObject .\nOPTIONAL { ?RitualObject wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?charge rdfs:label ?chargeLabel .\n?RitualObject rdfs:label ?ritual .\n?residence rdfs:label ?residenceLabel .\n?item rdfs:label ?itemLabel .\n?accused rdfs:label ?accusedLabel .}\n}",
        "complexity_description": "Multiple joins, optional clause, and regex usage",
        "complexity": "complex"
    },
    {
        "id": "2115",
        "valid_gpt_response": true,
        "query": "select ?mp ?mpLabel ?seat ?seatLabel (year(?first_date) as ?first_year) where\n{\n?mp p:P39 ?ps . ?ps ps:P39 ?term . ?term wdt:P279 wd:Q18018860 .\n?term wdt:P571 ?first_date . ?ps pq:P768 ?seat .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n{ select ?seat (MIN(?termstart) as ?first_date) where\n{\n?person p:P39 ?ps . ?ps ps:P39 ?term . ?term wdt:P279 wd:Q18018860 .\n?ps pq:P768 ?seat . ?term wdt:P571 ?termstart .\n?seat wdt:P31 wd:Q27990982 .\n} group by ?seat }\n} order by ?first_year ?seatLabel ?mpLabel",
        "complexity_description": "Multiple subqueries, joins, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "2116",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?auto ?auto_pag WHERE {\n?auto wdt:P106 wd:Q10349745 ;\nwdt:P21 wd:Q6581072 .\n?art schema:about ?auto;\nschema:isPartOf <https://es.wikipedia.org/> ;\nschema:name ?auto_pag .\n}\nLIMIT 500",
        "complexity_description": "Multiple triple patterns, joins and filters",
        "complexity": "medium"
    },
    {
        "id": "2117",
        "valid_gpt_response": true,
        "query": "SELECT ?Alamedilla ?AlamedillaLabel ?coordenadas ?imagen WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?Alamedilla wdt:P131 wd:Q1631944.\n?Alamedilla wdt:P31 wd:Q56528396.\nOPTIONAL { ?Alamedilla wdt:P625 ?coordenadas. }\nOPTIONAL { ?Alamedilla wdt:P18 ?imagen. }\n}\nLIMIT 100",
        "complexity_description": "Multiple triple patterns, optional blocks and service call",
        "complexity": "medium"
    },
    {
        "id": "2118",
        "valid_gpt_response": true,
        "query": "SELECT ?year (COUNT(?i) as ?is) {\n?i wdt:P1433 wd:Q180445 ; wdt:P577 ?date.\nbind((floor(\"2020-12-06\"^^xsd:dateTime - ?date)/7) as ?weeks) .\nbind ((?weeks-floor(?weeks)) as ?fractional) .\nbind (YEAR(?date) as ?year)\nfilter (?fractional = 0) .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?year",
        "complexity_description": "Multiple binds, filter and group by",
        "complexity": "complex"
    },
    {
        "id": "2119",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?human ?humanLabel\nWHERE\n{\nVALUES ?professions {wd:Q177220 wd:Q639669 wd:Q488205}\n?human wdt:P31 wd:Q5 .\n?human wdt:P106 ?professions .\n?human wdt:P136 wd:Q431415 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nLIMIT 100",
        "complexity_description": "Multiple triple patterns, VALUES clause and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "2120",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?itemDescription ?coords ?image ?typeLabel\nWHERE\n{\n?item wdt:P5008 wd:Q101553389.\n?item wdt:P625 ?coords .\n?item wdt:P18 ?image .\n?item wdt:P31 ?type .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"cy,en\". }\n}",
        "complexity_description": "Multiple triple patterns, language service",
        "complexity": "medium"
    },
    {
        "id": "2121",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel (MIN(YEAR(?date)) AS ?year) (GROUP_CONCAT(DISTINCT ?country_label; separator = \", \") AS ?countries) ?VRTresult ?score ?nature_of_statement WHERE {\n{?item p:P1552 ?st. ?st ps:P1552 wd:Q93615557. BIND(\"passing\" AS ?VRTresult)}\nUNION\n{?item p:P1552 ?st. ?st ps:P1552 wd:Q93985027. BIND(\"failing\" AS ?VRTresult)}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nOPTIONAL{?st pq:P444 ?score}\nOPTIONAL{?st pq:P5102 ?noc. ?noc rdfs:label ?nature_of_statement. FILTER(LANG(?nature_of_statement)=\"en\")}\nOPTIONAL{?item wdt:P577 ?date}\nOPTIONAL{?item wdt:P495 ?country. ?country rdfs:label ?country_label. FILTER(LANG(?country_label)=\"en\")}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?item ?itemLabel ?VRTresult ?score ?nature_of_statement\nORDER BY ?year",
        "complexity_description": "Multiple UNION, OPTIONAL, and SERVICE clauses with FILTERs and BINDINGS",
        "complexity": "complex"
    },
    {
        "id": "2122",
        "valid_gpt_response": true,
        "query": "SELECT ?language ?languageLabel ?count\nWITH {\nSELECT ?language (COUNT(DISTINCT ?lexeme) AS ?count) {\n?lexeme dct:language ?language.\n?language wdt:P31 wd:Q33384\n}\nGROUP by ?language\n} AS %result\nWHERE {\nINCLUDE %result\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER by desc(?count)",
        "complexity_description": "Multiple subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "2123",
        "valid_gpt_response": true,
        "query": "SELECT ?metro ?metroLabel ?locationLabel ?clientelaLabel\nWHERE {\n?metro wdt:P31 wd:Q5503.\n?metro wdt:P131 ?location .\n?metro wdt:P3872 ?clientela .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"es,en\". } }\norder by ?clientela\nlimit 200",
        "complexity_description": "Simple query with 3 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "2124",
        "valid_gpt_response": true,
        "query": "select distinct ?pub ?caesar ?caesarLabel ?item ?itemLabel ?itemDescription ?version where\n{\n{ ?item p:P161 ?cs . ?cs ps:P161 ?caesar . ?cs pq:P453 wd:Q1048 . } union\n{ ?item p:P161 ?cs . ?cs ps:P161 ?caesar . ?cs pq:P453 ?version . ?version wdt:P1074 wd:Q1048. }\n# played Caesar, or played a character based on him\noptional { { ?item wdt:P577 ?pub . } union { ?item wdt:P580 ?pub . } }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple unions, optional clause, and service call",
        "complexity": "complex"
    },
    {
        "id": "2125",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT (SAMPLE(REPLACE(STR(?continent), \".*Q\", \"Q\")) AS ?continent) (SAMPLE(?memberEU) AS ?memberEU) (SAMPLE(?democracy) AS ?democracy) ?country (REPLACE(STR(?country), \".*Q\", \"Q\") AS ?qid) ?countryLabel ?population ?ISO3166_1 ?nominalGDPperCapita ?PPP_GDP_per_capita ?Human_Development_Index WHERE {\n?country wdt:P31 wd:Q3624078;\nwdt:P1082 ?population.\nOPTIONAL { ?country wdt:P298 ?ISO3166_1. }\nOPTIONAL { ?country wdt:P2132 ?nominalGDPperCapita. }\nOPTIONAL { ?country wdt:P2299 ?PPP_GDP_per_capita. }\nOPTIONAL { ?country wdt:P1081 ?Human_Development_Index. }\nBIND (exists{?country wdt:P463 wd:Q458} AS ?memberEU)\nBIND (exists{?country wdt:P122/wdt:P279* wd:Q7174} AS ?democracy)\n{?country wdt:P30 ?continent}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?population ?countryLabel ?country ?ISO3166_1 ?nominalGDPperCapita ?PPP_GDP_per_capita ?Human_Development_Index",
        "complexity_description": "Multiple OPTIONAL clauses, BIND expressions, and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "2126",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?url ?georeferencing ?img ?bbox ?rgb (year(?year) AS ?layer)\nWITH {\nSELECT (xsd:integer(?colour) AS ?colour2) ?rgb WHERE {\nwd:Q105849312 p:P527 ?stmt .\n?stmt pq:P1545 ?colour .\n?stmt pq:P465 ?rgb .\n}\n} AS %colours\nWHERE {\n?item wdt:P195 wd:Q7100888 . # OSD\n?item p:P1332/psv:P1332/wikibase:geoLatitude ?nth .\n?item p:P1333/psv:P1333/wikibase:geoLatitude ?sth .\n?item p:P1334/psv:P1334/wikibase:geoLongitude ?east .\n?item p:P1335/psv:P1335/wikibase:geoLongitude ?west .\n?item wdt:P571 ?year .\nBIND ((1 + floor ((year(?year) - 1789) * 2.0/3.0)) AS ?colour) .\nBIND (xsd:integer(IF(?colour > 31, 31, ?colour)) AS ?colour2) .\nINCLUDE %colours .\nOPTIONAL {?item wdt:P18 ?img} .\n?item wdt:P973 ?url .\n?item wdt:P9361 ?georeferencing .\nBIND(STRDT( CONCAT('LINESTRING (',\nstr(?west), ' ', str(?sth), ',',\nstr(?west), ' ', str(?nth), ',',\nstr(?east), ' ', str(?nth), ',',\nstr(?east), ' ', str(?sth), ',',\nstr(?west), ' ', str(?sth), ')' ), geo:wktLiteral) AS ?bbox) .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple subqueries, complex bindings and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "2127",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?val ?f ?formatter_since ?total_links ?unique_targets ?2019_link_counts_source\n{\nBIND(URI(\"https://meta.wikimedia.org/wiki/Interwiki_map/detailed_table\") as ?2019_link_counts_source)\nVALUES (?val ?total_links ?unique_targets){\n(\"appropedia\" 333 156)\n(\"arxiv\" 8274 4712)\n(\"battlestarwiki\" 210 135)\n(\"bcnbio\" 64810 1468)\n(\"bibcode\" 1321 1168)\n(\"bibliowiki\" 323 282)\n(\"botwiki\" 339 61)\n(\"c2\" 519 182)\n(\"centralwikia\" 447 115)\n(\"choralwiki\" 3336 1682)\n(\"citizendium\" 572 395)\n(\"comixpedia\" 257 94)\n(\"creativecommons\" 9521 173)\n(\"creativecommonswiki\" 2268 40)\n(\"dcdatabase\" 227 137)\n(\"dmoz\" 474 403)\n(\"doi\" 77892 56541)\n(\"donate\" 462 147)\n(\"download\" 1515 147)\n(\"drae\" 4346 2921)\n(\"ethnologue\" 4323 1928)\n(\"flickruser\" 48688 9771)\n(\"foundationsite\" 5230 76)\n(\"freedomdefined\" 1205884 59)\n(\"freenode\" 5833 68)\n(\"genwiki\" 219 213)\n(\"gutenberg\" 5948 4068)\n(\"hdl\" 1468 899)\n(\"hrwiki\" 389 202)\n(\"iarchive\" 69676 55171)\n(\"imdbcharacter\" 901 735)\n(\"imdbcompany\" 282 232)\n(\"imdbname\" 93129 62230)\n(\"imdbtitle\" 84238 57582)\n(\"infosphere\" 342 170)\n(\"irc\" 7322031 1062)\n(\"iso639-3\" 36309 8361)\n(\"issn\" 1868 538)\n(\"karlsruhe\" 933 620)\n(\"labsconsole\" 442 146)\n(\"livepedia\" 589 277)\n(\"localwiki\" 329 312)\n(\"marveldatabase\" 275 156)\n(\"meatball\" 3460 318)\n(\"memoryalpha\" 1148 763)\n(\"mineralienatlas\" 4380 3039)\n(\"nara\" 578 582)\n(\"nost\" 345 118)\n(\"oeis\" 16862 4702)\n(\"openlibrary\" 437 313)\n(\"openstreetmap\" 756 371)\n(\"orthodoxwiki\" 408 260)\n(\"otrswiki\" 743 213)\n(\"planetmath\" 474 320)\n(\"pmid\" 20190 16436)\n(\"pyrev\" 1059 162)\n(\"quality\" 259 143)\n(\"revo\" 2140 1906)\n(\"rfc\" 3791 1570)\n(\"semantic-mw\" 446 91)\n(\"sharemap\" 956 267)\n(\"sourceforge\" 523 354)\n(\"stats\" 1767 267)\n(\"strategywiki\" 648 336)\n(\"svn\" 396 141)\n(\"tswiki\" 1878 168)\n(\"uncyclopedia\" 1654 831)\n(\"viaf\" 2067 1832)\n(\"vikidia\" 1237 868)\n(\"wikia\" 16411 6229)\n(\"wikiapiary\" 4993 1979)\n(\"wikiasite\" 3490 1618)\n(\"wikiconference\" 561 89)\n(\"wikifur\" 1064 487)\n(\"wikihow\" 258 147)\n(\"wikiindex\" 263 99)\n(\"wikilivres\" 19945 9118)\n(\"wikilivresru\" 2240 1540)\n(\"wikinvest\" 677 343)\n(\"wikiwikiweb\" 248 101)\n(\"wookieepedia\" 910 612)\n(\"zum\" 263 144)\n}\n?item p:P6720 ?st .\n?st ps:P6720 ?val .\nOPTIONAL { ?st pq:P1630 ?f }\nOPTIONAL { ?st pq:P580 ?formatter_since }\n?st a wikibase:BestRank .\n# Main selection:\nFILTER NOT EXISTS { ?item wdt:P1687 [ ] } #no Wikidata property\nFILTER ( ?total_links > 500 && ?unique_targets > 300 )\n# exclude some\nFILTER( ?item not in ( wd:Q461 , wd:Q17460 , wd:Q1540899 , wd:Q300885 , wd:Q33133762 ) )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\"}\n}",
        "complexity_description": "Multiple filters, optional patterns and service calls",
        "complexity": "complex"
    },
    {
        "id": "2128",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?img ?georef ?proportion ?coords ?line ?rgb ?layer\nWITH {\nSELECT ?item ?img ?georef ?coords ?lat ?lon WHERE {\n?item wdt:P195 wd:Q7100888 .\n?item p:P5140 ?coord_stmt .\nOPTIONAL {?item wdt:P9361 ?georef} .\nOPTIONAL {?item wdt:P18 ?img} .\n?coord_stmt ps:P5140 ?coords .\n?coord_stmt psv:P5140 / wikibase:geoLatitude ?lat .\n?coord_stmt psv:P5140 / wikibase:geoLongitude ?lon .\n}\n} AS %points\nWITH {\nSELECT ?line ?layer ?rgb WHERE {\nINCLUDE %points .\n?item wdt:P47 ?item2 .\n?item2 p:P5140 ?coord2_stmt .\n?coord2_stmt psv:P5140 / wikibase:geoLatitude ?lat2 .\n?coord2_stmt psv:P5140 / wikibase:geoLongitude ?lon2 .\nBIND(CONCAT('LINESTRING (', STR(?lon), ' ', STR(?lat), ',', STR(?lon2), ' ', STR(?lat2), ')') AS ?str) .\nBIND(STRDT(?str, geo:wktLiteral) AS ?line) .\nBIND('adjacent' AS ?layer) .\nBIND('FF0000' AS ?rgb) .\n}\n} AS %lines\nWITH {\nSELECT ?line ?layer ?rgb ?proportion WHERE {\nINCLUDE %points .\n?item p:P3179 ?stmt .\n?stmt ps:P3179 ?item2 .\nOPTIONAL {?stmt pq:P1107 ?prop1} .\nOPTIONAL {?item2 p:P3179 ?stmt2 . ?stmt2 ps:P3179 ?item . ?stmt2 pq:P1107 ?prop2}\nBIND(IF(bound(?prop2) && bound(?prop1) && (?prop2 > ?prop1), ?prop2, ?prop1) AS ?prop) .\nBIND(COALESCE(?prop, ?prop1, ?prop2) AS ?proportion) .\n?item2 p:P5140 ?coord2_stmt .\n?coord2_stmt psv:P5140 / wikibase:geoLatitude ?lat2 .\n?coord2_stmt psv:P5140 / wikibase:geoLongitude ?lon2 .\nBIND(CONCAT('LINESTRING (', STR(?lon), ' ', STR(?lat), ',', STR(?lon2), ' ', STR(?lat2), ')') AS ?str) .\nBIND(STRDT(?str, geo:wktLiteral) AS ?line) .\nBIND('overlap' AS ?layer)\nBIND('0000AA' AS ?rgb) .\n}\n} AS %lines2\nWHERE {\n{ INCLUDE %lines }\nUNION\n{ INCLUDE %lines2 }\nUNION\n{ INCLUDE %points . BIND('points' AS ?layer) . BIND('FF0000' AS ?rgb)} .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple WITH clauses, UNION operators, and complex bindings",
        "complexity": "complex"
    },
    {
        "id": "2129",
        "valid_gpt_response": true,
        "query": "SELECT ?str ?bathwater ?bathwaterLabel ?bathcoord ?lake ?lakeLabel ?lakecoord ?dist ?line ?SJOID ?layer ?EionetBathingWaterIDentifier ?Hav ?VISS WHERE {\n?bathwater wdt:P6104 wd:Q106774536.\n?bathwater wdt:P625 ?xx.\n?bathwater p:P625 [ a wikibase:BestRank ;\npsv:P625 [\nwikibase:geoLatitude ?bathcoordlat ;\nwikibase:geoLongitude ?bathcoordlon ;\nwikibase:geoGlobe ?globe ;\n] ;\nps:P625 ?bathcoord\n]\nOPTIONAL { ?bathwater wdt:P9616 ?EionetBathingWaterIDentifier. }\n{\n?bathwater wdt:P206 ?lake.\n?lake wdt:P625 ?rr.\n?lake p:P625 [a wikibase:BestRank ;\npsv:P625 [\nwikibase:geoLatitude ?lat ;\nwikibase:geoLongitude ?long ;\nwikibase:geoGlobe ?globe2 ;\n] ;\nps:P625 ?lakecoord\n]\nOPTIONAL { ?lake wdt:P761 ?SJOID. }\n}\nBIND(geof:distance(?bathcoord, ?lakecoord) as ?dist) .\n#filter (?dist >= 3)\nBIND (floor(?dist/10)*10 as ?layer)\nBIND(CONCAT('LINESTRING (', STR(?bathcoordlon), ' ', STR(?bathcoordlat), ',', STR(?long), ' ', STR(?lat), ')') AS ?str) .\nBIND(STRDT(?str, geo:wktLiteral) AS ?line)\nBIND(URI(CONCAT(\"https://badplatsen.havochvatten.se/badplatsen/karta/#/bath/\",?EionetBathingWaterIDentifier)) AS ?Hav)\nBIND(URI(CONCAT(\"https://viss.lansstyrelsen.se/Waters.aspx?waterEUID=SE\",?SJOID)) AS ?VISS)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,sv\". }\n}\nORDER BY DESC(?dist)",
        "complexity_description": "Multiple joins, filters, and bindings with geospatial calculations",
        "complexity": "complex"
    },
    {
        "id": "2130",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\n?tour wdt:P31 wd:Q33881;\nrdfs:label ?tourLabel.\nFILTER(LANG(?tourLabel) = \"[AUTO_LANGUAGE]\" )\n?item wdt:P361 ?tour;\nrdfs:label ?itemLabel.\nFILTER((LANG(?itemLabel)) = \"[AUTO_LANGUAGE]\")\n?item wdt:P1427 ?depart.\n?depart rdfs:label ?departLabel.\nFILTER((LANG(?departLabel)) = \"[AUTO_LANGUAGE]\")\n?item wdt:P1444 ?arrivee.\n?arrivee rdfs:label ?arriveeLabel.\nFILTER((LANG(?arriveeLabel)) = \"[AUTO_LANGUAGE]\" )\n?item wdt:P585 ?date.\n}\nORDER BY ?date",
        "complexity_description": "Multiple filters, multiple joins and ordering",
        "complexity": "complex"
    },
    {
        "id": "2131",
        "valid_gpt_response": true,
        "query": "SELECT\n?article\n(SUM(?male) AS ?count_males)\n(SUM(?female) AS ?count_females)\n(SUM(?nonbinary) AS ?count_nonbinary)\n(COUNT(*) AS ?count)\n(ROUND(100 * ?count_females / (?count_females + ?count_males + ?count_nonbinary)) AS ?share_females)\n(ROUND(100 * ?count_nonbinary / (?count_females + ?count_males + ?count_nonbinary)) AS ?share_nonbinary)\n(ROUND(100 * ?count_males / (?count_females + ?count_males + ?count_nonbinary)) AS ?share_males)\n{\nVALUES ?article {\n\"Anthropology\"\n\"Philosophy\"\n\"Economics\"\n\"Sociology\"\n\"Demography\"\n}\nSERVICE wikibase:mwapi {\nbd:serviceParam wikibase:endpoint \"en.wikipedia.org\";\nwikibase:api \"Generator\";\nmwapi:generator \"links\";\nmwapi:titles ?article;.\n?item wikibase:apiOutputItem mwapi:item.\n}\nFILTER BOUND (?item)\n?item wdt:P31 wd:Q5 .\n?item wdt:P21 ?gender .\nBIND(IF(?gender IN(wd:Q6581097, wd:Q2449503), 1, 0) AS ?male )\nBIND(IF(?gender IN(wd:Q6581072, wd:Q1052281), 1, 0 ) AS ?female)\nBIND(IF(?gender = wd:Q48270, 1, 0) AS ?nonbinary)\n}\nGROUP BY ?article",
        "complexity_description": "Multiple aggregations, subqueries, and filters",
        "complexity": "complex"
    },
    {
        "id": "2132",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?director ?directorLabel (COUNT(*) AS ?count) WHERE {\n?item wdt:P161 wd:Q1684856;\nwdt:P57 ?director.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?director ?directorLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, service call, group by and order by",
        "complexity": "medium"
    },
    {
        "id": "2133",
        "valid_gpt_response": true,
        "query": "SELECT ?x ?xLabel ?loc ?layer ?img ?line ?birthplace ?birthplaceLabel ?teamLabel WITH {\nSELECT ?team ?inception WHERE {\nBIND ( wd:Q9617 AS ?team )\n?team wdt:P571 ?inception .\n}} AS %team\nWITH { SELECT ?num ?start ?end ?gap WHERE {\nINCLUDE %team\nBIND (10 * FLOOR(YEAR(?inception) / 10) AS ?start)\nBIND (10 AS ?gap )\nBIND (10 * FLOOR(YEAR(NOW()) / 10) AS ?end )\nBIND ( (?end - ?start ) / ?gap + 1 AS ?x )\n[] p:P31 [\nps:P31 wd:Q21199 ;\npq:P155 ?prev].\n?prev wdt:P1181 ?num .\nFILTER (?num > 0 && ?num <= ?x )\n} } AS %range\nWITH { SELECT ?decade WHERE {\nINCLUDE %range\nBIND (?start + (?num - 1) * ?gap AS ?decade)\n} ORDER BY ?decade }\nAS %decades\nWITH { SELECT ?x ?start_year ?end_year ?team WHERE {\nINCLUDE %team\nBIND ( NOW() AS ?today )\n?x wdt:P31 wd:Q5.\n?x p:P54 ?stmt.\n?stmt ps:P54 ?team.\n?stmt pq:P580 ?start.\nOPTIONAL { ?stmt pq:P582 ?end }\nBIND ( IF (wikibase:isSomeValue(?end), ?today, ?end ) AS ?new_end)\nBIND(COALESCE(?new_end, ?today) as ?new_end)\nBIND (YEAR(?start) AS ?start_year)\nBIND (YEAR(?new_end) AS ?end_year)\n} } AS %players\nWHERE {\nINCLUDE %players\nINCLUDE %decades\n?x wdt:P19 ?birthplace.\n?birthplace wdt:P625 ?loc.\nOPTIONAL { ?x wdt:P18 ?img }\nFILTER ( (?start_year >= ?decade && ?start_year < ?decade + 10) || (?end_year < ?decade + 10 && ?end_year >= ?decade ) || (?decade > ?start_year && ?decade < ?end_year ))\n?birthplace p:P625 [\nps:P625 [];\npsv:P625 [\nwikibase:geoLongitude ?poblon;\nwikibase:geoLatitude ?poblat;\n]] .\n?team wdt:P115 ?home .\n?home p:P625 [\nps:P625 [];\npsv:P625 [\nwikibase:geoLongitude ?centrelon;\nwikibase:geoLatitude ?centrelat]] .\nBIND(CONCAT('LINESTRING (', STR(?poblon), ' ', STR(?poblat), ',', STR(?centrelon), ' ', STR(?centrelat), ')') AS ?str) .\nBIND(STRDT(?str, geo:wktLiteral) AS ?line)\nBIND(CONCAT(STR(?decade),\"s\") AS ?layer)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ASC(?layer)",
        "complexity_description": "Multiple subqueries, complex filtering and binding operations",
        "complexity": "complex"
    },
    {
        "id": "2134",
        "valid_gpt_response": true,
        "query": "SELECT ?x ?xLabel ?description ?x_coords ?rgb WITH {\nSELECT ?data ?x ?x_coords WHERE {\n?x p:P2044/psn:P2044 [\nwikibase:quantityAmount ?data\n] .\n?x wdt:P625 ?x_coords .\n?x wdt:P17 wd:Q34 .\n# ?x wdt:P131+ [ wdt:P31 wd:Q15979307 ] .\n}\n} AS %data\n# determine the max and min values (used to calculate the spread)\nWITH {\nSELECT (MAX(?data) AS ?max_data) (MIN(?data) AS ?min_data) WHERE {\nINCLUDE %data\n}} AS %min_max\nWHERE {\nINCLUDE %data\nINCLUDE %min_max\n?x rdfs:label ?xLabel. FILTER (LANG(?xLabel) = \"sv\") .\nBIND (CONCAT(\"Hojd over havsnivan for \", ?xLabel, \" ar omkring \", STR(ROUND(?data)), \" meter\" ) AS ?description)\nBIND ( ?max_data - ?min_data AS ?spread )\nBIND (255 - xsd:integer( 255 * (?data - ?min_data) / ?spread) AS ?green ) # 255 -> 0\nBIND ( FLOOR (?green / 16) AS ?green_1 )\nBIND ( COALESCE(\nIF(?green_1 < 10, STR(?green_1), 1/0),\nIF(?green_1 = 10, \"a\", 1/0),\nIF(?green_1 = 11, \"b\", 1/0),\nIF(?green_1 = 12, \"c\", 1/0),\nIF(?green_1 = 13, \"d\", 1/0),\nIF(?green_1 = 14, \"e\", 1/0),\nIF(?green_1 = 15, \"f\", 1/0),\n\"ERROR\"\n) AS ?green_hex1 )\nBIND (FLOOR(?green - (16 * xsd:integer( ?green / 16 ))) AS ?green_2)\nBIND ( COALESCE(\nIF(?green_2 < 10, STR(?green_2), 1/0),\nIF(?green_2 = 10, \"a\", 1/0),\nIF(?green_2 = 11, \"b\", 1/0),\nIF(?green_2 = 12, \"c\", 1/0),\nIF(?green_2 = 13, \"d\", 1/0),\nIF(?green_2 = 14, \"e\", 1/0),\nIF(?green_2 = 15, \"f\", 1/0),\n\"ERROR\"\n) AS ?green_hex2 )\nBIND (CONCAT(STR(?green_hex1), STR(?green_hex2)) AS ?green_hex )\nBIND (CONCAT(\"00\", STR(?green_hex), \"00\") AS ?rgb)\n}",
        "complexity_description": "Multiple subqueries, complex calculations and string manipulations",
        "complexity": "complex"
    },
    {
        "id": "2135",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?desc ?coords WITH {\nSELECT ?item ?lon ?lat ?coords WHERE {\n?item wdt:P31 wd:Q515 .\n?item wdt:P17 wd:Q145 .\n?item p:P625 [\nps:P625 ?coords;\npsv:P625 [\nwikibase:geoLongitude ?lon;\nwikibase:geoLatitude ?lat;\n]\n] .\nFILTER (?lat > 40) # filtering out British Oversea Terrroties\n} } AS %cities\nWITH { SELECT ?item ?desc ?coords {\nINCLUDE %cities\nBIND (\"Most easterly\" AS ?desc)\n} ORDER BY DESC (?lon)\nLIMIT 1 } AS %easterly\nWITH { SELECT ?item ?desc ?coords {\nINCLUDE %cities\nBIND (\"Most westerly\" AS ?desc)\n} ORDER BY ASC (?lon)\nLIMIT 1 } AS %westerly\nWITH { SELECT ?item ?desc ?coords {\nINCLUDE %cities\nBIND (\"Most northerly\" AS ?desc)\n} ORDER BY DESC (?lat)\nLIMIT 1 } AS %northerly\nWITH { SELECT ?item ?desc ?coords {\nINCLUDE %cities\nBIND (\"Most southernly\" AS ?desc)\n} ORDER BY ASC (?lat)\nLIMIT 1 } AS %southerly\nWHERE {\n{ INCLUDE %easterly }\nUNION\n{ INCLUDE %westerly }\nUNION\n{ INCLUDE %northerly }\nUNION\n{ INCLUDE %southerly }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple subqueries, unions, and filters",
        "complexity": "complex"
    },
    {
        "id": "2136",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?height ?countryLabel ?subjectLabel ?coords ?image WITH {\nSELECT ?item ?heightStatement WHERE {\n?item wdt:P31 ?type .\nVALUES ?type { wd:Q1779653 wd:Q179700 wd:Q1051606 wd:Q29168169 wd:Q3476533 }\nFILTER NOT EXISTS { ?item wdt:P31 wd:Q21745157 }\nFILTER NOT EXISTS { ?item wdt:P5816 wd:Q56556915 }\n?item p:P2048 ?heightStatement .\n{ ?heightStatement pq:P518 wd:Q179700 } UNION\n{ FILTER NOT EXISTS { ?heightStatement pq:P518 ?x } }\n}\n} AS %i WHERE {\nINCLUDE %i .\n?heightStatement psv:P2048 [\nwikibase:quantityAmount ?baseHeight;\nwikibase:quantityUnit [\np:P2370/psv:P2370 [\nwikibase:quantityAmount ?unitHeight ;\nwikibase:quantityUnit wd:Q11573\n]\n]\n].\nBIND ( ?baseHeight * ?unitHeight AS ?height )\nFILTER ( ?height >= 30 )\nOPTIONAL { ?item wdt:P17 ?country }\nOPTIONAL { ?item wdt:P625 ?coords }\nOPTIONAL { ?item wdt:P18 ?image }\nOPTIONAL { ?item wdt:P921 ?subject }\n#SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nORDER BY DESC(?height) ?countryLabel ?itemLabel",
        "complexity_description": "Multiple filters, unions, and subqueries with complex property paths",
        "complexity": "complex"
    },
    {
        "id": "2137",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?year WHERE {\n?item wdt:P50 wd:Q921499.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nOPTIONAL { ?item wdt:P577 ?date. }\nBIND(YEAR(?date) AS ?year)\n}\nORDER BY (?year)",
        "complexity_description": "Optional clause, bind function and order by",
        "complexity": "medium"
    },
    {
        "id": "2138",
        "valid_gpt_response": true,
        "query": "select ?dec ((?count/?total)*100 as ?percent) ?causeLabel where\n{\n{ select (str(?decade) as ?dec) (count(distinct ?ps) as ?count) ?cause where {\n?mp p:P39 ?ps . ?ps ps:P39 ?term . ?term wdt:P279 wd:Q16707842 .\n?ps pq:P582 ?pend . filter not exists { ?mp p:P39 ?ps2 . ?ps2 ps:P39 ?term . ?ps2 pq:P580 ?pend }\n# not new term starting same day - ie left Parliament\n?ps pq:P1534 ?cause .\nfilter not exists { ?ps pq:P1534 wd:Q741182 } # not dissolution\nfilter not exists { ?ps pq:P1534 wd:Q7649223 } # not suspension\nfilter not exists { ?ps pq:P1534 wd:Q35855188 } # tofix\nfilter not exists { ?ps pq:P1534 wd:Q36345696 } # tofix\nfilter not exists { ?ps pq:P1534 wd:Q30580660 } # tofix\nfilter not exists { ?ps pq:P1534 wd:Q52084147 } # tofix\nfilter not exists { ?ps pq:P1534 wd:Q35867887 } # tofix\nbind(year(?pend) as ?year) . filter(?year >= 1870) . bind((floor(?year/10)*10) as ?decade) .\n} group by ?cause ?decade }\n{ select (str(?decade) as ?dec) (count(distinct ?ps) as ?total) where {\n?mp p:P39 ?ps . ?ps ps:P39 ?term . ?term wdt:P279 wd:Q16707842 .\n?ps pq:P582 ?pend . filter not exists { ?mp p:P39 ?ps2 . ?ps2 ps:P39 ?term . ?ps2 pq:P580 ?pend }\n# not new term starting same day - ie left Parliament\n?ps pq:P1534 ?cause .\nfilter not exists { ?ps pq:P1534 wd:Q741182 } # not dissolution\nfilter not exists { ?ps pq:P1534 wd:Q7649223 } # not suspension\nfilter not exists { ?ps pq:P1534 wd:Q35855188 } # tofix\nfilter not exists { ?ps pq:P1534 wd:Q36345696 } # tofix\nfilter not exists { ?ps pq:P1534 wd:Q30580660 } # tofix\nfilter not exists { ?ps pq:P1534 wd:Q52084147 } # tofix\nfilter not exists { ?ps pq:P1534 wd:Q35867887 } # tofix\nbind(year(?pend) as ?year) . filter(?year >= 1870) . bind((floor(?year/10)*10) as ?decade) .\n} group by ?decade }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n#defaultView:BarChart",
        "complexity_description": "Multiple subqueries, filters and grouping",
        "complexity": "complex"
    },
    {
        "id": "2139",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?year WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?item p:P166 ?statement.\n?statement ps:P166 wd:Q59411480.\n?statement pq:P585 ?date\nBIND(YEAR(?date) AS ?year)\n}\nORDER BY ?date",
        "complexity_description": "Multiple triple patterns, service call and bind function",
        "complexity": "medium"
    },
    {
        "id": "2140",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?itemDescription ?place ?placeLabel ?sitelinks WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?item wikibase:sitelinks ?sitelinks.\n?item wdt:P19 ?place.\n?place wdt:P131* wd:Q26988.\n}\nORDER BY DESC (?sitelinks)\nLIMIT 200",
        "complexity_description": "Multiple triple patterns, service call and property path",
        "complexity": "medium"
    },
    {
        "id": "2141",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?departement ?departementLabel ?form {\n{ ?departement wdt:P31 wd:Q6465 } UNION\n{ ?departement wdt:P31 wd:Q22923920 }\n?departement wdt:P1082 ?population ;\nwdt:P3896 ?form ;\nwdt:P47 ?x .\nFILTER NOT EXISTS {\n?departement wdt:P47 ?voisin .\n{ ?voisin wdt:P31 wd:Q6465 } UNION\n{ ?voisin wdt:P31 wd:Q22923920 }\n?voisin wdt:P1082 ?population_voisin .\nFILTER (?population_voisin > ?population) .\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" . }\n}\nORDER BY ?departementLabel",
        "complexity_description": "Multiple UNIONs, FILTER NOT EXISTS with subqueries and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "2142",
        "valid_gpt_response": true,
        "query": "SELECT ?work ?workLabel ?type ?typeLabel ?date ?articles WHERE {\n?work p:P3893/psv:P3893 ?date_node .\n?date_node wikibase:timeValue ?date .\nFILTER( ?date >= \"2021-01-01T00:00:00\"^^xsd:dateTime && ?date < \"2022-01-01T00:00:00\"^^xsd:dateTime )\n?work wdt:P31 ?type ;\nwikibase:sitelinks ?articles .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr,en,de,it,es,nl\" . }\n}\n# Order by number or articles on Wikimedia sites\nORDER BY DESC(?articles)",
        "complexity_description": "Multiple filters and joins with a service call",
        "complexity": "medium"
    },
    {
        "id": "2143",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?oeuvre ?oeuvreLabel ?artisteLabel ?museeLabel WHERE {\n?oeuvre wdt:P31 wd:Q3305213.\n?oeuvre wdt:P195/wdt:P1416* wd:Q3365279.\n?oeuvre wdt:P195 ?musee.\n?oeuvre wdt:P571 ?date0.\n?oeuvre wdt:P170 ?artiste.\n?artiste wdt:P570 ?death .\nBIND(year(?death) AS ?deces)\nOPTIONAL{?oeuvre wdt:P217 ?inventaire.}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr, en\". }\nFILTER (?deces =1950)\n}\nORDER BY ?artiste",
        "complexity_description": "Multiple filters and optional clause",
        "complexity": "medium"
    },
    {
        "id": "2144",
        "valid_gpt_response": true,
        "query": "SELECT ?i ?iLabel ?coords ?url WHERE {\n?i wdt:P31/wdt:P279* wd:Q57821 .\n?i wdt:P973 ?url .\n?i wdt:P625 ?coords .\nFILTER (REGEX(STR(?url),\"atlasofmutualheritage\"))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, regex filter and service call",
        "complexity": "medium"
    },
    {
        "id": "2145",
        "valid_gpt_response": true,
        "query": "SELECT ?fort ?fortLabel ?coords ?commons ?img ?inception ?fortTypeLabel WHERE {\n?fort wdt:P361 wd:Q1409040;\nwdt:P625 ?coords.\n?fort wdt:P31 ?fortType.\n# ?item schema:description ?itemdesc.\nOPTIONAL {\n?fort wdt:P571 ?inception\n}\nOPTIONAL {\n?fort wdt:P18 ?img\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de\". }\n}",
        "complexity_description": "Multiple optional patterns, service call and multiple triple patterns",
        "complexity": "medium"
    },
    {
        "id": "2146",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?region ?regionLabel ?pop ?ended\nWHERE {\n# Instance of first administrative division\n?region p:P31 ?stat.\n?stat a wikibase:BestRank.\nFILTER NOT EXISTS { ?stat pq:P582 []}\n?stat ps:P31/wdt:P279* wd:Q10864048.\n# ?region wdt:P31/wdt:P279* wd:Q10864048.\n#UNION { ?city wdt:P31/wdt:P279* wd:Q515. }\n?region wdt:P1082 ?pop.\n?region wdt:P150 ?regionContained.\n# only in Germany\n?region wdt:P17 wd:Q183.\nMINUS { ?region wdt:P576 ?x. } # remove region that has been disolved\n# remove region that is nowdays not a first level administrative region\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nORDER BY DESC(?pop)",
        "complexity_description": "Multiple filters, unions and minus operations",
        "complexity": "complex"
    },
    {
        "id": "2147",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?city ?cityLabel ?population WHERE {\n?city wdt:P31/wdt:P279* wd:Q486972;\nwdt:P17 wd:Q183;\nwdt:P1082 ?population;\nFILTER (abs(?population - 41962) < 100)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],nl\" }\n}",
        "complexity_description": "Multiple triple patterns, filter and service",
        "complexity": "medium"
    },
    {
        "id": "2148",
        "valid_gpt_response": true,
        "query": "SELECT ?theorem ?theoremLabel (COUNT(DISTINCT ?article) AS ?wikipedia) ?sitelinks {\n?theorem wdt:P31/wdt:P279* wd:Q65943 ; wikibase:sitelinks ?sitelinks .\n?article schema:about ?theorem ; schema:isPartOf [ wikibase:wikiGroup \"wikipedia\" ] .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nGROUP BY ?theorem ?theoremLabel ?sitelinks\nORDER BY DESC(?wikipedia)\nLIMIT 100",
        "complexity_description": "Multiple joins, subqueries and aggregations",
        "complexity": "complex"
    },
    {
        "id": "2149",
        "valid_gpt_response": true,
        "query": "SELECT ?occupationLabel (COUNT(DISTINCT ?person) as ?count) WHERE {\n{?person wdt:P509 wd:Q84263196} # died of COVID-19\nUNION\n{?person wdt:P1050 wd:Q84263196} # diagnosed with COVID-19\n?person wdt:P106 ?occupation\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?occupationLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple patterns, UNION, GROUP BY and ORDER BY",
        "complexity": "complex"
    },
    {
        "id": "2150",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(DISTINCT ?item) AS ?count) {\n?item wdt:P570 ?fecha .\nFILTER ( ?fecha >= \"2020-01-01T00:00:00Z\"^^xsd:dateTime && ?fecha < \"2021-01-01T00:00:00Z\"^^xsd:dateTime )\n?item wdt:P31 wd:Q5 .\n}",
        "complexity_description": "Filter and property path",
        "complexity": "medium"
    },
    {
        "id": "2151",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?mp ?mpLabel ?pLabel ?sLabel ?start (min(?end)as ?end2)(round(?end2- ?start)as ?days)(concat(?sLabel,' (',?pLabel,'), ',str(year(?start)),'-',str(year(?end2))) as ?string)\nwhere{VALUES ?mp{wd:Q160852}#set MP here\n#seat-party-start pairs for each continuing office period\n{SELECT distinct ?mp ?mpLabel ?pLabel ?sLabel ?start\nWHERE{?mp p:P39 ?ps.?ps ps:P39 ?t;pq:P768 ?s;pq:P4100 ?p;pq:P580 ?start.?t wdt:P279 wd:Q16707842.\nminus{?ps pq:P2715 ?elec.?elec wdt:P31 wd:Q15283424.?mp p:P39[ps:P39 ?t0; pq:P4100 ?p; pq:P768 ?s; pq:P1534 wd:Q741182].?t0 wdt:P156 ?t}\nminus{?ps pq:P1534 wd:Q50393121} # omit untaken double-return seats\nSERVICE wikibase:label{bd:serviceParam wikibase:language \"en\"}}ORDER BY ?mp ?start}\n#corresponding seat-party-end pairs\n{SELECT distinct ?mp ?mpLabel ?pLabel ?sLabel ?end\nWHERE{?mp p:P39 ?ps.?ps ps:P39 ?t;pq:P768 ?s;pq:P4100 ?p;pq:P582 ?end.?t wdt:P279 wd:Q16707842.\nminus{?ps pq:P1534 wd:Q741182.?mp p:P39[ps:P39 ?t2;pq:P4100 ?p;pq:P768 ?s;pq:P2715 ?elec].?t2 wdt:P155 ?t.?elec wdt:P31 wd:Q15283424}\nminus{?ps pq:P1534 wd:Q50393121}#omit untaken double-return seats\nSERVICE wikibase:label{bd:serviceParam wikibase:language \"en\"}}ORDER BY ?mp ?end}\nfilter(?end > ?start)#> not >=\n}group by ?mp ?mpLabel ?pLabel ?sLabel ?start order by ?start",
        "complexity_description": "Multiple subqueries, filters, and minus clauses with complex patterns",
        "complexity": "complex"
    },
    {
        "id": "2152",
        "valid_gpt_response": true,
        "query": "SELECT ?pesawat ?pesawatLabel ?tgl (YEAR(?tanggal) as ?tahun) ?gambar WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n?pesawat wdt:P31/wdt:P279 wd:Q15056995.\n?pesawat wdt:P606 ?tanggal.\n?pesawat wdt:P606 ?tgl.\nFILTER ( YEAR(?tanggal) >= 1903 )\n?pesawat wdt:P18 ?gambar.\n}\nLIMIT 500\n#defaultView:Timeline\n#view:Timeline{\"hide\": \"?tgl\"}",
        "complexity_description": "Multiple filters, service call and year extraction",
        "complexity": "medium"
    },
    {
        "id": "2153",
        "valid_gpt_response": true,
        "query": "SELECT ?hukum ?hukumLabel ?daerahLabel ?koord WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"id\". }\n?hukum wdt:P921 wd:Q2986880.\n?hukum wdt:P31/wdt:P279* wd:Q12504878.\n?hukum wdt:P1001 ?daerah.\n?daerah wdt:P625 ?koord.\n}",
        "complexity_description": "Multiple joins and filters",
        "complexity": "medium"
    },
    {
        "id": "2154",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?d1 ?d2 ?nl0 ?nl1 ?itemDescription ?sig\nWHERE\n{\n?item wdt:P569 ?d1 ; wdt:P570 ?d2 .\nhint:Prior hint:rangeSafe true .\nFILTER( ?d1 > \"1880-00-00\"^^xsd:dateTime &&\n?d2 > \"1964-00-00\"^^xsd:dateTime &&\n?d1 < \"1944-00-00\"^^xsd:dateTime\n)\n?item wdt:P735 / wdt:P1705 ?nl0 . FILTER( REGEX(?nl0, \"^D\" ) )\n?item wdt:P734 / wdt:P1705 ?nl1 . FILTER( REGEX(?nl1, \"^K\" ) )\n?item wdt:P106/wdt:P279* wd:Q3391743 .\nhint:Prior hint:gearing \"forward\".\nOPTIONAL { ?item wdt:P109 ?sig }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Multiple filters, regex patterns and optional clause",
        "complexity": "complex"
    },
    {
        "id": "2155",
        "valid_gpt_response": true,
        "query": "SELECT (CONCAT(STR(?year),\"-01-01T00:00:00Z\") as ?year_) (COUNT(?i) as ?is) {\n?i wdt:P6392 [] ; wdt:P571 ?date. BIND(YEAR(?date) as ?year)\n}\nGROUP BY ?year",
        "complexity_description": "Uses BIND, YEAR function and GROUP BY",
        "complexity": "medium"
    },
    {
        "id": "2156",
        "valid_gpt_response": true,
        "query": "SELECT ?i ?iLabel ?j ?jLabel {\n?i wdt:P31 wd:Q11424 ; wdt:P495 wd:Q668 ; ^wdt:P144 ?j.\n?j wdt:P31 wd:Q11424 ; wdt:P495 wd:Q668.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "2157",
        "valid_gpt_response": true,
        "query": "SELECT ?i ?iLabel ?img ?j ?jLabel {\nVALUES ?source { wd:Q711237 wd:Q11115439 }\n?i wdt:P69 ?place1 ; wdt:P184 ?j. ?j wdt:P69 ?place2 ; wdt:P184* ?source.\nwd:Q668 ^wdt:P17 ?place1, ?place2.\nOPTIONAL { ?i wdt:P18 ?img }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, optional clause and service call",
        "complexity": "complex"
    },
    {
        "id": "2158",
        "valid_gpt_response": true,
        "query": "SELECT ?d ?dLabel ?shape ?litrate ?rgb WHERE {\n?d wdt:P31 wd:Q2732840; p:P6897 ?litratestmt ; wdt:P3896 ?shape.\n?litratestmt ps:P6897 ?litrate ; pq:P585 \"+2001-01-01T00:00:00Z\"^^xsd:dateTime.\nBIND(IF(?litrate < 80, \"00008b\", IF(?litrate < 85, \"006400\", IF(?litrate < 90, \"008000\", IF(?litrate < 95, \"32cd32\", \"7fff00\")))) AS ?rgb)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,ml\". }\n}",
        "complexity_description": "Multiple triple patterns, BIND function with nested IF conditions",
        "complexity": "complex"
    },
    {
        "id": "2159",
        "valid_gpt_response": true,
        "query": "SELECT ?i ?iLabel ?layer ?cds {\nVALUES ?layer { \"abad\" \"pukur\" \"tali\" \"guri\" \"bazar\" \"gaon\" \"hat\" \"gola\" \"shwar\" \"bag\" }\n?i wdt:P131/wdt:P131* wd:Q1356; wdt:P625 ?cds; wdt:P5578 []; rdfs:label ?iLabel. FILTER(LANG(?iLabel)=\"en\")\nFILTER(STRENDS(?iLabel,?layer))\n}",
        "complexity_description": "Multiple filters and property paths",
        "complexity": "medium"
    },
    {
        "id": "2160",
        "valid_gpt_response": true,
        "query": "SELECT ?date ?poem ?poemLabel\n{\n?poem wdt:P31 wd:Q7725634 ; wdt:P7937 wd:Q482 ; wdt:P50 wd:Q7241 ; wdt:P571 ?date_.\nBIND(MONTH(?date_) as ?month)\nBIND(YEAR(?date_) as ?year)\nFILTER(?year > 1936)\nBIND(CONCAT(STR(?month),\"-\",STR(?year)) as ?date)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"bn,en\". }\n}",
        "complexity_description": "Multiple filters, binds and service calls",
        "complexity": "complex"
    },
    {
        "id": "2161",
        "valid_gpt_response": true,
        "query": "SELECT ?loc ?locLabel (count(?i) as ?nr) WHERE {\n?i wdt:P31/wdt:P279* wd:Q464980 .\n?i wdt:P276 ?loc .\n#?loc wdt:P17 wd:Q55.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"nl\" .\n}\n}\ngroup by ?loc ?locLabel\norder by desc(?nr)",
        "complexity_description": "Multiple triple patterns, grouping and ordering",
        "complexity": "medium"
    },
    {
        "id": "2162",
        "valid_gpt_response": true,
        "query": "SELECT ?languageLabel ?formCount {\n{ SELECT ?language (COUNT (?form) as ?formCount) { ?lexeme dct:language ?language . ?lexeme ontolex:lexicalForm ?form. } GROUP BY ?language }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC(?formCount)",
        "complexity_description": "Subqueries, grouping, and service calls",
        "complexity": "complex"
    },
    {
        "id": "2163",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?bdate\nWITH {\nSELECT (GROUP_CONCAT(?num; separator=\"|\") AS ?primes) { ?prime wdt:P31 wd:Q49008 ; wdt:P1181 ?num FILTER(?num < 2021) }\n} AS %primes\n{\nINCLUDE %primes\n?item wdt:P106 wd:Q170790 .\n?item wdt:P569 ?bdate FILTER(REGEX(STR(?bdate), CONCAT(\"^(\", ?primes, \")-\"))) .\n?item wikibase:sitelinks ?sitelinks .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?sitelinks)",
        "complexity_description": "Multiple subqueries, regex filter, and service call",
        "complexity": "complex"
    },
    {
        "id": "2164",
        "valid_gpt_response": true,
        "query": "SELECT ?coup ?coupLabel (MIN(?date) AS ?date_) (SAMPLE(?image) AS ?image_) WHERE {\n?coup wdt:P31/wdt:P279* wd:Q45382;\nwdt:P585 ?date. hint:Prior hint:rangeSafe true.\nFILTER(?date >= \"2001-00-00\"^^xsd:dateTime\n&& ?date < \"2101-00-00\"^^xsd:dateTime)\nOPTIONAL { ?coup wdt:P18 ?image. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?coup ?coupLabel",
        "complexity_description": "Multiple filters, optional clause and grouping",
        "complexity": "medium"
    },
    {
        "id": "2165",
        "valid_gpt_response": true,
        "query": "select ?country ?countryLabel ?count ?pop ?per1m ?geo ?layer ?rgb where {\n{\nselect ?country ?countryLabel (count(distinct ?person) as ?count) ?pop ((?count/?pop)*1000000 as ?per1m) ?geo where {\n?person wdt:P735 wd:Q1221747 .\n?person wdt:P27 ?country .\nfilter not exists { ?person wdt:P570 ?d }\n?country wdt:P1082 ?pop .\n?country wdt:P3896 ?geo .\nservice wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} group by ?country ?countryLabel ?pop ?geo\n}\nbind(if(?per1m >= 9.5 , \"10\", if(?per1m >= 4.5 , \"5\", if(?per1m >= 1.5 , \"2\", if(?per1m >= 0.5 , \"1\", \"0\")))) as ?layer)\nbind(if(?per1m >= 9.5 , \"F00\", if(?per1m >= 4.5 , \"F80\", if(?per1m >= 1.5 , \"FF0\", if(?per1m >= 0.5 , \"0F0\", \"AFA\")))) as ?rgb)\n} order by desc(?per1m)",
        "complexity_description": "Multiple subqueries, filters, and conditional bindings",
        "complexity": "complex"
    },
    {
        "id": "2166",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?parentLabel ?spousesChildLabel\nWHERE\n{\n?item wdt:P31 wd:Q5.\n?parent wdt:P40 ?item.\n?parent wdt:P26 ?spouse.\n?spouse wdt:P40 ?spousesChild .\n?spousesChild wdt:P40 ?item.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins and subqueries",
        "complexity": "complex"
    },
    {
        "id": "2167",
        "valid_gpt_response": true,
        "query": "SELECT ?station ?stationLabel ?cds ?line ?layer WHERE {\n{ SERVICE gas:service {\ngas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.BFS\" ; gas:in wd:Q15213944 ; gas:target wd:Q2784062 ; gas:out ?station ; gas:out1 [] ; gas:out2 ?pred .\ngas:program gas:linkType wdt:P197 . } }\nFILTER(?station != wd:Q15213944)\n?pred p:P625/psv:P625/wikibase:geoLatitude ?lat1 ; p:P625/psv:P625/wikibase:geoLongitude ?lon1 .\n?station p:P625/psv:P625/wikibase:geoLatitude ?lat2 ; p:P625/psv:P625/wikibase:geoLongitude ?lon2 .\nBIND(CONCAT('LINESTRING(', STR(?lon1), ' ', STR(?lat1), ',', STR(?lon2), ' ', STR(?lat2), ')') AS ?str) . BIND(STRDT(?str, geo:wktLiteral) AS ?line)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple services, filters, and complex property paths",
        "complexity": "complex"
    },
    {
        "id": "2168",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?nomLabel ?naissanceLabel ?DateNaissanceLabel ?img ?coord WHERE {\n?item wdt:P31 wd:Q5;\nwdt:P106 wd:Q937857.\nOPTIONAL { ?item wdt:P734 ?nom. }\nOPTIONAL { ?item wdt:P569 ?DateNaissance. }\nOPTIONAL { ?item wdt:P18 ?img. }\n?item wdt:P19 ?naissance.\n?naissance wdt:P625 ?coord.\n?item p:P54 ?om.\n?om ps:P54 wd:Q2378143.\nOPTIONAL { ?om pq:P580 ?debut. }\nOPTIONAL { ?om pq:P582 ?fin. }\nOPTIONAL { ?om pq:P1350 ?matches. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr, en\". }\n}",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "complex"
    },
    {
        "id": "2169",
        "valid_gpt_response": true,
        "query": "SELECT ?ward ?wardLabel ?shape ?rgb ?is {\n{ SELECT ?ward ?shape (COUNT(?i) as ?is) {\n?i wdt:P6391 [] ; wdt:P131 ?ward. ?ward wdt:P31 wd:Q1195098 ; wdt:P131/wdt:P131 wd:Q1348 ; wdt:P3896 ?shape.\n} GROUP BY ?ward ?shape }\nBIND(IF(?is > 25, \"006400\", IF(?is > 20, \"32cd32\", IF(?is > 15, \"7cfc00\", IF(?is > 10, \"adff2f\", \"00ff7f\")))) as ?rgb)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple subqueries, grouping and conditional binding",
        "complexity": "complex"
    },
    {
        "id": "2170",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?beach ?beachLabel ?coord WHERE {\n?beach wdt:P17 wd:Q96 ;\nwdt:P31 wd:Q40080 ;\nwdt:P625 ?coord.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"es, en\". }\n}",
        "complexity_description": "Simple query with 3 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "2171",
        "valid_gpt_response": true,
        "query": "SELECT ?i ?iLabel ?j ?jLabel {\n?i wdt:P31/wdt:P279* wd:Q1149652; wdt:P47 ?j. ?j wdt:P31/wdt:P279* wd:Q1149652.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, property paths and service call",
        "complexity": "medium"
    },
    {
        "id": "2172",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?image ?linkTo WHERE\n{\nSERVICE gas:service {\ngas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.SSSP\" ;\ngas:in wd:Q737942;\ngas:traversalDirection \"Forward\" ;\ngas:out ?item ;\ngas:out1 ?depth ;\ngas:maxIterations 15 ;\ngas:linkType wdt:P40 .\n}\nOPTIONAL { ?item wdt:P40 ?linkTo }\nOPTIONAL { ?item wdt:P18 ?image }\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"bn,en\" }\n}\n#",
        "complexity_description": "Multiple services, optional patterns, and filters",
        "complexity": "complex"
    },
    {
        "id": "2173",
        "valid_gpt_response": true,
        "query": "SELECT ?i ?iLabel ?img ?p580 ?p582 {\n?i p:P39 ?pstmt. ?pstmt ps:P39 wd:Q92212615 ; pq:P580 ?p580. OPTIONAL { ?pstmt pq:P582 ?end_ }\nBIND(IF(BOUND(?end_),?end_,NOW()) as ?p582)\nOPTIONAL { ?i wdt:P18 ?img }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple optional patterns, service call and conditional binding",
        "complexity": "complex"
    },
    {
        "id": "2174",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?painting ?paintingLabel WHERE {\n?painting wdt:P31 wd:Q3305213 ; wdt:P180 ?item ; wdt:P195 ?collection .\n?collection wdt:P17 wd:Q668.\n?item wdt:P39 wd:Q15390704.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Multiple triple patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "2175",
        "valid_gpt_response": true,
        "query": "SELECT ?lexeme ?example ?formstmt (SAMPLE(?form_) as ?form) ?sensestmt ?sense ?source ?sourceLabel {\n?lexeme dct:language/wdt:P4913* wd:Q9610 ; p:P5831 ?examplestmt.\n?examplestmt ps:P5831 ?example.\nOPTIONAL { ?examplestmt pq:P5830 ?formstmt . ?formstmt ontolex:representation ?form_. }\nOPTIONAL { ?examplestmt pq:P6072 ?sensestmt . ?sensestmt skos:definition ?sense. FILTER(LANG(?sense)=\"bn\") }\nOPTIONAL { ?examplestmt prov:wasDerivedFrom/pr:P248 ?source }\nOPTIONAL { ?examplestmt prov:wasDerivedFrom/pr:P854 ?source }\nOPTIONAL { ?examplestmt prov:wasDerivedFrom/pr:P996 ?source }\nOPTIONAL { ?examplestmt prov:wasDerivedFrom/pr:P4656 ?source }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"bn,en\". }\n}\nGROUP BY ?lexeme ?example ?formstmt ?sensestmt ?sense ?source ?sourceLabel\nORDER BY ?lexeme",
        "complexity_description": "Multiple optional patterns, service call and group by/order by clauses",
        "complexity": "complex"
    },
    {
        "id": "2176",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?label ?coord WHERE {\n?item wdt:P17 wd:Q145.\n?item wdt:P625 ?coord.\n?item rdfs:label ?labelWithLanguage.\nBIND(STR(?labelWithLanguage) AS ?label)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\nFILTER(STRSTARTS(?labelWithLanguage, \"Llan\"))\nFILTER((LANG(?labelWithLanguage)) = \"en\")\n}",
        "complexity_description": "Multiple filters and service call",
        "complexity": "medium"
    },
    {
        "id": "2177",
        "valid_gpt_response": true,
        "query": "SELECT ?Orga ?Organisation ?Spenden (YEAR(?Spenden_Zeit) AS ?Bezugsjahr)\nWHERE\n{\n?Orga wdt:P166 wd:Q62019748 . # gGmbH\n?Orga p:P8093 ?Spenden_statement . # Statement Spenden\n?Spenden_statement psv:P8093 ?Spenden_Wert . # Wert Spenden\n?Spenden_Wert wikibase:quantityAmount ?Spenden . # Summe Spenden\n?Spenden_statement pq:P585 ?Spenden_Zeit . # Zeitpunk Spenden\nFILTER NOT EXISTS # Nur neuesten Wert herausfiltern\n{\n?Orga p:P8093/pq:P585 ?Spenden_Zeit2 .\nFILTER(?Spenden_Zeit2 > ?Spenden_Zeit)\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"de,en\". ?Orga rdfs:label ?Organisation . } # OrgaLabel umbennen\n}\nORDER BY DESC(?Spenden) # Sortieren nach hochstem Spenden",
        "complexity_description": "Multiple joins, subqueries and filters",
        "complexity": "complex"
    },
    {
        "id": "2178",
        "valid_gpt_response": true,
        "query": "SELECT\n?cLabel ?c_pop ?item ?itemLabel ?itemDescription ?start\n(SAMPLE(?w) as ?w_)\n(GROUP_CONCAT(DISTINCT ?t) as ?t_)\n(SAMPLE(?fb) as ?fb_)\n?sts ?ids ?sls\n?end\nWHERE\n{\n?item p:P31 / ps:P31 wd:Q1968122 .\nOPTIONAL { ?item wdt:P571 ?start }\nOPTIONAL { ?item wdt:P856 ?w }\nOPTIONAL { ?item wdt:P2002 ?t }\nOPTIONAL { ?item wdt:P2013 ?fb }\nOPTIONAL { ?item wdt:P17 ?c . OPTIONAL { ?c wdt:P1082 ?c_pop } }\n?item wikibase:statements ?sts ; wikibase:identifiers ?ids ; wikibase:sitelinks ?sls .\nOPTIONAL { ?item wdt:P576 ?end }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nGROUP BY ?cLabel ?c_pop ?item ?itemLabel ?itemDescription ?sts ?ids ?sls ?end ?start\nORDER BY (BOUND(?cLabel)) (BOUND(?end)) DESC(?c_pop) ?itemLabel",
        "complexity_description": "Multiple optional patterns, subqueries, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "2179",
        "valid_gpt_response": true,
        "query": "SELECT ?i ?iLabel ?pos ?posLabel ?const ?constLabel {\n?i p:P39 ?posstmt. ?posstmt ps:P39 ?pos. ?pos wdt:P17 wd:Q902.\n?posstmt pq:P580 ?start.\nOPTIONAL { ?posstmt pq:P582 ?end_ }\nBIND(IF(BOUND(?end_),?end_,NOW()) as ?end)\nOPTIONAL { ?posstmt pq:P768 ?const }\nFILTER(?pos != wd:Q61945113)\nFILTER(?start <= \"+2005-01-13T00:00:00Z\"^^xsd:dateTime)\nFILTER(?end >= \"+2005-01-13T00:00:00Z\"^^xsd:dateTime)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"bn,en\". ?i rdfs:label ?iLabel. ?pos rdfs:label ?posLabel. ?const rdfs:label ?constLabel }\n}\nORDER BY ?posLabel ?constLabel",
        "complexity_description": "Multiple filters, optional patterns, and service calls",
        "complexity": "complex"
    },
    {
        "id": "2180",
        "valid_gpt_response": true,
        "query": "SELECT ?Roke_Montpellierkoa ?Roke_MontpellierkoaLabel ?koordenatuak WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?Roke_Montpellierkoa wdt:P825 wd:Q152457;\n((wdt:P131*)/^wdt:P527) wd:Q47588.\nOPTIONAL { ?Roke_Montpellierkoa wdt:P625 ?koordenatuak. }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "2181",
        "valid_gpt_response": true,
        "query": "SELECT ?langLabel ?lemma {\n?lexeme ontolex:sense/wdt:P5137 wd:Q42804 ; wikibase:lemma ?lemma; dct:language ?lang. wd:Q12414903 wdt:P527 ?lang.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, service call with parameters",
        "complexity": "medium"
    },
    {
        "id": "2182",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?line ?ns ?nsLabel ?connect ?connectLabel (?connectLabel as ?layer)\nWITH {\nSELECT ?item (sample(?lat1) as ?lat1) (sample(?lon1) as ?lon1) WHERE {\n?item wdt:P31/wdt:P279* wd:Q55488; wdt:P625 ?cds. MINUS { ?item wdt:P31/wdt:P279* wd:Q928830 }\n{?item wdt:P17 wd:Q668}\n?connect wdt:P31 wd:Q15141321 ; wdt:P17 wd:Q668 ; wdt:P1427 wd:Q986105 .\n?item wdt:P1192 ?connect.\n?item p:P625/psv:P625/wikibase:geoLatitude ?lat1 .\n?item p:P625/psv:P625/wikibase:geoLongitude ?lon1 .\n} GROUP BY ?item\n} AS %stations\nWITH {\nSELECT ?line ?connect ?ns WHERE {\nINCLUDE %stations .\n?item p:P1192 [ ps:P1192 ?connect ; pq:P156 ?ns ] .\n?connect wdt:P31 wd:Q15141321 ; wdt:P17 wd:Q668 ; wdt:P1427 wd:Q986105 .\n?ns p:P625/psv:P625/wikibase:geoLatitude ?lat2 .\n?ns p:P625/psv:P625/wikibase:geoLongitude ?lon2 .\nBIND(CONCAT('LINESTRING(', STR(?lon1), ' ', STR(?lat1), ',', STR(?lon2), ' ', STR(?lat2), ')') AS ?str) .\nBIND(STRDT(?str, geo:wktLiteral) AS ?line)\n}\n} AS %lines\nWHERE {\n{ INCLUDE %lines }.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"bn,en\". ?connect rdfs:label ?connectLabel. ?ns rdfs:label ?nsLabel}\n} ORDER BY ?connectLabel",
        "complexity_description": "Multiple subqueries, nested WITH clauses, and complex filtering conditions",
        "complexity": "complex"
    },
    {
        "id": "2183",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?label ?_image ?coordinate_location WHERE {\n?item wdt:P31 wd:Q100323579.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\".\n?item rdfs:label ?label.\n}\nOPTIONAL { ?item wdt:P18 ?_image. }\nOPTIONAL { ?item wdt:P625 ?coordinate_location. }\n}",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "2184",
        "valid_gpt_response": true,
        "query": "SELECT ?i ?iLabel ?cds ?layer {\n?i wdt:P31/wdt:P279* wd:Q32815 ; wdt:P17 wd:Q902 ; wdt:P625 ?cds ; wdt:P149 ?type.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"bn,en\". ?i rdfs:label ?iLabel. ?type rdfs:label ?layer }\n}",
        "complexity_description": "Multiple triple patterns, service call with language filter",
        "complexity": "medium"
    },
    {
        "id": "2185",
        "valid_gpt_response": true,
        "query": "SELECT ?deathYYYY_MM (COUNT(?gender) AS ?count) ?genderLabel WHERE {\n?human wdt:P31 wd:Q5 .\n?human wdt:P27 wd:Q145 .\n?human wdt:P21 ?gender .\n?human p:P570 [\na wikibase:BestRank ;\npsv:P570 [\nwikibase:timeValue ?dateOfDeath ;\nwikibase:timePrecision ?precision\n]\n]\nFILTER (?precision >= 10 ) # month precision or better\nBIND(YEAR(?dateOfDeath) as ?year) .\nBIND(MONTH(?dateOfDeath) as ?month) .\nBIND ( IF(?month < 10, CONCAT(\"0\",STR(?month) ), STR(?month)) AS ?MM)\nBIND(CONCAT(STR(?year), \"-\", ?MM) as ?deathYYYY_MM).\nFILTER (?year >= 2005)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?deathYYYY_MM ?genderLabel",
        "complexity_description": "Multiple filters, bindings, and service calls",
        "complexity": "complex"
    },
    {
        "id": "2186",
        "valid_gpt_response": true,
        "query": "SELECT ?i ?iLabel ?start ?end {\n?i wdt:P31 wd:Q50846468 ; wdt:P641 wd:Q5375 ; wdt:P1923 wd:Q1143793 ; wdt:P580 ?start ; wdt:P582 ?end. MINUS { ?i wdt:P17 wd:Q668 }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple triple patterns, minus clause and service call",
        "complexity": "medium"
    },
    {
        "id": "2187",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?universidad ?universidadLabel ?fecha WHERE {\n?universidad wdt:P17 wd:Q96 ;\nwdt:P31 wd:Q3918 ;\nwdt:P571 ?fecha.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"es, en\". }\n}",
        "complexity_description": "Three triple patterns with a SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "2188",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?butir ?nama ?deskripsi ?gambar WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"id\".\n?mangga rdfs:label ?nama.\n?mangga schema:description ?deskripsi.\n}\n{ ?mangga wdt:P171 wd:Q161807. BIND (?mangga AS ?butir) }\nUNION\n{ ?mangga wdt:P31 wd:Q27068180. BIND (?mangga AS ?butir) }\nOPTIONAL { ?mangga wdt:P18 ?gambar. }\n}\n#defaultView:ImageGrid",
        "complexity_description": "Multiple UNION patterns, OPTIONAL clause, and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "2189",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\nwd:Q104863295 p:P276 ?stat .\n?stat ps:P276 ?location .\n?location p:P625 [ ps:P625 []; psv:P625 [ wikibase:geoLongitude ?coord1lon; wikibase:geoLatitude ?coord1lat; ] ].\n?stat pq:P1545 ?series .\nwd:Q104863295 p:P276 ?stat2 .\n?stat2 ps:P276 ?location2 .\n?location2 p:P625 [ ps:P625 []; psv:P625 [ wikibase:geoLongitude ?coord2lon; wikibase:geoLatitude ?coord2lat; ] ].\n?stat2 pq:P1545 ?series2 .\nfilter (xsd:integer(?series) = xsd:integer(?series2) -1)\nBIND(CONCAT('LINESTRING (', STR(?coord1lon), ' ', STR(?coord1lat), ',', STR(?coord2lon), ' ', STR(?coord2lat), ')') AS ?str) .\nBIND(STRDT(?str, geo:wktLiteral) AS ?line)\nBIND(\"ff0033\" as ?rgb)\nBIND(\"voyage\" AS ?layer)\n}",
        "complexity_description": "Multiple joins, filters and bindings",
        "complexity": "complex"
    },
    {
        "id": "2190",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?l ?lemma ?audio WHERE {\n?l dct:language wd:Q1860;\nwikibase:lemma ?lemma;\nontolex:lexicalForm ?form .\n?form ontolex:representation ?lemma .\nminus {?form wdt:P443 ?audio.}\n# Exclude affixes\nminus {?l wikibase:lexicalCategory wd:Q62155.}\n}",
        "complexity_description": "Multiple filters, minus clauses and property paths",
        "complexity": "complex"
    },
    {
        "id": "2191",
        "valid_gpt_response": true,
        "query": "select ?item ?itemLabel ?img where {\n?item wdt:P31 wd:Q1195942 .\n?item wdt:P31/wdt:P279* wd:Q24398318 .\noptional {?item wdt:P18 ?img .}\n}",
        "complexity_description": "Multiple triple patterns with optional clause",
        "complexity": "medium"
    },
    {
        "id": "2192",
        "valid_gpt_response": true,
        "query": "SELECT ?ingredienteLabel (COUNT (?ingrediente) AS ?count)\nWHERE\n{\n?sandwich wdt:P31?/wdt:P279* wd:Q28803;\nwdt:P527 ?ingrediente.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"es\", \"en\". }\n}\nGROUP BY ?ingredienteLabel\nORDER BY DESC (?count)",
        "complexity_description": "Multiple triple patterns, service call and aggregation",
        "complexity": "medium"
    },
    {
        "id": "2193",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coordinate_location ?image WHERE {\n?item wdt:P1343 wd:Q73357989.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nOPTIONAL {\n{ ?item wdt:P625 ?coordinate_location. }\nUNION\n{\n?item p:P159 ?headquarters.\n?headquarters pq:P625 ?coordinate_location.\n}\n}\nOPTIONAL { ?item wdt:P18 ?image. }\n}",
        "complexity_description": "Multiple optional patterns with UNION and SERVICE",
        "complexity": "complex"
    },
    {
        "id": "2194",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?presidente ?presidenteLabel ?firma WHERE {\n?presidente wdt:P39 wd:Q628004 ;\nwdt:P109 ?firma .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"es\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "2195",
        "valid_gpt_response": true,
        "query": "select distinct ?item ?itemLabel ?itemDescription ?birth where {\n?item wdt:P106 wd:Q36180 ;\nwdt:P27 wd:Q96 ;\nwdt:P570 ?death;\nwdt:P569 ?birth;\nfilter (?birth > \"1800-01-01\"^^xsd:dateTime && ?birth < \"1900-01-01\"^^xsd:dateTime)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"es,en\" }\n}",
        "complexity_description": "Multiple filters and service calls",
        "complexity": "medium"
    },
    {
        "id": "2196",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?start_time ?end_time ?original_broadcasterLabel ?itemDescription ?sitelinks ?number_of_episodes ?duration ?number_of_seasons WHERE {\n?item wdt:P31 wd:Q5398426;\nwdt:P495 wd:Q29;\nwikibase:sitelinks ?sitelinks.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"es,en\". }\nOPTIONAL { ?item wdt:P449 ?original_broadcaster. }\nOPTIONAL { ?item wdt:P580 ?start_time. }\nOPTIONAL { ?item wdt:P582 ?end_time. }\nOPTIONAL { ?item wdt:P1113 ?number_of_episodes. }\nOPTIONAL { ?item wdt:P2047 ?duration. }\nOPTIONAL { ?item wdt:P2437 ?number_of_seasons. }\n}\nORDER BY DESC (?start_time)",
        "complexity_description": "Multiple optional patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "2197",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel\nWHERE\n{\n?item wdt:P106 wd:Q193391.\n?item wdt:P106 wd:Q10732476 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns with a service call",
        "complexity": "medium"
    },
    {
        "id": "2198",
        "valid_gpt_response": true,
        "query": "select ?lexemeId ?lemaBatua (group_concat(distinct ?attestedAs; separator=\"; \") as ?attestedLemmata)\n(group_concat(distinct (strafter(str(?url), \"#\")); separator=\"; \") as ?spanishHeadwords)\n(group_concat(distinct ?url; separator=\"; \") as ?wikisourceURLs)\nwhere\n{\n?lexemeId dct:language wd:Q8752;\nwikibase:lemma ?lemaBatua;\np:P5323 [pq:P7855 ?attestedAs ;\npq:P973 ?url ;\n] .\n} group by ?lemaBatua ?lexemeId\norder by ?attestedLemmata",
        "complexity_description": "Multiple group_concat and subqueries",
        "complexity": "complex"
    },
    {
        "id": "2199",
        "valid_gpt_response": true,
        "query": "SELECT ?l ?lemma ?languageLabel WHERE {\n?l a ontolex:LexicalEntry;\ndct:language ?language;\nwikibase:lemma ?lemma .\n?l wdt:P31 wd:Q376431.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?languageLabel",
        "complexity_description": "Multiple triple patterns, service call and filtering",
        "complexity": "medium"
    },
    {
        "id": "2200",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?lexeme ?lemma ?foreignlexeme ?foreignlemma {\n?lexeme wikibase:lemma ?lemma ;\ndct:language wd:Q9035 ;\nontolex:sense / wdt:P5137 / ^wdt:P5137 / ^ontolex:sense ?foreignlexeme .\n?foreignlexeme dct:language wd:Q9288 ;\nwikibase:lemma ?foreignlemma .\nFILTER (LANG(?foreignlemma) = 'he')\n}",
        "complexity_description": "Multiple joins, filters and language conditions",
        "complexity": "complex"
    },
    {
        "id": "2201",
        "valid_gpt_response": true,
        "query": "select ?lexemeId ?lemma ?example ?sourceLabel ?source\nWHERE {\n?lexemeId <http://purl.org/dc/terms/language> wd:Q9027;\nwikibase:lemma ?lemma.\n?lexemeId p:P5831 ?statement.\n?statement ps:P5831 ?example;\npq:P6072 [];\npq:P5830 [].\n?lexemeId p:P5831 [ prov:wasDerivedFrom [ pr:P248 ?source ] ].\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"sv,en\". }\n}",
        "complexity_description": "Multiple triple patterns, property paths and service call",
        "complexity": "complex"
    },
    {
        "id": "2202",
        "valid_gpt_response": true,
        "query": "SELECT ?episode_nb ?item ?itemLabel ?original_title ?season_nb ?episode_nb_in_season ?season ?sl ?st\nWHERE\n{\n?item wdt:P31 wd:Q21191270 ; wdt:P4908 ?season ; wdt:P179 wd:Q204228 .\nOPTIONAL { ?season p:P179 [ pq:P1545 ?season_nb ] }\nOPTIONAL { ?item p:P4908 [ pq:P1545 ?episode_nb_in_season ] }\nOPTIONAL { ?item p:P179 [ pq:P1545 ?episode_nb ] }\nOPTIONAL { ?item wdt:P1476 ?original_title . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nOPTIONAL { ?item wikibase:sitelinks ?sl ; wikibase:statements ?st }\n}\nORDER BY xsd:integer(?season_nb) xsd:integer(?episode_nb)",
        "complexity_description": "Multiple optional patterns, multiple variables, and service call",
        "complexity": "complex"
    },
    {
        "id": "2203",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT\n?citizenship ?citizenship_label (COUNT(?citizenship_label) AS ?count)\nWHERE\n{ ?work wdt:P6982 ?afd .\n?work wdt:P50 ?author .\n?author rdfs:label ?name .\nFILTER (lang(?name) = 'en')\n?author wdt:P27 ?citizenship .\n?citizenship rdfs:label ?citizenship_label .\nFILTER (lang(?citizenship_label) = 'en')\n}\nGROUP BY ?citizenship ?citizenship_label",
        "complexity_description": "Multiple filters, group by and aggregation",
        "complexity": "medium"
    },
    {
        "id": "2204",
        "valid_gpt_response": true,
        "query": "SELECT ?citizenshipLabel (COUNT(?s) AS ?cnt)\n{\n?s wdt:P31 wd:Q5 . # human\n?s wdt:P106 wd:Q639669 . # musician\n?s wdt:P27 ?citizenship .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n} GROUP BY ?citizenshipLabel ORDER BY DESC(?cnt)",
        "complexity_description": "Multiple triple patterns, SERVICE clause and aggregation",
        "complexity": "medium"
    },
    {
        "id": "2205",
        "valid_gpt_response": true,
        "query": "SELECT ?region ?ISO3166_2 ?countryLabel ?ISO3166_1 ?regionLabel ?regionDescription ?coord WHERE {\n?region wdt:P300 ?ISO3166_2.\n?region wdt:P17 ?country.\nOPTIONAL {?region wdt:P625 ?coord}.\nOPTIONAL{?country wdt:P298 ?ISO3166_1}\n# OPTIONAL {?Wiki schema:about ?region;\n# schema:isPartOf <https://en.wikipedia.org/>}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"sv,en\". }\n} order by ?countryLabel ?ISO3166_2",
        "complexity_description": "Multiple optional patterns, service call and ordering",
        "complexity": "complex"
    },
    {
        "id": "2206",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?peli ?peliLabel ?lugar ?lugarLabel ?coord\nWHERE\n{\n?lugar wdt:P17 wd:Q96 ;\nwdt:P625 ?coord .\n?peli wdt:P31 wd:Q11424 ;\nwdt:P915 ?lugar .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"es\". }\n}",
        "complexity_description": "Multiple triple patterns, SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "2207",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?GITHUBTopic ?url ?Wikipedia ?coord ?country ?img ?cidLabel\nWHERE\n{\n?item wdt:P9100 ?GITHUBTopic.\n?item wdt:P625 ?coord.\nOPTIONAL {?item wdt:P2716 ?img}\nOPTIONAL {?item wdt:P18 ?img}\nOPTIONAL {?item wdt:P17 ?cid}\nBIND(URI(CONCAT(\"https://github.com/topics/\",?GITHUBTopic)) AS ?url)\nOPTIONAL { ?Wikipedia schema:about ?item;\nschema:isPartOf <https://en.wikipedia.org/>}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n} order by ?itemLabel",
        "complexity_description": "Multiple optional patterns, service call and bind function",
        "complexity": "complex"
    },
    {
        "id": "2208",
        "valid_gpt_response": true,
        "query": "SELECT ?jo ?joLabel ?date WHERE {\n?jo wdt:P31 wd:Q159821 ;\nwdt:P580 ?date .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"es\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "2209",
        "valid_gpt_response": true,
        "query": "SELECT\n?director ?directorLabel ?directorDescription\n(COUNT(?item) as ?count_episodes)\n(SAMPLE(?item) as ?sample_episode)\n(SAMPLE(?original_title) as ?sample_title)\nWHERE\n{\n?item wdt:P31 wd:Q21191270 ; wdt:P179 wd:Q204228 .\n?item wdt:P57 ?director .\nOPTIONAL { ?item wdt:P1476 ?original_title }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?director ?directorLabel ?directorDescription\nORDER BY DESC(?count_episodes) ?directorLabel",
        "complexity_description": "Multiple aggregations, optional pattern and service call",
        "complexity": "complex"
    },
    {
        "id": "2210",
        "valid_gpt_response": true,
        "query": "SELECT ?scholarly_article ?title WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?scholarly_article wdt:P31 wd:Q13442814;\nwdt:P1433 wd:Q21385466.\nOPTIONAL { }\nOPTIONAL { ?scholarly_article wdt:P1476 ?title. }\n}\nLIMIT 1000",
        "complexity_description": "Multiple triple patterns, optional blocks and service call",
        "complexity": "medium"
    },
    {
        "id": "2211",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?townhall ?townhallLabel ?communeLabel ?coords ?image\nWHERE\n{\n?commune p:P31 ?cSta ;\nwdt:P47 ?centre .\n?cSta ps:P31 wd:Q484170 .\nVALUES ?centre { wd:Q12191 }\nFILTER NOT EXISTS { ?cSta pq:P582 ?x }\nOPTIONAL {\n?townhall wdt:P31/wdt:P279* wd:Q543654 ;\nwdt:P131 ?commune .\nOPTIONAL { ?townhall wdt:P625 ?coords }\nOPTIONAL { ?townhall wdt:P18 ?image }\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?communeLabel",
        "complexity_description": "Multiple filters, optional patterns and service call",
        "complexity": "complex"
    },
    {
        "id": "2212",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?author ?authorLabel ?image ?coord WHERE {\n?author wdt:P31 wd:Q11269813 .\n?author wdt:P625 ?coord .\nOPTIONAL {?author wdt:P18 ?image .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"de, en, fr, es, it, cz\" }\n}",
        "complexity_description": "Multiple triple patterns with OPTIONAL clause and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "2213",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?place ?placeLabel ?image\nWHERE\n{\n?item wdt:P183 ?place .\n?item wdt:P171+ wd:Q5113 .\n?place wdt:P17 wd:Q142 .\nOPTIONAL { ?item wdt:P18 ?image . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "2214",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?official_website WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?item wdt:P1343 wd:Q76510930.\nOPTIONAL { ?item wdt:P856 ?official_website. }\n}\nORDER BY ASC(?itemLabel)",
        "complexity_description": "Simple query with optional pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "2215",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?q ?qLabel WHERE {\n?q wdt:P31 wd:Q3624078 ; wdt:P37 ?l1 ; wdt:P37 ?l2 .\nFILTER ( STR(?l1) < STR(?l2) ) .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?qLabel",
        "complexity_description": "Filter, Service and ORDER BY",
        "complexity": "medium"
    },
    {
        "id": "2216",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?geo ?image\nWHERE\n{\n?item wdt:P1662 ?doiPrefix ;\nwdt:P625 ?geo.\nOPTIONAL {?item wdt:P18 ?image.}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "2217",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n{ SELECT DISTINCT ?item WHERE { ?item (p:P31/ps:P31/(wdt:P279*)) wd:Q75762. } }\n}",
        "complexity_description": "Multiple services, subqueries and property paths",
        "complexity": "complex"
    },
    {
        "id": "2218",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?genderLabel WHERE {\nSERVICE wikibase:mwapi {\nbd:serviceParam wikibase:endpoint \"sv.wikipedia.org\"; # Set the project here\nwikibase:api \"Generator\";\nmwapi:generator \"categorymembers\"; # Selects the content from a category\nmwapi:gcmtitle \"Category:Fodda 2001\";. # Specifies the category (Born in 2001)\n?item wikibase:apiOutputItem mwapi:item.\n}\nFILTER BOUND (?item) # Safeguard to not get a timeout from unbound items when using ?item below\n?item wdt:P21 ?gender . # Example retrieval of a value\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,sv\". }\n}",
        "complexity_description": "Multiple services and filters used",
        "complexity": "medium"
    },
    {
        "id": "2219",
        "valid_gpt_response": true,
        "query": "SELECT (str(?year) as ?yearstr) (count (?item) as ?count ){\n?item wdt:P1325 ?dataset;\nwdt:P31 wd:Q13442814;\nwdt:P577 ?date.\nBIND(year(?date) as ?year)\n}\nGROUP By ?year\nORDER by ?count",
        "complexity_description": "Uses BIND, GROUP BY and ORDER BY",
        "complexity": "medium"
    },
    {
        "id": "2220",
        "valid_gpt_response": true,
        "query": "# Find parent taxon shared by two taxa:\nSELECT ?via ?viaLabel ?rank ?rankLabel ?pic WHERE {\n?via ^(wdt:P171*) wd:Q15314291; # Alocasia cuprea (Q15314291)\n^(wdt:P171*) wd:Q1345646. # Codiaeum variegatum (Q1345646)\nFILTER(NOT EXISTS {\n?via2 ^(wdt:P171*) wd:Q15314291; # Alocasia cuprea (Q15314291)\n^(wdt:P171*) wd:Q1345646; # Codiaeum variegatum (Q1345646)\nwdt:P171 ?via.\n})\nOPTIONAL {\n?via wdt:P18 ?pic;\nwdt:P105 ?rank.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple patterns, negation, and optional blocks",
        "complexity": "complex"
    },
    {
        "id": "2221",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n{ SELECT DISTINCT ?item WHERE { ?item (p:P31/ps:P31/(wdt:P279*)) wd:Q61960067. } }\n}",
        "complexity_description": "Multiple services, subqueries and property paths",
        "complexity": "complex"
    },
    {
        "id": "2222",
        "valid_gpt_response": true,
        "query": "SELECT (SAMPLE(?cat) as ?category) ?item\n?food (Group_Concat(Distinct(?label);separator=\", \") as ?countries)\nWHERE\n{\n?item wdt:P31/wdt:P279* wd:Q2095.\nOPTIONAL { ?item wdt:P31 ?type. }\n?item wdt:P495|wdt:P17 ?c.\n?type rdfs:label ?cat .\nFILTER(LANG(?cat) = \"en\").\n?item wikibase:sitelinks ?sl.\n?c rdfs:label ?label.\nFILTER(LANG(?label) = \"en\").\n?item rdfs:label ?food.\nFILTER(LANG(?food) = \"en\") .\n} GROUP BY ?food ?item\nORDER BY DESC(SAMPLE(?sl))",
        "complexity_description": "Multiple filters, optional clause, and grouping with aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "2223",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?pic ?coord ?denkmallink ?wikipedia WHERE {\n?item wdt:P7900 ?denkmalatlas .\nOPTIONAL { ?item wdt:P625 ?coord . }\nOPTIONAL { ?item wdt:P18 ?pic . }\nOPTIONAL {\n?wikipedia schema:about ?item ;\nschema:inLanguage \"de\" ;\nschema:isPartOf <https://de.wikipedia.org/> . }\nBIND(URI(CONCAT(\"https://denkmalatlas.niedersachsen.de/viewer/metadata/\", STR(?denkmalatlas))) AS ?denkmallink)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"de,en\" . }\n}",
        "complexity_description": "Multiple optional patterns, service call and bind function",
        "complexity": "medium"
    },
    {
        "id": "2224",
        "valid_gpt_response": true,
        "query": "select distinct ?item ?itemLabel (sample(?image) as ?imageFile) ?coord where {\n?item wdt:P31 wd:Q188913;\nwdt:P17 wd:Q7646305;\nwdt:P625 ?coord.\noptional { ?item wdt:P18 ?image. }\nservice wikibase:label { bd:serviceParam wikibase:language \"en,nl\". }\n} group by ?item ?itemLabel ?image ?coord",
        "complexity_description": "Multiple triple patterns, optional clause, and service call",
        "complexity": "medium"
    },
    {
        "id": "2225",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?wat ?watLabel ?coord WHERE {\n?wat wdt:P31 wd:Q427287.\n?wat wdt:P17 wd:Q869.\nOPTIONAL { ?wat wdt:P625 ?coord. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],th\". }\n}\nORDER BY ?watLabel",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "2226",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?localidad ?localidadLabel WHERE {\n?localidad wdt:P31 wd:Q20202352 ;\nrdfs:label ?itemLabel;\nFILTER (lang(?itemLabel) = \"es\") .\nFILTER regex (?itemLabel, \"^San\") .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"es\". }\n}",
        "complexity_description": "Multiple filters and service call",
        "complexity": "medium"
    },
    {
        "id": "2227",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel (SAMPLE(?occname) AS ?occname) ?sitelinks ?WDstatements ?article (SAMPLE(?birth) AS ?birth) (SAMPLE(?death) AS ?death) (SAMPLE(?bloodhound) AS ?bloodhound) (SAMPLE(?harvard) AS ?harvard) WHERE {\n#?occ wdt:P279|wdt:P279/wdt:P279* wd:Q2374149.\nVALUES ?occ { wd:Q2487799 }\n?item wdt:P106 ?occ .\nOPTIONAL { ?item wdt:P108 ?emp . }\n?item wdt:P21 wd:Q6581072;\nwikibase:statements ?WDstatements;\nwikibase:sitelinks ?sitelinks.\nOPTIONAL {\n?article schema:about ?item;\nschema:inLanguage \"en\";\nschema:isPartOf <https://en.wikipedia.org/>.\n}\n?occ rdfs:label ?occname .\nOPTIONAL {?item wdt:P569 ?birth .}\nOPTIONAL {?item wdt:P570 ?death .}\nOPTIONAL {?item wdt:P6944 ?bloodhound .}\nOPTIONAL {?item wdt:P6264 ?harvard .}\nFILTER(LANG(?occname) = \"en\").\nFILTER((?birth<\"1900-01-01T00:00:00Z\"^^xsd:dateTime)||(?death<\"1920-01-01T00:00:00Z\"^^xsd:dateTime)).\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n}\n}\nGROUP BY ?item ?itemLabel ?sitelinks ?WDstatements ?article\nORDER BY DESC (?sitelinks)",
        "complexity_description": "Multiple OPTIONAL clauses, FILTERs, and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "2228",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel (GROUP_CONCAT(DISTINCT ?occupationLabel; SEPARATOR = \", \") AS ?occupations) (GROUP_CONCAT(DISTINCT ?countryLabel; SEPARATOR = \", \") AS ?countries) ?birth ?articles WHERE {\nVALUES ?occ {wd:Q901}\n?item wdt:P31 wd:Q5;\nwdt:P21 wd:Q6581072;\nwdt:P27 ?country;\n(wdt:P106/(wdt:P279*)) ?occ;\nwdt:P106 ?occupation;\nwikibase:sitelinks ?articles;\nwdt:P569 ?birth.\nhint:Prior hint:rangeSafe \"true\"^^xsd:boolean.\nFILTER((?birth >= \"1500-01-01T00:00:00\"^^xsd:dateTime) && (?birth < \"1900-01-01T00:00:00\"^^xsd:dateTime))\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"es,en\".\n?item rdfs:label ?itemLabel.\n?gender rdfs:label ?genderLabel.\n?occupation rdfs:label ?occupationLabel.\n?country rdfs:label ?countryLabel.\n}\n}\nGROUP BY ?item ?itemLabel ?genderLabel ?birth ?articles\nORDER BY DESC (?articles)",
        "complexity_description": "Multiple filters, group by, and order by clauses with several joins",
        "complexity": "complex"
    },
    {
        "id": "2229",
        "valid_gpt_response": true,
        "query": "SELECT\n?templom ?templomLabel (SAMPLE(?templomLocation) AS ?templomLocation_) (SAMPLE(?templomImage) AS ?templomImage_)\n(IF(?ref, \"Calvinist\" , \" \") AS ?refLabel)\n(IF(?evang, \"Lutheran\", \" \") AS ?evangLabel)\n(IF(?kat, \"Catholic\", \" \") AS ?katLabel)\n(IF(?ort, \"Eastern Orthodox\", \" \") AS ?ortLabel)\n(CONCAT(?refLabel, ?evangLabel, ?katLabel, ?ortLabel) AS ?layer)\nWHERE {\n?templom wdt:P31/wdt:P279* wd:Q16970;\nwdt:P17 wd:Q28;\nBIND(EXISTS { ?templom wdt:P31 wd:Q103842783. } AS ?ref)\nBIND(EXISTS { ?templom wdt:P31 wd:Q56242275. } AS ?evang)\nBIND(EXISTS { ?templom wdt:P31/wdt:P279* wd:Q2031836. } AS ?ort)\nBIND(EXISTS { ?templom wdt:P31/wdt:P279* wd:Q1088552. } AS ?kat)\nOPTIONAL { ?templom wdt:P625 ?templomLocation. }\nOPTIONAL { ?templom wdt:P18 ?templomImage. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?templom ?templomLabel ?person ?personLabel ?ref ?evang ?kat ?ort",
        "complexity_description": "Multiple EXISTS clauses, BINDINGS, and OPTIONAL patterns",
        "complexity": "complex"
    },
    {
        "id": "2230",
        "valid_gpt_response": true,
        "query": "SELECT ?misto_narozeni ?misto_umrti ?line WITH {\nSELECT ?item ?misto_narozeni ?misto_umrti where {\n?item wdt:P19/wdt:P17 wd:Q213 .\n?item wdt:P20/wdt:P17 wd:Q213 .\n?item wdt:P19* ?misto_narozeni . ?misto_narozeni wdt:P31 wd:Q5153359 .?misto_narozeni wdt:P1082 ?obyvatele filter(?obyvatele > 2500 ) .\n?item wdt:P20* ?misto_umrti . ?misto_umrti wdt:P31 wd:Q5153359 filter(?misto_narozeni != ?misto_umrti).\n}\n} AS %data WITH {\nSELECT ?misto_narozeni ?misto_umrti (COUNT(?item) AS ?pocet) {\nINCLUDE %data .\n} GROUP BY ?misto_narozeni ?misto_umrti\n} AS %counts WITH {\nSELECT ?misto_narozeni (MAX(?pocet) AS ?nej) {\nINCLUDE %counts .\n} GROUP BY ?misto_narozeni\n} AS %best WHERE {\nINCLUDE %counts .\nINCLUDE %best .\n?misto_narozeni p:P625 [ ps:P625 []; psv:P625 [ wikibase:geoLongitude ?coord1lon; wikibase:geoLatitude ?coord1lat; ] ].\n?misto_umrti p:P625 [ ps:P625 []; psv:P625 [ wikibase:geoLongitude ?coord2lon; wikibase:geoLatitude ?coord2lat; ] ].\nBIND(CONCAT('LINESTRING (', STR(?coord1lon), ' ', STR(?coord1lat), ',', STR(?coord2lon), ' ', STR(?coord2lat), ')') AS ?str) .\nBIND(STRDT(?str, geo:wktLiteral) AS ?line)\nFILTER( ?nej = ?pocet ) .\n} order by asc(?misto_narozeni)",
        "complexity_description": "Multiple subqueries with filters and aggregations",
        "complexity": "complex"
    },
    {
        "id": "2231",
        "valid_gpt_response": true,
        "query": "SELECT ?tonalityLabel (COUNT(?tonalityLabel) as ?count)\nWHERE\n{\n?work wdt:P826 ?tonality.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nGROUP BY ?tonalityLabel\nORDER BY DESC(?count)",
        "complexity_description": "Uses GROUP BY, ORDER BY and SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "2232",
        "valid_gpt_response": true,
        "query": "SELECT ?humanLabel ?handle ?death ?statement WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?human wdt:P31 wd:Q5. # all people\n?human wdt:P570 ?death. # who have a death date\n?human wdt:P2002 ?handle. # and a twitter account\n?human p:P2002 ?statement.\n?statement pq:P1552 wd:Q28378282. # which is accessible\n}\nLIMIT 10000",
        "complexity_description": "Multiple triple patterns, service call, and property qualifiers",
        "complexity": "medium"
    },
    {
        "id": "2233",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?named ?img ?sts ?sls ?ids\nWHERE\n{\n?item wdt:P463 wd:Q1702801 .\nOPTIONAL { ?item p:P463 [ ps:P463 wd:Q1702801 ; pq:P1810 ?named ] }\nOPTIONAL { ?item wdt:P18 ?img }\n?item wikibase:sitelinks ?sls ; wikibase:statements ?sts ; wikibase:identifiers ?ids\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,de\" }\n}",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "2234",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel (GROUP_CONCAT(DISTINCT ?occupationLabel; SEPARATOR = \", \") AS ?occupations) (GROUP_CONCAT(DISTINCT ?countryLabel; SEPARATOR = \", \") AS ?countries) ?birth ?articles WHERE {\nVALUES ?occ {wd:Q15253558}\n?item wdt:P31 wd:Q5;\nwdt:P21 wd:Q6581072;\nwdt:P27 ?country;\n(wdt:P106/(wdt:P279*)) ?occ;\nwdt:P106 ?occupation;\nwikibase:sitelinks ?articles;\nwdt:P569 ?birth.\n?country p:P361/ps:P361 wd:Q12585 .\nhint:Prior hint:rangeSafe \"true\"^^xsd:boolean.\nFILTER((?birth >= \"1900-01-01T00:00:00\"^^xsd:dateTime) && (?birth < \"1999-01-01T00:00:00\"^^xsd:dateTime))\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"es,en\".\n?item rdfs:label ?itemLabel.\n?gender rdfs:label ?genderLabel.\n?occupation rdfs:label ?occupationLabel.\n?country rdfs:label ?countryLabel.\n}\n}\nGROUP BY ?item ?itemLabel ?genderLabel ?birth ?articles\nORDER BY DESC (?articles)",
        "complexity_description": "Multiple filters, group by, order by and service calls",
        "complexity": "complex"
    },
    {
        "id": "2235",
        "valid_gpt_response": true,
        "query": "SELECT ?street ?streetLabel ?cityLabel ?personLabel ?loc\nWHERE\n{\n?street (wdt:P31/(wdt:P279*)) wd:Q83620 .\n?street wdt:P131 wd:Q72 .\n?street wdt:P625 ?loc.\n?street wdt:P138 ?person .\n?person wdt:P31 wd:Q5.\n?person wdt:P21 wd:Q6581072.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" }\n}",
        "complexity_description": "Multiple triple patterns, property paths and service call",
        "complexity": "complex"
    },
    {
        "id": "2236",
        "valid_gpt_response": true,
        "query": "select ?building ?buildingLabel ?coord ?image WHERE\n{\n?building wdt:P84 wd:Q47780 ;\nwdt:P625 ?coord .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"es,en\". }\n}",
        "complexity_description": "Simple query with 2 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "2237",
        "valid_gpt_response": true,
        "query": "SELECT ?_jaiolekuaLabel (COUNT(?_genre) AS ?count) (SAMPLE(?_genreLabel) AS ?label) WHERE {\n?item wdt:P31 wd:Q5;\nwdt:P1412 wd:Q8752;\nwdt:P19 ?_jaiolekua;\nwdt:P21 ?_genre.\n?_jaiolekua wdt:P131* wd:Q2602877.\n?_genre rdfs:label ?_genreLabel.\n?_jaiolekua rdfs:label ?_jaiolekuaLabel.\nFILTER((LANG(?_genreLabel)) = \"eu\")\nFILTER((LANG(?_jaiolekuaLabel)) = \"eu\")\n}\nGROUP BY ?_genreLabel ?_jaiolekuaLabel",
        "complexity_description": "Multiple filters, group by and subqueries",
        "complexity": "complex"
    },
    {
        "id": "2238",
        "valid_gpt_response": true,
        "query": "SELECT ?P452 ?P452Label ?count WITH {\nSELECT ?P452 (COUNT (DISTINCT ?item) as ?count)\nWHERE\n{\n?item wdt:P31/wdt:P279* wd:Q783794 .\n?item wdt:P452 ?P452 .\n} group by ?P452} as %i\nWHERE\n{include %i\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER by desc (?count)",
        "complexity_description": "Multiple subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "2239",
        "valid_gpt_response": true,
        "query": "SELECT ?verb ?lemma ?conjugation_class ?conjugation_classLabel {\n?verb wikibase:lexicalCategory wd:Q24905 ;\nwikibase:lemma ?lemma ;\ndct:language wd:Q9035 ;\nwdt:P5186 ?conjugation_class ;\nwdt:P5191 ?lexeme .\nFILTER NOT EXISTS { ?lexeme wikibase:lexicalCategory wd:Q24905 }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da\". }\n}",
        "complexity_description": "Multiple filters and services with multiple triple patterns",
        "complexity": "complex"
    },
    {
        "id": "2240",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?coor ?image WHERE {\n?item wdt:P131* ?non.\nwd:Q47588 wdt:P527 ?non.\n?item wdt:P31 wd:Q8502.\nOPTIONAL { ?item wdt:P625 ?coor. }\nOPTIONAL { ?item wdt:P18 ?image. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"eu,es\". }\n}\nORDER BY ?itemLabel",
        "complexity_description": "Multiple triple patterns with optional blocks and service call",
        "complexity": "medium"
    },
    {
        "id": "2241",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?item ?itemLabel ?coord\nWHERE\n{\n?item wdt:P31 wd:Q1311696 . hint:Prior hint:runFirst true.\n?item wdt:P131* wd:Q22. hint:Prior hint:gearing \"forward\".\n?item wdt:P625 ?coord.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?item rdfs:label ?itemLabel .}\n}",
        "complexity_description": "Multiple triple patterns, service call and property path",
        "complexity": "medium"
    },
    {
        "id": "2242",
        "valid_gpt_response": true,
        "query": "SELECT ?metroline ?metrolineLabel ?endpoints ?carte_d_itin_raire WHERE {\n{\nSELECT ?metroline (COUNT(?endpoint_statement) AS ?endpoints) WHERE {\n?metroline wdt:P31 wd:Q105967897;\np:P559 ?endpoint_statement.\n?endpoint_statement rdf:type wikibase:BestRank.\nFILTER(NOT EXISTS { ?endpoint_statement pq:P582 _:b2. })\n}\nGROUP BY ?metroline\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?metroline wdt:P15 ?carte_d_itin_raire.\n}",
        "complexity_description": "Subqueries, grouping, and filtering make it complex",
        "complexity": "complex"
    },
    {
        "id": "2243",
        "valid_gpt_response": true,
        "query": "SELECT ?Athletic ?AthleticLabel ?jaiolekua ?jaiolekuaLabel ?koord WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?Athletic wdt:P54 wd:Q10315;\nwdt:P19 ?jaiolekua.\n?jaiolekua wdt:P625 ?koord.\n}",
        "complexity_description": "Multiple triple patterns with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "2244",
        "valid_gpt_response": true,
        "query": "SELECT ?typeLabel (COUNT(?thing) AS ?count) WHERE {\n?thing wdt:P6108 ?iiif; wdt:P31 ?type\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?typeLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, service call, group by and order by",
        "complexity": "complex"
    },
    {
        "id": "2245",
        "valid_gpt_response": true,
        "query": "SELECT ?constituency_No ?jurisdictionLabel ?successful_candidateLabel ?electorate ?total_valid_votes ?votes_received ?political_partyLabel (100*?votes_received/?total_valid_votes AS ?candidate_Vote_percent) WHERE {\n?item wdt:P31 wd:Q40231;\nwdt:P541 wd:Q99709336.\n?item wdt:P1001 ?jurisdiction.\n?jurisdiction p:P31 ?id.\n?id ps:P31 wd:Q54375461 .\n?id pq:P1545 ?constituency_No.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,ml\". }\nOPTIONAL { ?item wdt:P1697 ?total_valid_votes. }\nOPTIONAL { ?item wdt:P991 ?successful_candidate. }\nOPTIONAL { ?item wdt:P1831 ?electorate. }\n?item p:P991 ?sc.\n?sc pq:P1111 ?votes_received;\npq:P102 ?political_party.\n}\nORDER BY ASC(xsd:integer(?constituency_No) )",
        "complexity_description": "Multiple optional patterns, subqueries and calculations",
        "complexity": "complex"
    },
    {
        "id": "2246",
        "valid_gpt_response": true,
        "query": "SELECT\n?p ?pLabel\n(SAMPLE(?url) as ?url_comp2)\nWHERE\n{\nhint:Query hint:optimizer \"None\".\nBIND( wd:Q84263196 as ?comp2)\n{\n?comp2 ?wdt ?v .\n?p wikibase:directClaim ?wdt ; wikibase:propertyType wikibase:ExternalId .\nOPTIONAL { ?p wdt:P1630 ?f }\nBIND(uri(REPLACE(?f,\"\\\\$1\",?v)) as ?url)\n}\nUNION { BIND(wd:Q84263196 as ?p) }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?p ?pLabel\nORDER BY ?url_comp2",
        "complexity_description": "Multiple UNION, OPTIONAL, BIND, and SERVICE clauses with grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "2247",
        "valid_gpt_response": true,
        "query": "SELECT ?countryLabel ?item ?itemLabel ?itemDescription ?person ?personLabel ?personDescription (sample(?coor) as ?coor)\n{\n?item wdt:P31/wdt:P279* wd:Q294440.\n?item p:P138/ps:P138 ?person .\n?person wdt:P31 wd:Q5 ;\nwdt:P21 wd:Q6581072 .\n?item wdt:P17 ?country .\nOPTIONAL { ?item wdt:P625 ?coor } .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"es, en\" . }\n}\nGROUP BY ?countryLabel ?item ?itemLabel ?itemDescription ?person ?personLabel ?personDescription\nORDER BY ?countryLabel ?itemLabel",
        "complexity_description": "Multiple joins, optional clause, and service call",
        "complexity": "complex"
    },
    {
        "id": "2248",
        "valid_gpt_response": true,
        "query": "SELECT ?gizakiLabel ?koord WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?gizaki wdt:P31 wd:Q5;\nwdt:P21 wd:Q6581072.\n?wikilink schema:about ?gizaki;\nschema:isPartOf <https://eu.wikipedia.org/>.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"eu\". }\n?gizaki wdt:P19 ?jaiolekua.\n?jaiolekua wdt:P625 ?koord.\n}",
        "complexity_description": "Multiple services, filters and joins",
        "complexity": "complex"
    },
    {
        "id": "2249",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?pic ?coord ?iNatlink WHERE {\n?item wdt:P7471 ?iNat.\n?item wdt:P625 ?coord.\nOPTIONAL { ?item wdt:P18 ?pic. }\nBIND(URI(CONCAT(\"https://www.inaturalist.org/observations?subview=grid&view=species&place_id=\", STR(?iNat))) AS ?iNatlink)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and bind function",
        "complexity": "medium"
    },
    {
        "id": "2250",
        "valid_gpt_response": true,
        "query": "SELECT ?creditLabel ?item ?itemLabel ?itemDescription ?typeLabel ?series ?seriesLabel (MIN(?date) as ?date_)\nWHERE\n{\n{ ?item wdt:P58 wd:Q710739 . BIND ( wd:Q28389 as ?credit ) }\nUNION { ?item wdt:P57 wd:Q710739 . BIND ( wd:Q2526255 as ?credit ) }\nOPTIONAL { ?item wdt:P31 ?type }\nOPTIONAL { ?item wdt:P179 ?series }\nOPTIONAL { ?item wdt:P577 ?date }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?item ?itemLabel ?itemDescription ?typeLabel ?series ?seriesLabel ?creditLabel\nORDER BY (!BOUND(?date_)) DESC(?date_)",
        "complexity_description": "Multiple UNION, OPTIONAL clauses and GROUP BY",
        "complexity": "complex"
    },
    {
        "id": "2251",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?interwiki ?formatter ?added ?ended\n{\n?item p:P6720 ?st .\n?st ps:P6720 ?interwiki .\n?st wikibase:rank ?goodRanks.\nOPTIONAL { ?st pq:P1630 ?formatter }\nOPTIONAL { ?st pq:P580 ?added }\nOPTIONAL { ?st pq:P582 ?ended }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple optional patterns, service call and rank filter",
        "complexity": "medium"
    },
    {
        "id": "2252",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?subj ?subjLabel ?coord ?elev ?pic\nWHERE\n{\n?subj wdt:P1459 ?cadw .\n?subj wdt:P2044 ?elev filter(?elev < 70) .\n?subj wdt:P625 ?coord .\nOPTIONAL { ?subj wdt:P18 ?pic }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, filter and optional clause",
        "complexity": "medium"
    },
    {
        "id": "2253",
        "valid_gpt_response": true,
        "query": "select ?release ?title ?listedTracks (sum(?trackAmount) as ?totalTracks) (?totalTracks - ?listedTracks as ?diff) where {\n{\nselect ?release (count(distinct ?track) as ?listedTracks) where {\n{\nselect distinct ?release where {\n?release wdt:P31/wdt:P279* wd:Q2031291.\nfilter exists {\n?release wdt:P2635 [].\n}\n}\n}\n?release wdt:P658 ?track.\n}\ngroup by ?release\n}\n?release p:P2635/ps:P2635 ?trackAmount.\nservice wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\".\n?release rdfs:label ?title.\n}\n}\ngroup by ?release ?title ?listedTracks\nhaving(?listedTracks != ?totalTracks)",
        "complexity_description": "Multiple nested queries, aggregation functions and filters",
        "complexity": "complex"
    },
    {
        "id": "2254",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?dob ?birthPlaceLabel\nWHERE {\n?item wdt:P31 wd:Q5.\n?item wdt:P21 wd:Q6581072.\n?item wdt:P27 wd:Q1033.\n?item wdt:P106/wdt:P279* wd:Q639669.\nOPTIONAL {?item wdt:P569 ?dob.}\nOPTIONAL {?item wdt:P19 ?birthPlace.}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?dob)",
        "complexity_description": "Multiple filters, optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "2255",
        "valid_gpt_response": true,
        "query": "SELECT (str(?year) as ?yearString) (count(DISTINCT ?article) as ?count) {\n#topics on multilingualism, multiple languages and bilingualism\nVALUES ?subject {wd:Q30081 wd:Q20923490 wd:Q10779529}\n?article wdt:P921 ?subject;\nwdt:P577 ?date.\nBIND (year(?date) as ?year).\n}\nGROUP by ?year\nORDER by DESC(?count)",
        "complexity_description": "Uses BIND, VALUES, GROUP BY and ORDER BY clauses",
        "complexity": "medium"
    },
    {
        "id": "2256",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?line WHERE {\n?item wdt:P17 wd:Q213 .\n?item wdt:P625 [] .\n?item p:P625 ?statement1, ?statement2 filter(?statement1 != ?statement2).\n{?statement1 pq:P580 [] .} union {?statement1 pq:P582 [] .}\n{?statement1 pq:P580 [] .} union {?statement2 pq:P582 [] .}\n?statement1 ps:P625 []; psv:P625 [ wikibase:geoLongitude ?coord1lon; wikibase:geoLatitude ?coord1lat; ].\n?statement2 ps:P625 []; psv:P625 [ wikibase:geoLongitude ?coord2lon; wikibase:geoLatitude ?coord2lat; ].\nBIND(CONCAT('LINESTRING (', STR(?coord1lon), ' ', STR(?coord1lat), ',', STR(?coord2lon), ' ', STR(?coord2lat), ')') AS ?str) .\nBIND(STRDT(?str, geo:wktLiteral) AS ?line)\n}",
        "complexity_description": "Multiple filters, unions and binds",
        "complexity": "complex"
    },
    {
        "id": "2257",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?itemDescription ?img WHERE {\n?item wdt:P31 wd:Q5;\nwdt:P21 wd:Q6581072 .\n?item wdt:P106/wdt:P279* wd:Q5482740.\n?item wdt:P18 ?img.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"es,en\". }\n}",
        "complexity_description": "Multiple triple patterns, optional graph pattern and service call",
        "complexity": "medium"
    },
    {
        "id": "2258",
        "valid_gpt_response": true,
        "query": "SELECT ?station ?stationLabel ?cds ?line ?trackLabel ?track ?image {\n{SELECT * {\nSERVICE gas:service {\ngas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.BFS\" ; gas:in wd:Q1990205 ; gas:linkType wdt:P197 ; gas:out ?station ; gas:out1 ?depth ; gas:out2 ?pred . }\nFILTER(?station != wd:Q1990205)\n?station wdt:P625 ?cds ;\nwdt:P17 wd:Q145 .\n?station p:P197 ?adjST .\n?adjST ps:P197 ?adj ;\npq:P81 ?track .\n?adj p:P625/psv:P625/wikibase:geoLatitude ?lat1 ; p:P625/psv:P625/wikibase:geoLongitude ?lon1 .\n?station p:P625/psv:P625/wikibase:geoLatitude ?lat2 ; p:P625/psv:P625/wikibase:geoLongitude ?lon2 .\nBIND(CONCAT('LINESTRING(', STR(?lon1), ' ', STR(?lat1), ',', STR(?lon2), ' ', STR(?lat2), ')') AS ?str) . BIND(STRDT(?str, geo:wktLiteral) AS ?line)}\n}\nOPTIONAL { ?station wdt:P18 ?image .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple services, subqueries, and complex filtering",
        "complexity": "complex"
    },
    {
        "id": "2259",
        "valid_gpt_response": true,
        "query": "SELECT ?count ?researcher ?researcherLabel ?awards\nWITH {\nSELECT (COUNT(?award) AS ?count) ?researcher (GROUP_CONCAT(?award_label; separator=\", \") AS ?awards) WHERE {\nhint:Query hint:optimizer \"None\" .\n{\nSELECT DISTINCT ?researcher WHERE {\n?researcher ( wdt:P108 | wdt:P463 | wdt:P1416 ) / wdt:P361* wd:Q1269766 .\n}\n}\n?researcher wdt:P166 ?award .\n?award rdfs:label ?award_label . FILTER (LANG(?award_label) = 'en')\n}\nGROUP BY ?researcher\n} AS %result\nWHERE {\nINCLUDE %result\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\" . }\n}\nORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, grouping, and filtering",
        "complexity": "complex"
    },
    {
        "id": "2260",
        "valid_gpt_response": true,
        "query": "SELECT ?sitelink ?itemLabel ?nacionalidadLabel WHERE {\n?item wdt:P21 wd:Q6581072 ;\nwdt:P27 ?nacionalidad .\n?sitelink schema:isPartOf <https://en.wikipedia.org/>;\nschema:about ?item;\nwikibase:badge wd:Q17437796 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" } .\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple triple patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "2261",
        "valid_gpt_response": true,
        "query": "SELECT ?street ?streetLabel ?layer ?coords\nWHERE\n{\n?street wdt:P31 wd:Q79007.\n?street wdt:P131 wd:Q43631 .\n?street wdt:P138 ?namedafter .\n?street wdt:P625 ?coords .\n?namedafter wdt:P21 ?gender .\nBIND(IF(?gender = wd:Q6581072, \"vrouwelijk\",\"mannelijk\") AS ?layer)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns with SERVICE clause and BIND function",
        "complexity": "medium"
    },
    {
        "id": "2262",
        "valid_gpt_response": true,
        "query": "SELECT ?gizakiLabel ?koord WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?gizaki wdt:P31 wd:Q5.\n{ ?gizaki wdt:P21 wd:Q1052281. }\nUNION\n{ ?gizaki wdt:P21 wd:Q2449503. }\n?wikilink schema:about ?gizaki;\nschema:isPartOf <https://eu.wikipedia.org/>.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"eu\". }\n?gizaki wdt:P19 ?jaiolekua.\n?jaiolekua wdt:P625 ?koord.\n}",
        "complexity_description": "Multiple services, unions and joins",
        "complexity": "complex"
    },
    {
        "id": "2263",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel\nWHERE {\n?item wdt:P31 wd:Q81274644;\nwdt:P527 wd:Q149292\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "2264",
        "valid_gpt_response": true,
        "query": "SELECT ?i_ (SAMPLE(?lemma) as ?lemma_) ?layer ?place ?placeLabel ?cds\nWITH {\nSELECT (SAMPLE(?i) as ?i_) ?lang ?place ?cds {\n?i dct:language ?lang ; ontolex:sense/wdt:P6084 ?place. OPTIONAL { ?place wdt:P625 ?cds }\n} GROUP BY ?lang ?place ?cds\n} AS %places\nWHERE { INCLUDE %places.\n?i_ wikibase:lemma ?lemma.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?lang rdfs:label ?layer. ?place rdfs:label ?placeLabel }\n}\nGROUP BY ?layer ?placeLabel ?place ?cds ?i_",
        "complexity_description": "Multiple subqueries, joins, and grouping",
        "complexity": "complex"
    },
    {
        "id": "2265",
        "valid_gpt_response": true,
        "query": "select distinct ?item ?itemLabel ?itemDescription ?sig ?ipniid\nwhere {\n?item wdt:P31 wd:Q5 .\n?item wdt:P109 ?sig .\n?item wdt:P106 wd:Q2374149 .\nOPTIONAL {?item wdt:P586 ?ipniid} .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns with OPTIONAL clause",
        "complexity": "medium"
    },
    {
        "id": "2266",
        "valid_gpt_response": true,
        "query": "SELECT ?class ?classLabel ?classDescription ?count WITH {\nSELECT ?class (COUNT(*) AS ?count) WHERE {\n?class wdt:P279+ wd:Q34379.\n?instance wdt:P31 ?class.\n}\nGROUP BY ?class\n} AS %results WHERE {\nINCLUDE %results.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "2267",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?value (COALESCE(?song,?st) as ?song_) ?songLabel ?roleLabel ?adopted ?ended ?composer ?composerLabel\n{\n?item wdt:P5086 ?value .\nOPTIONAL {\n?item p:P85 ?st .\nOPTIONAL { ?st ps:P85 ?song\nOPTIONAL { ?song wdt:P86 ?composer }\n}\nOPTIONAL { ?st pq:P3831 ?role }\nOPTIONAL { ?st pq:P580 ?adopted }\nOPTIONAL { ?st pq:P582 ?ended }\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,en\" }\n}\nORDER BY ?itemLabel ?adopted",
        "complexity_description": "Multiple optional patterns, nested queries and service call",
        "complexity": "complex"
    },
    {
        "id": "2268",
        "valid_gpt_response": true,
        "query": "SELECT\n?nv ?item ?itemLabel\n(GROUP_CONCAT(DISTINCT ?l0; SEPARATOR = \", \") AS ?all)\n(GROUP_CONCAT(DISTINCT ?l1; SEPARATOR = \", \") AS ?all_ad)\n?enl\nWHERE\n{\n{\nSELECT DISTINCT ?item ?nv ?enl (STR(?lt) AS ?l0) (STR(?ln) AS ?l1)\nWHERE\n{\n?item wdt:P31 wd:Q191780; wdt:P1181 ?nv . FILTER( ?nv < 101 )\n?item rdfs:label ?enl. FILTER( LANG(?enl) = \"en\" )\n?item (rdfs:label|skos:altLabel) ?lt . FILTER( STR(?lt) != STR(?enl) && !CONTAINS(?lt, str(?nv) ) )\n?item (rdfs:label|skos:altLabel) ?ln . FILTER( STR(?ln) != STR(?enl) && CONTAINS(?ln, str(?nv) ) )\n}\nORDER BY ?nv ?l0\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}\nGROUP BY ?nv ?item ?itemLabel ?enl\nORDER BY ?nv",
        "complexity_description": "Multiple subqueries, grouping, and filtering with complex conditions",
        "complexity": "complex"
    },
    {
        "id": "2269",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?itemDescription (YEAR(?d) as ?published) ?authorLabel ?title\nWHERE\n{\n?item p:P136/ps:P136 wd:Q1141200 .\nOPTIONAL { ?item wdt:P577 ?d }\nOPTIONAL { ?item wdt:P50 ?author }\nOPTIONAL { ?item wdt:P1476 ?title }\nFILTER NOT EXISTS { ?item wdt:P577 ?d2 . FILTER(?d2 < ?d && BOUND(?d) && BOUND(?d2) ) }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nORDER BY ?published",
        "complexity_description": "Multiple optional patterns, filter not exists and service call",
        "complexity": "complex"
    },
    {
        "id": "2270",
        "valid_gpt_response": true,
        "query": "SELECT ?lexeme ?offset ?representation ?qLabel ?example {\n?lexeme p:P5831 ?example_statement .\n?example_statement ps:P5831 ?example .\n?example_statement pq:P5830 ?form .\n?form ontolex:representation ?representation .\n?lexeme wikibase:lemma ?lemma .\nBIND(STRLEN(STRBEFORE(?example, ?representation)) AS ?offset)\n?lexeme dct:language wd:Q9035 .\nOPTIONAL {\n?example_statement pq:P6072 / wdt:P5137 ?q\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple joins, optional clause, and service call",
        "complexity": "complex"
    },
    {
        "id": "2271",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?itemDescription ?image ?collection ?creadorLabel WHERE {\n?item wdt:P31 wd:Q3305213 ;\nwdt:P195/wdt:P361* ?collection .\n?item wdt:P170 ?creador .\nFILTER ( ?collection = wd:Q1138147)\nOPTIONAL { ?item wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"es,en\" }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and filter",
        "complexity": "medium"
    },
    {
        "id": "2272",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?num ?itemDescription WHERE {\nVALUES ?occ {wd:Q639669}\n?item wdt:P31 wd:Q5 ;\nwdt:P21 wd:Q6581072 ;\n(wdt:P106/(wdt:P279*)) ?occ;\nwdt:P106 ?occupation .\n?item wikibase:sitelinks ?num.\n?item wdt:P27 ?nacionalidad .\n?nacionalidad wdt:P17 ?country .\n?country (wdt:P361/(wdt:P361*)) wd:Q12585 .\nFILTER(?num >= 1)\nMINUS {\n?art schema:about ?item.\n?art schema:isPartOf <https://es.wikipedia.org/>.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"es,en\". }\n}\nORDER BY DESC(?num)",
        "complexity_description": "Multiple filters, minus clause and service call",
        "complexity": "complex"
    },
    {
        "id": "2273",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?artist ?artistLabel {\n?i wdt:P2205|wdt:P2207 [] . ?i wdt:P175 ?artist.\nMINUS { ?artist wdt:P1902 [] }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, MINUS clause and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "2274",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?itemLabel ?item ?legendLabel ?date ?image WHERE {\n?item wdt:P31 wd:Q11344 ;\nwdt:P575 ?date .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"es,en\" } .\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "2275",
        "valid_gpt_response": true,
        "query": "SELECT ?painting ?paintingLabel ?pic WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?painting wdt:P31 wd:Q3305213;\nwdt:P180 wd:Q171497;\nwdt:P18 ?pic;\nwdt:P571 ?dob.\nFILTER((\"1800-01-01\"^^xsd:dateTime <= ?dob) && (?dob < \"1899-01-01\"^^xsd:dateTime))\n}",
        "complexity_description": "Multiple filters and service calls",
        "complexity": "medium"
    },
    {
        "id": "2276",
        "valid_gpt_response": true,
        "query": "select distinct ?itemLabel ?size ?percentage_online ?rgb where {\n?item wdt:P17 wd:Q213 .\n?item p:P1436 ?statement.\n?statement ps:P1436 ?size ;\npq:P585 ?date filter(year(?date)= 2021 )\nminus {?statement pq:P518 [] .}\noptional {?item p:P1436 [ps:P1436 ?size_online ; pq:P518 wd:Q106474029 ; pq:P585 ?date ] .}\nbind ((100 * ?size_online / ?size) as ?percentage_online)\nBIND(if\n(?percentage_online < 10, \"FF0000\",\nif (?percentage_online < 20, \"E21C00\",\nif (?percentage_online < 30,\"C63800\",\nif (?percentage_online < 40, \"AA5500\",\nif (?percentage_online < 50, \"8D7100\",\nif (?percentage_online < 60, \"718D00\",\nif (?percentage_online < 70, \"55AA00\",\nif (?percentage_online < 80, \"38C600\",\nif (?percentage_online < 90, \"1CE200\", \"00FF00\"))))))))) as ?rgb) .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,cs\". }\n}",
        "complexity_description": "Multiple filters, optional clause, and complex BIND expressions",
        "complexity": "complex"
    },
    {
        "id": "2277",
        "valid_gpt_response": true,
        "query": "SELECT ?event_date WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nBIND(wd:Q60749688 AS ?Montague_Street_Bridge).\n?Montague_Street_Bridge p:P793 ?event.\n?event ps:P793 wd:Q9687.\n?event pq:P585 ?event_date.\n}\nORDER BY ?event_date",
        "complexity_description": "Multiple triple patterns, service call and bind",
        "complexity": "medium"
    },
    {
        "id": "2278",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coords\nWHERE\n{\n{ ?item wdt:P31 wd:Q6558431 } UNION\n{ ?item wdt:P31 wd:Q53951823 }\n?item wdt:P17 wd:Q183 .\nOPTIONAL { ?item wdt:P625 ?coords }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple UNION patterns, OPTIONAL clause and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "2279",
        "valid_gpt_response": true,
        "query": "SELECT ?occ ?occLabel ?avgAge ?avgBirthYear ?count\nWHERE\n{\n{\n# Group the people by their occupation and calculate age\nSELECT\n?occ\n(count(?p) as ?count)\n(round(avg(?birthYear)) as ?avgBirthYear)\n(avg(?deathYear - ?birthYear) as ?avgAge)\nWHERE {\n{\n# Get people with occupation + birth/death dates; combine multiple birth/death dates using avg\nSELECT\n?p\n?occ\n(avg(year(?birth)) as ?birthYear)\n(avg(year(?death)) as ?deathYear)\nWHERE {\n?p wdt:P31 wd:Q5 ;\nwdt:P106 ?occ ;\np:P569/psv:P569 [\nwikibase:timePrecision \"9\"^^xsd:integer ; # precision of at least year\nwikibase:timeValue ?birth ;\n] ;\np:P570/psv:P570 [\nwikibase:timePrecision \"9\"^^xsd:integer ; # precision of at least year\nwikibase:timeValue ?death ;\n] .\n}\nGROUP BY ?p ?occ\n}\n}\nGROUP BY ?occ\nLIMIT 200\n}\nFILTER (?count > 300) # arbitrary number to weed out values with 'few' observations\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" . }\n}\nORDER BY ASC(?avgAge)",
        "complexity_description": "Multiple nested queries, subqueries, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "2280",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?somePositionLabel ?died ?kind WITH {\nSELECT ?item (MAX(?died_) AS ?died) (SAMPLE(?kind_) AS ?kind) (SAMPLE(?position) AS ?somePosition) {\nhint:SubQuery hint:optimizer \"None\".\n# death in battle or killed in action\n{ ?item wdt:P1196 wd:Q18663901. BIND(\"death in battle\"@en AS ?kind_) } UNION\n{ ?item wdt:P509|wdt:P1347 wd:Q210392. BIND(\"killed in action\"@en AS ?kind_) }\n# suitable item\n?item wdt:P31 wd:Q5;\nwdt:P570 ?died_.\n# head of state or government\n{\nVALUES ?class { wd:Q2285706 wd:Q48352 }\n?item wdt:P39 ?position.\n?position wdt:P279* ?class.\n} UNION {\n?state wdt:P6 ?item.\nOPTIONAL { ?state wdt:P1313 ?position_. }\nBIND(COALESCE(?position_, wd:Q2285706) AS ?position)\n} UNION {\n?state wdt:P35 ?item.\nOPTIONAL { ?state wdt:P1906 ?position_. }\nBIND(COALESCE(?position_, wd:Q48352) AS ?position)\n}\n}\nGROUP BY ?item ?died_\n} AS %results WHERE {\nINCLUDE %results.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?died)\nLIMIT 100",
        "complexity_description": "Multiple unions, subqueries, and complex filtering",
        "complexity": "complex"
    },
    {
        "id": "2281",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?country ?pic ?cityLabel WHERE {\n?item wdt:P31 wd:Q55488;\nwdt:P17 wd:Q142;\nwdt:P18 ?pic;\nwdt:P131 ?city;\nwdt:P1103 ?nbVoies .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY desc(?nbVoies)",
        "complexity_description": "Multiple filters, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "2282",
        "valid_gpt_response": true,
        "query": "SELECT ?parent ?parentLabel ?virus ?virusLabel ?ncbi WHERE {\n?virus wdt:P171+ wd:Q57751738 .\n?virus wdt:P171 ?parent .\nOPTIONAL { ?virus wdt:P685 ?ncbi }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "2283",
        "valid_gpt_response": true,
        "query": "select ?label ?layer ?x ?coords {\n?x wdt:P31 wd:Q811534 ; wdt:P625 ?coords ; wdt:P31 ?species ; wdt:P17 wd:Q219 .\n?species wdt:P31 wd:Q16521 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"bg\".\n?x rdfs:label ?label .\n?species rdfs:label ?layer .\n}\n}",
        "complexity_description": "Multiple joins, service call and language filter",
        "complexity": "medium"
    },
    {
        "id": "2284",
        "valid_gpt_response": true,
        "query": "select *\nwith {\nselect ?lang (count(*) as ?meaningless) {\n?l dct:language ?lang;\nwikibase:statements \"0\"^^xsd:integer.\nminus { ?l ontolex:sense [] }\n} group by ?lang\n} as %meaningless\nwith {\nselect ?lang (count(*) as ?total) {\n?l dct:language ?lang.\n} group by ?lang\n} as %totals\nwhere {\ninclude %meaningless.\ninclude %totals.\nfilter (?total >= 10).\nbind(?meaningless/?total*100 as ?pc).\n?lang rdfs:label ?en filter(lang(?en) = \"en\").\n} order by desc(?pc) desc(?total) ?en",
        "complexity_description": "Multiple subqueries, grouping, filtering and binding",
        "complexity": "complex"
    },
    {
        "id": "2285",
        "valid_gpt_response": true,
        "query": "SELECT (count(?album) as ?albums) ?P407Label ?P407 WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?album wdt:P31 wd:Q482994.\nOPTIONAL { ?album wdt:P407 ?P407. }\n}\nGROUP BY ?P407 ?P407Label\nORDER BY DESC(?albums) ASC(?P407)\n#Do you know how to improve this query; make it smarter, better, more elegant?\n#If you do, please don't hesitate to drop us a line at User_talk:Moebeus",
        "complexity_description": "Multiple patterns with OPTIONAL clause and aggregation",
        "complexity": "medium"
    },
    {
        "id": "2286",
        "valid_gpt_response": true,
        "query": "select ?item ?itemLabel ?coords ?elseLabel (?elseLabel as ?layer)\nwith { select ?item ?else ?coords where {\n?item wdt:P131 ?else .\n?else wdt:P31 wd:Q15060255 .\n?item wdt:P625 ?coords .\n} } as %i\nwhere\n{\ninclude %i\nfilter not exists { ?item wdt:P131 ?else2 . {?else2 wdt:P31 wd:Q15060255 .} UNION {?else2 wdt:P131* wd:Q21. hint:Prior hint:gearing \"forward\".} UNION {?else2 wdt:P131* wd:Q26. hint:Prior hint:gearing \"forward\".} filter(str(?else2) != str(?else)) }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?else rdfs:label ?elseLabel.\n?item rdfs:label ?itemLabel .}\n}\n#defaultView:Map",
        "complexity_description": "Multiple subqueries, UNION operators, and SERVICE calls",
        "complexity": "complex"
    },
    {
        "id": "2287",
        "valid_gpt_response": true,
        "query": "SELECT ?service ?serviceLabel ?property ?propertyLabel ?endpoint (COUNT(?id) AS ?ids_count) {\n?service wdt:P5305 ?endpoint ;\nwdt:P1687 ?property .\n?property wikibase:directClaim ?prop .\n?entity ?prop ?id .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?service ?serviceLabel ?property ?propertyLabel ?endpoint\nORDER BY DESC(?ids_count)",
        "complexity_description": "Multiple joins, subqueries and grouping",
        "complexity": "complex"
    },
    {
        "id": "2288",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?fecha ?age ?itemDescription ?nacimiento\n(GROUP_CONCAT(DISTINCT ?nacionalidad_label; SEPARATOR = \", \") AS ?nacionalidades)\nWHERE {\n?item wdt:P570 ?fecha.\nFILTER((?fecha >= \"2020-01-01T00:00:00Z\"^^xsd:dateTime) && (?fecha <= \"2020-12-31T00:00:00Z\"^^xsd:dateTime))\n?item wdt:P31 wd:Q5;\nwdt:P106 wd:Q33999.\nOPTIONAL {\n?item wdt:P569 ?nacimiento.\nBIND((2020 - (YEAR(?nacimiento))) + 1 AS ?age)\n}\nOPTIONAL {\n?item wdt:P27 ?nacionalidad.\n?nacionalidad rdfs:label ?nacionalidad_label.\nFILTER((LANG(?nacionalidad_label)) = \"es\")\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"es,en,fr\". }\n}\nGROUP BY ?item ?itemLabel ?fecha ?age ?itemDescription ?nacimiento",
        "complexity_description": "Multiple filters, optional patterns, and group concat",
        "complexity": "complex"
    },
    {
        "id": "2289",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?itemDescription ?siegeLabel ?secteurLabel ?search WHERE {\n?item (wdt:P31/(wdt:P279*)) wd:Q6881511;\nwdt:P17 wd:Q142;\nrdfs:label ?itemLabel;\nwikibase:sitelinks ?sitelinks.\nFILTER((LANG(?itemLabel)) = \"fr\")\nOPTIONAL { ?item wdt:P159 ?siege. }\nOPTIONAL { ?item wdt:P452 ?secteur. }\nMINUS { ?item wdt:P576 _:b10. }\nMINUS { ?item wdt:P1616 _:b11. }\nBIND(URI(CONCAT(\" https://annuaire-entreprises.data.gouv.fr/rechercher?terme=\", ENCODE_FOR_URI(?itemLabel))) AS ?search)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\". }\n}\nORDER BY DESC (?sitelinks)",
        "complexity_description": "Multiple filters, optional patterns, and minus clauses",
        "complexity": "complex"
    },
    {
        "id": "2290",
        "valid_gpt_response": true,
        "query": "SELECT ?year ?number_of_works ?author_label WHERE {\n{\nSELECT ?year ?number_of_works ?author ?author_label_\nWHERE {\n{\nSELECT ?author ?year (COUNT(DISTINCT ?work) AS ?number_of_works) WHERE {\nhint:Query hint:optimizer \"None\".\n?author (wdt:P184 | ^wdt:P185)+ wd:Q20984804 .\n?work wdt:P50 ?author .\n?work wdt:P577 ?publication_date .\nBIND(STR(YEAR(?publication_date)) AS ?year)\n}\nGROUP BY ?author ?year\n}\n?author rdfs:label ?author_label_ .\nFILTER (LANG(?author_label_) = 'en')\n}\n}\n# Represent the author by name and Q identifier\nBIND (CONCAT(?author_label_, \" (\", SUBSTR(STR(?author), 32), \")\") AS ?author_label)\n}\nORDER BY ?year",
        "complexity_description": "Multiple nested queries, grouping, aggregation, and filtering",
        "complexity": "complex"
    },
    {
        "id": "2291",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?genderLabel ?linkcount WHERE {\n?item wdt:P31 wd:Q5;\nwdt:P21 ?gender;\nwdt:P27 wd:Q1033;\nwikibase:sitelinks ?linkcount.\nFILTER(?linkcount > 0 )\nOPTIONAL { ?item wdt:P734 ?lastname. }\nOPTIONAL { ?item wdt:P569 ?birthdate. }\nOPTIONAL { ?item wdt:P570 ?deathdate. }\nOPTIONAL { ?item wdt:P27 ?nationality. }\nOPTIONAL { ?item wdt:P106 ?occupation. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\".\n?item rdfs:label ?itemLabel.\n?gender rdfs:label ?genderLabel.\n}\n}\nORDER BY (?itemLabel)",
        "complexity_description": "Multiple filters, optional patterns and service calls",
        "complexity": "complex"
    },
    {
        "id": "2292",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?mayorImage ?mayor ?mayorLabel ?city ?cityLabel ?population\n{\n?city (wdt:P31/(wdt:P279*)) wd:Q515;\np:P6 ?statement.\n?statement ps:P6 ?mayor.\n?mayor wdt:P21 wd:Q6581072.\nFILTER(NOT EXISTS { ?statement pq:P582 ?x. })\n?mayor wdt:P18 ?mayorImage.\n?city wdt:P1082 ?population.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC (?population)\nLIMIT 30",
        "complexity_description": "Multiple triple patterns, filter, and service query",
        "complexity": "complex"
    },
    {
        "id": "2293",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coordinate WHERE {\nwd:Q93286 wdt:P625 ?Center.\n?item wdt:P31 wd:Q921099 . # ist ein Steinkreuz\nSERVICE wikibase:around {\n?item wdt:P625 ?coordinate.\nbd:serviceParam wikibase:center ?Center.\nbd:serviceParam wikibase:radius \"25\". # 25 Kilometer around\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"hsb,de,[AUTO_LANGUAGE]\". }\n#FILTER(EXISTS { ?place (wdt:P31/wdt:P279*) wd:Q1248784. })\n}",
        "complexity_description": "Multiple services and filters used",
        "complexity": "medium"
    },
    {
        "id": "2294",
        "valid_gpt_response": true,
        "query": "SELECT ?type ?typeLabel (COUNT(*) AS ?count) (SAMPLE(?link) AS ?link)\n{\n{\nSELECT *\n{\n#hint:Query hint:optimizer \"None\".\n?item wikibase:identifiers 0 .\n?item wdt:P17 wd:Q408 .\n?item wdt:P31 ?type .\n#MINUS {?type wdt:P279 wd:Q17442446 .} I can't get this to work in time\n}\nLIMIT 200000\n}\nBIND (URI(CONCAT(\"https://query.wikidata.org/#SELECT%20%3Fitem%20%3FitemLabel%0A%20%7B%0A%20%20%20%20%3Fitem%20wikibase%3Aidentifiers%200%20.%0A%20%20%20%20%3Fitem%20wdt%3AP17%20wd%3AQ408%20.%0A%20%20%20%20%3Fitem%20wdt%3AP31%20wd%3A\",SUBSTR(str(?type),32, 250),\"%20.%0A%20%20%20%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22%5BAUTO_LANGUAGE%5D%2Cen%22.%20%7D%0A%20%7D%0A\")) as ?link)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?type ?typeLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, BIND function, and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "2295",
        "valid_gpt_response": true,
        "query": "SELECT (count(DISTINCT ?species ) as ?count) ?status ?statusLabel{\nVALUES ?status {wd:Q11394 wd:Q219127 wd:Q237350 wd:Q239509 wd:Q278113 wd:Q719675}\n?species wdt:P141 ?status.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP by ?status ?statusLabel",
        "complexity_description": "Uses VALUES, SERVICE and GROUP BY clauses",
        "complexity": "medium"
    },
    {
        "id": "2296",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?lang ?tongue WHERE {\nhint:Query hint:optimizer \"None\".\n?tongueitem wdt:P424 ?lang .\n?tongueitem wdt:P279*/wdt:P31 wd:Q34770 .\nwd:Q52 rdfs:label ?pedia .\nFILTER(LANG(?pedia)=?lang)\nOPTIONAL{wd:Q2013 rdfs:label ?data .\nFILTER(LANG(?data)=?lang)}\nOPTIONAL{wd:Q35120 rdfs:label ?entity .\nFILTER(LANG(?entity)=?lang)}\nOPTIONAL{wd:Q34770 rdfs:label ?language .\nFILTER(LANG(?language)=?lang)}\nOPTIONAL{wd:Q565 rdfs:label ?commons .\nFILTER(LANG(?commons)=?lang)}\nOPTIONAL{wd:Q367 rdfs:label ?books .\nFILTER(LANG(?books)=?lang)}\nOPTIONAL{wd:Q964 rdfs:label ?news .\nFILTER(LANG(?news)=?lang)}\nOPTIONAL{wd:Q369 rdfs:label ?quote .\nFILTER(LANG(?quote)=?lang)}\nOPTIONAL{wd:Q263 rdfs:label ?source .\nFILTER(LANG(?source)=?lang)}\nOPTIONAL{wd:Q370 rdfs:label ?versity .\nFILTER(LANG(?versity)=?lang)}\nOPTIONAL{wd:Q373 rdfs:label ?voyage .\nFILTER(LANG(?voyage)=?lang)}\nOPTIONAL{wd:Q151 rdfs:label ?tionary .\nFILTER(LANG(?tionary)=?lang)}\nOPTIONAL{wd:Q13679 rdfs:label ?species .\nFILTER(LANG(?species)=?lang)}\n?tongueitem rdfs:label ?tongue .\nFILTER(LANG(?tongue)=?lang)\n}",
        "complexity_description": "Multiple optional patterns with filters and language checks",
        "complexity": "complex"
    },
    {
        "id": "2297",
        "valid_gpt_response": true,
        "query": "select distinct ?item ?parentLabel ?itemLabel ?womenLabel ?women\nwhere {\n?item wdt:P31 wd:Q16521 . # Any instance of a taxon.\n?item wdt:P105 wd:Q34740 . # Taxon rank is genus.\n?item wdt:P171 ?parent .\n?item wdt:P138 ?women . # Named after\n?women wdt:P21 wd:Q6581072 . # Female\n{ ?women wdt:P106/wdt:P279* wd:Q2374149 } UNION #botanist\n{ ?women wdt:P106/wdt:P279* wd:Q2083925 } UNION #botanical collector\n{ ?women wdt:P106/wdt:P279* wd:Q3148760 } . #botanical illustrator\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nORDER BY DESC(?itemLabel)",
        "complexity_description": "Multiple filters, unions and joins with services",
        "complexity": "complex"
    },
    {
        "id": "2298",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\n?personA wdt:P106 wd:Q49757.\n?personB wdt:P106 wd:Q40348.\n?personA wdt:P22 ?personB.\n}",
        "complexity_description": "Three simple triple patterns",
        "complexity": "simple"
    },
    {
        "id": "2299",
        "valid_gpt_response": true,
        "query": "SELECT ?lang1 ?desc ?lang2 WHERE {\n?item wdt:P279 wd:Q2095.\n?item rdfs:label ?lang1 FILTER(lang(?lang1) = \"en\").\n?item schema:description ?desc FILTER(lang(?desc) = \"en\").\n?item rdfs:label ?lang2 FILTER(lang(?lang2) = \"ca\")\n} ORDER BY ?lang1",
        "complexity_description": "Multiple filters and language constraints",
        "complexity": "medium"
    },
    {
        "id": "2300",
        "valid_gpt_response": true,
        "query": "SELECT ?l ?lemma WHERE {\n?l dct:language wd:Q9035;\nwikibase:lemma ?lemma;\nwikibase:lexicalCategory wd:Q184511.\n}",
        "complexity_description": "Three simple triple patterns",
        "complexity": "simple"
    },
    {
        "id": "2301",
        "valid_gpt_response": true,
        "query": "SELECT\n?count ?layer\n?organization ?organizationLabel\n?example_author ?example_authorLabel\n?example_work ?example_workLabel\n?geo\nWITH {\nSELECT\n(COUNT(*) AS ?count)\n?organization\n(SAMPLE(?author) AS ?example_author)\n(SAMPLE(?work) AS ?example_work)\n{\n?taxon wdt:P171+ wd:Q1134583 .\n?work wdt:P921 ?taxon ;\nwdt:P577 ?date ;\nwdt:P50 ?author .\n?author (wdt:P108 | wdt:P1416) ?organization .\nFILTER(YEAR(?date) < 2020)\n}\nGROUP BY ?organization\nLIMIT 100\n} AS %result\nWHERE {\nINCLUDE %result\n?organization wdt:P159? / wdt:P625 ?geo\nBIND(IF(?count > 10, IF(?count >100, \">100\", \">10\"), \"<=10\") AS ?layer)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple subqueries, filters, and grouping",
        "complexity": "complex"
    },
    {
        "id": "2302",
        "valid_gpt_response": true,
        "query": "select ?paper ?title {\n?paper wdt:P31 wd:Q13442814; # is an academic article\nwdt:P921 wd:Q84263196; # with the main subject COVID-19\nwdt:P1476 ?title filter contains(lcase(?title), \"wikipedia\").\n} order by ?title",
        "complexity_description": "Three triple patterns, one filter",
        "complexity": "medium"
    },
    {
        "id": "2303",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?term ?termLabel ?start ?end ?members ?father_was_mp ?mother_was_mp where\n{\n{ SELECT distinct ?term ?start ?end where\n{ ?term wdt:P279 wd:Q16707842 . ?term wdt:P571 ?start; wdt:P576 ?end .\nfilter(year(?start) >= 1900 ) } }\noptional { SELECT ?term (count(distinct ?item) as ?members) where\n{ ?item p:P39 [ ps:P39 ?term; pq:P768 ?const] . ?term wdt:P279 wd:Q16707842 . } group by ?term }\noptional { SELECT ?term (count(distinct ?item) as ?father_was_mp) where\n{ ?item p:P39/ps:P39 ?term . ?term wdt:P279 wd:Q16707842 .\n?item wdt:P22/p:P39/ps:P39 ?term2 .\n{ ?term2 wdt:P279* wd:Q16707842 } union { ?term2 wdt:P279* wd:Q18015642 }\n} group by ?term }\noptional { SELECT ?term (count(distinct ?item) as ?mother_was_mp) where\n{ ?item p:P39/ps:P39 ?term . ?term wdt:P279 wd:Q16707842 .\n?item wdt:P25/p:P39/ps:P39 ?term2 .\n{ ?term2 wdt:P279* wd:Q16707842 } union { ?term2 wdt:P279* wd:Q18015642 }\n} group by ?term }\nSERVICE wikibase:label { bd:serviceParam wikibase:language 'en' }\n} order by ?start",
        "complexity_description": "Multiple subqueries, optional patterns, and complex filters",
        "complexity": "complex"
    },
    {
        "id": "2304",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?height\nWHERE\n{\n?person wdt:P31 wd:Q5 ;\n# wdt:P39 wd:Q10655178 ; #riksdagsledamot\nwdt:P106 wd:Q82955 ; #politiker\nwdt:P21 wd:Q6581072 ; #kvinna\n# wdt:P27 wd:Q34 ; #svensk\np:P2048/psn:P2048/wikibase:quantityAmount ?height .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} ORDER BY DESC(?height)\nLIMIT 100",
        "complexity_description": "Multiple filters, joins and sorting",
        "complexity": "medium"
    },
    {
        "id": "2305",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?aksara ?aksaraLabel ?tgl ?tahun (sample(?ga) as ?gam) WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"id,en\". }\n?aksara wdt:P31/wdt:P279* wd:Q8192.\nMINUS { ?aksara wdt:P31/wdt:P279* wd:Q17451.} #bukan rupa huruf\nMINUS { ?aksara wdt:P31 wd:Q53764738.}\nMINUS { ?aksara wdt:P31 wd:Q16744570.}\nMINUS { ?aksara wdt:P31 wd:Q29575627.}\nMINUS { ?aksara wdt:P31/wdt:P279* wd:Q12681.}\nOPTIONAL { ?aksara wdt:P571 ?tgl. }\nOPTIONAL { ?aksara wdt:P18 ?ga. }\nBIND ( year(?tgl) AS ?th ).\nBIND ( xsd:integer(?th) - IF(?th<0,IF(STRENDS(STR(?th),\"9\"),1,0),0) AS ?th2). #kurangi satu tahun jika tahun SM karena tampilan tahun SM default bertambah 1\nBIND ( IF(?th2<0,CONCAT(STR(?th2 * -1),\" SM\"),?th2) AS ?tahun).\n}\nGROUP BY ?aksara ?aksaraLabel ?tgl ?tahun\n#defaultView:Timeline\n#view:Timeline{\"hide\": \"?tgl\"}",
        "complexity_description": "Multiple MINUS clauses, OPTIONAL patterns, and complex BIND expressions",
        "complexity": "complex"
    },
    {
        "id": "2306",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?itemDescription (SAMPLE(?img) as ?image)\n{\n?item wdt:P9566 wd:Q101029366 .\nOPTIONAL { ?item wdt:P18 ?img }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?item ?itemLabel ?itemDescription\nLIMIT 100",
        "complexity_description": "Optional clause, service call and group by",
        "complexity": "medium"
    },
    {
        "id": "2307",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?prijmeni ?prijmeniLabel (count(distinct(?item)) as ?pocet) WITH {\nSELECT ?prijmeni ?prijmenilabel where {\n?prijmeni wdt:P5323 wd:Q81945591 .\n?prijmeni wdt:P31 wd:Q101352 .\n?prijmeni rdfs:label ?prijmenilabel filter(lang(?prijmenilabel)=\"cs\") .\n}\n} AS %prijmeni WITH {\nSELECT ?prijmeni ?prijmenilabel ?ptaklabel WHERE {\n?ptak wdt:P31 wd:Q16521 .\n?ptak wdt:P105 wd:Q34740 .\n?ptak wdt:P171* wd:Q5113 .\n?ptak rdfs:label ?ptaklabel filter(lang(?ptaklabel)=\"cs\" && substr(str(?ptaklabel),1,1) = substr(lcase(str(?ptaklabel)),1,1) ).\n}\n}\nAS %ptaci WITH {\nSELECT ?prijmeni ?prijmenilabel WHERE {\nINCLUDE %prijmeni .\nINCLUDE %ptaci .\nfilter(str(?ptaklabel) = str(lcase(?prijmenilabel))) .\n}\n} AS %ptaciprijmeni WHERE {\nINCLUDE %ptaciprijmeni .\n?item wdt:P734 ?prijmeni .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"cs,en\". }\n} group by ?prijmeni ?prijmeniLabel",
        "complexity_description": "Multiple subqueries, filters, and joins",
        "complexity": "complex"
    },
    {
        "id": "2308",
        "valid_gpt_response": true,
        "query": "SELECT ?property ?propertyLabel ?uses ?example_preprint ?example_preprint_title ?example_article ?example_article_title\nWITH {\nSELECT ?directProperty (COUNT(?preprint) as ?uses) (SAMPLE(?preprint) as ?example_preprint) (SAMPLE(?article) as ?example_article) WHERE {\n?preprint wdt:P31 wd:Q580922 .\n?article wdt:P31 wd:Q13442814 .\n?preprint ?directProperty ?article .\nFILTER(STRSTARTS(STR(?directProperty), STR(wdt:)))\n} GROUP BY ?directProperty\n} AS %properties\nWHERE {\nINCLUDE %properties .\n?property wikibase:directClaim ?directProperty .\n?example_preprint wdt:P1476 ?example_preprint_title .\n?example_article wdt:P1476 ?example_article_title .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n} ORDER BY desc(?uses)",
        "complexity_description": "Multiple subqueries, filters, and services",
        "complexity": "complex"
    },
    {
        "id": "2309",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?parliament ?parliamentLabel ?start ?end ?members ?distinct_terms\n(?distinct_terms - ?with_constituencies as ?missing_constituencies)\n(?distinct_terms - ?with_parties as ?missing_parties) where\n{\n{ SELECT distinct ?parliament ?start ?end where\n{ ?parliament wdt:P279 wd:Q16707842 . optional { ?parliament wdt:P571 ?start } optional { ?parliament wdt:P576 ?end } } }\noptional { SELECT ?parliament (count(distinct ?item) as ?members) (count(distinct ?ps) as ?distinct_terms) where\n{ ?item p:P39 ?ps . ?ps ps:P39 ?parliament . ?parliament wdt:P279 wd:Q16707842 . } group by ?parliament }\noptional { SELECT ?parliament (count(distinct ?ps) as ?with_constituencies) where\n{ ?item p:P39 ?ps . ?ps ps:P39 ?parliament . ?parliament wdt:P279 wd:Q16707842 . ?ps pq:P768 ?const } group by ?parliament }\noptional { SELECT ?parliament (count(distinct ?ps) as ?with_parties) where\n{ ?item p:P39 ?ps . ?ps ps:P39 ?parliament . ?parliament wdt:P279 wd:Q16707842 . ?ps pq:P4100 ?party } group by ?parliament }\nSERVICE wikibase:label { bd:serviceParam wikibase:language 'en' }\n} order by ?start",
        "complexity_description": "Multiple subqueries, optional patterns, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "2310",
        "valid_gpt_response": true,
        "query": "SELECT ?property ?propertyLabel ?predicate ?value ?valueLabel WHERE {\n?property ?predicate ?value .\n?property wikibase:directClaim ?predicate .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "2311",
        "valid_gpt_response": true,
        "query": "SELECT ?year ?label (SUM(?count) AS ?total) WITH {\nSELECT ?name ?date (COUNT(DISTINCT ?human) AS ?count) WHERE {\n?human wdt:P31 wd:Q5;\nwdt:P27 wd:Q183;\nwdt:P569 ?date;\nwdt:P735 ?name.\nMINUS { ?human wdt:P570 ?died. }\n}\nGROUP BY ?name ?date\n} AS %humans WHERE {\nINCLUDE %humans.\n?name wdt:P1705 ?label.\nBIND(YEAR(?date) AS ?year)\n}\nGROUP BY ?year ?label",
        "complexity_description": "Multiple subqueries, grouping and aggregation",
        "complexity": "complex"
    },
    {
        "id": "2312",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?nat ?natLabel ?pob ?pobLabel ?coor\n{\nhint:Query hint:optimizer \"None\".\n?item wdt:P19 / wdt:P17 wd:Q142 .\nMINUS { ?item wdt:P27 wd:Q142 } .\n?item wdt:P27 ?nat .\n?item wdt:P19 ?pob .\n?pob wdt:P17 wd:Q142 . OPTIONAL { ?pob wdt:P625 ?coor }\n?item wdt:P31 wd:Q5 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr,en\". }\n}",
        "complexity_description": "Multiple joins, minus clause and optional pattern",
        "complexity": "complex"
    },
    {
        "id": "2313",
        "valid_gpt_response": true,
        "query": "SELECT ?placeLabel ?placeDescription ?image ?coord WHERE {\nwd:Q64 wdt:P625 ?berlinLoc .\nSERVICE wikibase:around {\n?place wdt:P625 ?location .\nbd:serviceParam wikibase:center ?berlinLoc .\nbd:serviceParam wikibase:radius \"10\" .\n} .\nFILTER EXISTS { ?place wdt:P31/wdt:P279* wd:Q23397 }\nOPTIONAL { ?place wdt:P18 ?image.}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .\n}\n}",
        "complexity_description": "Multiple services, filters and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "2314",
        "valid_gpt_response": true,
        "query": "SELECT ?node (REPLACE(STR(?node), \".*Q\", \"Q\") AS ?qid) ?nodeLabel ?nodeDescription ?BathId ?Hav ?adminLabel\n(SAMPLE(?coord) AS ?coord) ?plats ?platsLabel ?NatReg ?Nat ?shape WHERE {\n?node wdt:P6104 wd:Q106774536.\nOPTIONAL {?node wdt:P9616 ?BathId}\n{?node wdt:P3018 ?plats.\n?plats wdt:P3613 ?NatReg}\n?node wdt:P625 ?coord.\n?plats wdt:P3896 ?shape\nBIND (URI(CONCAT(\"https://badplatsen.havochvatten.se/badplatsen/api/detail/\",?BathId)) AS ?HavsAPI)\nBIND(URI(CONCAT(\"https://badplatsen.havochvatten.se/badplatsen/karta/#/bath/\",?BathId)) AS ?Hav)\nBIND(URI(CONCAT(\"http://skyddadnatur.naturvardsverket.se/sknat/?nvrid=\",?NatReg)) AS ?Nat)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,sv\". }\n} Group By\n?node ?nodeLabel ?nodeDescription ?BathId ?adminLabel ?HavsAPI ?Hav ?NatReg ?plats ?platsLabel ?Nat ?shape\norder by ?platsLabel",
        "complexity_description": "Multiple joins, optional patterns, and bindings",
        "complexity": "complex"
    },
    {
        "id": "2315",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?a ?coord ?authorityLabel ?official ?language WHERE {\n{ ?a p:P1448/prov:wasDerivedFrom/pr:P248 wd:Q107011559 }\n?a wdt:P625 ?coord .\n?a wdt:P1448 ?official .\nBIND( LANG(?official) AS ?language).\nOPTIONAL { ?a wdt:P131 ?authority .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"cy\". }\n}\nORDER BY ?aLabel",
        "complexity_description": "Multiple triple patterns, OPTIONAL clause, SERVICE keyword and BIND function",
        "complexity": "complex"
    },
    {
        "id": "2316",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?year WHERE {\n?item wdt:P57 wd:Q229990;\nwdt:P577 ?date.\nBIND(YEAR(?date) AS ?year)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"es,en,fr\". }\n}\nORDER BY (?year)",
        "complexity_description": "Uses SERVICE clause and BIND function",
        "complexity": "medium"
    },
    {
        "id": "2317",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?rec ?recLabel {\n?item (wdt:P31/(wdt:P279*)) wd:Q3918;\np:P1075 ?prop.\n?prop ps:P1075 ?rec .\n?rec wdt:P21 wd:Q6581072 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"es,en\". }\n}",
        "complexity_description": "Multiple triple patterns, property paths, and service call",
        "complexity": "complex"
    },
    {
        "id": "2318",
        "valid_gpt_response": true,
        "query": "SELECT ?public_bookcaseLabel ?coordinate_location ?image WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?public_bookcase wdt:P31 wd:Q294297.\nOPTIONAL { ?public_bookcase wdt:P625 ?coordinate_location. }\nOPTIONAL { ?public_bookcase wdt:P18 ?image. }\n}",
        "complexity_description": "Multiple optional patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "2319",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?wgwID ?item ?itemLabel (GROUP_CONCAT(?inLang; SEPARATOR = \"; \") AS ?inWPLangVersions) WHERE {\n?item wdt:P31 wd:Q5;\nwdt:P7842 ?wgwID.\n?wikiPage schema:about ?item;\nschema:isPartOf ?wikiUrl;\nschema:inLanguage ?inLang;\nschema:name ?pageTitle.\nFILTER(CONTAINS(STR(?wikiUrl), \"wikipedia.org\"))\nMINUS { ?wikiPage schema:isPartOf <https://de.wikipedia.org/>. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?wgwID ?item ?itemLabel\nORDER BY (?itemLabel)",
        "complexity_description": "Multiple joins, filters, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "2320",
        "valid_gpt_response": true,
        "query": "SELECT ?language ?languageLabel ?statusLabel ?lexemes WITH {\nSELECT ?language ?status (COUNT(?lexeme) AS ?lexemes) WHERE {\nVALUES ?status {\nwd:Q20672087 # 2 vulnerable\nwd:Q20672088 # 3 definitely endangered\nwd:Q20672089 # 4 severely endangered\nwd:Q20672090 # 5 critically endangered\nwd:Q20672091 # 6 extinct\n}\n?language wdt:P1999 ?status.\nOPTIONAL { ?lexeme dct:language ?language. }\n}\nGROUP BY ?language ?status\n} AS %results WHERE {\nINCLUDE %results.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?lexemes) DESC(?statusLabel)",
        "complexity_description": "Multiple subqueries, optional patterns, and service calls",
        "complexity": "complex"
    },
    {
        "id": "2321",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel WHERE {\n?featuredArticle schema:about ?item.\n?featuredArticle schema:inLanguage \"en\".\n?featuredArticle wikibase:badge ?insignia.\n?item wdt:P31 wd:Q5 ;\nwdt:P21 wd:Q6581072 .\nVALUES (?insignia) {\n(wd:Q17437796)\n(wd:Q17437798)\n}\nOPTIONAL {\n?esp schema:about ?item.\n?esp schema:inLanguage \"es\".\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"es,en\". }\nFILTER(!BOUND(?esp))\n}\nORDER BY ?itemLabel",
        "complexity_description": "Multiple triple patterns, OPTIONAL clause, FILTER and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "2322",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?_image ?plaque_fr ?plaque_als WHERE {\n?item wdt:P912 wd:Q104123038;\nwdt:P131 wd:Q6602;\nwdt:P1766 ?_image;\nwdt:P1448 ?plaque_fr;\nwdt:P1448 ?plaque_als.\nfilter (lang(?plaque_fr) = \"fr\").\nfilter (lang(?plaque_als) = \"gsw-fr\")\n}",
        "complexity_description": "Multiple filters and predicates",
        "complexity": "medium"
    },
    {
        "id": "2323",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?type ?typeLabel (COUNT(DISTINCT ?item) AS ?count)\nWHERE\n{\n{?item wdt:P131 wd:Q25 }\nUNION { ?item wdt:P131 ?place . ?place wdt:P131* wd:Q25 }\n?item wdt:P912 ?loo .\n?loo wdt:P31 ?Q813966 .\n?item wdt:P31 ?type .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"cy\". }\n}\nGROUP BY ?type ?typeLabel\nORDER BY DESC(?count) ?typeLabel",
        "complexity_description": "Multiple UNION, SERVICE, and GROUP BY clauses",
        "complexity": "complex"
    },
    {
        "id": "2324",
        "valid_gpt_response": true,
        "query": "SELECT ?x ?xLabel ?start (GROUP_CONCAT(?occLabel ;separator=\"; \") as ?occupations) WITH {\nSELECT DISTINCT ?x (SAMPLE(?start) AS ?start) WHERE { # Using sample as ministers may have held the position multiple times but we're only interested in one\n?x wdt:P31 wd:Q5 .\n?x p:P39 ?node .\n?node ps:P39 ?position ;\npq:P580 ?start .\n?position wdt:P361 wd:Q112014 . # member of the UK Cabinet\n?position wdt:P279 wd:Q3273722 . # health minister\n} GROUP BY ?x } AS %health_ministers\nWHERE {\nINCLUDE %health_ministers\nOPTIONAL {?x wdt:P106 ?occ . ?occ rdfs:label ?occLabel. FILTER (LANG(?occLabel) = \"en\") }\nBIND(COALESCE(?occLabel, \"None\") AS ?occLabel )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?x ?xLabel ?start\nORDER BY DESC (?start)",
        "complexity_description": "Multiple subqueries, grouping, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "2325",
        "valid_gpt_response": true,
        "query": "SELECT ?property ?propertyLabel ?count WITH {\nSELECT ?property (count(?property) as ?count)\nWHERE\n{\n?item wdt:P31 wd:Q25379.\nhint:Prior hint:runFirst true.\n?item ?predicate [].\n?property wikibase:directClaim ?predicate .\n} group by ?property ?propertyLabel } as %i\nWHERE\n{\nINCLUDE %i\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "2326",
        "valid_gpt_response": true,
        "query": "SELECT ?Joan_Bataiatzailea ?Joan_BataiatzaileaLabel ?koordenatuak WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?Joan_Bataiatzailea wdt:P825 wd:Q40662.\n?Joan_Bataiatzailea wdt:P625 ?koordenatuak.\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "simple"
    },
    {
        "id": "2327",
        "valid_gpt_response": true,
        "query": "select ?i ?lemma ?langLabel ?sense1 ?sense2 ?gloss {\n?i dct:language ?lang ; wikibase:lemma ?lemma ; ontolex:sense ?sense1, ?sense2 .\n?gloss ^skos:definition ?sense1, ?sense2 .\nFILTER(STR(?sense1) < STR(?sense2))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, filter and service",
        "complexity": "medium"
    },
    {
        "id": "2328",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?p ?pLabel ?pImage ?m ?mLabel ?mImage\nWITH{SELECT DISTINCT ?m ?m_s ?m_e WHERE{\nINCLUDE %start_US . VALUES $MONARCH{wd:Q116 wd:Q12097 wd:Q16511993} VALUES $GB_UK {wd:Q145 wd:Q174193 wd:Q161885}\n?m wdt:P31 wd:Q5;p:P39 ?ph.?ph pq:P580 ?m_s{?ph ps:P39 wd:Q9134365}UNION{?ph ps:P39 $MONARCH; pq:P642 $GB_UK}\nOPTIONAL{?ph pq:P582 ?m_e}FILTER(?m_s >= ?start_US || ?m_e >= ?start_US)\nBIND(NOW() AS ?today)BIND(COALESCE(?m_e, ?today) as ?m_e)}}AS %monarchs\nWITH{SELECT ?start_US WHERE{?x wdt:P31 wd:Q5;p:P39 ?ph.?ph ps:P39 wd:Q11696;pq:P1545 ?number;pq:P580 ?start_US.\nFILTER(?number = \"1\")}}AS %start_US\nWHERE{INCLUDE %monarchs.\n?p wdt:P31 wd:Q5;p:P39 ?node.?node ps:P39 wd:Q11696;pq:P580 ?p_s;pq:P1545 ?number.OPTIONAL{?node pq:P582 ?p_e}\nBIND(NOW() AS ?today)BIND(COALESCE(?p_e, ?today) as ?p_e)FILTER( (?m_s >= ?p_s && ?m_s <= ?p_e)||(?m_e >= ?p_s && ?m_e <= ?p_e )||(?p_s >= ?m_s && ?p_s <= ?m_e)||(?p_e >= ?m_s && ?p_e <= ?m_e))\nOPTIONAL{?m wdt:P18 ?mImage}BIND(COALESCE(?mImage, <http://commons.wikimedia.org/wiki/Special:FilePath/IIH.png>) as ?mImage)\nOPTIONAL{?p wdt:P18 ?pImage}BIND(COALESCE(?pImage, <http://commons.wikimedia.org/wiki/Special:FilePath/IIH.png>) as ?pImage)\nSERVICE wikibase:label{bd:serviceParam wikibase:language \"en\".}\n}",
        "complexity_description": "Multiple subqueries, complex filtering and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "2329",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?object ?objectLabel ?image\nWHERE\n{\n?item wdt:P31/wdt:P279* wd:Q3305213 .\n?item wdt:P180 ?object .\n?object wdt:P279* wd:Q3305213 .\n?item wdt:P18 ?image .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Multiple joins, property paths and service call",
        "complexity": "medium"
    },
    {
        "id": "2330",
        "valid_gpt_response": true,
        "query": "SELECT ?property ?propertyLabel ?count WITH {\nSELECT ?property (count(?property) as ?count)\nWHERE\n{\n?item p:P175 ?stat .\nhint:Prior hint:runFirst true.\n?stat ?predicate [].\n?property wikibase:qualifier ?predicate .\n} group by ?property ?propertyLabel } as %i\nWHERE\n{\nINCLUDE %i\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "2331",
        "valid_gpt_response": true,
        "query": "SELECT ?animal ?scientific_names ?common_names ?statusLabel where\n{\n# hint:Prior hint:runLast true\n{\nSELECT DISTINCT ?animal (GROUP_CONCAT(distinct ?scientific_name; separator=\", \") as ?scientific_names) (GROUP_CONCAT(distinct ?common_name; separator=\", \") as ?common_names) WHERE\n{\n?animal wdt:P141 ?status;\nwdt:P225 ?scientific_name;\nwdt:P1843 ?common_name.\nfilter( ?status\nIN (\nwd:Q11394, #Endangered\nwd:Q219127, #critcally endangered\nwd:Q278113 #vulnurable\n)\n).\n# Only return common names in English\nFILTER(LANGMATCHES(LANG(?common_name), \"en\"))\n}\ngroup by ?animal\n}.\n?animal wdt:P141 ?status.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple subqueries, grouping and filtering",
        "complexity": "complex"
    },
    {
        "id": "2332",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?numLinks ?desc WHERE {\n?item wdt:P31 wd:Q5;\nwdt:P21 wd:Q6581072 ;\nwdt:P106/wdt:P279* wd:Q170790 .\n?item wikibase:sitelinks ?numLinks.\n?item schema:description ?desc .\n?item wdt:P569 ?birth.\n?item wdt:P27 ?nacionalidad .\n?nacionalidad wdt:P17 ?country .\n?country (wdt:P361/(wdt:P361*)) wd:Q12585 .\nFILTER((LANG(?desc)) = \"en\")\nFILTER(?numLinks >= 1)\nMINUS {\n?art schema:about ?item.\n?art schema:isPartOf <https://es.wikipedia.org/>.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?numLinks)",
        "complexity_description": "Multiple filters, minus clause and service call",
        "complexity": "complex"
    },
    {
        "id": "2333",
        "valid_gpt_response": true,
        "query": "SELECT ?gov ?govLabel ?religionLabel ?stateLabel\nWHERE\n{\n?office wdt:P279* wd:Q889821.\n?gov p:P39 ?instanceOf .\n?instanceOf ps:P39 ?office .\n?instanceOf pq:P580 ?startTime .\n?office wdt:P1001 ?state .\nminus { ?instanceOf pq:P582 ?endTime. }\noptional { ?gov wdt:P140 ?religion . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\norder by ?stateLabel",
        "complexity_description": "Multiple joins, optional clause, and minus filter",
        "complexity": "complex"
    },
    {
        "id": "2334",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription (SAMPLE(?dob) AS ?dob) (SAMPLE(?countryForSport) AS ?countryForSport)\nWHERE {\n# occupation association football player\n?item wdt:P106 wd:Q937857 .\n?item wdt:P569 ?dob .\nFILTER (DAY(?dob) = 1 && MONTH(?dob) = 1)\n# not dead\nMINUS { ?item wdt:P570 [] }\nOPTIONAL { ?item wdt:P1532 ?countryForSport }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\"}\n} GROUP BY ?item ?itemLabel ?itemDescription\nORDER BY DESC(?dob)",
        "complexity_description": "Multiple filters, optional clause, and group by",
        "complexity": "complex"
    },
    {
        "id": "2335",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coordinate ?bild WHERE {\nwd:Q107582 wdt:P625 ?Center.\nSERVICE wikibase:around {\n?item wdt:P625 ?coordinate.\nbd:serviceParam wikibase:center ?Center;\nwikibase:radius \"30\".\n}\nFILTER(EXISTS { ?item (wdt:P31/(wdt:P279*)) wd:Q33506. })\nOPTIONAL { ?item wdt:P18 ?bild. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"de,en,[AUTO_LANGUAGE]\". }\n}",
        "complexity_description": "Multiple services, filters and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "2336",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?place ?placeLabel (COUNT(DISTINCT ?item) AS ?count)\nWHERE\n{\n{?item wdt:P131 wd:Q25 }\nUNION { ?item wdt:P131 ?place . ?place wdt:P131* wd:Q25 }\n?item wdt:P912 ?loo .\n?loo wdt:P31 ?Q813966 .\n?item wdt:P31 ?type .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?place ?placeLabel\nORDER BY DESC(?count) ?placeLabel",
        "complexity_description": "Multiple UNION, SERVICE, and GROUP BY clauses",
        "complexity": "complex"
    },
    {
        "id": "2337",
        "valid_gpt_response": true,
        "query": "SELECT ?subclass ?subclassLabel ?class ?classLabel ?depth WHERE\n{\nSERVICE gas:service {\ngas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.BFS\" ; gas:in wd:Q732577 ; gas:linkType wdt:P279 ; gas:traversalDirection \"Reverse\"; gas:out ?subclass ; gas:out1 ?depth ; gas:out2 ?class .\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n} order by ?depth",
        "complexity_description": "Multiple services, traversal direction and ordering",
        "complexity": "complex"
    },
    {
        "id": "2338",
        "valid_gpt_response": true,
        "query": "SELECT ?place ?placeLabel ?location (GROUP_CONCAT(?typeLabel_;separator=\"; \") as ?typeLabel) WHERE {\nhint:Query hint:optimizer \"None\".\nVALUES ?island {wd:Q1552121}\n?island wdt:P5140 ?point .\nSERVICE wikibase:around {\n?place wdt:P625 ?location .\nbd:serviceParam wikibase:center ?point .\nbd:serviceParam wikibase:radius \"10\" .\n}\n?place p:P625/psv:P625/wikibase:geoLatitude ?lat .\n?place p:P625/psv:P625/wikibase:geoLongitude ?long .\n?island p:P1332/psv:P1332/wikibase:geoLatitude ?north .\n?island p:P1333/psv:P1333/wikibase:geoLatitude ?south .\n?island p:P1334/psv:P1334/wikibase:geoLongitude ?east .\n?island p:P1335/psv:P1335/wikibase:geoLongitude ?west .\nFILTER ( ?lat <= ?north )\nFILTER ( ?lat >= ?south )\nFILTER ( ?long <= ?east )\nFILTER ( ?long >= ?west )\nOPTIONAL { ?place wdt:P31 ?type . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" .\n?place rdfs:label ?placeLabel .\n?type rdfs:label ?typeLabel_ .}\n} group by ?place ?placeLabel ?location",
        "complexity_description": "Multiple filters, services, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "2339",
        "valid_gpt_response": true,
        "query": "SELECT ?id ?item ?itemLabel ?itemDescription ?img ?coord ?www ?adminLabel WHERE {\n?item wdt:P6104 wd:Q107186275.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en,sv,de\" .\n}\nOPTIONAL { ?item wdt:P18 ?img. }\nOPTIONAL { ?item wdt:P131 ?admin. }\nOPTIONAL { ?item wdt:P856 ?www. }\nOPTIONAL { ?item wdt:P625 ?coord. }\nOPTIONAL { ?item wdt:P217 ?id. }\n} order by ?adminLabel",
        "complexity_description": "Multiple optional patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "2340",
        "valid_gpt_response": true,
        "query": "SELECT ?Justice ?Case ?Rapporteur ?SOU ?Report ?Commission ?Role WHERE {\n?justice wdt:P39 wd:Q96336792.\n?commission p:P710 [ ps:P710 ?justice; pq:P3831 ?role ];\nwdt:P800 ?report.\n?report wdt:P1031 ?SOU.\n?case wdt:P1594 ?justice;\nwdt:P2860 ?report.\nOPTIONAL {\n?case p:P1594 ?statement.\n?statement ps:P1594 ?justice; pq:P3831 wd:Q96971913.\n}\nBIND ( IF ( BOUND (?statement) , 'yes', 'no' ) AS ?Rapporteur )\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en,sv\".\n?justice rdfs:label ?Justice.\n?case rdfs:label ?Case.\n?role rdfs:label ?Role.\n?commission rdfs:label ?Commission.\n?report rdfs:label ?Report.\n}\n}\nORDER BY ?justice ?report",
        "complexity_description": "Multiple joins, optional clause, and service call",
        "complexity": "complex"
    },
    {
        "id": "2341",
        "valid_gpt_response": true,
        "query": "SELECT ?org ?orgLabel ?url (SAMPLE(?coord) as ?coord) ?layer WHERE {\n?org wdt:P9732 ?url .\n?org wdt:P17 ?layer .\n?org wdt:P276?/wdt:P625 ?coord .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?org ?orgLabel ?layer ?url",
        "complexity_description": "Multiple triple patterns, SERVICE clause and GROUP BY",
        "complexity": "medium"
    },
    {
        "id": "2342",
        "valid_gpt_response": true,
        "query": "SELECT ?year ?unemployment {\nwd:Q34 p:P1198 ?p .\n?p pq:P585 ?year ;\nps:P1198 ?unemployment .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nORDER BY ?year",
        "complexity_description": "Multiple triple patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "2343",
        "valid_gpt_response": true,
        "query": "SELECT ?accident ?accidentLabel ?operatorLabel ?deaths ?survivors ?date WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?accident wdt:P31 wd:Q744913;\nwdt:P1120 ?deaths;\nwdt:P1561 ?survivors;\nwdt:P137 ?operator.\nFILTER(?deaths > 50 )\nFilter(?survivors = 1)\nOPTIONAL { ?accident wdt:P585 ?date. }\nOPTIONAL { ?accident wdt:P828 ?cause. }\nOPTIONAL { ?accident wdt:P276 ?Ort. }\n}\nORDER BY DESC (?date)",
        "complexity_description": "Multiple filters, optional patterns and ordering",
        "complexity": "complex"
    },
    {
        "id": "2344",
        "valid_gpt_response": true,
        "query": "SELECT ?city ?cityLabel ?mayor ?mayorLabel ?genderLabel\nWHERE\n{\n?city wdt:P31/wdt:P279* wd:Q7930989.\n?city wdt:P17 wd:Q30.\n?city wdt:P1082 ?pop.\n?city wdt:P6 ?mayor.\n?mayor wdt:P21 ?gender.\nFILTER ( ?pop > 100000 )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?city ?cityLabel ?mayor ?mayorLabel ?genderLabel",
        "complexity_description": "Multiple joins, filter and group by",
        "complexity": "complex"
    },
    {
        "id": "2345",
        "valid_gpt_response": true,
        "query": "SELECT ?pronoun ?pronounLabel (count(?person) as ?count)\n{\n?person wdt:P6553 ?pronoun;\nwdt:P31 wd:Q5.\n?pronoun wikibase:lemma ?pronounLabel.\n}\nGROUP by ?pronoun ?pronounLabel\nORDER by DESC(?count)",
        "complexity_description": "Multiple triple patterns, aggregation and grouping",
        "complexity": "medium"
    },
    {
        "id": "2346",
        "valid_gpt_response": true,
        "query": "SELECT ?p ?ct (COUNT(?i) as ?jumlah) WHERE {\nOPTIONAL { SERVICE wikibase:label { bd:serviceParam wikibase:language \"id\".\n?p rdfs:label ?namap.} }\n?i wdt:P31 wd:Q5;\nwdt:P570 ?dod.\nFILTER(YEAR(?dod)>2018)\n?i wdt:P509 ?p.\nBIND(YEAR(?dod) as ?t)\nBIND(CONCAT(?namap, \" \", STR(?t)) as ?ct)\n}\nGROUP BY ?p ?ct\n#defaultView:BubbleChart",
        "complexity_description": "Multiple filters, bindings, and group by",
        "complexity": "complex"
    },
    {
        "id": "2347",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel\nWHERE\n{\n?item wdt:P31 wd:Q484170 .\n?item wdt:P1448 ?name . FILTER(LANG(?name) = \"fr\")\nFILTER REGEX(str(?name), \"ville\") .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} LIMIT 10000",
        "complexity_description": "Multiple filters, regex and service call",
        "complexity": "medium"
    },
    {
        "id": "2348",
        "valid_gpt_response": true,
        "query": "select ?label (LANG(?label) as ?lang) (count(?i) as ?is) {\n?i wdt:P31/wdt:P279* wd:Q7302866; wdt:P1476 ?label .\n}\ngroup by ?label ?lang\nhaving(?is > 5)\norder by desc(?is) ?lang",
        "complexity_description": "Multiple variables, grouping, and aggregation",
        "complexity": "complex"
    },
    {
        "id": "2349",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coordinate ?bild WHERE {\nwd:Q1731 wdt:P625 ?Center. # Lage von Dresden\nSERVICE wikibase:around {\n?item wdt:P625 ?coordinate.\nbd:serviceParam wikibase:center ?Center.\nbd:serviceParam wikibase:radius \"70\". # 70 Kilometer around\n}\nFILTER(EXISTS { ?item (wdt:P31/wdt:P279*) wd:Q33506. }) # nur Museen\noptional { ?item wdt:P18 ?bild }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"de,en,[AUTO_LANGUAGE]\". }\n}",
        "complexity_description": "Multiple services, filters and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "2350",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?coord\n(SAMPLE(?type_label) as ?typeLabel)\nWHERE\n{\n?item wdt:P31/wdt:P279* wd:Q337567 .\n?item wdt:P7959/wdt:P31 wd:Q1857731 .\n?item wdt:P625 ?coord .\n{ ?item wdt:P31 ?type .\n?type rdfs:label ?type_label . #manual way of getting label\nFILTER (lang(?type_label) = \"cy\") #manual way of getting label\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"cy\". }\n}\ngroup by ?item ?itemLabel ?coord",
        "complexity_description": "Multiple triple patterns, subqueries, and filters",
        "complexity": "complex"
    },
    {
        "id": "2351",
        "valid_gpt_response": true,
        "query": "SELECT ?gender ?genderLabel (COUNT(*) AS ?count) WHERE {\nSERVICE wikibase:mwapi {\nbd:serviceParam wikibase:endpoint \"fr.wikipedia.org\";\nwikibase:api \"Generator\";\nmwapi:generator \"categorymembers\";\nmwapi:gcmtitle \"Categorie:Article de qualite\";\nmwapi:gcmprop \"title\".\n?item wikibase:apiOutputItem mwapi:item.\n?title wikibase:apiOutput mwapi:title .\n?namespace wikibase:apiOutput \"@ns\" .\n}\nFILTER (?namespace = \"0\")\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?item wdt:P31 wd:Q5;\nwdt:P21 ?gender.\n}\nGROUP BY ?gender ?genderLabel",
        "complexity_description": "Multiple services, filters and group by",
        "complexity": "complex"
    },
    {
        "id": "2352",
        "valid_gpt_response": true,
        "query": "SELECT ?instance ?instanceLabel (COUNT(*) AS ?count) WHERE {\nSERVICE wikibase:mwapi {\nbd:serviceParam wikibase:endpoint \"fr.wikipedia.org\";\nwikibase:api \"Generator\";\nmwapi:generator \"categorymembers\";\nmwapi:gcmtitle \"Categorie:Article de qualite\";\nmwapi:gcmprop \"title\".\n?item wikibase:apiOutputItem mwapi:item.\n?title wikibase:apiOutput mwapi:title .\n?namespace wikibase:apiOutput \"@ns\" .\n}\nFILTER (?namespace = \"0\")\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?item wdt:P31 ?instance .\n}\nGROUP BY ?instance ?instanceLabel\nORDER BY DESC(?count )",
        "complexity_description": "Multiple services, filters, and joins",
        "complexity": "complex"
    },
    {
        "id": "2353",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?personDescription ?birth ?sportLabel ?SPA ?coord ?coord2 ?coord3 ?img WHERE {\n?person wdt:P1344 wd:Q8118.\n?person wdt:P27 wd:Q34.\n?person wdt:P569 ?birth.\nOPTIONAL {?person wdt:P2416 ?sport}\nOPTIONAL { ?person wdt:P4819 ?SPAID} # Svenskt Portrattarkiv\nBIND (URI(CONCAT(\"https://xn--portrttarkiv-kcb.se/details/\",?SPAID)) AS ?SPA)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"sv\",\"en\" . }\nOPTIONAL { ?person wdt:P18 ?img. }\nOPTIONAL { ?person wdt:P19 ?loc . # P19 Place of Birth\n?loc wdt:P625 ?coord } . # Get coordinates from Place of Birth\nOPTIONAL { ?person wdt:P20 ?loc2 . # P19 Place of Death\n?loc2 wdt:P625 ?coord2 } . # Get coordinates from Place of Death\nOPTIONAL { ?person wdt:P119 ?loc3 . # P19 Place of Burial\n?loc3 wdt:P625 ?coord3 } . # Get coordinates from Place of Burial\n}\norder by ?personLabel",
        "complexity_description": "Multiple optional patterns, bindings, and service calls",
        "complexity": "complex"
    },
    {
        "id": "2354",
        "valid_gpt_response": true,
        "query": "SELECT ?property ?propertyLabel ?relation ?relationLabel WHERE {\n?property p:P2302 ?statement.\n?statement ps:P2302 wd:Q21510865;\npq:P2308 wd:Q43229;\npq:P2309 ?relation.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "2355",
        "valid_gpt_response": true,
        "query": "SELECT ?class ?classLabel (COUNT(*) AS ?count) WHERE {\n?property p:P2302 ?statement.\n?statement ps:P2302 wd:Q21510865;\npq:P2308 ?class ;\npq:P2309 [] .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?class ?classLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple joins, subqueries and aggregation",
        "complexity": "complex"
    },
    {
        "id": "2356",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?pic ?linkTo ?linkToLabel # ?instance ?instanceLabel ?subClass ?subClassLabel\nWHERE\n{\nwd:Q18340964 ^wdt:P279* ?item .\n?item ^wdt:P279 ?linkTo .\n?linkTo wdt:P31 ?instance.\n?linkTo wdt:P279* ?subClass.\nOPTIONAL { ?item wdt:P18 ?pic }\nMINUS {?linkTo wdt:P17 | wdt:P1001 ?jurisdiction}\nMINUS {?item wdt:P17 | wdt:P1001 ?jurisdiction}\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"en\" }\nFILTER (?instance NOT IN (wd:Q28640, wd:Q14204246, wd:Q28057030, wd:Q7810129, wd:Q11488158, wd:Q1900326, wd:Q4164871, wd:Q4671286, wd:Q241317,wd:Q1665984, wd:Q11862829, wd:Q11773926, wd:Q294414, wd:Q815823, wd:Q159535, wd:Q66439731, wd:Q2465832, wd:Q5157582,wd:Q1093434, wd:Q1789452, wd:Q6055843, wd:Q2424752, wd:Q104822033, wd:Q1220872, wd:Q336, wd:Q12737077, wd:Q1714118,wd:Q13406463 , wd:Q12812139, wd:Q49773))\nFILTER (?subClass NOT IN (wd:Q30185, wd:Q11902879, wd:Q59512604, wd:Q59240317, wd:Q99766277, wd:Q35749, wd:Q621261, wd:Q35749, wd:Q239463, wd:Q1153777, wd:Q7603708, wd:Q15284, wd:Q1632136, wd:Q206814, wd:Q206814, wd:Q5185982, wd:Q7930989, wd:Q50592854, wd:Q4671162 , wd:Q275969))\n}",
        "complexity_description": "Multiple filters and minus clauses with many URIs",
        "complexity": "complex"
    },
    {
        "id": "2357",
        "valid_gpt_response": true,
        "query": "SELECT ?a $TIMES ?b $EQUALS ?ab WITH {\n# equivalent to VALUES ?a { 1 2 3 4 5 6 7 8 9 10 11 12 }\nSELECT ?a WHERE {\n# we could use numeric literals 0, 1, 12 but why do that when we can get the values from Wikidata items!\nwd:Q199 wdt:P1181 ?one . # 1\nwd:Q36977 wdt:P1181 ?twelve . # 12\nBIND (?one AS ?start )\nBIND (?twelve AS ?end )\nBIND ( (?end - ?start ) + ?one AS ?x )\n[] p:P31 [\nps:P31 wd:Q21199 ;\npq:P155 ?prev\n] .\n?prev wdt:P1181 ?a .\nFILTER (?a >= ?start && ?a <= ?x)\n} ORDER BY ?a\n} AS %a\n# equivalent to VALUES ?b { 1 2 3 4 5 6 7 8 9 10 11 12 }\nWITH { SELECT ?b WHERE {\nINCLUDE %a\nBIND (?a AS ?b)\n}} AS %b\n# this is where the multiplication happens, pairing every digit in a with every digit in b\nWHERE {\nINCLUDE %a\nINCLUDE %b\nBIND (?a * ?b AS ?ab )\nBIND (\"TIMES\" AS $TIMES)\nBIND (\"EQUALS\" AS $EQUALS)\n}\nORDER BY ASC (?b) ASC (?a)",
        "complexity_description": "Multiple subqueries, BIND operations, and FILTER clause",
        "complexity": "complex"
    },
    {
        "id": "2358",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?part ?partLabel ?countryLabel ?coords ?image ?code\nWHERE\n{\n?item p:P1435 ?statement ;\nwdt:P757 ?code .\n?statement ps:P1435 wd:Q9259 .\n{\n?statement pq:P580 ?date .\nFILTER (YEAR(?date) = 2021)\n{\n?item wdt:P527 ?part .\n?part wdt:P17 ?country .\nOPTIONAL { ?part wdt:P625 ?coords }\nOPTIONAL { ?part wdt:P18 ?image }\n} UNION {\nFILTER NOT EXISTS { ?item wdt:P527 ?x }\n?item wdt:P17 ?country .\nOPTIONAL { ?item wdt:P625 ?coords }\nOPTIONAL { ?item wdt:P18 ?image }\n}\n} UNION {\n?item p:P527 ?partStatement .\n?partStatement ps:P527 ?part ;\npq:P580 ?partDate .\nFILTER (YEAR(?partDate) = 2021)\n?part wdt:P17 ?country .\nOPTIONAL { ?part wdt:P625 ?coords }\nOPTIONAL { ?part wdt:P18 ?image }\n}\nFILTER NOT EXISTS { ?country wdt:P31 wd:Q3024240 }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY lcase(?itemLabel) ?countryLabel lcase(?partLabel)",
        "complexity_description": "Multiple UNION, OPTIONAL, and FILTER clauses with complex filtering conditions",
        "complexity": "complex"
    },
    {
        "id": "2359",
        "valid_gpt_response": true,
        "query": "SELECT ?winnerLabel1 ?ballsize ?rgb WHERE {\n# the snooker ball colours\nBIND ( COALESCE(\nIF(?wins = 1, \"ff0000\", 1/0),\nIF(?wins = 2, \"ffff00\", 1/0),\nIF(?wins = 3, \"00ff00\", 1/0),\nIF(?wins = 4, \"8b4513\", 1/0),\nIF(?wins = 5, \"0000ff\", 1/0),\nIF(?wins = 6, \"ffc0cb\", 1/0),\nIF(?wins = 7, \"000000\", 1/0),\nIF(?wins = 8, \"ffa500\", 1/0),\n\"800080\"\n) AS ?rgb )\nBIND(1 AS ?ballsize)\nBIND( CONCAT(?winnerLabel, \": \", STR(?wins)) AS ?winnerLabel1)\n# inner select generates the winners totals\n{ SELECT ?winnerLabel (COUNT (?winner) AS ?wins) WHERE {\n{ ?p wdt:P31 wd:Q502948 }\nUNION\n{ ?p wdt:P361 wd:Q502948 }\n?p wdt:P1346 ?winner .\n?winner rdfs:label ?winnerLabel .\nFILTER(LANG(?winnerLabel) = \"en\")\n# SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?winnerLabel\nORDER BY ASC (?wins )}\n}",
        "complexity_description": "Multiple BIND, IF, COALESCE, UNION, and nested SELECT with FILTER and GROUP BY",
        "complexity": "complex"
    },
    {
        "id": "2360",
        "valid_gpt_response": true,
        "query": "SELECT ?date ?winner ?winnerLabel ?pm ?pmLabel ?pm_image WITH {\nSELECT DISTINCT ?winner ?d WHERE { # all the winners of the English Premier League or First Division\nVALUES $ENGLISH_FIRST { wd:Q754839 wd:Q9448 wd:Q213347 }\n?x wdt:P3450 $ENGLISH_FIRST .\n?x wdt:P1346 ?winner .\n?x wdt:P582 ?d\nMINUS { ?x wdt:P2499 [] } # make sure this is really the Top league\n}} AS %winners\nWITH {\nSELECT (MAX(?d) AS ?date) ?winner WHERE { # get the latest (MAX) date\nINCLUDE %winners\n} GROUP BY ?winner} AS %winner_and_date\nWHERE { # determine who was the Prime minister on a particular date\nINCLUDE %winner_and_date\n?pm p:P39 ?ph_stmt .\nOPTIONAL { ?pm wdt:P18 ?pm_image }\n?ph_stmt ps:P39 wd:Q14211 .\n?ph_stmt pq:P580 ?pm_start .\nOPTIONAL { ?ph_stmt pq:P582 ?pm_end }\nBIND(COALESCE(?pm_end, NOW()) AS ?pm_end)\nFILTER (?pm_start <= ?date && ?pm_end >= ?date)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?date",
        "complexity_description": "Multiple subqueries, joins, and filters with optional patterns",
        "complexity": "complex"
    },
    {
        "id": "2361",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?statements ?property ?propertyLabel ?predicateCount WITH {\nSELECT ?statements WHERE { # get numbers from 1k to 10k\n?nn wdt:P31 wd:Q21199; wdt:P1181 ?statements .\nFILTER (?statements >= 1000 && ?statements <= 10000)\n} } AS %numbers\nWITH { SELECT ?item ?statements WHERE { # get items having that many statements; exclude scholarly articles\nINCLUDE %numbers\nBIND(xsd:integer(?statements) as ?b)\n?item wikibase:statements ?b.\nFILTER NOT EXISTS {?item wdt:P31 wd:Q13442814 .}\n} } as %items\nWITH { SELECT ?item ?statements ?property (COUNT(?predicate) as ?predicateCount) WHERE { # get & count claims for the items\nINCLUDE %items\n?item ?predicate [].\n?property wikibase:claim ?predicate .\n} GROUP BY ?item ?statements ?property } as %counts\nWITH { SELECT ?item (MAX(?predicateCount) AS ?maxcount) {\nINCLUDE %counts\n} GROUP BY ?item } AS %maxCounts\nWHERE {\n# filter for ?predicateCount = ?maxcount to try to identify most-used predicates per item. (It's a bit of a kludge but...)\nINCLUDE %counts\nINCLUDE %maxCounts\nFILTER (?predicateCount = ?maxcount)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} order by desc(?statements)",
        "complexity_description": "Multiple subqueries, filters, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "2362",
        "valid_gpt_response": true,
        "query": "SELECT ?itemLabel ?shape (?itemLabel as ?layer)\nWHERE\n{\n?item wdt:P31 wd:Q51041800 ;\nwdt:P361 wd:Q922480 ;\nwdt:P3896 ?shape .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "2363",
        "valid_gpt_response": true,
        "query": "SELECT ?label ?coord ?subj WHERE {\n?subj wdt:P31 wd:Q1641020 .\nOPTIONAL {?subj wdt:P291 ?loc .\n?loc wdt:P625 ?coord } .\n?subj rdfs:label ?label filter (lang(?label) = \"en\")\n}",
        "complexity_description": "Optional clause, language filter",
        "complexity": "medium"
    },
    {
        "id": "2364",
        "valid_gpt_response": true,
        "query": "SELECT ?LALabel ?official_website WHERE {\n#find all instances of a non-metropolitan county, district, unitary authority or metropolitan borough council\n{?LA wdt:P31 wd:Q769603.\n}\nUNION {?LA wdt:P31 wd:Q1187580.\n}\nUNION {?LA wdt:P31 wd:Q1136601.\n}\nUNION {?LA wdt:P31 wd:Q19414242.}\n#get all things these are instances of & then get end date for that (i.e. LA is current)\nOPTIONAL {?LA p:P31 ?type.\n?type pq:P582 ?end_date.}\n#get website\nOPTIONAL { ?LA wdt:P856 ?official_website. }\n#deduplicate (assumes LA cannot be isntance of both these things at same time)\nOPTIONAL { ?LA wdt:P31 ?instance_of. }\nFILTER((((?instance_of = wd:Q1187580) || (?instance_of = wd:Q1136601)) || (?instance_of = wd:Q769603)) || (?instance_of = wd:Q19414242))\n#create value ?test_date. If instance statement had an end date use it, if not use today\nBIND(IF(BOUND(?end_date),?end_date,NOW()) AS ?test_date).\n#only show LAs with test date today or in future (this means we will show local authorities that exist but are planned to cease in the future)\nFILTER(?test_date >= NOW()) .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }}\nORDER BY (?LALabel)",
        "complexity_description": "Multiple UNIONs, OPTIONAL clauses, FILTERs and BIND with conditional logic",
        "complexity": "complex"
    },
    {
        "id": "2365",
        "valid_gpt_response": true,
        "query": "SELECT ?LALabel ?official_website WHERE {\n#find all instances of a non-metropolitan county, district, unitary authority or metropolitan borough council\n{?LA wdt:P31 wd:Q769603.\n}\nUNION {?LA wdt:P31 wd:Q1187580.\n}\nUNION {?LA wdt:P31 wd:Q1136601.\n}\nUNION {?LA wdt:P31 wd:Q19414242.}\n#get all things these are instances of & then get end date for that (i.e. LA is current)\nOPTIONAL {?LA p:P31 ?type.\n?type pq:P582 ?end_date.}\n#get website\nOPTIONAL { ?LA wdt:P856 ?official_website. }\n#deduplicate (assumes LA cannot be isntance of both these things at same time)\nOPTIONAL { ?LA wdt:P31 ?instance_of. }\nFILTER((((?instance_of = wd:Q1187580) || (?instance_of = wd:Q1136601)) || (?instance_of = wd:Q769603)) || (?instance_of = wd:Q19414242))\n#create value ?test_date. If instance statement had an end date use it, if not use today\nBIND(IF(BOUND(?end_date),?end_date,NOW()) AS ?test_date).\n#only show LAs with test date today or in future (this means we will show local authorities that exist but are planned to cease in the future)\nFILTER(?test_date >= NOW()) .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }}\nORDER BY (?LALabel)",
        "complexity_description": "Multiple UNIONs, OPTIONAL clauses, FILTERs and BIND with conditional logic",
        "complexity": "complex"
    },
    {
        "id": "2366",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?itemDescription ?image ?collection ?collectionLabel WHERE {\n?item wdt:P31 wd:Q3305213 ; # Get items that are instances of painting\nwdt:P170 wd:Q186816 ; # By creator Waldmuller\nwdt:P195/wdt:P361* ?collection . # That are in some collection\n# Only return results where 'collection' is the Belvedere\nFILTER ( ?collection = wd:Q211818 || ?collection = wd:Q303139 )\nOPTIONAL { ?item wdt:P18 ?image } # Optionally with an image\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\" }\n}",
        "complexity_description": "Multiple filters, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "2367",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT\n(COUNT(?author2) as ?n_paper)\n(SAMPLE(?article_2) as ?sample)\n(SAMPLE(?article_2Label)as ?sampleLabel)\n?author2Label ?author2\nWHERE\n{\n?article_1 wdt:P50 wd:Q46168094 .\n?article_1 wdt:P50 ?author1 .\n?article_2 wdt:P50 ?author1 .\n?article_2 wdt:P50 ?author2 .\nMINUS{\n?article_3 wdt:P50 wd:Q46168094 .\n?article_3 wdt:P50 ?author2 . }\n?article_2 rdfs:label ?article_2Label .\nFILTER(lang(?article_2Label)=\"en\")\n?article_1 wdt:P577 ?publication_date1 .\n?article_2 wdt:P577 ?publication_date2 .\nFILTER(year(?publication_date1) > 2015)\nFILTER(year(?publication_date2) > 2015)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } # Helps get the label in your language, if not, then en language\n}\nGROUP BY ?author2 ?author2Label\nORDER BY DESC(?n_paper)",
        "complexity_description": "Multiple filters, minus clause, and group by",
        "complexity": "complex"
    },
    {
        "id": "2368",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?url ?area ?areaLabel ?engine ?engineLabel ?coordinates WHERE {\n?item wdt:P31/wdt:P279* wd:Q2132880;\np:P6269 [\na wikibase:BestRank;\nps:P6269 ?url;\npq:P2700 wd:Q47450936\n].\nOPTIONAL { ?item wdt:P408 ?engine. }\nOPTIONAL {\n?item wdt:P2541 ?area.\nOPTIONAL { ?area wdt:P625 ?coordinates. }\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,de\". }\n}",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "2369",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT\n?item ?itemLabel\n?sitelinks\n(YEAR(?d) AS ?year)\n(GROUP_CONCAT(DISTINCT ?directorLabel; SEPARATOR = \", \") AS ?directors)\n?url\nWHERE\n{\n?item wdt:P161 wd:Q106255;\nwikibase:sitelinks ?sitelinks.\nOPTIONAL {\n?item wdt:P57 ?director.\n?director rdfs:label ?directorLabel.\nFILTER((LANG(?directorLabel)) = \"[AUTO_LANGUAGE]\")\n}\n?item wdt:P577 ?d.\nFILTER(NOT EXISTS {\n?item wdt:P577 ?d2.\nFILTER(?d2 < ?d)\n})\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr,en\". }\nOPTIONAL { ?url schema:about ?item ; schema:isPartOf / wikibase:wikiGroup \"wikipedia\" ; schema:inLanguage \"[AUTO_LANGUAGE]\" }\n}\nGROUP BY ?item ?itemLabel ?sitelinks ?d ?url\nORDER BY DESC (?sitelinks) ?item",
        "complexity_description": "Multiple filters, optional patterns, and grouping",
        "complexity": "complex"
    },
    {
        "id": "2370",
        "valid_gpt_response": true,
        "query": "SELECT\n?distribution ?distributionLabel ?distributionDescription\n?img\n(COUNT(*) AS ?count)\n(GROUP_CONCAT(DISTINCT CONCAT(?t,\" (\",str(YEAR(?d)),\")\"); separator=\"; \") as ?titles)\n(MIN(YEAR(?d)) as ?from)\n(MAX(YEAR(?d)) as ?to)\nWHERE\n{\n?item wdt:P161 wd:Q106255, ?distribution.\nFILTER(?distribution != wd:Q106255)\nOPTIONAL { ?distribution wdt:P18 ?img }\n?item wdt:P1476 ?t .\n?item wdt:P577 ?d .\nFILTER NOT EXISTS { ?item wdt:P577 ?d2 . FILTER( ?d2 < ?d) }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?distribution ?distributionLabel ?distributionDescription ?img\nORDER BY DESC (?count)",
        "complexity_description": "Multiple aggregations, subqueries and filters",
        "complexity": "complex"
    },
    {
        "id": "2371",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT\n?decade\n(COUNT(*) as ?count)\n(SAMPLE(?item) as ?sample_movie)\n(SAMPLE(?itemLabel) as ?sample_movieLabel)\n(SAMPLE(?d) as ?sample_date)\nWHERE\n{\n?item wdt:P161 wd:Q106255; wdt:P31/wdt:P279? wd:Q11424 .\n?item wdt:P577 ?d.\nFILTER(NOT EXISTS {\n?item wdt:P577 ?d2.\nFILTER(?d2 < ?d)\n})\nBIND(FLOOR(YEAR(?d)/10)*10 AS ?decade)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr,cs,it,en\".\n?item rdfs:label ?itemLabel\n}\n}\nGROUP BY ?decade\nORDER BY ?decade",
        "complexity_description": "Multiple subqueries, filters and bindings",
        "complexity": "complex"
    },
    {
        "id": "2372",
        "valid_gpt_response": true,
        "query": "SELECT ?character ?characterLabel (COUNT(*) AS ?count) WHERE {\n?book wdt:P179 wd:Q744536;\nwdt:P674 ?character.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?character ?characterLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, service call and aggregation",
        "complexity": "medium"
    },
    {
        "id": "2373",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person (min(year(?start)) as ?from) (max(year(?end)) as ?to) (?to - ?from as ?span)\nWHERE {\n?person wdt:P31 wd:Q5 .\n?person p:P39 ?ps1 . ?ps1 ps:P39 ?position . ?position wdt:P279* wd:Q30185 . # for example they are a mayor\n?person p:P39 ?ps2 . ?ps2 pq:P580 ?start . ?ps2 pq:P582 ?end . # find start & end of all their other positions\nfilter(year(?end) < 1950) # avoid anyone recent\nfilter not exists { ?person wdt:P569 ?b }\nfilter not exists { ?person wdt:P570 ?d }\nfilter not exists { ?person wdt:P1317 ?fl }\nfilter not exists { ?person wdt:P2031 ?wps }\nfilter not exists { ?person wdt:P2032 ?wpe }\n} group by ?person",
        "complexity_description": "Multiple filters, subqueries and aggregations",
        "complexity": "complex"
    },
    {
        "id": "2374",
        "valid_gpt_response": true,
        "query": "SELECT ?diamond ?diamondLabel ?location ?origin ?originLabel ?twitter ?publisher ?publisherLabel WHERE {\n?diamond wdt:P31 wd:Q108440863 .\nOPTIONAL { ?diamond wdt:P495 ?origin . ?origin wdt:P625 ?location }\nOPTIONAL { ?diamond wdt:P2002 ?twitter }\nOPTIONAL { ?diamond wdt:P123 ?publisher }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "2375",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coord WHERE {\n?item (wdt:P31/(wdt:P279*)) wd:Q486972;\nwdt:P17 wd:Q117;\nrdfs:label ?itemLabel;\nwdt:P625 ?coord.\nFILTER((LANG(?itemLabel)) = \"en\")\nFILTER(REGEX(?itemLabel, \"(li|ti|om)$\"))\n}",
        "complexity_description": "Multiple filters and regex",
        "complexity": "medium"
    },
    {
        "id": "2376",
        "valid_gpt_response": true,
        "query": "SELECT ?taxon ?taxonLabel ?band ?bandLabel WHERE {\n?taxon wdt:P31 wd:Q16521 ;\nwdt:P138 ?band .\n?band wdt:P31 wd:Q215380 ;\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "2377",
        "valid_gpt_response": true,
        "query": "SELECT\n?item ?title (YEAR(?date) as ?year)\n?itemLabel ?itemDescription\n?instanceof ?instanceofLabel\n?sts ?sls ?ids\n(COALESCE(?myurl, ?iturl) as ?Wikipedia)\n?Wikisource\nWHERE\n{\n?item wdt:P50 wd:Q1067 .\nOPTIONAL { ?item wdt:P31 ?instanceof }\nOPTIONAL { ?item wdt:P577 ?date }\nOPTIONAL { ?item wdt:P1476 ?title }\n?item wikibase:statements ?sts ; wikibase:sitelinks ?sls ; wikibase:identifiers ?ids\nOPTIONAL { ?myurl schema:about ?item ; schema:isPartOf / wikibase:wikiGroup \"wikipedia\" ; schema:inLanguage \"[AUTO_LANGUAGE]\" }\nOPTIONAL { ?iturl schema:about ?item ; schema:isPartOf <https://it.wikipedia.org/> ; schema:inLanguage \"it\" }\nOPTIONAL { ?Wikisource schema:about ?item ; schema:isPartOf <https://it.wikisource.org/> ; schema:inLanguage \"it\" }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],it,en\". }\n}\nORDER BY (!BOUND(?date)) ?date ?item",
        "complexity_description": "Multiple optional patterns, COALESCE function, and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "2378",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?party_label (SUM(?views) as ?sum_views) WHERE {\n?item p:P3602 [ ps:P3602 wd:Q48834983 ; pq:P1268 ?party ] .\n?sitelink schema:about ?item .\n?sitelink schema:isPartOf <https://cs.wikipedia.org/> .\n?sitelink schema:name ?name .\nSERVICE wikibase:mwapi {\nbd:serviceParam wikibase:api \"Generator\";\nwikibase:endpoint \"cs.wikipedia.org\";\nwikibase:limit \"once\";\nmwapi:generator \"allpages\";\nmwapi:gapfrom ?name;\nmwapi:gaplimit \"1\";\nmwapi:prop \"pageviews\";\nmwapi:pvipdays \"2\".\n?pageviews wikibase:apiOutput \"pageviews/pvip/text()\".\n}\n.\nBIND ((xsd:integer(?pageviews)) AS ?views)\nFILTER(?pageviews != \"1\")\n?party rdfs:label ?party_label filter(lang(?party_label)=\"en\") .\n} group by ?party ?party_label",
        "complexity_description": "Multiple joins, subqueries, and filters",
        "complexity": "complex"
    },
    {
        "id": "2379",
        "valid_gpt_response": true,
        "query": "SELECT ?here ?count ?rank ?native_label ?itemLabel ?item ?itemDescription ?scriptLabel\nWITH  { SELECT DISTINCT ?item (COUNT(DISTINCT ?p) as ?count) \n        WHERE { { ?item wdt:P460* wd:Q108636690 . ?p wdt:P735 ?item } UNION { ?item wdt:P460* wd:Q108636690 }  } \n        GROUP BY ?item ORDER BY DESC(?count) LIMIT 1000\n      } AS %all\nWITH  { SELECT (?item as ?item2) (?count AS ?count2) WHERE { INCLUDE %all }\n      } AS %all2\nWITH  { SELECT ?item (SUM(?x) AS ?rank) ?count WHERE { INCLUDE %all . INCLUDE %all2 . BIND( IF( ?count  <= ?count2 ,1,0) AS ?x ) } GROUP BY ?item ?count\n      } AS %main \nWHERE\n{ hint:Query hint:optimizer \"None\".    \n  INCLUDE %main .\n  OPTIONAL { FILTER( ?item = wd:Q108636690 )  BIND(\" ==> \" as ?here) }\n  OPTIONAL { ?item wdt:P1705 ?native_label }\n  OPTIONAL { ?item wdt:P282 ?script  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, unions, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "2380",
        "valid_gpt_response": true,
        "query": "SELECT ?journal ?journalLabel ?started\nWHERE {\n?journal wdt:P31 wd:Q773668;\n(wdt:P275/wdt:P31) wd:Q196294.\n?journal p:P31/pq:P580 ?started.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "2381",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?length ?coords\nWHERE\n{\n?item wdt:P31 wd:Q4022;\nwdt:P403/wdt:P361* wd:Q788 ;\np:P2043/psv:P2043 [\nwikibase:quantityAmount ?baseLength;\nwikibase:quantityUnit [\np:P2370/psv:P2370 [\nwikibase:quantityAmount ?unitLength;\nwikibase:quantityUnit wd:Q11573\n]\n]\n].\nBIND(ROUND(?baseLength * ?unitLength / 1000) AS ?length) .\nOPTIONAL {\n{\n?item p:P625 ?coordsStatement .\n?coordsStatement ps:P625 ?coords ;\npq:P518 wd:Q1233637 .\n} UNION {\n?item p:P625 ?coordsStatement .\n?coordsStatement ps:P625 ?coords .\nFILTER NOT EXISTS { ?coordsStatement pq:P518 ?x }\n}\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?length)",
        "complexity_description": "Multiple joins, subqueries, and complex filtering",
        "complexity": "complex"
    },
    {
        "id": "2382",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?meailID ?label (lang(?label) as ?langcode) WHERE {\nVALUES ?meailID { wd:Q1381277}\n?meailID rdfs:label ?label .\nOPTIONAL {?meailID schema:inLanguage ?code} .\n}",
        "complexity_description": "Simple query with VALUES, OPTIONAL and lang function",
        "complexity": "simple"
    },
    {
        "id": "2383",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?sls ?wife ?wifeLabel ?wifeDescription ?slswife\nWITH\n{\nSELECT ?item ?article\nWHERE\n{\n?item wdt:P21 wd:Q6581097;\nwdt:P106 wd:Q188094.\n?article schema:about ?item ;\nschema:isPartOf <https://en.wikipedia.org/> .\n}\n} AS %i\nWHERE\n{\nINCLUDE %i\n?item wdt:P26 ?wife .\nFILTER NOT EXISTS { ?wen schema:about ?wife; schema:isPartOf <https://en.wikipedia.org/> . }\n?item wikibase:sitelinks ?sls .\n?wife wikibase:sitelinks ?slswife .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple subqueries, filters and services",
        "complexity": "complex"
    },
    {
        "id": "2384",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?sls ?husband ?husbandLabel ?husbandDescription ?slshusband\nWITH\n{\nSELECT ?item ?article\nWHERE\n{\n?item wdt:P21 wd:Q6581072 ;\nwdt:P106 wd:Q188094.\n?article schema:about ?item ;\nschema:isPartOf <https://en.wikipedia.org/> .\n}\n} AS %i\nWHERE\n{\nINCLUDE %i\n?item wdt:P26 ?husband .\nFILTER NOT EXISTS { ?wen schema:about ?husband; schema:isPartOf <https://en.wikipedia.org/> . }\n?item wikibase:sitelinks ?sls .\n?husband wikibase:sitelinks ?slshusband ; wdt:P21 wd:Q6581097 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple subqueries, filters and services",
        "complexity": "complex"
    },
    {
        "id": "2385",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?image ?article\nWHERE\n{\n?item wdt:P31 wd:Q5;\nwdt:P108 wd:Q48989.\n?article schema:about ?item ;\nschema:isPartOf <https://de.wikipedia.org/> .\nOPTIONAL{?item wdt:P18 ?image}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"nl\" }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "2386",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coord\nWHERE\n{\n?item wdt:P31 wd:Q5 . # human\n?item wdt:P735 wd:Q15235674.\n?item wdt:P19 ?place.\n?place wdt:P625 ?coord.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\". }\n}",
        "complexity_description": "Multiple triple patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "2387",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?layer ?coord\nWITH\n{\nSELECT DISTINCT ?gn (str(?layer0) as ?layer) { ?gn wdt:P460* wd:Q15235674 ; wdt:P31 wd:Q12308941 ; wdt:P1705 ?layer0 }\n} as %a\nWHERE\n{\nINCLUDE %a\n?item wdt:P31 wd:Q5 .\n?item wdt:P735 ?gn .\n?item wdt:P19/wdt:P625 ?coord.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "complexity_description": "Multiple joins, subqueries and service calls",
        "complexity": "complex"
    },
    {
        "id": "2388",
        "valid_gpt_response": true,
        "query": "SELECT ?member ?memberLabel ?descendants ?descendants_were_MPs\nWITH {\nselect distinct ?member WHERE\n{ ?member wdt:P31 wd:Q5 . ?member p:P39 ?pss . ?pss ps:P39 ?st . ?st wdt:P279 wd:Q16707842 .\n} } AS %members\nWHERE {\n{ SELECT distinct ?member (count(distinct ?child) as ?descendants) where\n{ INCLUDE %members . ?member wdt:P40+ ?child } group by ?member }\noptional { SELECT distinct ?member (count(distinct ?MPchild) as ?descendants_were_MPs) where\n{ INCLUDE %members . ?member wdt:P40+ ?MPchild .\n?MPchild p:P39 ?psc . ?psc ps:P39 ?ct . ?ct wdt:P279 wd:Q16707842 .\n} group by ?member }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} order by desc(?descendants_were_MPs) desc(?children)",
        "complexity_description": "Multiple subqueries, optional clause, and service call",
        "complexity": "complex"
    },
    {
        "id": "2389",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?image ?jarduera ?jardueraLabel ?jaiotza_data ?heriotza_data WHERE {\n?item wdt:P21 wd:Q6581072.\n{ ?item wdt:P17 wd:Q1033. }\nUNION\n{\n?item wdt:P19 ?pob.\n?pob (wdt:P131*) wd:Q1033.\n}\nOPTIONAL {\n?sitelink schema:about ?item;\nschema:inLanguage \"eu\".\n}\n?item wdt:P31 wd:Q5.\nFILTER(BOUND(?sitelink))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"eu,es, en\". }\nOPTIONAL { ?item wdt:P106 ?jarduera. }\nOPTIONAL { ?item wdt:P569 ?jaiotza_data. }\nOPTIONAL { ?item wdt:P570 ?heriotza_data. }\n}\nLIMIT 1000",
        "complexity_description": "Multiple UNION, OPTIONAL and FILTER clauses with multiple triple patterns",
        "complexity": "complex"
    },
    {
        "id": "2390",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?artistLabel ?pic\nWHERE\n{\n?item wdt:P31 wd:Q3305213.\n?item wdt:P136/wdt:P279* wd:Q170571.\n?item wdt:P170 ?artist.\n?item wdt:P18 ?pic.\n?artist wdt:P21 wd:Q6581072.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, property paths and service call",
        "complexity": "medium"
    },
    {
        "id": "2391",
        "valid_gpt_response": true,
        "query": "SELECT ?cemetery ?cemeteryLabel ?districtLabel ?operatorLabel ?coords\nWHERE {\n?cemetery wdt:P31/wdt:P279* wd:Q39614 .\n?cemetery wdt:P17 wd:Q664 .\n?cemetery wdt:P131 ?district .\nOPTIONAL { ?cemetery wdt:P137 ?operator } .\n?cemetery wdt:P625 ?coords\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nORDER BY ?districtLabel ?cemeteryLabel",
        "complexity_description": "Multiple filters, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "2392",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?label ?_image WHERE {\n?item wdt:P166 wd:Q152770.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n?item rdfs:label ?label\n}\nOPTIONAL { ?item wdt:P18 ?_image. }\n}",
        "complexity_description": "Optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "2393",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?playerItem ?player ?startDate ?endDate ?position ?games ?goals ?image ?article ?rank\nWHERE\n{\n?playerItem p:P54 ?teamStat .\n?playerItem wdt:P18 ?image .\n?playerItem wikibase:sitelinks ?rank .\nOPTIONAL {?playerItem wdt:P413 ?positionItem}\n?teamStat ps:P54 wd:Q9616 .\nOPTIONAL {?teamStat pq:P1350 ?games}\nOPTIONAL {?teamStat pq:P1351 ?goals}\n#FILTER (?games > 0)\n?teamStat pqv:P580 ?startStatement .\n?startStatement wikibase:timeValue ?startDate .\n?startStatement wikibase:timePrecision ?startPrecision .\nOPTIONAL {\n?teamStat pqv:P582 ?endStatement .\n?endStatement wikibase:timeValue ?endDate .\n?endStatement wikibase:timePrecision ?endPrecision\n}\nOPTIONAL {\n?article schema:about ?playerItem .\n?article schema:isPartOf <https://en.wikipedia.org/> .\n}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\" .\n?playerItem rdfs:label ?player .\n?positionItem rdfs:label ?position .\n}\n}\nORDER BY DESC(?rank)",
        "complexity_description": "Multiple optional patterns, multiple services, and complex filtering",
        "complexity": "complex"
    },
    {
        "id": "2394",
        "valid_gpt_response": true,
        "query": "SELECT ?award ?awardLabel (SUM(?female) AS ?count_females) (SUM(?male) AS ?count_males) (COUNT(*) AS ?count) ((100 * ?count_females / ?count) AS ?share_female) WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n?award wdt:P279 wd:Q7191.\n?item wdt:P166 ?award;\nwdt:P21 ?gender.\nBIND(IF(?gender IN(wd:Q6581097, wd:Q2449503), 1 , 0 ) AS ?male)\nBIND(IF(?gender IN(wd:Q6581072, wd:Q1052281), 1 , 0 ) AS ?female)\n}\nGROUP BY ?award ?awardLabel\nORDER BY DESC(?share_female)",
        "complexity_description": "Multiple aggregations, subqueries and filters",
        "complexity": "complex"
    },
    {
        "id": "2395",
        "valid_gpt_response": true,
        "query": "SELECT ?men ?women ?award ?awardLabel\nWITH {\nSELECT (COUNT(?recipient_male) AS ?men) (COUNT(?recipient_female) AS ?women) ?award WHERE {\n?award wdt:P31 wd:Q11448906 .\n{\n?recipient_male wdt:P166 ?award .\n?recipient_male wdt:P21 wd:Q6581097 .\n}\nUNION\n{\n?recipient_female wdt:P166 ?award .\n?recipient_female wdt:P21 wd:Q6581072 .\n}\n}\nGROUP BY ?award\n} AS %result\nWHERE {\nINCLUDE %result\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY DESC(?men) DESC(?women)",
        "complexity_description": "Multiple subqueries, UNION operator, and SERVICE keyword usage",
        "complexity": "complex"
    },
    {
        "id": "2396",
        "valid_gpt_response": true,
        "query": "SELECT ?decade (SUM(?female) AS ?count_females) (SUM(?male) AS ?count_males) (COUNT(*) AS ?count) ((100 * ?count_females) / ?count AS ?share_female) WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n?award wdt:P279 wd:Q7191.\n?item p:P166 _:b1;\nwdt:P21 ?gender.\n_:b1 ps:P166 ?award;\npq:P585 ?date.\nBIND(CONCAT(STR(ROUND((YEAR(?date)) / 10 )), \"0\") AS ?decade)\nBIND(IF(?gender IN(wd:Q6581097, wd:Q2449503), 1 , 0 ) AS ?male)\nBIND(IF(?gender IN(wd:Q6581072, wd:Q1052281), 1 , 0 ) AS ?female)\n}\nGROUP BY ?decade\nORDER BY DESC (?decade)",
        "complexity_description": "Multiple aggregations, subqueries, and conditional bindings",
        "complexity": "complex"
    },
    {
        "id": "2397",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?book ?title (GROUP_CONCAT (DISTINCT ?author; SEPARATOR = \", \") AS ?authors) ?pubDate\n{\nVALUES ?book {wd:Q17744504 wd:Q17744476 wd:Q61718117 wd:Q59784970 wd:Q17744339 wd:Q51601248 wd:Q17744488 wd:Q27942623 wd:Q108378522}\n?book wdt:P1476 ?title.\nOPTIONAL {?book (wdt:P50/rdfs:label)|(wdt:P98/rdfs:label)|wdt:P2093 ?author\nFILTER (LANG(?author)=\"\"||LANG(?author)=\"en\")}\nOPTIONAL {?book wdt:P577 ?pubDate}\n}\nGROUP BY ?book ?title ?pubDate",
        "complexity_description": "Multiple optional patterns, grouping and aggregation",
        "complexity": "complex"
    },
    {
        "id": "2398",
        "valid_gpt_response": true,
        "query": "SELECT ?station ?stationLabel ?cds ?line ?trackLabel ?track ?image {\n{SELECT * { SERVICE gas:service { gas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.BFS\" ; gas:in wd:Q800587 ; gas:linkType wdt:P197 ; gas:out ?station ; gas:out1 ?depth ; gas:out2 ?pred . } FILTER(?station != wd:Q800587)\n?station wdt:P625 ?cds ; wdt:P17 ?country .\nVALUES ?country { wd:Q31 wd:Q32 wd:Q55 }#Be, Lu, NL\n?station p:P197 ?adjST . ?adjST ps:P197 ?adj .\nOPTIONAL { ?adjST pq:P81 ?track .}\nMINUS { ?station p:P31 [ ps:P31 wd:Q55488 ; pq:P582 [] ] . } #connections that are no longer\nMINUS { ?adj p:P31 [ ps:P31 wd:Q55488 ; pq:P582 [] ] . }\n?adj p:P625/psv:P625/wikibase:geoLatitude ?lat1 ; p:P625/psv:P625/wikibase:geoLongitude ?lon1 .\n?station p:P625/psv:P625/wikibase:geoLatitude ?lat2 ; p:P625/psv:P625/wikibase:geoLongitude ?lon2 .\nBIND(CONCAT('LINESTRING(', STR(?lon1), ' ', STR(?lat1), ',', STR(?lon2), ' ', STR(?lat2), ')') AS ?str) . BIND(STRDT(?str, geo:wktLiteral) AS ?line)}\n}\nOPTIONAL { ?station wdt:P18 ?image .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple nested queries, filters, and optional patterns with complex property paths",
        "complexity": "complex"
    },
    {
        "id": "2399",
        "valid_gpt_response": true,
        "query": "SELECT ?station ?stationLabel ?coordinate_location ?start ?end WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"da,en\". }\n?station (wdt:P31/(wdt:P279*)) wd:Q55488;\nwdt:P17 wd:Q35;\nwdt:P625 ?coordinate_location.\nFILTER((BOUND(?start)) || (BOUND(?end)))\nOPTIONAL { ?station wdt:P1619 ?date_of_official_opening. }\nOPTIONAL { ?station wdt:P571 ?inception. }\nOPTIONAL { ?station wdt:P3999 ?closure. }\nOPTIONAL { ?station wdt:P582 ?endtime. }\nBIND(IF(BOUND(?date_of_official_opening), ?date_of_official_opening, ?inception) AS ?start)\nBIND(IF(BOUND(?closure), ?closure, ?endtime) AS ?end)\n}",
        "complexity_description": "Multiple optional patterns, filters and binds",
        "complexity": "complex"
    },
    {
        "id": "2400",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coordenades ?imatge ?localitzat_a_l_entitat_territorial_administrativaLabel ?inst_ncia_de ?inst_ncia_deLabel WHERE {\n?item wdt:P31 wd:Q530894;\n(wdt:P131+) wd:Q52636.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],ca\". }\nOPTIONAL { ?item wdt:P625 ?coordenades. }\nOPTIONAL { ?item wdt:P18 ?imatge. }\nOPTIONAL { ?item wdt:P131 ?localitzat_a_l_entitat_territorial_administrativa. }\n}",
        "complexity_description": "Multiple optional patterns, service call and property paths",
        "complexity": "medium"
    },
    {
        "id": "2401",
        "valid_gpt_response": true,
        "query": "SELECT ?estazio_meteorologiko ?estazio_metereologikoLabel ?koordenatuak ?itsas_mailaren_gainetiko_altuera WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"eu,es\". }\n?estazio_meteorologiko wdt:P31 wd:Q190107;\n(wdt:P131/(wdt:P131+)) wd:Q4018;\nwdt:P625 ?koordenatuak.\n?estazio_meteorologiko wdt:P2044 ?itsas_mailaren_gainetiko_altuera.\n}",
        "complexity_description": "Multiple triple patterns, service call and property paths",
        "complexity": "medium"
    },
    {
        "id": "2402",
        "valid_gpt_response": true,
        "query": "SELECT ?personLabel ?personDescription ?countryLabel (SAMPLE(?photo) as ?photo)\nWHERE {\nwd:Q108782773 wdt:P710 ?person .\n?person wdt:P27 ?country .\n?person wdt:P18 ?photo .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .\n}\n}\nGROUP BY ?personLabel ?personDescription ?countryLabel\nORDER BY ?countryLabel",
        "complexity_description": "Multiple joins, service call and group by",
        "complexity": "medium"
    },
    {
        "id": "2403",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?diameter ?length ?mass ?sportLabel ?image WHERE {\n# Diameter (mm)\n?item wdt:P279+ wd:Q18545; p:P2386 ?diameterstmt .\n{ ?diameterstmt pq:P1013 wd:Q10578722 } UNION\n{ FILTER NOT EXISTS { ?diameterstmt pq:P1013 ?x } }\nFILTER NOT EXISTS { ?diameterstmt pq:P582 ?x }\n?diameterstmt psn:P2386 [\nwikibase:quantityAmount ?baseD ].\nBIND(?baseD * 1000 AS ?diameter)\n# Length (mm)\nOPTIONAL { ?item p:P2043 ?lengthstmt .\n{ ?lengthstmt pq:P1013 wd:Q10578722 } UNION\n{ FILTER NOT EXISTS { ?lengthstmt pq:P1013 ?x } }\n?lengthstmt psn:P2043 [\nwikibase:quantityAmount ?baseL ].\nBIND(?baseL * 1000 AS ?length)\n}\n# Mass (g)\nOPTIONAL { ?item p:P2067 ?massstmt .\n{ ?massstmt pq:P1013 wd:Q10578722 } UNION\n{ FILTER NOT EXISTS { ?massstmt pq:P1013 ?x } }\n?massstmt psn:P2067 [\nwikibase:quantityAmount ?baseM ].\nBIND(?baseM * 1000 AS ?mass)\n}\nOPTIONAL { ?item wdt:P641 ?sport } OPTIONAL { ?item wdt:P18 ?image } SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?diameter)",
        "complexity_description": "Multiple optional patterns, unions, and filters with calculations",
        "complexity": "complex"
    },
    {
        "id": "2404",
        "valid_gpt_response": true,
        "query": "SELECT ?itemLabel ?shape (?itemLabel AS ?layer) WHERE {\n?item wdt:P31 wd:Q6465;\nwdt:P3896 ?shape.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "2405",
        "valid_gpt_response": true,
        "query": "SELECT ?river ?riverLabel ?length ?continent ?continentLabel WITH {\nSELECT DISTINCT ?river ?length {\n?river wdt:P31 wd:Q4022 ; wdt:P17 wd:Q142 ; wdt:P2043 ?length .\nFILTER NOT EXISTS { ?department wdt:P31/wdt:P279* wd:Q6465 ; wdt:P138 ?river }\n}\nORDER BY DESC(?length)\nLIMIT 10\n} AS %i WHERE {\nINCLUDE %i\nOPTIONAL { ?river wdt:P4614/wdt:P30 ?continent }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" }\n}\nORDER BY DESC(?length)",
        "complexity_description": "Multiple subqueries, filters, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "2406",
        "valid_gpt_response": true,
        "query": "SELECT ?author ?authorLabel ?book ?bookLabel ?ouvrageWikisource WHERE {\n?ouvrageWikisource schema:about ?book;\nschema:isPartOf <https://fr.wikisource.org/>.\n?author wdt:P21 wd:Q6581072;\nwdt:P27 wd:Q16.\n?book wdt:P50 ?author.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr\". }\n}\nGROUP BY ?author ?authorLabel ?book ?bookLabel ?ouvrageWikisource\nORDER BY DESC (?count)\nLIMIT 200",
        "complexity_description": "Multiple joins, filters and group by",
        "complexity": "medium"
    },
    {
        "id": "2407",
        "valid_gpt_response": true,
        "query": "SELECT ?taxon ?taxonName WHERE {\n?taxon wdt:P225 ?taxonName.\n# e.g. gorilla gorilla or gorilla gorilla gorilla\nFILTER(REGEX(?taxonName, \"^([^ ]*) \\\\1( \\\\1)?$\", \"i\"))\n}\nLIMIT 500",
        "complexity_description": "REGEX filter with backreference",
        "complexity": "medium"
    },
    {
        "id": "2408",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?labelFr ?nomCOG ?pop ?image ?coord WHERE\n{\n?item wdt:P31 wd:Q484170. #Commune francaise\nFILTER NOT EXISTS { ?item wdt:P576 ?end_date . } # Qui n'a pas de date de fin (on veut les communes actuelles)\n?item rdfs:label ?labelFr . FILTER(LANG(?labelFr) = \"fr\") # Nom en francais\n?item wdt:P1448 ?nomCOG . # Nom officiel dans le code officiel geographique\nBIND(STRLEN(STR(?labelFr)) AS ?nameLength) # Nombre de caracteres\nFILTER (?nameLength > 30) # Fitre pour ne garder que les valeurs superieures a 30\nOPTIONAL { ?item wdt:P1082 ?pop . } # Dernieres donnees de population\nOPTIONAL { ?item wdt:P625 ?coord . } # Coordonnees\nOPTIONAL { ?item wdt:P18 ?image . } # Et juste la, un petit geranium.\n} ORDER BY DESC(?nameLength)",
        "complexity_description": "Multiple filters and optional patterns with binding",
        "complexity": "medium"
    },
    {
        "id": "2409",
        "valid_gpt_response": true,
        "query": "select ?lemma\nWHERE {\n?lexemeId dct:language wd:Q9027;\nwikibase:lemma ?lemma;\nwdt:P9660 wd:Q1935308.\n}",
        "complexity_description": "Three triple patterns with one variable",
        "complexity": "simple"
    },
    {
        "id": "2410",
        "valid_gpt_response": true,
        "query": "SELECT ?musee ?annee ?visiteurs ?museeLabel WHERE {\n{\nSELECT ?musee ?annee (AVG(?nb) AS ?visiteurs) WHERE {\n{\nSELECT ?musee (STR(YEAR(?date)) AS ?annee) ?nb WHERE {\nVALUES ?musee { wd:Q3330860 wd:Q1495869 wd:Q3329089 }\n?musee p:P1174 ?node.\n?node ps:P1174 ?nb ; pq:P585 ?date.\n}\n}\n}\nGROUP BY ?musee ?annee\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple nested queries, aggregation function and service call",
        "complexity": "complex"
    },
    {
        "id": "2411",
        "valid_gpt_response": true,
        "query": "select ?item1 ?item1Label ?item2 ?item2Label where {\n?item1 wdt:P39 wd:Q19803234 .\n?item2 wdt:P39 wd:Q19803234 .\n?item1 wdt:P1038| wdt:P3373|wdt:P22|wdt:P25|wdt:P40|wdt:P26 ?item2 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"cs,en\". }\n}",
        "complexity_description": "Multiple triple patterns with UNION and SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "2412",
        "valid_gpt_response": true,
        "query": "SELECT ?library ?libraryLabel ?coords WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?library (wdt:P31/wdt:P279*) wd:Q32815.\n?library wdt:P625 ?coords.\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "2413",
        "valid_gpt_response": true,
        "query": "SELECT ?decennie (COUNT(?item) AS ?compte) WHERE {\n?item wdt:P195 wd:Q108427678 ; wdt:P577 ?date .\nBIND ( STR(FLOOR(YEAR(?date)/10)) AS ?decennie )\n}\nGROUP BY ?decennie",
        "complexity_description": "Uses BIND, GROUP BY and aggregate function",
        "complexity": "medium"
    },
    {
        "id": "2414",
        "valid_gpt_response": true,
        "query": "SELECT ?pronoun ?pronounLabel (count(?person) as ?count)\n{\n?person wdt:P6553 ?pronoun;\nwdt:P31 wd:Q5.\n?pronoun wikibase:lemma ?pronounLabel.\n}\nGROUP by ?pronoun ?pronounLabel\nORDER by DESC(?count)",
        "complexity_description": "Multiple triple patterns, aggregation and grouping",
        "complexity": "medium"
    },
    {
        "id": "2415",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?bib ?bibLabel (IRI(CONCAT(\"https://twitter.com/\", ?twitterUser)) AS ?twitter) ?logo ?coords WHERE {\n?bib (wdt:P31/(wdt:P279*)) wd:Q7075;\nwdt:P17 wd:Q39;\nwdt:P2002 ?twitterUser.\nOPTIONAL { ?bib wdt:P154 ?logo. }\nOPTIONAL { ?bib wdt:P625 ?coords. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple optional patterns, service call and property paths",
        "complexity": "medium"
    },
    {
        "id": "2416",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?image ?cl\nWHERE\n{\n?item wdt:P7963 ?cl .\n?item wdt:P18 ?image .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } # Helps get the label in your language, if not, then en language\n}",
        "complexity_description": "Two triple patterns with a service call",
        "complexity": "medium"
    },
    {
        "id": "2417",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?locLabel ?coord WHERE {\n?person wdt:P19/wdt:P131* wd:Q12694 ;\nwdt:P20 ?loc .\n?loc wdt:P625 ?coord .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, service call",
        "complexity": "medium"
    },
    {
        "id": "2418",
        "valid_gpt_response": true,
        "query": "SELECT ?p ?pLabel (\"EC0000\" AS ?rgb) ?w ?wLabel\nWHERE\n{\n?p wdt:P31 wd:Q98270496 .\n?p wdt:P101 ?w .\nOPTIONAL { ?w wdt:P154 ?wpicture }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n} ORDER BY ASC(?wLabel)",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "2419",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?author ?authorLabel ?organisation ?organisationLabel (COALESCE(?orcid_, CONCAT(\"orcid-search/quick-search/?searchQuery=\", ?authorLabel)) AS ?orcid)\n?exampleWork ?exampleWorkLabel (SAMPLE(?location) AS ?where)\nWITH {\nSELECT (SAMPLE(?work) AS ?exampleWork) ?author WHERE {\n{ ?work wdt:P921/wdt:P31*/wdt:P279* wd:Q2013 . }\nunion { ?work wdt:P921/wdt:P361+ wd:Q2013 . }\nunion { ?work wdt:P921/wdt:P1269+ wd:Q2013 . }\n?work wdt:P50 ?author .\n} GROUP BY ?author\n} AS %result\nWHERE {\nINCLUDE %result\nVALUES ?COUNTRY { wd:Q155 wd:Q414 wd:Q298 wd:Q419 wd:Q739 wd:Q750 wd:Q717 wd:Q733 wd:Q736 wd:Q734 wd:Q77 wd:Q730 }\n?author wdt:P108 | wdt:P1416 ?organisation .\n{ ?organisation wdt:P131 ?COUNTRY ; wdt:P625 ?location . }\nUNION\n{ ?organisation wdt:P159 ?hq . ?hq wdt:P17 ?COUNTRY . ?hq wdt:P625 ?location . }\nUNION\n{ ?organisation wdt:P17 ?COUNTRY ; wdt:P625 ?location . }\n# Include optional ORCID iD\nOPTIONAL { ?author wdt:P496 ?orcid_ . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\" . }\n} GROUP BY ?author ?authorLabel ?organisation ?organisationLabel ?orcid_ ?exampleWork ?exampleWorkLabel\nORDER BY DESC(?authorLabel)",
        "complexity_description": "Multiple unions, subqueries, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "2420",
        "valid_gpt_response": true,
        "query": "SELECT ?station ?stationLabel ?cds ?line ?layer WHERE {\n{ SERVICE gas:service {\ngas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.BFS\" ; gas:in wd:Q3097173 ; gas:target wd:Q6132101 ; gas:out ?station ; gas:out1 [] ; gas:out2 ?pred .\ngas:program gas:linkType wdt:P197 . } }\nFILTER(?station != wd:Q3097173)\n?pred p:P625/psv:P625/wikibase:geoLatitude ?lat1 ; p:P625/psv:P625/wikibase:geoLongitude ?lon1 .\n?station p:P625/psv:P625/wikibase:geoLatitude ?lat2 ; p:P625/psv:P625/wikibase:geoLongitude ?lon2 .\nBIND(CONCAT('LINESTRING(', STR(?lon1), ' ', STR(?lat1), ',', STR(?lon2), ' ', STR(?lat2), ')') AS ?str) . BIND(STRDT(?str, geo:wktLiteral) AS ?line)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,th\". }\n}",
        "complexity_description": "Multiple services, filters, and complex property paths",
        "complexity": "complex"
    },
    {
        "id": "2421",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?ouvrage ?ouvrageLabel ?ligne ?ligneLabel ?coordonnees ?image WHERE {\n?ouvrage wdt:P2505 ?ligne;\nwdt:P17 wd:Q142;\nwdt:P625 ?coordonnees.\nOPTIONAL { ?ouvrage wdt:P18 ?image. }\n?ligne wdt:P31 wd:Q858485.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\". }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "2422",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?femaleform ?maleform ?lang WHERE {\nwd:Q12737077 (^(wdt:P279*)/^wdt:P31) ?item.\n?item wdt:P2521 ?femaleform;\nwdt:P3321 ?maleform;\nrdfs:label ?itemLabel.\nBIND(LANG(?itemLabel) AS ?lang)\nFILTER((LANG(?itemLabel)) = \"fr\")\nFILTER((LANG(?femaleform)) = ?lang)\nFILTER((LANG(?maleform)) = ?lang)\nFILTER(?itemLabel = ?maleform)\nFILTER(?itemLabel != ?femaleform)\n}\nORDER BY ?item\nLIMIT 100",
        "complexity_description": "Multiple filters, bindings and property paths",
        "complexity": "complex"
    },
    {
        "id": "2423",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?femaleform ?maleform ?lang WHERE {\nwd:Q12737077 ^wdt:P279*/^wdt:P31 ?item.\n?item wdt:P2521 ?femaleform;\nwdt:P3321 ?maleform;\nrdfs:label ?itemLabel.\nBIND(LANG(?itemLabel) AS ?lang)\nFILTER((LANG(?itemLabel)) = \"en\")\nFILTER((LANG(?femaleform)) = ?lang)\nFILTER((LANG(?maleform)) = ?lang)\nFILTER(?itemLabel = ?maleform)\nFILTER(?itemLabel != ?femaleform)\n}\nLIMIT 100",
        "complexity_description": "Multiple filters, property paths and language bindings",
        "complexity": "complex"
    },
    {
        "id": "2424",
        "valid_gpt_response": true,
        "query": "SELECT\n?ord\n?consort ?consortLabel ?consortDescription\n?died\n?placeofdeath ?placeofdeathLabel\n?placeofburial ?placeofburialLabel\nWHERE\n{\nwd:Q199633 p:P26 ?st .\n?st ps:P26 ?consort .\nOPTIONAL { ?st pq:P1545 ?ord }\nOPTIONAL { ?consort wdt:P570 ?died }\nOPTIONAL { ?consort wdt:P20 ?placeofdeath }\nOPTIONAL { ?consort wdt:P119 ?placeofburial }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "2425",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coord WHERE {\n?item wdt:P31 wd:Q5;\nwdt:P734 wd:Q11134722;\nwdt:P19 ?place.\n?place wdt:P625 ?coord.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\". }\n}",
        "complexity_description": "Multiple triple patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "2426",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?point_in_time ?coords\nWHERE\n{\n?item wdt:P31/wdt:P279* wd:Q645883.\noptional {?item wdt:P585 ?point_in_time .}\noptional {?item wdt:P625 ?coords .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple optional patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "2427",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?communeLabel ?placeLabel ?id ?image ?coords\nWHERE\n{\n?item wdt:P31 wd:Q4405227 ;\nwdt:P31 wd:Q6498959 ;\nwdt:P1435/wdt:P279* wd:Q61058374 ;\nwdt:P481 ?id ;\np:P131 ?communeStatement ;\nwdt:P276 ?place .\n?communeStatement ps:P131 ?commune .\nFILTER NOT EXISTS { ?communeStatement pq:P582 ?x }\n?place wdt:P625 ?coords .\nOPTIONAL { ?item wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple filters, optional clause and service call",
        "complexity": "complex"
    },
    {
        "id": "2428",
        "valid_gpt_response": true,
        "query": "SELECT ?p ?pLabel (\"EC0000\" AS ?rgb) ?w ?wLabel ?w2 ?w2Label #?w3 ?w3Label\nWHERE\n{\n?p wdt:P31 wd:Q98270496 .\n?p wdt:P101 ?w .\nOPTIONAL { ?p wdt:P2652 ?w2 }.\n#OPTIONAL { ?p wdt:P1416 ?w3 }.\nOPTIONAL { ?w wdt:P154 ?wpicture }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"de,en\" . }\n} ORDER BY ASC(?wLabel)",
        "complexity_description": "Multiple joins, optional patterns and service call",
        "complexity": "complex"
    },
    {
        "id": "2429",
        "valid_gpt_response": true,
        "query": "SELECT ?date ?cumulativecount\n{\nhint:Query hint:optimizer \"None\".\n{ SELECT ?milestonep (COUNT(?item) as ?cumulativecount)\nWHERE\n{\n{ SELECT ?item { {\n?item p:P1889 [ pq:P1013 wd:Q20978290 ; ps:P1889 ?item2 ]\nFILTER( xsd:integer(strafter(str(?item),\"Q\")) > xsd:integer(strafter(str(?item2),\"Q\")) )\n} } }\nBIND( xsd:integer( substr(str(?item), 33)) as ?qid)\nwd:Q38074555 p:P1114 ?milestonep .\n?milestonep ps:P1114 ?milestone .\nFILTER( ?milestone > ?qid )\n}\nGROUP BY ?milestonep\n}\n?milestonep pq:P585 ?date\n}",
        "complexity_description": "Multiple subqueries, filters and grouping",
        "complexity": "complex"
    },
    {
        "id": "2430",
        "valid_gpt_response": true,
        "query": "SELECT\n?item ?itemLabel ?itemDescription\n?date_of_death\n?cemetery ?cemeteryLabel ?coor\n?commons_category_which_may_include_one ?findagrave\n?img_person ?img_cemetery\n{\n?item wdt:P119 ?cemetery.\n?cemetery wdt:P31 wd:Q39614.\n?item wdt:P570 ?date_of_death.\nFILTER (?date_of_death >\"2015-01-01\"^^xsd:dateTime)\nFILTER NOT EXISTS {?item p:P1442 []}\n?cemetery wdt:P625 ?coor.\nFILTER NOT EXISTS {?cemetery wdt:P625 ?c2.FILTER(str(?coor)>str(?c2))}\nOPTIONAL{?item wdt:P373 ?cat.BIND(URI(CONCAT(\"https://commons.wikimedia.org/wiki/Category:\",?cat)) as ?commons_category_which_may_include_one)}\nOPTIONAL{?item wdt:P535 ?fid.wd:P535 wdt:P1630 ?ff.BIND(URI(REPLACE(?ff,\"\\\\$1\",?fid)) as ?findagrave)}\nOPTIONAL{?item wdt:P18 ?img_person}\nFILTER NOT EXISTS {?item wdt:P18 ?i2.FILTER(str(?i2)>str(?img_person))}\nOPTIONAL{?cemetery wdt:P18 ?img_cemetery}\nFILTER NOT EXISTS {?cemetery wdt:P18 ?i3.FILTER(str(?i3)>str(?img_cemetery))}\nSERVICE wikibase:label{ bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr\"}\n}",
        "complexity_description": "Multiple filters, optional patterns and service call",
        "complexity": "complex"
    },
    {
        "id": "2431",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?sense ?lexeme ?lemma ?genre ?genreLabel WHERE {\n?lexeme rdf:type ontolex:LexicalEntry;\ndct:language wd:Q150;\nwikibase:lemma ?lemma;\nontolex:sense ?sense;\nwdt:P5185 ?genre.\n?sense wdt:P5137 ?item.\n?item (wdt:P31/(wdt:P279*)) wd:Q12737077;\nrdfs:label ?itemLabel.\nFILTER((LANG(?itemLabel)) = \"fr\")\n?genre rdfs:label ?genreLabel.\nFILTER((LANG(?genreLabel)) = \"fr\")\n}\nORDER BY (?item) (?lemma) (?genre)",
        "complexity_description": "Multiple filters, multiple joins and language filtering",
        "complexity": "complex"
    },
    {
        "id": "2432",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?place ?placeLabel ?population ?countryLabel ?coords ?image\nWHERE\n{\n?item wdt:P31/wdt:P279* wd:Q2977 ;\nwdt:P131 ?place .\n?place wdt:P1082 ?population ;\nwdt:P17 ?country .\nOPTIONAL { ?item wdt:P625 ?coords }\nOPTIONAL { ?item wdt:P18 ?image }\nFILTER ( ?population < 1000 )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?population",
        "complexity_description": "Multiple joins, filters and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "2433",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?song ?songLabel ?code\nWHERE\n{\n?song wdt:P941 ?book. hint:Prior hint:runFirst true.\n?book wdt:P31/wdt:P279* wd:Q7725634. hint:Prior hint:gearing \"forward\".\n?song wdt:P31/wdt:P279* wd:Q2188189. hint:Prior hint:gearing \"forward\".\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC(STRLEN(REPLACE(?code, \" \", \"\")))",
        "complexity_description": "Multiple joins and filters with ordering",
        "complexity": "medium"
    },
    {
        "id": "2434",
        "valid_gpt_response": true,
        "query": "SELECT ?nom ?nomLabel (COUNT(?q) AS ?ct) WHERE {\n?q (wdt:P19/(wdt:P131*)) wd:Q12694;\nwdt:P734 ?nom.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?nom ?nomLabel\nLIMIT 30",
        "complexity_description": "Multiple triple patterns, service call and grouping",
        "complexity": "medium"
    },
    {
        "id": "2435",
        "valid_gpt_response": true,
        "query": "SELECT ?property ?propertyLabel ?relation ?relationLabel ?maleform ?femaleform WHERE {\n?property p:P2302 ?statement.\n?statement ps:P2302 wd:Q21510865;\npq:P2308 wd:Q5;\npq:P2309 ?relation.\n?property rdfs:label ?propertyLabel.\n?relation rdfs:label ?relationLabel.\nFILTER((LANG(?propertyLabel)) = \"fr\")\nFILTER((LANG(?relationLabel)) = \"fr\")\nOPTIONAL {\n?property wdt:P2521 ?femaleform.\nFILTER((LANG(?femaleform)) = \"fr\")\n}\nOPTIONAL {\n?property wdt:P3321 ?maleform.\nFILTER((LANG(?maleform)) = \"fr\")\n}\n}",
        "complexity_description": "Multiple filters, optional patterns and multiple labels",
        "complexity": "complex"
    },
    {
        "id": "2436",
        "valid_gpt_response": true,
        "query": "select distinct ?person1 ?person2 ?Label ?birthday ?occupation where\n{\n?person1 wdt:P569 ?birthday . ?person2 wdt:P569 ?birthday .\nfilter (?birthday >= \"1706-01-01\"^^xsd:dateTime) . filter (?birthday < \"1707-01-01\"^^xsd:dateTime) .\n?person1 rdfs:label ?Label . filter(lang(?Label) = \"en\") .\n?person2 rdfs:label ?Label .\n?person1 wdt:P106 ?occ . ?person2 wdt:P106 ?occ .\n?occ rdfs:label ?occupation . filter(lang(?occupation) = \"en\") .\nfilter (str(?person1) > str(?person2))\n}",
        "complexity_description": "Multiple filters, multiple joins",
        "complexity": "medium"
    },
    {
        "id": "2437",
        "valid_gpt_response": true,
        "query": "SELECT ?lieu ?lieuLabel ?layer ?coord WHERE {\nwd:Q108366183 p:P840 ?node .\n?node ps:P840 ?lieu .\n?node pq:P585 ?layer .\n?lieu wdt:P625 ?coord .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, service call",
        "complexity": "medium"
    },
    {
        "id": "2438",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?countryLabel ?coords ?image\nWHERE\n{\n?item wdt:P31 wd:Q1541043 ;\nwdt:P17 ?country .\nFILTER NOT EXISTS { ?country wdt:P576 ?x }\nOPTIONAL { ?item wdt:P625 ?coords }\nOPTIONAL { ?item wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple filters, optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "2439",
        "valid_gpt_response": true,
        "query": "SELECT ?prenomLabel (COUNT(?q) AS ?compte) WHERE {\n?q wdt:P19/wdt:P131* ?dpt ; wdt:P735 ?prenom .\n?dpt p:P131/ps:P131 wd:Q1152 ; wdt:P31 wd:Q6465 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?prenomLabel\nHAVING ( ?compte > 5 )",
        "complexity_description": "Multiple triple patterns, service call, group by and having clause",
        "complexity": "complex"
    },
    {
        "id": "2440",
        "valid_gpt_response": true,
        "query": "SELECT ?student ?studentLabel ?teacher ?teacherLabel ?edgeLabel ?rgb WHERE {\n?student p:P1066 ?studentStmt.\n?studentStmt ps:P1066 ?teacher;\nprov:wasDerivedFrom ?studentNode.\n?studentNode pr:P248 wd:Q109118295.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nBIND(\"student of\" AS ?edgeLabel)\nBIND(\"cbcbcb\" AS ?rgb)\n}",
        "complexity_description": "Multiple triple patterns, service call and bind operations",
        "complexity": "medium"
    },
    {
        "id": "2441",
        "valid_gpt_response": true,
        "query": "SELECT ?value ?lemma {\n?number wdt:P31 wd:Q21199 ; wdt:P1181 ?value .\nFILTER (?value >= 0 && ?value <= 20) .\n?lexeme dct:language wd:Q150 ; wikibase:lemma ?lemma ; ontolex:sense ?sense .\n?sense wdt:P5137 ?number .\n}\nORDER BY ?lemma",
        "complexity_description": "Multiple joins, filters and ordering",
        "complexity": "complex"
    },
    {
        "id": "2442",
        "valid_gpt_response": true,
        "query": "SELECT ?givenName ?givenNameLabel (COUNT(DISTINCT ?character) AS ?count) ?authorClassification WHERE {\nBIND(wd:Q150 AS ?language)\n?character wdt:P31/wdt:P279* wd:Q95074;\n(wdt:P27/wdt:P37)|wdt:P103|wdt:P1412 ?language;\nwdt:P735 ?givenName;\nwdt:P170 ?author.\nOPTIONAL { ?author (wdt:P27/wdt:P37)|wdt:P103|wdt:P1412 ?language. BIND(1 AS ?authorSpeaksLanguage) }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\".\n?givenName rdfs:label ?givenNameLabel.\n?language rdfs:label ?languageLabel.\n} hint:Prior hint:runLast false.\nBIND(IF(BOUND(?authorSpeaksLanguage), ?languageLabel, \"other\"@en) AS ?authorClassification)\n}\nGROUP BY ?givenName ?givenNameLabel ?authorClassification\nORDER BY DESC(?count)",
        "complexity_description": "Multiple joins, subqueries, and conditional bindings",
        "complexity": "complex"
    },
    {
        "id": "2443",
        "valid_gpt_response": true,
        "query": "SELECT ?autor ?autorLabel ?organization ?organizationLabel ?geo\nWHERE {\n?autor wdt:P463 * wd:Q23809291 .\n?autor ( wdt:P108 | wdt:P463 | wdt:P1416 | wdt:P69) / wdt:P361* ?organization .\n?organization wdt:P625 ?geo .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, property paths and service call",
        "complexity": "medium"
    },
    {
        "id": "2444",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?dec ((?count/?decade_total)*100 as ?percent) ?causeLabel ?count\nWITH {\nselect (str(?decade) as ?dec) ?item ?cause where {\n?term wdt:P279 wd:Q16707842 . ?item p:P39 ?ps . ?ps ps:P39 ?term .\n?ps pq:P580 ?start . ?ps pq:P582 ?end . ?ps pq:P1534 ?cause .\nFILTER NOT EXISTS { ?term2 wdt:P279 wd:Q16707842 .\n?item p:P39 ?ps2 . ?ps2 ps:P39 ?term2 . ?ps2 pq:P580 ?start2 . filter (?ps != ?ps2)\noptional { ?ps2 pq:P582 ?end2 } BIND(COALESCE(?end2, ?start2) AS ?check) . filter (?check >= ?end) }\n# filter out any where they were still serving later on\nbind(year(?end) as ?year) . filter(?year >= 1870) . filter(?year < 2020) . bind((floor(?year/10)*10) as ?decade) .\n}\n} AS %members\nWHERE {\n{ SELECT ?dec (count(distinct ?item) as ?count) ?cause where\n{ INCLUDE %members } group by ?dec ?cause }\n{ SELECT ?dec (count(distinct ?item) as ?decade_total) where\n{ INCLUDE %members } group by ?dec }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n#defaultView:BarChart",
        "complexity_description": "Multiple subqueries, filters, and bindings with complex conditions",
        "complexity": "complex"
    },
    {
        "id": "2445",
        "valid_gpt_response": true,
        "query": "select (concat(str(year(?start)),\"-\",str(month(?start))) as ?date) (count(distinct ?item) as ?count)where\n{\n{ select distinct ?item (min(?incep) as ?start)\nwhere {\n?term wdt:P279 wd:Q16707842 . ?item p:P39 ?ps . ?ps ps:P39 ?term . ?term wdt:P571 ?incep .\n} group by ?item\n}\nfilter (year(?start) >= 1870)\n?item p:P39 ?ps . ?ps ps:P39 ?term . ?term wdt:P279 wd:Q16707842 . ?term wdt:P571 ?incep .\n?ps pq:P2715 ?elec . ?term wdt:P2715 ?elec .\n} group by ?start\n#defaultView:BarChart",
        "complexity_description": "Multiple subqueries, grouping and filtering",
        "complexity": "complex"
    },
    {
        "id": "2446",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?image WHERE {\n?item wdt:P19 wd:Q648810 .\n?item wdt:P106 wd:Q937857 .\n?item wdt:P54 wd:Q19587 .\n?item wdt:P18 ?image\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "2447",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?dateN ?dateM WHERE {\n?person wdt:P119 wd:Q2972588 .\n?person wdt:P569 ?dateN .\n?person wdt:P570 ?dateM .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Simple query with 3 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "2448",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\nVALUES ?reisebericht {\nwd:Q109590352\n}\n?reisebericht rdfs:label ?reiseberichtLabel.\nFILTER((LANG(?reiseberichtLabel)) = \"de\")\n?reisebericht p:P921 ?schlagwortStmt.\n?schlagwortStmt ps:P921 ?ort1;\npq:P156 ?ort2;\nprov:wasDerivedFrom ?refNode.\n?refNode pr:P854 ?Volltext.\n?ort1 wdt:P625 ?coord1.\n?ort2 wdt:P625 ?coord2.\n?ort1 p:P625 _:b20.\n_:b20 ps:P625 _:b18;\npsv:P625 _:b19.\n_:b19 wikibase:geoLongitude ?coord1lon;\nwikibase:geoLatitude ?coord1lat.\n?ort2 p:P625 _:b23.\n_:b23 ps:P625 _:b21;\npsv:P625 _:b22.\n_:b22 wikibase:geoLongitude ?coord2lon;\nwikibase:geoLatitude ?coord2lat.\nBIND(CONCAT(\"LINESTRING (\", STR(?coord1lon), \" \", STR(?coord1lat), \",\", STR(?coord2lon), \" \", STR(?coord2lat), \")\") AS ?str)\nBIND(STRDT(?str, geo:wktLiteral) AS ?line)\n?ort1 rdfs:label ?ort1Label.\nFILTER((LANG(?ort1Label)) = \"de\")\n}",
        "complexity_description": "Multiple joins, filters and bindings",
        "complexity": "complex"
    },
    {
        "id": "2449",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(*) as ?count) { ?item wikibase:statements 0 }",
        "complexity_description": "Single pattern with COUNT aggregation",
        "complexity": "simple"
    },
    {
        "id": "2450",
        "valid_gpt_response": true,
        "query": "SELECT ?partof (COUNT(*) as ?count)\n{\n?item wikibase:statements 0 .\n[] schema:about ?item ; schema:isPartOf ?partof .\n}\nGROUP BY ?partof",
        "complexity_description": "Grouping and aggregation",
        "complexity": "medium"
    },
    {
        "id": "2451",
        "valid_gpt_response": true,
        "query": "SELECT ?taxon ?taxonLabel ?pessoa ?pessoaLabel ?lugar ?lugarLabel ?coordenadas\nWHERE\n{\n?taxon wdt:P31 wd:Q16521 .\n?taxon wdt:P138 ?pessoa .\n?pessoa wdt:P21 wd:Q6581072 .\n?pessoa wdt:P19 ?lugar .\n?lugar wdt:P625 ?coordenadas .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"pt,en\". } # Helps get the label in your language, if not, then en language\n}",
        "complexity_description": "Multiple joins and filters",
        "complexity": "medium"
    },
    {
        "id": "2452",
        "valid_gpt_response": true,
        "query": "SELECT ?sitelink ?site ?title ?taille\nWHERE\n{\n?sitelink schema:about wd:Q1290.\n?sitelink schema:isPartOf ?site.\n?sitelink schema:isPartOf/wikibase:wikiGroup \"wikipedia\" .\n?sitelink schema:name ?title.\nBIND (STRBEFORE(STRAFTER(STR(?site), \"https://\"), \"/\") AS ?endpoint)\nBIND (STR(?title) AS ?title_nolang)\nSERVICE wikibase:mwapi\n{\nbd:serviceParam wikibase:endpoint ?endpoint.\nbd:serviceParam wikibase:api \"Generator\".\nbd:serviceParam mwapi:generator \"revisions\".\nbd:serviceParam mwapi:titles ?title_nolang.\nbd:serviceParam mwapi:prop \"revisions\".\nbd:serviceParam mwapi:rvprop \"size\".\n?size wikibase:apiOutput \"revisions/rev[last()]/@size\".\n}\nBIND ( xsd:integer(?size) AS ?taille )\n}\nORDER BY DESC(?taille)",
        "complexity_description": "Multiple joins, subqueries, and function calls",
        "complexity": "complex"
    },
    {
        "id": "2453",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?personLabel ?bookLabel ?page WHERE {\n?book wdt:P50 ?person.\n?person wdt:P19 ?place.\n?place wdt:P131+ wd:Q12694.\n?page schema:about ?book .\n?page schema:isPartOf <https://fr.wikisource.org/> .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\". }\n}\nORDER BY ?personLabel",
        "complexity_description": "Multiple joins, property paths and service call",
        "complexity": "complex"
    },
    {
        "id": "2454",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?highest ?highestLabel ?elevation\nWHERE\n{\n?item wdt:P31 wd:Q3624078. # is a sovereign country\n?item wdt:P610 ?highest. # has \"highest point\" statement\nOPTIONAL {?highest wdt:P2044 ?elevation} # elevation of highest point\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"sv,en\". }\n}\nORDER BY DESC(?elevation)",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "2455",
        "valid_gpt_response": true,
        "query": "SELECT distinct (concat(str(year(?start)),\"-\",str(month(?start))) as ?date) (count(distinct ?ps) as ?count) where\n{\n?term wdt:P279 wd:Q16707842 .\n?term wdt:P2715 ?elec . ?term wdt:P571 ?start .\nfilter(year(?start) >= 1830) . filter(year(?start) <= 1910)\noptional { ?mp p:P39 ?ps . ?ps ps:P39 ?term . ?ps pq:P2715 ?elec . ?ps pq:P1534 wd:Q50393121 }\n} group by ?start order by ?start\n#defaultView:BarChart",
        "complexity_description": "Multiple filters, optional clause and grouping",
        "complexity": "medium"
    },
    {
        "id": "2456",
        "valid_gpt_response": true,
        "query": "SELECT ?service ?serviceLabel ?endpoint ?documentation ?source WHERE {\n?service p:P6269 ?statement.\n?statement ps:P6269 ?endpoint ;\npq:P2700 wd:Q64490175.\nOPTIONAL { ?statement (pq:P973 | pq:P2078) ?documentation }\nOPTIONAL { ?statement pq:P1324 ?source }\nFILTER NOT EXISTS { ?statement wikibase:rank wikibase:DeprecatedRank }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?endpoint)",
        "complexity_description": "Multiple optional patterns, filter and service clause",
        "complexity": "complex"
    },
    {
        "id": "2457",
        "valid_gpt_response": true,
        "query": "SELECT (?link as ?q) (?nameplusdesc AS ?qLabel) (SAMPLE(?image) AS ?img) WHERE {\n?work wdt:P195/wdt:P361 wd:Q63160499; wdt:P18 ?image ; wdt:P973 ?link; wdt:P180 ?depicted.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?depicted rdfs:label ?name . ?depicted schema:description ?desc }\nBIND(IF(BOUND(?desc), CONCAT(?name, \", \", ?desc), ?name) AS ?nameplusdesc)\n} GROUP BY ?link ?nameplusdesc\nORDER BY UCASE(?qLabel)",
        "complexity_description": "Multiple services, subqueries, and functions",
        "complexity": "complex"
    },
    {
        "id": "2458",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?countryLabel ?area ?population ?density ?coords\nWHERE\n{\n?item p:P31 ?statement ;\nwdt:P17 ?country ;\nwdt:P625 ?coords .\n?statement ps:P31/wdt:P279* wd:Q10864048 .\nFILTER NOT EXISTS { ?statement pq:P582 ?x }\nFILTER NOT EXISTS { ?country wdt:P31 wd:Q3024240 }\nFILTER NOT EXISTS { ?item wdt:P576 ?x }\n?item p:P2046 ?areaStatement .\n{ FILTER NOT EXISTS { ?areaStatement pq:P518 ?x } } #UNION\n#{ ?areaStatement pq:P518 wd:Q16868672 }\n?areaStatement psv:P2046 [\nwikibase:quantityAmount ?baseArea;\nwikibase:quantityUnit [\np:P2370/psv:P2370 [\nwikibase:quantityAmount ?unitArea;\nwikibase:quantityUnit wd:Q25343\n]\n]\n].\nBIND(ROUND(?baseArea * ?unitArea / 1000000) AS ?area) .\nFILTER (?area >= 100000)\n?item wdt:P1082 ?population .\nBIND(ROUND(100 * ?population / ?area) / 100 AS ?density)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?area)",
        "complexity_description": "Multiple filters, subqueries, and complex calculations",
        "complexity": "complex"
    },
    {
        "id": "2459",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel (SAMPLE(?typeLabel) AS ?_type) WHERE {\n{ VALUES ?type { wd:Q108838260 wd:Q3343298 wd:Q55657615 wd:Q524778 wd:Q169180 } # Exec agencies (9) + NDPBs (45) + commissioners (7)\n?item wdt:P31 ?type ;\nwdt:P1001 wd:Q22 .\nMINUS { ?item wdt:P31 wd:Q5532360 }\n}\nUNION\n{ ?item wdt:P31 wd:Q270791; # Public corps (6)\nwdt:P127 wd:Q32521 .\n}\nUNION\n{ VALUES ?type { wd:Q7139410 wd:Q1412224 wd:Q3044788 wd:Q327333 wd:Q16931297 } # Tribunals (11) + other (28)\n?item wdt:P31 ?type ;\nwdt:P131|wdt:P1001 wd:Q22 .\nMINUS { ?item wdt:P1001 wd:Q1156248 }\nMINUS { ?item p:P1001 ?js . ?js pq:P582 [] }\n}\nUNION\n{ VALUES ?type { wd:Q21451686 wd:Q83425186 wd:Q20667323 } # Local authorities (32) + Health boards (14)\n?item wdt:P31 ?type .\n}\nUNION\n{ ?item wdt:P361 wd:Q4993654 . # Courts (56)\n}\nMINUS { ?item wdt:P576 [] }\nOPTIONAL { ?item wdt:P31 ?type }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". ?type rdfs:label ?typeLabel . ?item rdfs:label ?itemLabel }\n} GROUP BY ?item ?itemLabel",
        "complexity_description": "Multiple UNIONs, VALUES blocks, and MINUS clauses with complex filters",
        "complexity": "complex"
    },
    {
        "id": "2460",
        "valid_gpt_response": true,
        "query": "SELECT ?weekday (count(distinct(?item)) as ?count) WHERE {\nwd:Q362 wdt:P580 ?od ; wdt:P582 ?do.\n?item wdt:P20 wd:Q160139 .\n?item p:P570 [ps:P570 ?date ; psv:P570/wikibase:timePrecision ?precision ] filter(?precision = 11 && day(?date) != 1 && ?date > ?od && ?date < ?do ).\nBIND( DAY( ?date ) AS ?q ) .\nBIND( MONTH( ?date ) + IF( MONTH( ?date ) < 3, 12, 0 ) AS ?m ) .\nBIND( YEAR( ?date ) - IF( MONTH( ?date ) < 3, 1, 0 ) AS ?_year ) .\nBIND( ?_year - FLOOR( ?_year / 100 ) * 100 AS ?K ) . # modulo\nBIND( FLOOR( YEAR( ?date ) / 100 ) AS ?J ) .\nBIND( ?q + FLOOR( 13 * ( ?m + 1 ) / 5 ) + ?K + FLOOR( ?K / 4 ) + FLOOR( ?J / 4 ) - 2 * ?J AS ?_h ) .\nBIND(( ?_h - FLOOR( ?_h / 7 ) * 7) as ?day) .\nBIND(if(?day=0,\"06 (Saturday)\",if(?day=1,\"07 (Sunday)\",if(?day=2,\"01 (Monday)\",if(?day=3,\"02 (Tuesday)\",if(?day=4,\"03 (Wednesday)\",if(?day=5,\"04 (Thursday)\",if(?day=6,\"05 (Friday)\",\"\"))))))) as ?weekday) .\n} group by ?weekday order by asc(?weekday)",
        "complexity_description": "Multiple binds, filters and conditional statements",
        "complexity": "complex"
    },
    {
        "id": "2461",
        "valid_gpt_response": true,
        "query": "SELECT\n?word\n(COUNT(*) as ?count)\n(URI(CONCAT(\"https://www.wikidata.org/w/index.php?search=inlabel%3A\",?word,\"%40[AUTO_LANGUAGE]+-haswbstatement%3A%2A&profile=advanced&fulltext=1&ns=1\")) as ?search)\nWITH\n{\nSELECT ?item (CONCAT(?n, \" 1 1 1 1 1 1 1 1 \") as ?string)\n{\n?item wikibase:statements 0 .\n[] schema:about ?item ; schema:name ?n ; schema:isPartOf <https://[AUTO_LANGUAGE].wikipedia.org/>\n}\nLIMIT 20000\n} as %aa\nWITH\n{\nSELECT (str(?nv-1) as ?ord) { [] wdt:P5176 ?i ; wdt:P1181 ?nv . FILTER( ?nv < 8) }\n} as %i\nWHERE\n{\nINCLUDE %i\nINCLUDE %aa\nBIND( CONCAT(\"^([^ ]+ ){\",?ord,\"}([^ ]+) .+$\") as ?re)\nBIND( REPLACE(?string, ?re, \"$2\") as ?word)\n# FILTER( ?word != \"1\" && )\nFILTER( strlen(?word) > 4)\n}\nGROUP BY ?word\nORDER BY DESC(?count)\nLIMIT 100",
        "complexity_description": "Multiple subqueries, complex string manipulation and filtering",
        "complexity": "complex"
    },
    {
        "id": "2462",
        "valid_gpt_response": true,
        "query": "SELECT ?q ?qLabel (SAMPLE(?img) AS ?image) WHERE {\n?q wdt:P180 ?depeint ; wdt:P18 ?img .\n?depeint ?prop wd:Q7561 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?q ?qLabel",
        "complexity_description": "Multiple triple patterns, SERVICE clause and GROUP BY",
        "complexity": "medium"
    },
    {
        "id": "2463",
        "valid_gpt_response": true,
        "query": "SELECT (?year_d as ?year) (COUNT(?futbolari)as ?count) WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?futbolari wdt:P106 wd:Q937857.\n?futbolari wdt:P570 ?heriotza_data.\n?futbolari wdt:P569 ?jaiotza_data.\nBIND (year(?heriotza_data) as ?year_d).\nBIND (year(?jaiotza_data) as ?year_j).\nBIND (?year_d - ?year_j as ?age).\nFILTER (?age < 40)\n}\nGROUP by ?year_d",
        "complexity_description": "Multiple filters, bindings and grouping",
        "complexity": "medium"
    },
    {
        "id": "2464",
        "valid_gpt_response": true,
        "query": "SELECT (?link as ?q) (?nameplusdesc AS ?qLabel) (SAMPLE(?image) AS ?img) WHERE {\n?work wdt:P195/wdt:P361 wd:Q63160499; wdt:P18 ?image ; wdt:P973 ?link; wdt:P180 ?depicted.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?depicted rdfs:label ?name . ?depicted schema:description ?desc }\nBIND(IF(BOUND(?desc), CONCAT(?name, \", \", ?desc), ?name) AS ?nameplusdesc)\n} GROUP BY ?link ?nameplusdesc\nORDER BY UCASE(?qLabel)",
        "complexity_description": "Multiple services, subqueries, and functions",
        "complexity": "complex"
    },
    {
        "id": "2465",
        "valid_gpt_response": true,
        "query": "SELECT ?img ?depeint ?depeintLabel ?depeintDescription WHERE {\nwd:Q1231009 wdt:P180 ?depeint .\n?depeint wdt:P31 wd:Q5 ; wdt:P18 ?img\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "2466",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\n?place wdt:P31 wd:Q42744322 ; # German municipalities\nwdt:P1448 ?name . # their official names\nBIND(lcase(?name) as ?lemma) # use the names in lower case as lemma\n?lexeme wikibase:lemma ?lemma ; # lexemes with that lemma\nwikibase:lexicalCategory wd:Q24905; # verbs\ndct:language wd:Q188 # in German\n}",
        "complexity_description": "Multiple filters, bindings and joins",
        "complexity": "medium"
    },
    {
        "id": "2467",
        "valid_gpt_response": true,
        "query": "SELECT ?station ?line (CEIL(?depth/10)*10 as ?layer) ?coord {\nSERVICE gas:service {\ngas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.BFS\" ; gas:in wd:Q2660080 ; gas:out ?station ; gas:out1 ?depth ; gas:out2 ?pred .\ngas:program gas:linkType wdt:P197 . }\nFILTER(?station != wd:Q2660080)\n?pred wdt:P625 ?cds.\nBIND(IF(xsd:double(?depth/10) = xsd:integer(?depth/10),?cds,\"\") as ?coords)\n?pred p:P625/psv:P625/wikibase:geoLatitude ?lat1 ; p:P625/psv:P625/wikibase:geoLongitude ?lon1 .\n?station p:P625/psv:P625/wikibase:geoLatitude ?lat2 ; p:P625/psv:P625/wikibase:geoLongitude ?lon2 .\nvalues ?country { wd:Q211 wd:Q37 wd:Q191 wd:Q159 wd:Q184 } ?station wdt:P17 ?country .\n# only Baltics or Russia or Belarus\nBIND(CONCAT('LINESTRING(', STR(?lon1), ' ', STR(?lat1), ',', STR(?lon2), ' ', STR(?lat2), ')') AS ?str) . BIND(STRDT(?str, geo:wktLiteral) AS ?line)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"bn,en\". }\n?station wdt:P625 ?coord.\n}",
        "complexity_description": "Multiple services, filters, and binds with complex calculations",
        "complexity": "complex"
    },
    {
        "id": "2468",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?libelle ?coord ?image ?layer WHERE {\n?item wdt:P138 ?type ; wdt:P625 ?coord .\n?type wdt:P279* wd:Q726 .\nOPTIONAL { ?item wdt:P18 ?image. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" .\n?type rdfs:label ?layer .\n?item rdfs:label ?libelle }\n}",
        "complexity_description": "Multiple joins, optional clause and service call",
        "complexity": "complex"
    },
    {
        "id": "2469",
        "valid_gpt_response": true,
        "query": "SELECT ?cid ?cause (count(*) as ?count)\nWHERE\n{\n?pid wdt:P31 wd:Q5 .\n?pid wdt:P27 wd:Q211 .\n?pid wdt:P106 ?cid .\nOPTIONAL {\n?cid rdfs:label ?cause\nfilter (lang(?cause) = \"lv\")\n}\n}\nGROUP BY ?cid ?cause\nORDER BY DESC(?count) ASC(?cause)",
        "complexity_description": "Multiple triple patterns, optional clause, group by and order by",
        "complexity": "complex"
    },
    {
        "id": "2470",
        "valid_gpt_response": true,
        "query": "SELECT ?hobi_komun ?hobi_komunLabel ?lat ?lon ?coord ?pertsona_hilak WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?hobi_komun wdt:P31 wd:Q734271;\nwdt:P607 wd:Q10859;\np:P625 _:b5.\n_:b5 psv:P625 _:b4.\n_:b4 wikibase:geoLatitude ?lat;\nwikibase:geoLongitude ?lon;\nwikibase:geoGlobe ?globe.\n_:b5 ps:P625 ?coord.\n?hobi_komun wdt:P1120 ?pertsona_hilak.\n}",
        "complexity_description": "Multiple triple patterns, service call and property paths",
        "complexity": "complex"
    },
    {
        "id": "2471",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?ord ?itemDescription ?launchdt ?launchvehLabel ?launchpointLabel ?orbitLabel ?mass ?cospar ?sts ?sls\n{\n?item p:P179 [pq:P1545 ?ord ; ps:P179 wd:Q11452851 ]\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nOPTIONAL { ?item wdt:P619 ?launchdt }\nOPTIONAL { ?item wdt:P375 ?launchveh }\nOPTIONAL { ?item wdt:P1427 ?launchpoint }\nOPTIONAL { ?item wdt:P247 ?cospar }\nOPTIONAL { ?item wdt:P2067 ?mass }\nOPTIONAL { ?item wdt:P522 ?orbit }\n?item wikibase:statements ?sts ; wikibase:sitelinks ?sls\n}\nORDER BY xsd:integer(REPLACE(?ord,\"^(\\\\d+)(-\\\\d+|[A-Z])?$\",\"$1\")) ?ord",
        "complexity_description": "Multiple optional patterns, service call, and ORDER BY with function",
        "complexity": "complex"
    },
    {
        "id": "2472",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?age ?birth_date WHERE {\n?item wdt:P31 wd:Q5;\n(p:P569/psv:P569) _:b8.\n_:b8 wikibase:timeValue ?birth_date;\nwikibase:timePrecision ?precision.\n?item wdt:P106 wd:Q13414980;\nwdt:P54 wd:Q1034556.\nFILTER(NOT EXISTS { ?item wdt:P570 ?dead. })\nBIND(((YEAR(NOW())) - (YEAR(?birth_date))) - (IF(((MONTH(NOW())) < (MONTH(?birth_date))) || (((MONTH(NOW())) = (MONTH(?birth_date))) && ((DAY(NOW())) < (DAY(?birth_date)))), 1 , 0 )) AS ?age)\nFILTER(?age >= 80 )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC (?age)",
        "complexity_description": "Multiple filters, subqueries and complex calculations",
        "complexity": "complex"
    },
    {
        "id": "2473",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?dob ?dod WHERE {\n?item (p:P569/psv:P569) _:b44.\n_:b44 wikibase:timePrecision 11;\nwikibase:timeValue ?dob.\n?item (p:P570/psv:P570) _:b45.\n_:b45 wikibase:timePrecision 11;\nwikibase:timeValue ?dod.\n#FILTER(?precisionDob = 11 )\n#FILTER(?precisionDod = 11 )\nFILTER((DAY(?dob)) = (DAY(?dod)))\nFILTER((MONTH(?dob)) = (MONTH(?dod)))\nFILTER( ((YEAR(?dod)) - (YEAR(?dob))) = 50)\n?item rdfs:label ?itemLabel. FILTER(LANG(?itemLabel)=\"de\")\n}\nLIMIT 5",
        "complexity_description": "Multiple filters, property paths and time functions",
        "complexity": "complex"
    },
    {
        "id": "2474",
        "valid_gpt_response": true,
        "query": "SELECT ?author1 ?author1Label ?rgb ?author2 ?author2Label\nWITH {\nSELECT ?author1 ?author2 ?rgb WHERE {\n{ ?author1 wdt:P108 wd:Q174570 . } union { ?author1 wdt:P1416 [ wdt:P361* wd:Q174570 ] . } union { ?author1 wdt:P69 wd:Q174570 . }\n{ ?author2 wdt:P108 wd:Q174570 . } union { ?author2 wdt:P1416 [ wdt:P361* wd:Q174570 ] . } union { ?author1 wdt:P69 wd:Q174570 . }\n{?author1 wdt:P184 ?author2 }\nUNION\n{?author2 wdt:P185 ?author1 }\n?author1 wdt:P21 ?gender1 .\nBIND ( IF(?gender1 = wd:Q6581097, \"3182BD\", \"E6550D\") AS ?rgb)\n}\n} AS %result\nWHERE {\nINCLUDE %result\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,sv,ru,zh\".\n}\n}",
        "complexity_description": "Multiple unions, nested queries, and conditional bindings",
        "complexity": "complex"
    },
    {
        "id": "2475",
        "valid_gpt_response": true,
        "query": "SELECT ?commune ?twin ?twinLabel ?layer ?coord WHERE {\n?commune wdt:P131+ wd:Q12694 ; wdt:P190 ?twin .\n?twin wdt:P625 ?coord .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?commune rdfs:label ?layer }\n}",
        "complexity_description": "Multiple joins, service call and language handling",
        "complexity": "medium"
    },
    {
        "id": "2476",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?libelle ?coord ?image ?layer WHERE {\n?item wdt:P138 ?type ; wdt:P625 ?coord .\n?type wdt:P279* wd:Q726 .\nOPTIONAL { ?item wdt:P18 ?image. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" .\n?type rdfs:label ?layer .\n?item rdfs:label ?libelle }\n}",
        "complexity_description": "Multiple joins, optional clause and service call",
        "complexity": "complex"
    },
    {
        "id": "2477",
        "valid_gpt_response": true,
        "query": "SELECT ?bridge ?bridgeLabel ?coords\nWHERE\n{\n?bridge wdt:P31/wdt:P279* wd:Q12280 ;\nwdt:P131 wd:Q1829 ;\nwdt:P625 ?coords .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, service call",
        "complexity": "medium"
    },
    {
        "id": "2478",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel (COUNT(DISTINCT ?sense) AS ?count) {\n?sense wdt:P5137 ?item .\nOPTIONAL { ?item rdfs:label ?itemLabel . FILTER(LANG(?itemLabel) = \"en\") }\n}\nGROUP BY ?item ?itemLabel\nORDER BY DESC(?count)\nLIMIT 100",
        "complexity_description": "Medium complexity due to OPTIONAL clause, GROUP BY and ORDER BY",
        "complexity": "medium"
    },
    {
        "id": "2479",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription\n(SAMPLE(?img) AS ?image)\n(COUNT(DISTINCT ?film) AS ?count)\n(GROUP_CONCAT(DISTINCT ?title; SEPARATOR = \"; \") AS ?films)\n(SAMPLE( ?film ) as ?sample_film)\nWHERE\n{\n{ ?film wdt:P136 wd:Q28026639 } UNION { ?film wdt:P9215 wd:Q3517772 ; wdt:P31 wd:Q11424 }\n?film wdt:P161 ?item.\nOPTIONAL { ?item wdt:P18 ?img }\nOPTIONAL { ?film wdt:P1476 ?title }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?item ?itemLabel ?itemDescription\nORDER BY DESC (?count)\nLIMIT 100",
        "complexity_description": "Multiple aggregations, unions, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "2480",
        "valid_gpt_response": true,
        "query": "SELECT\n?item ?itemLabel ?itemDescription\n?coor\n(SAMPLE ( ?img ) as ?image)\n(COUNT(DISTINCT ?film) AS ?count)\n(GROUP_CONCAT(DISTINCT ?title; SEPARATOR = \"; \") AS ?films)\n(SAMPLE( ?film ) as ?sample_film)\nWHERE\n{\n{ ?film wdt:P136 wd:Q28026639 } UNION { ?film wdt:P9215 wd:Q3517772 ; wdt:P31 wd:Q11424 }\n?film wdt:P915 ?item .\n?item wdt:P625 ?coor .\nOPTIONAL { ?item wdt:P18 ?img }\nOPTIONAL { ?film wdt:P1476 ?title }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?item ?itemLabel ?itemDescription ?coor\nORDER BY DESC (?count)",
        "complexity_description": "Multiple aggregations, unions, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "2481",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT\n?item ?itemLabel ?itemDescription (MIN(YEAR(?pub)) as ?year)\nWHERE\n{\n{ ?item wdt:P136 wd:Q28026639 } UNION { ?item wdt:P9215 wd:Q3517772 ; wdt:P31 wd:Q11424 }\nMINUS { ?item wdt:P915 [] }\n?item wdt:P577 ?pub .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?item ?itemLabel ?itemDescription\nORDER BY DESC(?year)\nLIMIT 200",
        "complexity_description": "Multiple UNION, MINUS and SERVICE clauses with GROUP BY and ORDER BY",
        "complexity": "complex"
    },
    {
        "id": "2482",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?item) as ?count) ?herrialdeaLabel WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?item wdt:P1296 ?cat .\n?item wdt:P1417 ?brit.\n?item wdt:P2924 ?rus.\n?item wdt:P4342 ?norske.\n?item wdt:P17 ?herrialdea .\n}\nGROUP by ?herrialdeaLabel\nORDER by DESC(?count)",
        "complexity_description": "Multiple triple patterns, SERVICE clause, GROUP BY and ORDER BY",
        "complexity": "complex"
    },
    {
        "id": "2483",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?image ?article\nWHERE\n{\n# Christmas around the world\n{?item wdt:P31?/wdt:P279* wd:Q19809 . }\nUNION\n{?item wdt:P31?/wdt:P279* wd:Q78189229 . }\nUNION\n#Christmas traditions\n{?item wdt:P31?/wdt:P279* wd:Q717040 . }\n?item wdt:P18 ?image .\nOPTIONAL { ?article schema:about ?item ;\nschema:inLanguage \"en\" ;\nschema:isPartOf [ wikibase:wikiGroup \"wikipedia\" ] }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } # Helps get the label in your language, if not, then en language\n}",
        "complexity_description": "Multiple UNIONs and OPTIONAL clause",
        "complexity": "medium"
    },
    {
        "id": "2484",
        "valid_gpt_response": true,
        "query": "SELECT ?party ?partyLabel ?firstDate ?total_MPs WITH {\nSELECT ?party (MIN(?date) AS ?firstDate) (count(distinct ?mp) as ?total_MPs) WHERE {\n?mp p:P39 ?mpStatement . ?mpStatement ps:P39 ?term . ?term wdt:P279 wd:Q16707842.\n?mpStatement pq:P580 ?date.\n?mpStatement pq:P4100 ?party.\nwd:Q918378 wdt:P585 ?1935elec . filter(?date >= ?1935elec)\n}\nGROUP BY ?party\n} AS %parties WHERE {\nINCLUDE %parties.\nfilter(?total_MPs = 1)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY desc(?firstDate) ?partyLabel",
        "complexity_description": "Multiple subqueries, filters and group by",
        "complexity": "complex"
    },
    {
        "id": "2485",
        "valid_gpt_response": true,
        "query": "SELECT\n(GROUP_CONCAT(?occupationLabel; SEPARATOR= \", \") as ?occupations)\n?item ?linkcount ?itemLabel\nWHERE\n{\n?item wdt:P27 wd:Q155 .\n?item wikibase:sitelinks ?linkcount .\nOPTIONAL{\n?item wdt:P106 ?occupation .\n?occupation rdfs:label ?occupationLabel .\nFILTER(LANG(?occupationLabel)=\"pt\") .\n} .\n?item rdfs:label ?itemLabel .\nFILTER(LANG(?itemLabel)=\"pt\") .\n}\nGROUP BY ?item ?linkcount ?itemLabel\nORDER BY DESC(?linkcount)\nLIMIT 100",
        "complexity_description": "Multiple filters, optional clause, and group by/order by/limit",
        "complexity": "complex"
    },
    {
        "id": "2486",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?sitelinks\nWITH\n{\nSELECT ?item ?sitelinks\nWHERE\n{\n#Minimum sitelinks\n?item wikibase:sitelinks ?sitelinks.\nhint:Prior hint:rangeSafe true.\nFILTER (?sitelinks > 20 )\n#Random stuff\n# BIND(RAND() AS ?random) . # Using this makes it not random\nBIND(SHA512(CONCAT(STR(RAND()), STR(?item))) AS ?random)\n}\nORDER BY ?random\nLIMIT 1000\n} AS %subquery1\nWITH\n{\nSELECT ?item ?sitelinks\nWHERE\n{\nINCLUDE %subquery1\n#Filters to remove undesired entries (templates, categories, ...)\nFILTER NOT EXISTS {?item wdt:P31 wd:Q11266439}\nFILTER NOT EXISTS {?item wdt:P31 wd:Q97950663}\nFILTER NOT EXISTS {?item wdt:P31 wd:Q4167836}\nFILTER NOT EXISTS {?item wdt:P31 wd:Q59541917}\nFILTER NOT EXISTS {?item wdt:P31 wd:Q14204246}\nFILTER NOT EXISTS {?item wdt:P31 wd:Q19842659}\nFILTER NOT EXISTS {?item wdt:P373 ?commonsCategory}\nFILTER NOT EXISTS {?item wdt:P301 ?categoryMainTopic}\nFILTER NOT EXISTS {?item wdt:P31 wd:Q15184295}\nFILTER NOT EXISTS {?item wdt:P1423 ?templateHasTopic}\nFILTER NOT EXISTS {?item wdt:P910 ?topicMainCategory}\nFILTER NOT EXISTS {?item wdt:P31 wd:Q20010800}\nFILTER NOT EXISTS {?item wdt:P360 ?isAListOf}\nFILTER NOT EXISTS {?item wdt:P31 wd:Q108783631}\nFILTER NOT EXISTS {?item wdt:P31 wd:Q11753321}\nFILTER NOT EXISTS {?item wdt:P4224 ?categoryContains}\nFILTER NOT EXISTS {?item wdt:P971 ?categoryCombinesTopics}\nFILTER NOT EXISTS {?item wdt:P31 wd:Q97303168}\nFILTER NOT EXISTS {?item wdt:P31 wd:Q59259626}\nFILTER NOT EXISTS {?item wdt:P31 wd:Q110010043}\nFILTER NOT EXISTS {?item wdt:P31 wd:Q1474116}\nFILTER NOT EXISTS {?item wdt:P31 wd:Q15647814}\nFILTER NOT EXISTS {?item wdt:P31 wd:Q19887878}\nFILTER NOT EXISTS {?item wdt:P31 wd:Q107344376}\nFILTER NOT EXISTS {?item wdt:P31 wd:Q36330215}\nFILTER NOT EXISTS {?item wdt:P31 wd:Q14296}\nFILTER NOT EXISTS {?item wdt:P31 wd:Q42032}\nFILTER NOT EXISTS {?item wdt:P2370 ?conversionToSIUnit}\nFILTER NOT EXISTS {?item wdt:P31 wd:Q4167410}\n#FILTER NOT EXISTS {?item wdt:P31 wd:aaa}\n}\nLIMIT 100\n} AS %subquery2\nWHERE\n{\nINCLUDE %subquery2\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}",
        "complexity_description": "Multiple subqueries, many filters and service calls",
        "complexity": "complex"
    },
    {
        "id": "2487",
        "valid_gpt_response": true,
        "query": "SELECT ?genreLabel (COUNT(DISTINCT ?item)/ ?item_count AS ?share) (xsd:string(?item_count) AS ?number_of_films_with_test_data)\nWITH {\nSELECT ?genre ?item ?bechdel_result WHERE{\nVALUES ?genre {wd:Q1762165\nwd:Q21802675\nwd:Q40831\nwd:Q5937792\nwd:Q21010853\nwd:Q132311\nwd:Q1196408\nwd:Q16575965\nwd:Q842256\nwd:Q6585139\nwd:Q19765983\nwd:Q24925\nwd:Q182015\nwd:Q111956902\nwd:Q21590660}\n?st ps:P5021 wd:Q4165246; pq:P9259 ?bechdel_result.\n?item p:P5021 ?st; wdt:P136/wdt:P279* ?genre; wdt:P31/wdt:P279* wd:Q11424\n}\n} AS %bechdel_by_genre\nWITH {\nSELECT ?genre (COUNT(DISTINCT ?item) AS ?item_count) WHERE{\nINCLUDE %bechdel_by_genre\n}\nGROUP BY ?genre\n} AS %item_count_by_genre\nWHERE {\nINCLUDE %bechdel_by_genre\nINCLUDE %item_count_by_genre\nFILTER(?bechdel_result IN (wd:Q105773168))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?genreLabel ?item_count",
        "complexity_description": "Multiple subqueries, filters, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "2488",
        "valid_gpt_response": true,
        "query": "SELECT\n(?student as ?writer) (concat('Writer: ',str(?studentLabel)) as ?writerLabel) (?teacher_or_infl as ?teacher_or_influencer)\n(concat('Teacher or Influencer: ',str(?teacher_or_inflLabel)) as ?teacher_or_influencerLabel)\n?image\n?location (concat('Writer place of birth: ',?spobLabel ) as ?locationLabel)\n?line {\nSELECT distinct ?student ?studentLabel ?teacher_or_infl ?teacher_or_inflLabel ?cds ?image (?spob as ?location) ?spobLabel ?line {\n{\nVALUES ?person {wd:Q913}\n?person wdt:P802* ?academyrelated .\n?academyrelated wdt:P1066* ?student .\n} union {\nVALUES ?person {wd:Q913}\n?person wdt:P802* ?academyrelated .\n?academyrelated wdt:P737* ?student .\n}\n?student wdt:P1066|wdt:P737 ?teacher_or_infl .\n?teacher_or_infl wdt:P19 ?tpob .\n?teacher_or_infl wdt:P802 ?student .\n?student wdt:P19 ?spob .\n?spob wdt:P625 ?cds.\n?tpob p:P625/psv:P625/wikibase:geoLatitude ?lat1 ; p:P625/psv:P625/wikibase:geoLongitude ?lon1 .\n?spob p:P625/psv:P625/wikibase:geoLatitude ?lat2 ; p:P625/psv:P625/wikibase:geoLongitude ?lon2 .\nBIND(CONCAT('LINESTRING(', STR(?lon1), ' ', STR(?lat1), ',', STR(?lon2), ' ', STR(?lat2), ')') AS ?str) . BIND(STRDT(?str, geo:wktLiteral) AS ?line) .\nOPTIONAL { ?student wdt:P18 ?image .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\n}",
        "complexity_description": "Multiple UNION, OPTIONAL, and SERVICE blocks with complex property paths",
        "complexity": "complex"
    },
    {
        "id": "2489",
        "valid_gpt_response": true,
        "query": "SELECT ?station ?stationLabel ?subwayLine ?coords ?line ?line_number ?layer ?rgb WHERE {\nVALUES ?search { wd:Q1510414 #light rail system search\n}\n?search wdt:P527|wdt:P121 ?lignes.#what are the lines of that light rail?\n?lignes wdt:P559 ?termini.#what are the termini of the lines of that light rail\n?station wdt:P31/wdt:P279* wd:Q548662; #any type of service station\nwdt:P5817 wd:Q55654238;#That are running\nwdt:P16 ?search;#That are part of the searched light rail network\nwdt:P625 ?coords;\nwdt:P81|wdt:P1192 ?subwayLine;\nwdt:P197 ?pred.\n?pred wdt:P625 ?coords_pred;wdt:P5817 wd:Q55654238;#Neighbours that are running\nwdt:P81|wdt:P1192 ?subwayLine_pred.\n?station p:P197 _:b1.\n_:b1 ps:P197 ?pred ;\npq:P5051 ?towards;\npq:P81|pq:P1192 ?line_pq.\n?subwayLine wdt:P5817 wd:Q55654238.#Lines that are running\noptional{?subwayLine wdt:P1671 ?line_number.}\nFILTER(?subwayLine_pred = ?lignes)#take only the lines if correspondance on the same line\nFILTER(?subwayLine = ?lignes)\nFILTER(?subwayLine = ?line_pq)#Take only the lines if next station on the same line\nFILTER(?towards = ?termini)\n?pred p:P625 ?node_pred .\n?node_pred psv:P625/wikibase:geoLatitude ?lat1 ;psv:P625/wikibase:geoLongitude ?lon1 .\n?node_pred a wikibase:BestRank.\n?station p:P625 ?node_station.\n?node_station psv:P625/wikibase:geoLatitude ?lat2 ;psv:P625/wikibase:geoLongitude ?lon2.\n?node_station a wikibase:BestRank.\nBIND(CONCAT(\"LINESTRING(\", STR(?lon1), \" \", STR(?lat1), \",\", STR(?lon2), \" \", STR(?lat2), \")\") AS ?str)\nBIND(STRDT(?str, geo:wktLiteral) AS ?line)\n?subwayLine wdt:P465 ?rgb.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .\n?subwayLine rdfs:label ?layer.\n?pred rdfs:label ?predLabel.\n?station rdfs:label ?stationLabel .\n} } GROUP BY ?station ?stationLabel ?subwayLine ?rgb ?predLabel ?layer ?coords ?line ?line_number\nORDER BY xsd:integer(?line_number) ?line_number ?subwayLine",
        "complexity_description": "Multiple filters, optional patterns, and complex property paths",
        "complexity": "complex"
    },
    {
        "id": "2490",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?pm ?pmLabel ?pmImage ?monarch ?monarchLabel ?monarchImage WITH {\n# not sure if there is a more straightforward way to access British monarchs (this query runs second)\nSELECT DISTINCT ?monarch ?monarch_start ?monarch_end WHERE {\nINCLUDE %start_UK .\nVALUES $MONARCH { wd:Q110324075 wd:Q9134365 wd:Q111722535 }\n?monarch wdt:P31 wd:Q5 .\n?monarch p:P39 ?ph .\n?ph ps:P39 $MONARCH .\n?ph pq:P580 ?monarch_start .\nOPTIONAL { ?ph pq:P582 ?monarch_end }\nFILTER (?monarch_start >= ?start_UK || ?monarch_end >= ?start_UK)\nBIND ( NOW() AS ?today )\nBIND(COALESCE(?monarch_end, ?today) as ?monarch_end) # handle missing end dates, hopefully it's just the current monarch\n} } AS %monarchs\n# Find the start date of the first Prime Minister so we can filter monarchs that reigned after this point (this query runs first)\nWITH { SELECT ?start_UK WHERE {\n?pm p:P39 ?pmph_stmt .\n?pmph_stmt ps:P39 wd:Q14211 .\n?pmph_stmt pq:P580 ?start_UK .\n}\nORDER BY ?start_UK\nLIMIT 1 } AS %start_UK\n# this query runs last and uses the select in line 2; it produces the visualisation specified in line 1\nWHERE {\nINCLUDE %monarchs\n?pm wdt:P31 wd:Q5 .\n?pm p:P39 ?node .\n?node ps:P39 wd:Q14211 .\nOPTIONAL { ?node pq:P580 ?pm_start }\nOPTIONAL { ?node pq:P582 ?pm_end }\nBIND ( NOW() AS ?today )\nBIND(COALESCE(?pm_end, ?today) as ?pm_end) # handle missing end dates, hopefully it's just the current president\nFILTER( (?monarch_start >= ?pm_start && ?monarch_start <= ?pm_end) || (?monarch_end >= ?pm_start && ?monarch_end <= ?pm_end ) ||\n(?pm_start >= ?monarch_start && ?pm_start <= ?monarch_end) || (?pm_end >= ?monarch_start && ?pm_end <= ?monarch_end ))\n# get images, use a default image if none found\nOPTIONAL { ?monarch wdt:P18 ?monarchImage }\nBIND(COALESCE(?monarchImage, <http://commons.wikimedia.org/wiki/Special:FilePath/Image_needed,_please_upload_to_commons.wikimedia.org.jpg>) as ?monarchImage)\nOPTIONAL { ?pm wdt:P18 ?pmImage }\nBIND(COALESCE(?pmImage, <http://commons.wikimedia.org/wiki/Special:FilePath/Image_needed,_please_upload_to_commons.wikimedia.org.jpg>) as ?pmImaage)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple subqueries, complex filtering and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "2491",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?president ?presidentLabel ?presidentImage ?monarch ?monarchLabel ?monarchImage WITH {\n# not sure if there is a more straightforward way to access British monarchs (this query runs second)\nSELECT DISTINCT ?monarch ?monarch_start ?monarch_end WHERE {\nINCLUDE %start_US .\nVALUES $MONARCH { wd:Q9134365 wd:Q111722535 wd:Q110324075 }\n?monarch wdt:P31 wd:Q5 .\n?monarch p:P39 ?ph .\n?ph ps:P39 $MONARCH .\n?ph pq:P580 ?monarch_start .\nOPTIONAL { ?ph pq:P582 ?monarch_end }\nFILTER (?monarch_start >= ?start_US || ?monarch_end >= ?start_US)\nBIND ( NOW() AS ?today )\nBIND(COALESCE(?monarch_end, ?today) as ?monarch_end) # handle missing end dates, hopefully it's just the current monarch\n} } AS %monarchs\n# Find the start date of the first US President so we can filter monarchs that reigned after this point (this query runs first)\nWITH { SELECT ?start_US WHERE {\n?x wdt:P31 wd:Q5 .\n?x p:P39 ?ph .\n?ph ps:P39 wd:Q11696 .\n?ph pq:P1545 ?number .\n?ph pq:P580 ?start_US .\nFILTER (?number = \"1\")\n} } AS %start_US\n# this query runs last and uses the select in line 2; it produces the visualisation specified in line 1\nWHERE {\nINCLUDE %monarchs\n?president wdt:P31 wd:Q5 .\n?president p:P39 ?node .\n?node ps:P39 wd:Q11696 .\nOPTIONAL { ?node pq:P1545 ?number }\nOPTIONAL { ?node pq:P580 ?president_start }\nOPTIONAL { ?node pq:P582 ?president_end }\nBIND ( NOW() AS ?today )\nBIND(COALESCE(?president_end, ?today) as ?president_end) # handle missing end dates, hopefully it's just the current president\nFILTER( (?monarch_start >= ?president_start && ?monarch_start <= ?president_end) || (?monarch_end >= ?president_start && ?monarch_end <= ?president_end ) ||\n(?president_start >= ?monarch_start && ?president_start <= ?monarch_end) || (?president_end >= ?monarch_start && ?president_end <= ?monarch_end ))\n# get images, use a default image if none found\nOPTIONAL { ?monarch wdt:P18 ?monarchImage }\nBIND(COALESCE(?monarchImage, <http://commons.wikimedia.org/wiki/Special:FilePath/Image_needed,_please_upload_to_commons.wikimedia.org.jpg>) as ?monarchImage)\nOPTIONAL { ?president wdt:P18 ?presidentImage }\nBIND(COALESCE(?presidentImage, <http://commons.wikimedia.org/wiki/Special:FilePath/Image_needed,_please_upload_to_commons.wikimedia.org.jpg>) as ?presidentImage)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple subqueries, complex filtering and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "2492",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?location ?rgb ?image WITH {\nSELECT $COUNTRY ?north ?east ?south ?west WHERE {\nVALUES $COUNTRY { wd:Q212 }\n$COUNTRY p:P1332 [psv:P1332 [wikibase:geoLatitude ?north]].\n$COUNTRY p:P1334 [psv:P1334 [wikibase:geoLongitude ?east]].\n$COUNTRY p:P1333 [psv:P1333 [wikibase:geoLatitude ?south]].\n$COUNTRY p:P1335 [psv:P1335 [wikibase:geoLongitude ?west]].\n} } AS %data\nWHERE {\nINCLUDE %data\n?item wdt:P17 $COUNTRY .\n?item p:P625 [\nps:P625 ?location ;\npsv:P625 [\nwikibase:geoLongitude ?longitude;\nwikibase:geoLatitude ?latitude;\n]\n].\nOPTIONAL { ?item wdt:P18 ?image }\nFILTER (?latitude <= ?north && ?latitude >= ?south && ?longitude >= ?west && ?longitude <= ?east)\nBIND ( (?north + ?south) / 2 AS ?centre )\nBIND ( COALESCE(\nIF(?latitude >= ?centre, \"0057b7\", 1/0),\n\"ffd700\"\n) AS ?rgb )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nLIMIT 10000 # try to increase the limit but might timeout or cause browser to hang when rendering the map",
        "complexity_description": "Multiple subqueries, filters, and bindings with conditional logic",
        "complexity": "complex"
    },
    {
        "id": "2493",
        "valid_gpt_response": true,
        "query": "SELECT ?lemma ?lexemeId WHERE {\n?lexemeId dct:language wd:Q10134;\nwikibase:lemma ?lemma.\nfilter(lang(?lemma) = 'tlh-latn')\n}",
        "complexity_description": "Simple query with basic filtering",
        "complexity": "simple"
    },
    {
        "id": "2494",
        "valid_gpt_response": true,
        "query": "SELECT ?controversies ?controversiesLabel ?sitelinks WHERE {\n# find all \"controversies\" items using CirrusSearch (SPARQL isn't the right tool for this job)\nSERVICE wikibase:mwapi {\nbd:serviceParam wikibase:endpoint \"www.wikidata.org\";\nwikibase:api \"Search\";\n# note: the \"inlabel\" keyword also searches aliases\n# exclude scholarly articles (Q13442814), there's plenty of them and we don't care about them here\n# also exclude categories (Q4167836, P4224); we'll filter them out again below, but excluding some here speeds things up\nmwapi:srsearch \"inlabel:controversies@en -haswbstatement:P31=Q13442814 -haswbstatement:P31=Q4167836 -haswbstatement:P4224\";\n# get as many search results at once as possible\nmwapi:srlimit \"max\".\n?controversies wikibase:apiOutputItem mwapi:title.\n}\n# get the number of sitelinks and the English label\n?controversies wikibase:sitelinks ?sitelinks;\nrdfs:label ?controversiesLabel.\nFILTER(LANG(?controversiesLabel) = \"en\")\n# filter out categories (-haswbstatement:P31=Q4167836 doesn't exclude categories that are instance of a subclass of Q4167836)\nFILTER(!STRSTARTS(?controversiesLabel, \"Category:\"@en))\n# also filter out templates (only one match at the moment, not worth adding this to the search string)\nFILTER(!STRSTARTS(?controversiesLabel, \"Template:\"@en))\n# filter out the item about the \"controversy\" concept\nFILTER(?controversies != wd:Q1255828)\n# require at least one sitelink (article)\nFILTER(?sitelinks > 0)\n}\nORDER BY DESC(?sitelinks)",
        "complexity_description": "Multiple filters, subqueries and service calls",
        "complexity": "complex"
    },
    {
        "id": "2495",
        "valid_gpt_response": true,
        "query": "SELECT ?suburb ?suburbLabel ?coordinate_location WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?suburb wdt:P31 wd:Q188509;\nwdt:P17 wd:Q664.\nOPTIONAL { ?suburb wdt:P625 ?coordinate_location. }\n}\nLIMIT 10000",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "2496",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?a ?aLabel ?b ?bLabel\n{?a wdt:P31 wd:Q5;\nwdt:P569 ?birth;\nwdt:P737 ?b .\n?b wdt:P31 wd:Q5 .\nFILTER (?birth > \"1590-01-01\"^^xsd:dateTime && ?birth < \"1750-01-01\"^^xsd:dateTime)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, filter with date range and service call",
        "complexity": "medium"
    },
    {
        "id": "2497",
        "valid_gpt_response": true,
        "query": "SELECT (SAMPLE(?familyNameLabel_) AS ?familyNameLabel) ?astronauts ?items (CONCAT(SUBSTR(STR(?astronauts / ?items * 100), 1, 5), \"%\") AS ?percent) WITH {\nSELECT ?familyName (COUNT(DISTINCT ?astronaut) AS ?astronauts) WHERE {\n?astronaut wdt:P31 wd:Q5;\nwdt:P450 ?mission;\nwdt:P734 ?familyName.\n}\nGROUP BY ?familyName\nHAVING(?astronauts > 1)\n} AS %astronautNames WITH {\nSELECT ?familyName (COUNT(*) AS ?items) WHERE {\nINCLUDE %astronautNames.\n?item wdt:P734 ?familyName.\n}\nGROUP BY ?familyName\n} AS %names WHERE {\nINCLUDE %astronautNames.\nINCLUDE %names.\n?familyName wdt:P1705 ?familyNameLabel_.\n}\nGROUP BY ?familyName ?astronauts ?items\nORDER BY DESC(?astronauts / ?items) ?familyNameLabel",
        "complexity_description": "Multiple subqueries, grouping, and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "2498",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?pic\nWHERE\n{\n{?item wdt:P279* wd:Q110313058 .}\nUNION\n{?item wdt:P279* wd:Q107626735 .}\n?item wdt:P18 ?pic .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } # Helps get the label in your language, if not, then en language\n}\n# Query by TiagoLubiana; License: CC0",
        "complexity_description": "Union of two triple patterns with a service call",
        "complexity": "medium"
    },
    {
        "id": "2499",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?rank ?rankLabel ?personne ?personneLabel WITH {\nSELECT ?rank (COUNT(DISTINCT ?inferior) AS ?rankOrder) {\n?rank wdt:P361 wd:Q163700 ; wdt:P3729+ ?inferior .\n}\nGROUP BY ?rank\n} AS %i\nWHERE {\nINCLUDE %i\n?personne wdt:P31 wd:Q5 ; p:P166 [ ps:P166 ?rank ; pq:P585 \"2021-12-31T00:00:00Z\"^^xsd:dateTime ] .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr\" }\n}\nORDER BY ?rankOrder ?personneLabel",
        "complexity_description": "Multiple subqueries, grouping, and ordering",
        "complexity": "complex"
    },
    {
        "id": "2500",
        "valid_gpt_response": true,
        "query": "select ?joe ?joeLabel ?height ?average_height ?difference {\n?joe wdt:P735 wd:Q17862013 .\n?joe p:P2048 ?statement .\n?statement a wikibase:BestRank .\n?statement psn:P2048/wikibase:quantityAmount ?height .\nbind (abs(?height - ?average_height) as ?difference)\n{\nselect (avg(?height) AS ?average_height) {\n?joe wdt:P735 wd:Q17862013 .\n?joe p:P2048 ?statement .\n?statement a wikibase:BestRank .\n?statement psn:P2048/wikibase:quantityAmount ?height .\n}\n}\nservice wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} order by asc (?difference) limit 30",
        "complexity_description": "Nested subqueries, multiple joins, and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "2501",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n{\nSELECT DISTINCT ?item WHERE {\n?item p:P570 ?statement_0.\n?statement_0 psv:P570 ?statementValue_0.\n?statementValue_0 wikibase:timePrecision ?precision_0.\nhint:Prior hint:rangeSafe \"true\"^^xsd:boolean.\nFILTER(?precision_0 >= 9 )\n?statementValue_0 wikibase:timeValue ?P570_0.\nhint:Prior hint:rangeSafe \"true\"^^xsd:boolean.\nFILTER((\"+1961-00-00T00:00:00Z\"^^xsd:dateTime <= ?P570_0) && (?P570_0 < \"+1962-00-00T00:00:00Z\"^^xsd:dateTime))\n?item p:P27 ?statement1.\n?statement1 (ps:P27/(wdt:P279*)) wd:Q668.\n?item p:P106 ?statement2.\n?statement2 (ps:P106/(wdt:P279*)) wd:Q36180.\n}\nLIMIT 100\n}\n}",
        "complexity_description": "Multiple filters, subqueries and property paths",
        "complexity": "complex"
    },
    {
        "id": "2502",
        "valid_gpt_response": true,
        "query": "SELECT ?sitelinks ?author ?authorLabel WHERE {\nSERVICE bd:sample { ?work wdt:P921 ?topic . bd:serviceParam bd:sample.limit 1000 }\n?work wdt:P50 ?author .\nFILTER NOT EXISTS {?author wdt:P101 ?fow }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?author wikibase:sitelinks ?sitelinks .\n}\nGROUP BY ?sitelinks ?score ?author ?authorLabel\nORDER BY DESC(?sitelinks)\nLIMIT 200",
        "complexity_description": "Multiple services, filters and grouping",
        "complexity": "complex"
    },
    {
        "id": "2503",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?name ?nameLabel (COUNT(DISTINCT ?person) AS ?count)\nWHERE\n{\n?name wdt:P31/wdt:P279* wd:Q202444 ;\np:P527 ?sJean ;\np:P527 ?sSecondName .\n?sJean ps:P527 wd:Q7521081 ;\npq:P1545 \"1\" .\n?sSecondName ps:P527 ?secondName ;\npq:P1545 \"3\" .\nOPTIONAL { ?person wdt:P735 ?name }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?name ?nameLabel\nORDER BY DESC(?count) ?secondNameLabel ?nameLabel",
        "complexity_description": "Multiple joins, subqueries, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "2504",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?image\n(\"Exemplo de premiacao:\" as ?s)\n?award_label ?sample_award ?sample_awardLabel\nWHERE\n{\n{\nSELECT ?item ?image\n(COUNT(DISTINCT ?award) as ?award_count)\n(CONCAT(\"Numero de premiacoes: \", STR( ?award_count )) AS ?award_label )\n(SAMPLE(?award) as ?sample_award)\nWHERE\n{\n?item wdt:P31 wd:Q5 .\n?item wdt:P39 wd:Q5176750 .\n?item wdt:P166 ?award .\n?item wdt:P18 ?image .\n}\nGROUP BY ?item ?itemLabel ?image ?award_label\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"pt-br\",\"pt\". } # Helps get the label in your language, if not, then en language\n}\nORDER BY DESC(?award_count)",
        "complexity_description": "Multiple subqueries, grouping and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "2505",
        "valid_gpt_response": true,
        "query": "SELECT ?parishLabel ?coords ?partLabel ?synodLabel (?partLabel as ?layer)\nWHERE\n{\n?parish wdt:P31 wd:Q5124673.\n?parish wdt:P361 ?part .\n?part wdt:P361 ?synod .\nwd:Q68815318 wdt:P625 ?center. # Place that is the centre point of the search\nSERVICE wikibase:around {\n?parish wdt:P625 ?coords .\nbd:serviceParam wikibase:center ?center .\nbd:serviceParam wikibase:radius \"500\"\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple services, filters and joins",
        "complexity": "complex"
    },
    {
        "id": "2506",
        "valid_gpt_response": true,
        "query": "select distinct ?item ?itemLabel ?itemDescription ?pob ?coord where {\n?item wdt:P31 wd:Q5;\nwdt:P39 wd:Q19546;\nwdt:P19 ?pob.\n?pob wdt:P625 ?coord.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nORDER BY DESC(?sitelinks)",
        "complexity_description": "Multiple triple patterns, SERVICE clause and ORDER BY",
        "complexity": "medium"
    },
    {
        "id": "2507",
        "valid_gpt_response": true,
        "query": "SELECT ?koord ?item ?itemLabel WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?item wdt:P1296 ?GEC. hint:Prior hint:runFirst true.\n?item wdt:P1417 ?EB.\n?item wdt:P2924 ?GRE.\n?item wdt:P4342 ?norske.\n?item wdt:P31 wd:Q5.\n?item wdt:P19 ?jaio.\n?jaio wdt:P625 ?koord.\n}",
        "complexity_description": "Multiple triple patterns, SERVICE clause and property paths",
        "complexity": "medium"
    },
    {
        "id": "2508",
        "valid_gpt_response": true,
        "query": "SELECT ?New_Year ?New_YearLabel (SAMPLE(?image) as ?img) WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"id,en\". }\n?New_Year wdt:P279/wdt:P279* wd:Q34812.\nOPTIONAL { ?New_Year wdt:P18 ?image. }\n}\nGROUP BY ?New_Year ?New_YearLabel\n#defaultView:ImageGrid",
        "complexity_description": "Multiple triple patterns, optional clause, and grouping",
        "complexity": "medium"
    },
    {
        "id": "2509",
        "valid_gpt_response": true,
        "query": "SELECT\n?loc ?locLabel ?geoshape ?decade\n?dg\n(URI(concat(str(?dg),\"#P8701\")) as ?available_census)\n(CONCAT(?locLabel, \": \", GROUP_CONCAT(DISTINCT ?year; separator=\", \")) as ?available_censusLabel)\nWHERE\n{\n?dg wdt:P8701 / wdt:P585 ?d .\nFILTER( year(?d) > 1959)\nBIND( str(YEAR(?d)) as ?year)\nBIND( CONCAT(str(FLOOR(YEAR(?d)/10)*10),\"s\") as ?decade)\n?dg wdt:P276 ?loc .\nOPTIONAL { ?loc wdt:P3896 ?geoshape }\nBIND(URI(concat(str(?dg),\"#P8701\")) as ?available_census)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?loc ?locLabel ?geoshape ?decade ?dg\nORDER BY DESC(?decade)",
        "complexity_description": "Multiple filters, bindings, and optional patterns with grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "2510",
        "valid_gpt_response": true,
        "query": "SELECT ?lang ?count WITH {\nSELECT ?work ?label WHERE {\n?work wdt:P195?/wdt:P361? wd:Q63160499. # Khalili Collections, or individual collections, or objects within collections\n?work (rdfs:label|skos:altLabel) ?label\nFILTER(lang(?label) != \"en\") } } AS %core\nWHERE { {\nSELECT ?lang (COUNT(?label) AS ?count) WHERE {\nINCLUDE %core.\nBIND(lang(?label) AS ?langcode).\nOPTIONAL { ?language wdt:P218 ?langcode; rdfs:label ?langname FILTER(lang(?langname) = \"en\")}\nBIND(IF (BOUND(?langname), ?langname, ?langcode) AS ?lang)\n} GROUP BY ?lang\n} UNION {\nSELECT (\"TOTAL\" AS ?lang) (COUNT(?label) AS ?count) WHERE {\nINCLUDE %core.\n} }\n} order BY DESC(?count) ?lang",
        "complexity_description": "Multiple subqueries, unions, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "2511",
        "valid_gpt_response": true,
        "query": "SELECT ?thing ?thingLabel WHERE {\nhint:Query hint:optimizer \"None\".\nBIND(NOW() - \"P20Y\"^^xsd:duration AS ?thenPrecise)\nBIND(STRDT(REPLACE(STR(?thenPrecise), \"T.*\", \"T00:00:00Z\"), xsd:dateTime) AS ?then)\n?thing p:P571|p:P580 [\npsv:P571|psv:P580 [\nwikibase:timeValue ?then;\nwikibase:timePrecision 11 # day\n];\na wikibase:BestRank\n].\nMINUS { ?thing wdt:P576|wdt:P582 ?end. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple binds, filters and minus clause",
        "complexity": "complex"
    },
    {
        "id": "2512",
        "valid_gpt_response": true,
        "query": "SELECT ?place ?placeLabel ?location WHERE {\nSERVICE wikibase:around {\n?place wdt:P625 ?location.\nbd:serviceParam wikibase:center \"[AUTO_COORDINATES]\" ;\nwikibase:radius \"1.5\";\nwikibase:distance ?dist.\n}\n?place wdt:P31/wdt:P279* wd:Q88985865\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple services, filters and joins",
        "complexity": "complex"
    },
    {
        "id": "2513",
        "valid_gpt_response": true,
        "query": "select (concat(str(?day), \"/\", str(?month)) as ?date) (count(distinct ?ps) as ?count)\nwhere {\n?MP p:P39 ?ps . ?ps ps:P39 ?term . ?term wdt:P279 wd:Q16707842 .\n?ps pq:P2715 ?election .\n?ps pq:P580 ?elected .\n?election wdt:P31* wd:Q7864918 .\nbind(day(?elected) as ?day) . bind(month(?elected) as ?month) .\nfilter(year(?elected) >= 1880) .\n} group by ?day ?month order by desc(?count)",
        "complexity_description": "Multiple joins, filters, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "2514",
        "valid_gpt_response": true,
        "query": "SELECT ?st ?stLabel ?sl ?coords ?line ?layer ?rgb WHERE {\n?search wdt:P31 wd:Q15640053;wdt:P527 ?lignes.\n?lignes wdt:P559 ?termini.\n?st wdt:P31 wd:Q2175765;wdt:P17 wd:Q142;(wdt:P361|wdt:P16) ?search;wdt:P625 ?coords;(wdt:P81|wdt:P1192) ?sl;wdt:P197 ?pred;p:P197[ps:P197 ?pred;pq:P5051 ?towards;(pq:P81|pq:P1192) ?line_pq].\n?pred wdt:P625 ?coords_pred;(wdt:P81|wdt:P1192) ?sl_pred.\nOPTIONAL{?sl wdt:P1671 ?ln.}\nFILTER(?sl_pred = ?lignes)FILTER(?sl = ?lignes)FILTER(?towards = ?termini)\nMINUS{?st (wdt:P576|wdt:P582|wdt:P3999) ?dispar.}\nMINUS{?st (wdt:P5817|wdt:P5816) ?interdit.VALUES ?interdit{wd:Q811683 wd:Q63065035 wd:Q12377751 wd:Q97317113 wd:Q55653430 wd:Q30108381 wd:Q55570340 wd:Q11639308 wd:Q104664889}}\n?pred p:P625[psv:P625[wikibase:geoLatitude ?lat1;wikibase:geoLongitude ?lon1]; rdf:type wikibase:BestRank].\n?st p:P625[psv:P625[wikibase:geoLatitude ?lat2;wikibase:geoLongitude ?lon2]; rdf:type wikibase:BestRank].\nBIND(STRDT(CONCAT(\"LINESTRING(\",STR(?lon1),\" \",STR(?lat1),\",\",STR(?lon2),\" \",STR(?lat2),\")\"),geo:wktLiteral)AS ?line)\n?sl wdt:P465 ?rgb.\nSERVICE wikibase:label{bd:serviceParam wikibase:language \"fr\". ?sl rdfs:label ?layer. ?st rdfs:label ?stLabel}\n}\nGROUP BY ?st ?stLabel ?sl ?rgb ?layer ?coords ?line\nORDER BY ?ln ?sl",
        "complexity_description": "Multiple joins, filters, and minus clauses with complex property paths",
        "complexity": "complex"
    },
    {
        "id": "2515",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?site ?siteLabel ?coordinates ?image ?value\nWHERE\n{\n?site wdt:P10280 ?value; wdt:P625 ?coordinates.\nOPTIONAL { ?site wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "2516",
        "valid_gpt_response": true,
        "query": "SELECT ?uni ?uniLabel (SAMPLE(?location) AS ?location) (SAMPLE(?inception) AS ?inception) WHERE {\n?uni wdt:P31/wdt:P279* wd:Q3918 ;\nwdt:P571 ?inception .\n{\n?uni wdt:P625 ?location .\n} UNION {\n?uni p:P159/pq:P625 ?location .\n}\nFILTER (YEAR(?inception) < 1500)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?uni ?uniLabel",
        "complexity_description": "Multiple patterns, UNION, FILTER and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "2517",
        "valid_gpt_response": true,
        "query": "SELECT ?place ?placeLabel ?location WHERE {\nSERVICE wikibase:around {\n?place wdt:P625 ?location.\nbd:serviceParam wikibase:center \"[AUTO_COORDINATES]\" ;\nwikibase:radius \"20\";\nwikibase:distance ?dist.\n}\n?place wdt:P31/wdt:P279* wd:Q152081\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple services, filters and joins",
        "complexity": "complex"
    },
    {
        "id": "2518",
        "valid_gpt_response": true,
        "query": "SELECT\n?item ?itemLabel ?pic\nWHERE\n{\nwd:Q109639255 wdt:P6803 ?item .\nOPTIONAL {?item wdt:P18 ?pic}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Simple query with one triple pattern and an optional clause",
        "complexity": "simple"
    },
    {
        "id": "2519",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?naissance ?geoloc ?image WHERE {\n?item wdt:P106/wdt:P279* wd:Q133485.\n?item wdt:P19 ?lieudenaissance.\n?lieudenaissance wdt:P625 ?geoloc .\n?item wdt:P569 ?naissance, ?date.\nOPTIONAL { ?item wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,he,ru,de\". }\n}\nORDER BY ASC(?naissance)",
        "complexity_description": "Multiple joins and optional clause",
        "complexity": "medium"
    },
    {
        "id": "2520",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel (COUNT(DISTINCT ?position_statement) AS ?ministerCount)\nWHERE\n{\n# Essere umano di cittadinanza italiana\n?item wdt:P31 wd:Q5.\n?item wdt:P27 wd:Q38.\n# Non piu vecchio/a di Mattarella\n?item wdt:P569 ?birth.\nfilter (?birth > \"1941-07-23\"^^xsd:dateTime).\nfilter (?birth < \"1972-01-24\"^^xsd:dateTime).\n# Non morto/a\nMINUS { ?item wdt:P570 ?death. }.\n# Ex parlamentari\n?item wdt:P39/wdt:P361/wdt:P361 wd:Q1117578.\nMINUS { ?item wdt:P39/wdt:P361/wdt:P361 wd:Q1117578 ;\npq:P580 ?start FILTER (?start >= \"2018-01-01T00:00:00Z\"^^xsd:dateTime) . }\n# Ex ministri\n?item p:P39 ?position_statement .\n?position_statement ps:P39/wdt:P361 wd:Q3687318.\n# Ma non ministri recenti\nMINUS { ?item p:P39 ?position_recent .\n?position_recent ps:P39/wdt:P361 wd:Q3687318.\n?position_recent pq:P582 ?position_end\nFILTER (?position_end >= \"2014-01-01T00:00:00Z\"^^xsd:dateTime). }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],it\". }\n}\nGROUP BY ?item ?itemLabel",
        "complexity_description": "Multiple filters, MINUS clauses and property paths",
        "complexity": "complex"
    },
    {
        "id": "2521",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?occLabel WHERE {\n?item wdt:P31 wd:Q5;\nwdt:P27 wd:Q27;\nwdt:P21 wd:Q6581072;\nwdt:P106/wdt:P279* wd:Q901 .\nMINUS { ?article schema:about ?item }\nOPTIONAL { ?item wdt:P106 ?occ }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, MINUS and OPTIONAL clauses",
        "complexity": "complex"
    },
    {
        "id": "2522",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel (count(distinct ?article) as ?count) ?coords ?image WITH\n{\nSELECT ?item WHERE {\n?item wdt:P131* wd:Q12709 .\nFILTER NOT EXISTS { ?item wdt:P31/wdt:P279* wd:Q1496967 }\nFILTER NOT EXISTS { ?item wdt:P31/wdt:P279* wd:Q2385804 }\nFILTER NOT EXISTS { ?item wdt:P31/wdt:P279* wd:Q271669 }\nFILTER NOT EXISTS { ?item wdt:P31/wdt:P279* wd:Q35145263 }\nFILTER NOT EXISTS { ?item wdt:P31/wdt:P279* wd:Q728937 }\nFILTER NOT EXISTS { ?item wdt:P31/wdt:P279* wd:Q12819564 }\nFILTER NOT EXISTS { ?item wdt:P31/wdt:P279* wd:Q1292279 }\n#FILTER NOT EXISTS { ?item wdt:P31/wdt:P279* wd:Q27096213 }\nFILTER NOT EXISTS { ?item wdt:P31/wdt:P279* wd:Q83620 }\n}\n} AS %i\nWHERE\n{\nINCLUDE %i .\n?item wdt:P625 ?coords .\nOPTIONAL { ?item wdt:P18 ?image }\n?article schema:about ?item\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?item ?itemLabel ?coords ?image\nHAVING (?count >= 10)\nORDER BY DESC(?count)",
        "complexity_description": "Multiple filters, subqueries, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "2523",
        "valid_gpt_response": true,
        "query": "SELECT ?state ?stateLabel (COUNT(DISTINCT(?band)) AS ?bandCount)\n(GROUP_CONCAT(DISTINCT ?bandLabel; SEPARATOR=\", \") AS ?bands)\nWHERE {\n?band p:P31 ?statement1.\n?statement1 (ps:P31/(wdt:P279*)) wd:Q215380. # item is instance of musical group or subclass (ie. rock group)\n?band p:P136 ?statement0.\n?statement0 (ps:P136/(wdt:P279*)) wd:Q25554481. # band genre is punk music or subclass\n?band wdt:P740 ?city. # band formed in city\n?city wdt:P131* ?state. # county in admin body (state)\n?state wdt:P31 wd:Q35657. # state is instance of US State\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\".\n?state rdfs:label ?stateLabel.\n?band rdfs:label ?bandLabel.}\n}\nGROUP BY ?state ?stateLabel\nORDER BY DESC(?bandCount)",
        "complexity_description": "Multiple joins, subqueries, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "2524",
        "valid_gpt_response": true,
        "query": "SELECT\n?number_of_citing_works\n?author ?authorLabel\n?organization ?organizationLabel\n?example_work ?example_workLabel\nWITH {\nSELECT DISTINCT ?author WHERE {\n?author wdt:P27| wdt:P1416/wdt:P17 | wdt:P108/wdt:P17 wd:Q117 .\n}\n} AS %authors\nWITH {\nSELECT\n?author\n(COUNT(DISTINCT ?citing_work) AS ?number_of_citing_works)\n(SAMPLE(?organization_) AS ?organization)\n(SAMPLE(?work) AS ?example_work)\nWHERE {\nINCLUDE %authors\n?work wdt:P50 ?author .\nOPTIONAL { ?citing_work wdt:P2860 ?work . }\nOPTIONAL {\n?author wdt:P1416 | wdt:P108 ?organization_ .\n?organization_ wdt:P17 wd:Q43\n}\n}\nGROUP BY ?author\n} AS %results\nWHERE {\nINCLUDE %results\nservice wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}\nORDER BY DESC(?number_of_citing_works)",
        "complexity_description": "Multiple subqueries, optional patterns, and grouping",
        "complexity": "complex"
    },
    {
        "id": "2525",
        "valid_gpt_response": true,
        "query": "SELECT ?production ?productionLabel ?actress ?actressLabel (group_concat(?instanceofLabel ;separator=\", \") as ?typeofproduction)\nWHERE {\n?production wdt:P144 wd:Q170583 ; # thing based on Pride & Prejudice\np:P161 [ ps:P161 ?actress; pq:P453 wd:Q2223341 ] . # cast member has character role elizabeth bennet\n?production wdt:P31 ?instanceof\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?instanceof rdfs:label ?instanceofLabel . # i don't know what this bit does except that it's needed\n?production rdfs:label ?productionLabel .\n?actress rdfs:label ?actressLabel .\n}\n}\ngroup by ?production ?productionLabel ?actress ?actressLabel",
        "complexity_description": "Multiple joins, subqueries and grouping",
        "complexity": "complex"
    },
    {
        "id": "2526",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?person ?personLabel ?born ?died\n(group_concat(distinct ?classname;separator=\", \") as ?class) (count(distinct ?mp) as ?descendant_mp_count) WHERE {\n?mp p:P39 ?positionStatement .\n?positionStatement ps:P39 wd:Q77685926 . # this person is a member of the current parliament\n{ ?mp (wdt:P25|wdt:P22)* ?person . } # mp's mother or father, or their mother or father, and so on\nfilter not exists { ?person wdt:P31 wd:Q5 } . # the ancestor is not \"a human\"\n?person wdt:P31 ?type . ?type rdfs:label ?classname . filter(lang(?classname) = \"en\") .\nOPTIONAL { ?person wdt:P569 ?born } .\nOPTIONAL { ?person wdt:P570 ?died } .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n} group by ?person ?personLabel ?born ?died order by ?personLabel",
        "complexity_description": "Multiple joins, subqueries, and filters",
        "complexity": "complex"
    },
    {
        "id": "2527",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?prop WHERE {\n?item ?prop ?value .\n?value pq:P407 wd:Q36846.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "2528",
        "valid_gpt_response": true,
        "query": "select ?sportswoman ?sportswomanLabel ?professionLabel ?first with {\nselect distinct ?profession where {\n?profession wdt:P279* wd:Q2066131 .\n} } as %sport_professions with {\nselect ?sportswoman ?profession ?date_of_birth where {\ninclude %sport_professions\n?sportswoman wdt:P21 wd:Q6581072 .\n?sportswoman wdt:P569 ?date_of_birth .\n?sportswoman wdt:P106 ?profession .\n} } as %sportswomen with {\nselect ?profession (MIN(?date_of_birth) as ?first) where {\ninclude %sportswomen\n} group by ?profession } as %world_firsts with {\nselect ?sportswoman ?profession ?first where {\ninclude %sportswomen\ninclude %world_firsts\nFILTER( ?first = ?date_of_birth && BOUND(?profession))\n} } as %final_results where {\ninclude %final_results\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple subqueries, joins and filters",
        "complexity": "complex"
    },
    {
        "id": "2529",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel WHERE {\n?item wdt:P31 wd:Q702081 .\nMINUS { ?item wdt:P576 [] }\nMINUS { ?item wdt:P1366 [] }\nMINUS {\n?item p:P31 ?inStatement .\n?inStatement pq:P582 [] .\nMINUS { ?item p:P31 ?p.\n?p ps:P31 wd:Q702081; pq:P580 ?start .\nFILTER NOT EXISTS { ?p pq:P582 []}\n}\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"nl,en\". }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple MINUS clauses, nested queries and FILTER NOT EXISTS",
        "complexity": "complex"
    },
    {
        "id": "2530",
        "valid_gpt_response": true,
        "query": "select distinct ?item ?itemLabel ?itemDescription ?pob ?coord where {\n?item wdt:P31 wd:Q5;\nwdt:P39 wd:Q11696;\nwdt:P19 ?pob.\n?pob wdt:P625 ?coord.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nORDER BY DESC(?sitelinks)",
        "complexity_description": "Multiple triple patterns, SERVICE clause and ORDER BY",
        "complexity": "medium"
    },
    {
        "id": "2531",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?production ?productionLabel ?actressLabel ?dateBirth ?dateProduction ?age WHERE {\n?production wdt:P144 wd:Q170583 ; # thing based on Pride & Prejudice\np:P161 [ ps:P161 ?actress; pq:P453 wd:Q2223341 ] . # cast member has character role Elizabeth Bennet\n?actress wdt:P569 ?dateBirth .\n?production wdt:P577 ?dateProduction .\nBIND ( ((?dateProduction - ?dateBirth)/365.24) AS ?age )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?age",
        "complexity_description": "Multiple joins, subqueries and calculations",
        "complexity": "complex"
    },
    {
        "id": "2532",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?born ?died\n{\n?item p:P570 [ a wikibase:BestRank; psv:P570 [ wikibase:timeValue ?born; wikibase:timePrecision 11 ]] .\nFILTER( MONTH(?born) = 1 && DAY(?born) = 1 )\n?item p:P569 [ a wikibase:BestRank; psv:P569 [ wikibase:timeValue ?died; wikibase:timePrecision 11 ]] .\nFILTER( MONTH(?died) = 1 && DAY(?died) = 1 )\n?item wdt:P31 wd:Q5 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nLIMIT 1000",
        "complexity_description": "Multiple filters, multiple triple patterns and service call",
        "complexity": "complex"
    },
    {
        "id": "2533",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?lexeme (GROUP_CONCAT(DISTINCT ?lemma; separator = \", \") AS ?lemmas) {\n?lexeme dct:language wd:Q12107 ; wikibase:lemma ?lemma ; ontolex:sense [] .\n}\nGROUP BY ?lexeme\nORDER BY ?lemmas",
        "complexity_description": "Uses GROUP_CONCAT, DISTINCT, and GROUP BY",
        "complexity": "medium"
    },
    {
        "id": "2534",
        "valid_gpt_response": true,
        "query": "SELECT ?event ?eventLabel (COUNT(?video_game) as ?count) WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?video_game wdt:P31 wd:Q7889.\n?video_game p:P6949 ?node.\n?node pq:P9731 ?event.\n}\nGROUP BY ?event ?eventLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple joins, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "2535",
        "valid_gpt_response": true,
        "query": "SELECT ?chef ?chefLabel ?restaurant ?restaurantLabel WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?restaurant wdt:P31 wd:Q11707;\np:P166 ?awardStatement.\n?awardStatement ps:P166 wd:Q20824563.\nFILTER(NOT EXISTS { ?awardStatement pq:P582 _:b26. })\n{\n?chef p:P108 ?employerStatement.\n?employerStatement ps:P108 ?restaurant;\npq:P39 wd:Q3499072.\n}\nUNION\n{\n?restaurant wdt:P1037 ?chef.\n?chef wdt:P106 wd:Q3499072.\n}\nUNION {\n?restaurant wdt:P127 ?chef.\n?chef wdt:P106 wd:Q3499072.\n}\n?chef wdt:P21 wd:Q6581072.\n?awardStatement pq:P1114 3.\n}\nLIMIT 100",
        "complexity_description": "Multiple UNIONs, FILTER NOT EXISTS, and multiple triple patterns",
        "complexity": "complex"
    },
    {
        "id": "2536",
        "valid_gpt_response": true,
        "query": "SELECT ?property ?propertyLabel (COUNT(?value) AS ?count) {\nVALUES ?language { wd:Q188 } # <= change the language here\n?property p:P2302 [ a wikibase:BestRank ; ps:P2302 wd:Q52004125 ; pq:P2305 wd:Q51885771 ] ; p:P2302 [ a wikibase:BestRank ; ps:P2302 wd:Q55819106 ; pq:P2305 ?language ] .\nFILTER NOT EXISTS {\n?property p:P2302 [ a wikibase:BestRank ; ps:P2302 wd:Q52004125 ; pq:P2305 ?otherType ] .\nFILTER(?otherType != wd:Q51885771) .\n}\nFILTER NOT EXISTS {\n?property p:P2302 [ a wikibase:BestRank ; ps:P2302 wd:Q55819106 ; pq:P2305 ?otherLanguage ] .\nFILTER(?otherLanguage != ?language) .\n}\n?property wikibase:directClaim ?wdt .\nOPTIONAL { ?lexeme dct:language ?language ; ?wdt ?value }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr,en\" . }\n}\nGROUP BY ?property ?propertyLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple filters, optional patterns, and service calls",
        "complexity": "complex"
    },
    {
        "id": "2537",
        "valid_gpt_response": true,
        "query": "SELECT ?state ?string ?languages ?labels ?percent ?ratio\nWITH {\nSELECT DISTINCT ?state WHERE {\n?state wdt:P31/wdt:P279* wd:Q3624078;\np:P463 ?memberOfStatement.\n?memberOfStatement a wikibase:BestRank;\nps:P463 wd:Q1065.\nMINUS { ?memberOfStatement pq:P582 ?endTime. }\nMINUS { ?state wdt:P576|wdt:P582 ?end. }\n}\n} AS %states\nWITH {\nSELECT ?state ?label ?string WHERE {\nINCLUDE %states.\n?state rdfs:label ?label.\nBIND(STR(?label) AS ?string)\n}\n} AS %labelsAndStrings\nWITH {\nSELECT ?state ?string (COUNT(*) AS ?languages) WHERE {\nINCLUDE %labelsAndStrings.\n}\nGROUP BY ?state ?string\nHAVING(?languages > 1)\n} AS %stringsAndLanguages\nWITH {\nSELECT ?state (COUNT(*) AS ?labels) WHERE {\nINCLUDE %labelsAndStrings.\n}\nGROUP BY ?state\n} AS %labels\nWHERE {\nINCLUDE %stringsAndLanguages.\nINCLUDE %labels.\nBIND(?languages / ?labels AS ?ratio)\nBIND(CONCAT(SUBSTR(STR(?ratio * 100), 1, 5), \"%\") AS ?percent)\n}\nORDER BY DESC(?languages)",
        "complexity_description": "Multiple nested WITH clauses, subqueries, and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "2538",
        "valid_gpt_response": true,
        "query": "SELECT ?teamLabel ?player ?playerLabel ?positionLabel ?from ?to\nWHERE\n{\n# ?player wdt:P54 ?team.\n?player p:P54 ?statement.\n?statement ps:P54 ?team.\nOPTIONAL{ ?statement pq:P413 ?position. }\nOPTIONAL{ ?statement pq:P580 ?startDate. }\nOPTIONAL{ ?statement pq:P582 ?endDate. }\n?team wdt:P31 wd:Q12973014;\nwdt:P463 wd:Q109743445.\nBIND(YEAR(?startDate) AS ?from)\nBIND(YEAR(?endDate) AS ?to)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\".\n?team rdfs:label ?teamLabel.\n?player rdfs:label ?playerLabel.\n?position rdfs:label ?positionLabel.\n}\n}\nORDER BY ?teamLabel ?playerLabel",
        "complexity_description": "Multiple optional patterns, property paths, and service calls",
        "complexity": "complex"
    },
    {
        "id": "2539",
        "valid_gpt_response": true,
        "query": "SELECT ?layer ?article ?person ?personLabel ?personDescription ?coord ?pic ?picGrave ?DoD\nWHERE {\n?person wdt:P119 wd:Q311; #Place of burial\np:P119 [\npq:P965 ?graveplot;\npq:P625 ?coord];\nwdt:P570 ?DoD.\nOPTIONAL{ ?person wdt:P18 ?pic .} # If we have an illustration\nOPTIONAL{ ?person wdt:P1442 ?picGrave .} # If we have a picture of the grave\nOPTIONAL {\n?article schema:about ?person .\n?article schema:inLanguage \"fr\" .\n?article schema:isPartOf <https://fr.wikipedia.org/> .\n}\nOPTIONAL { ?person wdt:P21 ?group .} # Occupation in Layer\n#BIND(year(?DoD) AS ?Deces)\nBIND(\nIF(?DoD < \"1850-01-01T00:00:00Z\"^^xsd:dateTime, \"1800-1849\",\nIF(?DoD < \"1900-01-01T00:00:00Z\"^^xsd:dateTime, \"1850-1899\",\nIF(?DoD < \"1950-01-01T00:00:00Z\"^^xsd:dateTime, \"1900-1949\",\nIF(?DoD < \"2020-01-01T00:00:00Z\"^^xsd:dateTime, \"1950-2000\",\n\"2000-2022\"))))\nAS ?layer).\n#FILTER (YEAR(?DoD) >= 2000)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr, en\" .}\n}",
        "complexity_description": "Multiple OPTIONAL clauses, BIND with nested IF conditions, and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "2540",
        "valid_gpt_response": true,
        "query": "SELECT ?sculpture ?sculptureLabel ?coordinates ?image ?woman ?womanLabel WITH {\nSELECT ?sculpture (SAMPLE(?coordinates_) AS ?coordinates) (SAMPLE(?image_) AS ?image) ?woman WHERE {\n?sculpture wdt:P31/wdt:P279* wd:Q860861;\nwdt:P17 wd:Q38;\nwdt:P180|wdt:P547 ?woman.\nOPTIONAL { ?sculpture wdt:P625 ?coordinates_. }\nOPTIONAL { ?sculpture wdt:P18 ?image_. }\n?woman wdt:P31 wd:Q5;\nwdt:P21/wdt:P279? wd:Q6581072.\n}\nGROUP BY ?sculpture ?woman\n} AS %results WHERE {\nINCLUDE %results.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple subqueries, optional patterns, and service calls",
        "complexity": "complex"
    },
    {
        "id": "2541",
        "valid_gpt_response": true,
        "query": "SELECT\n?language1 ?language1Label ?language2 ?language2Label\n?number_of_lexemes\nWITH {\nSELECT ?language1 ?language2 (COUNT(*) AS ?number_of_lexemes) {\n[] ^wdt:P5137 / ^ontolex:sense ?lexeme1, ?lexeme2 .\nFILTER (?lexeme1 != ?lexeme2)\n?lexeme1 dct:language ?language1 .\n?lexeme2 dct:language ?language2 .\nFILTER (?language1 != ?language2)\nFILTER (STR(?language1) > STR(?language2))\n}\nGROUP BY ?language1 ?language2\nORDER BY DESC(?number_of_lexemes)\nLIMIT 100\n} AS %result\n{\nINCLUDE %result\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?number_of_lexemes)",
        "complexity_description": "Multiple filters, subqueries, and service calls",
        "complexity": "complex"
    },
    {
        "id": "2542",
        "valid_gpt_response": true,
        "query": "select distinct ?item ?itemLabel ?itemDescription ?pob ?coord where {\n?item wdt:P31 wd:Q5;\nwdt:P39 wd:Q1048744;\nwdt:P19 ?pob.\n?pob wdt:P625 ?coord.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nORDER BY DESC(?sitelinks)",
        "complexity_description": "Multiple triple patterns, SERVICE clause and ORDER BY",
        "complexity": "medium"
    },
    {
        "id": "2543",
        "valid_gpt_response": true,
        "query": "SELECT ?from ?fromLabel ?image1 ?to ?toLabel ?image2 ?edgeLabel\nWITH {\nSELECT ?start ?startimage ?image1 ?from ?prop ?coll WHERE {\nVALUES ?start {wd:Q174772}. # Choose person to start with\n?start wdt:P18 ?startimage.\n?from ?rel ?start; wdt:P195 ?coll.\n?prop wikibase:directClaim ?rel ; a wikibase:Property.\nOPTIONAL {?from wdt:P18 ?image1}.\n} } as %core\nWHERE {\n{\nSELECT ?from ?image1 (?start AS ?to) (?startimage AS ?image2) (?prop AS ?edge) WHERE {\nINCLUDE %core.\n} ORDER BY ?coll # put objects from the same collection close together\n}\nUNION {\nSELECT ?from ?image1 (?coll AS ?to) ?image2 (wd:P195 AS ?edge) WHERE {\nINCLUDE %core.\nOPTIONAL {?coll wdt:P18 ?image2}.\n}\n} UNION {\nSELECT ?from ?image1 (?type AS ?to) (\"\" AS ?image2) (wd:P31 AS ?edge) WHERE {\nINCLUDE %core.\n?from wdt:P31 ?type.\n}\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?from rdfs:label ?fromLabel. ?edge rdfs:label ?edgeLabel. ?to rdfs:label ?toLabel}\n}",
        "complexity_description": "Multiple UNION operators, nested queries, and multiple OPTIONAL patterns",
        "complexity": "complex"
    },
    {
        "id": "2544",
        "valid_gpt_response": true,
        "query": "SELECT ?from ?fromLabel ?image1 ?to ?toLabel ?image2 ?edgeLabel\nWITH {\nSELECT ?start ?startimage ?image1 ?from ?prop ?coll WHERE {\nVALUES ?start {wd:Q485547 }. # Choose person to start with\n?start wdt:P18 ?startimage.\n?from ?rel ?start; wdt:P195 ?coll.\n?prop wikibase:directClaim ?rel ; a wikibase:Property.\nOPTIONAL {?from wdt:P18 ?image1}.\n} } as %core\nWHERE {\n{\nSELECT ?from ?image1 (?start AS ?to) (?startimage AS ?image2) (?prop AS ?edge) WHERE {\nINCLUDE %core.\n} ORDER BY ?coll # put objects from the same collection close together\n}\nUNION {\nSELECT ?from ?image1 (?coll AS ?to) ?image2 (wd:P195 AS ?edge) WHERE {\nINCLUDE %core.\nOPTIONAL {?coll wdt:P18 ?image2}.\n}\n} #UNION {\n# SELECT ?from ?image1 (?type AS ?to) (\"\" AS ?image2) (wd:P31 AS ?edge) WHERE {\n# INCLUDE %core.\n# ?from wdt:P31 ?type.\n# }\n#}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?from rdfs:label ?fromLabel. ?edge rdfs:label ?edgeLabel. ?to rdfs:label ?toLabel}\n}",
        "complexity_description": "Multiple subqueries, UNION operator, and OPTIONAL patterns",
        "complexity": "complex"
    },
    {
        "id": "2545",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?site ?siteLabel ?coordinates ?image WHERE {\n?site (wdt:P31/(wdt:P279*)) wd:Q18615527;\nwdt:P17 wd:Q142;\nwdt:P625 ?coordinates.\nOPTIONAL { ?site wdt:P18 ?image. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr,en\". }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "2546",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel\n(GROUP_CONCAT(DISTINCT ?b; SEPARATOR=' or ') AS ?born)\n(GROUP_CONCAT(DISTINCT ?d; SEPARATOR=' or ') AS ?died)\n(GROUP_CONCAT(DISTINCT ?r; SEPARATOR=' or ') AS ?recognized)\n(URI(CONCAT('https://righteous.yadvashem.org/index.html?itemId=', ?yv)) AS ?yad_vashem) {\n?person wdt:P31 wd:Q5; p:P166 ?award.\n?award ps:P166 wd:Q112197; pq:P27 wd:Q36\nOPTIONAL { ?award pq:P585 ?r }\nOPTIONAL { ?person wdt:P569 ?b }\nOPTIONAL { ?person wdt:P570 ?d }\nOPTIONAL { ?person wdt:P1979 ?yv }\nSERVICE wikibase:label { bd:serviceParam wikibase:language '[AUTO_LANGUAGE],en' }\n} GROUP BY ?person ?personLabel ?yv",
        "complexity_description": "Multiple group concat, optional patterns, and service call",
        "complexity": "complex"
    },
    {
        "id": "2547",
        "valid_gpt_response": true,
        "query": "SELECT ?medsos ?medsosLabel ?vp571 ?diluncurkan (SAMPLE(?logo) AS ?logo2) ?ditutup ?situs WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"id,en\". }\n?medsos wdt:P31 wd:Q3220391.\nOPTIONAL { ?medsos wdt:P571 ?vp571.\nBIND(YEAR(?vp571) AS ?diluncurkan) }\nOPTIONAL { ?medsos wdt:P154 ?logo. }\nOPTIONAL { ?medsos wdt:P582 ?vp582.\nBIND(YEAR(?vp582) AS ?ditutup)}\nOPTIONAL { ?medsos wdt:P856 ?situs. }\n}\nGROUP BY ?medsos ?medsosLabel ?vp571 ?diluncurkan ?ditutup ?situs\n#defaultView:Timeline\n#view:Timeline{\"hide\": \"?vp571\"}",
        "complexity_description": "Multiple optional patterns, grouping and aggregation",
        "complexity": "complex"
    },
    {
        "id": "2548",
        "valid_gpt_response": true,
        "query": "SELECT ?human ?humanLabel ?awardEditionLabel ?awardLabel ?awardWork ?awardWorkLabel ?director ?directorLabel ?time\nWHERE\n{\n{\nSELECT (SAMPLE(?human) AS ?human) ?award ?awardWork (SAMPLE(?director) AS ?director) (SAMPLE(?awardEdition) AS ?awardEdition) (SAMPLE(?time) AS ?time) WHERE {\n?award wdt:P31 wd:Q19020 . # All items that are instance of(P31) of Academy awards (Q19020)\n{\n?human wdt:P31 wd:Q5 . # Humans\n?human p:P166 ?awardStat . # with an awarded(P166) statement\n?awardStat ps:P166 ?award ; # that has any of the values of ?award\npq:P805 ?awardEdition ; # Get the award edition (which is \"subject of\" XXth Academy Awards)\npq:P1686 ?awardWork . # The work they have been awarded for\n} UNION {\n?awardWork wdt:P31 wd:Q11424 . # Films\n?awardWork p:P166 ?awardStat . # with an awarded(P166) statement\n?awardStat ps:P166 ?award ; # that has any of the values of ?award\npq:P805 ?awardEdition . # Get the award edition (which is \"subject of\" XXth Academy Awards)\n}\nOPTIONAL {\n?awardEdition wdt:P585 ?time . # the \"point of time\" of the Academy Award\n?awardWork wdt:P57 ?director .\n}\n}\nGROUP BY ?awardWork ?award # We only want every movie once for a category (a 'random' person is selected)\n}\nSERVICE wikibase:label { # ... include the labels\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .\n}\n}\nORDER BY DESC(?time)",
        "complexity_description": "Multiple nested queries, UNION operator, and OPTIONAL clause",
        "complexity": "complex"
    },
    {
        "id": "2549",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT\n?person ?personLabel ?heigth_in_meters\n(SAMPLE(?pic) as ?image)\nWHERE\n{\n?person wdt:P106/wdt:P279* wd:Q864503 .\n?person wdt:P31 wd:Q5 .\n?person wdt:P2048 ?height .\nOPTIONAL{?person wdt:P18 ?pic .}\n?person p:P2048 ?statement .\n?statement psv:P2048 ?valuenode .\n?valuenode wikibase:quantityAmount ?value .\n?valuenode wikibase:quantityUnit ?unit .\n?unit p:P2370/psv:P2370 [ # conversion to SI unit\nwikibase:quantityAmount ?conversion;\nwikibase:quantityUnit wd:Q11573; # meter\n]\nBIND((?value * ?conversion) AS ?heigth_in_meters).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } # Helps get the label in your language, if not, then en language\n}\nGROUP BY ?person ?personLabel ?heigth_in_meters\nORDER BY DESC(?heigth_in_meters)",
        "complexity_description": "Multiple joins, optional clause, and unit conversion",
        "complexity": "complex"
    },
    {
        "id": "2550",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?pic ?diameter_in_cm ?country ?countryLabel ?material ?materialLabel\nWHERE\n{\n?item wdt:P279* wd:Q41207 .\n?item wdt:P18 ?pic .\n?item wdt:P17 ?country .\nMINUS {?item wdt:P17 wd:Q30 . }\nOPTIONAL{?item wdt:P186 ?material .}\n?item p:P2386 ?statement_P2386 .\n?statement_P2386 psv:P2386 ?valuenode_P2386 .\n?valuenode_P2386 wikibase:quantityAmount ?value_P2386 .\n?valuenode_P2386 wikibase:quantityUnit ?unit_P2386 .\n?unit_P2386 p:P2370/psv:P2370 [ # conversion to SI unit\nwikibase:quantityAmount ?conversion;\nwikibase:quantityUnit wd:Q11573; # meter\n]\nBIND((?value_P2386 * ?conversion)* 100 AS ?diameter_in_cm).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } # Helps get the label in your language, if not, then en language\n}\nORDER BY DESC(?diameter_in_cm)",
        "complexity_description": "Multiple joins, optional clause, and complex calculation",
        "complexity": "complex"
    },
    {
        "id": "2551",
        "valid_gpt_response": true,
        "query": "SELECT ?letter (COUNT(?letter) AS ?count) WITH {\nSELECT ?l WHERE {\n?l a ontolex:LexicalEntry ;\ndct:language wd:Q1860 # English\n}} AS %lexemes\nWITH { SELECT ?wl {\nBIND ( 5 AS ?wl )\n}} AS %word_length\nWITH { SELECT DISTINCT ?word {\nINCLUDE %word_length\nINCLUDE %lexemes\n?l ontolex:lexicalForm [ontolex:representation ?word ]\nBIND (CONCAT(\"^[a-z]{\", STR(?wl), \"}$\") AS ?r )\nFILTER(REGEX(?word, ?r))\n}} AS %word_matches\nWITH { SELECT DISTINCT ?index WHERE {\nINCLUDE %word_length\nVALUES ?start { 1 }\nBIND (?wl AS ?end)\nBIND ( (?end - ?start ) + 1 AS ?x )\n?n p:P31 [\nps:P31 wd:Q21199 ;\npq:P155 ?prev\n] .\n?prev wdt:P1181 ?index .\nFILTER (?index > 0 && ?index < ?x + 1)\n}\n} AS %indices\nWHERE {\nINCLUDE %word_matches\nINCLUDE %indices\nVALUES ?letter { \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\" \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\" }\nFILTER (CONTAINS(SUBSTR (?word, ?index, 1 ), ?letter))\n}\nGROUP BY ?letter\nORDER BY DESC (?count)",
        "complexity_description": "Multiple subqueries, regex filter, and complex filtering conditions",
        "complexity": "complex"
    },
    {
        "id": "2552",
        "valid_gpt_response": true,
        "query": "SELECT ?xLabel ?size ?rgb WITH {\nSELECT DISTINCT ?n WHERE { # generate a sequence of natural numbers\nVALUES ?start { 1 }\nBIND (2000 AS ?end)\nBIND ( (?end - ?start ) + 1 AS ?x )\n[] p:P31 [\nps:P31 wd:Q21199 ; # is a natural number\npq:P155 ?prev\n] .\n?prev wdt:P1181 ?n .\nFILTER (?n > 0 && ?n < ?x + 1)\n}\n} AS %numbers\nWHERE {\nINCLUDE %numbers\n?x wdt:P31 wd:Q21199 .\n?x wdt:P1181 ?n .\nFILTER (?x NOT IN (wd:Q713113)) # exclude the annoying 0.999\nOPTIONAL { ?x wdt:P31 wd:Q49008 . BIND (true AS ?prime) } # highlight prime numbers\nBIND(1 AS ?size) # used for the size of the bubble: want them all the same size\nBIND ( COALESCE(IF(?prime, \"FD7F7F\", 1/0),\"71C1FD\") AS ?rgb )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?n",
        "complexity_description": "Multiple subqueries, filters, and optional patterns with functions",
        "complexity": "complex"
    },
    {
        "id": "2553",
        "valid_gpt_response": true,
        "query": "SELECT ?monument ?monumentLabel ?person ?personLabel (SAMPLE(?coordinates_) AS ?coordinates) (SAMPLE(?image_) AS ?image) WITH {\nSELECT DISTINCT ?monument ?person WHERE {\n?monument wdt:P31/wdt:P279* wd:Q4989906;\nwdt:P138 ?person.\nMINUS {\n?monument ?wdt ?person.\nFILTER(?wdt != wdt:P138)\n}\n?person wdt:P31 wd:Q5.\n}\nLIMIT 100\n} AS %results WHERE {\nINCLUDE %results.\nOPTIONAL { ?monument wdt:P625 ?coordinates_. }\nOPTIONAL { ?monument wdt:P18 ?image_. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?monument ?monumentLabel ?person ?personLabel\nLIMIT 100",
        "complexity_description": "Multiple subqueries, nested filters, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "2554",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?q ?qLabel ?coord ?valentinsLabel WHERE {\nVALUES ?valentins { wd:Q37587 wd:Q192151 wd:Q192151 wd:Q26203089 }\n?q wdt:P625 ?coord ; wdt:P138 ?valentins .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Uses VALUES clause, multiple triple patterns and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "2555",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?winner ?winnerLabel ?sport ?sportLabel ?eventTime ?age WHERE {\n?winner wdt:P31 wd:Q5;\nwdt:P569 ?dob.\nMINUS { ?winner p:P569/psv:P569 [\nwikibase:timePrecision \"7\"^^xsd:integer ; # Century\nwikibase:timeValue ?dob] } # Meant to remove those born \"19th century\"\nFILTER (! wikibase:isSomeValue(?dob) ) # Removes those with unknown birth date\n?sport wdt:P1346 ?winner ;\nwdt:P31 wd:Q18536594.\n# Work-around due to inconsistent modeling of the time of events\nOPTIONAL { ?sport wdt:P585 ?eventPoint }\nOPTIONAL { ?sport wdt:P582 ?eventEnd }\nOPTIONAL { ?sport wdt:P361/wdt:P585 ?olympicPoint }\nBIND(COALESCE(?eventEnd,?eventPoint,?olympicPoint) AS ?eventTime)\n# Quick and dirty way to calculate age\nBIND ((ROUND(((?eventTime - ?dob)/3.6524))/100) AS ?age )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n} ORDER BY ?age",
        "complexity_description": "Multiple filters, optional patterns, and calculations",
        "complexity": "complex"
    },
    {
        "id": "2556",
        "valid_gpt_response": true,
        "query": "SELECT ?language ?languageLabel ?lexemes ?withExternalId ?percent WITH {\nSELECT ?language (COUNT(*) AS ?count) { ?lexeme dct:language ?language }\nGROUP BY ?language\nORDER BY DESC(COUNT(*))\nLIMIT 20\n} AS %languages WITH {\nSELECT ?language ?lexemes ?withExternalId (ROUND(10000 / ?lexemes * ?withExternalId) / 100 AS ?percent) {\nSELECT ?language (COUNT(*) AS ?lexemes) (SUM(?hasExternalId) AS ?withExternalId) {\nINCLUDE %languages\n?lexeme dct:language ?language .\nBIND(IF(EXISTS {\n?property wdt:P31 wd:Q19847637 ; wikibase:directClaim ?wdt .\n?lexeme ?wdt [] .\n}, 1, 0) AS ?hasExternalId) .\n}\nGROUP BY ?language\n}\nGROUP BY ?language ?lexemes ?withExternalId\n} AS %stats WHERE {\nINCLUDE %stats\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nORDER BY DESC(?lexemes)",
        "complexity_description": "Multiple nested subqueries, aggregation functions and conditional statements",
        "complexity": "complex"
    },
    {
        "id": "2557",
        "valid_gpt_response": true,
        "query": "SELECT ?property ?propertyLabel ?count ?report WITH {\nSELECT ?property (count(distinct ?item) as ?count) WHERE {\n?item wdt:P31 wd:Q23397 .\nhint:Prior hint:runFirst true .\n?item wdt:P17 wd:Q145 .\n?item ?predicate ?value .\n?property wikibase:directClaim ?predicate .\n} group by ?property } as %i\nWHERE\n{\nINCLUDE %i\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\nBIND(IRI(CONCAT(\"https://query.wikidata.org/#SELECT%20%3Fitem%20%3FitemLabel%20%3Fvalue%20%3FvalueLabel%20WHERE%20%7B%0A%20%20%20%20%3Fitem%20wdt%3AP31%20wd%3AQ23397%20.%20%0A%20%20%20%20%3Fitem%20wdt%3AP17%20wd%3AQ145%20.%20%0A%20%20%20%20%3Fitem%20wdt%3A\",STRAFTER(STR(?property),\"http://www.wikidata.org/entity/\"),\"%20%3Fvalue.%0A%20%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22en%22%20.%20%7D%0A%7D%0A\")) as ?report)\n} order by desc(?count)",
        "complexity_description": "Multiple subqueries, grouping, and service calls",
        "complexity": "complex"
    },
    {
        "id": "2558",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?planet ?planetLabel ?satellite ?satelliteLabel ?namedLabel ?namedDescription WHERE {\n?planet wdt:P31/wdt:P279* wd:Q13205267.\n?satellite wdt:P31/wdt:P279* wd:Q2537.\n?satellite wdt:P397 ?planet.\n?satellite wdt:P138 ?named.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?planet p:P2244/psv:P2244 ?statement.\n?statement wikibase:quantityUnit ?unit.\n?statement wikibase:quantityAmount ?distance.\n?statement wikibase:quantityNormalized/wikibase:quantityAmount ?distanceNormalized. # convert to normalized unit (meter)\nBIND (?distanceNormalized / 9460800000000000 AS ?lightyears)\n}\nORDER BY ?lightyears",
        "complexity_description": "Multiple joins, subqueries, and calculations",
        "complexity": "complex"
    },
    {
        "id": "2559",
        "valid_gpt_response": true,
        "query": "SELECT ?language ?languageLabel ?lexemes ?withExternalId ?percent WITH {\nSELECT ?language (COUNT(*) AS ?count) { ?lexeme dct:language ?language }\nGROUP BY ?language\nORDER BY DESC(COUNT(*))\nLIMIT 20\n} AS %languages WITH {\nSELECT ?language ?lexemes ?withExternalId (ROUND(10000 / ?lexemes * ?withExternalId) / 100 AS ?percent) {\nSELECT ?language (COUNT(*) AS ?lexemes) (SUM(?hasExternalId) AS ?withExternalId) {\nINCLUDE %languages\n?lexeme dct:language ?language .\nBIND(IF(EXISTS {\n?property wdt:P31 wd:Q19847637 ; wikibase:directClaim ?wdt .\n?lexeme ?wdt [] .\n}, 1, 0) AS ?hasExternalId) .\n}\nGROUP BY ?language\n}\nGROUP BY ?language ?lexemes ?withExternalId\n} AS %stats WHERE {\nINCLUDE %stats\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nORDER BY DESC(?lexemes)",
        "complexity_description": "Multiple nested subqueries, aggregation functions and conditional statements",
        "complexity": "complex"
    },
    {
        "id": "2560",
        "valid_gpt_response": true,
        "query": "SELECT ?coup ?coupLabel ?success ?time ?countryLabel WHERE {\nVALUES ?type {wd:Q45382 wd:Q25906438 wd:Q4460509}\n?coup wdt:P31 ?type .\nbind (?type != wd:Q25906438 as ?success)\n?coup wdt:P17 ?country.\n?country wdt:P30 wd:Q15.\noptional {?coup wdt:P585 ?time}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n} order by desc(?time)",
        "complexity_description": "Multiple triple patterns, optional clause, and service call",
        "complexity": "medium"
    },
    {
        "id": "2561",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?dob ?age\nWHERE {\n?item wdt:P106 wd:Q1930187;\np:P108 ?NYT_statement.\n?NYT_statement ps:P108 wd:Q9684;\nOPTIONAL {\n?item wdt:P569 ?dob.\nBIND(xsd:integer((NOW() - ?dob) / 365.25) AS ?age)\n}\nMINUS { # Former employee\n?NYT_statement pq:P582 [].\n}\nMINUS { ?item wdt:P570 ?dod. } # Living deprived\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?dob)",
        "complexity_description": "Multiple filters, optional clause, and minus patterns",
        "complexity": "complex"
    },
    {
        "id": "2562",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?pic\nWHERE\n{\n?item wdt:P279* wd:Q693464 .\n?item wdt:P17 wd:Q212 .\n?item wdt:P18 ?pic .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } # Helps get the label in your language, if not, then en language\n}",
        "complexity_description": "Multiple triple patterns with a service call",
        "complexity": "medium"
    },
    {
        "id": "2563",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?pic\nWHERE\n{\n?item wdt:P279* wd:Q43010 .\n?item wdt:P18 ?pic\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "2564",
        "valid_gpt_response": true,
        "query": "SELECT ?licenseLabel (count(DISTINCT ?software) as ?count)\nWITH {\nSELECT ?software ?license WHERE {\n?license wdt:P31/wdt:P279* wd:Q3943414.\n?software wdt:P31/wdt:P279* wd:Q7397;\nwdt:P275 ?license.\n}\n} AS %result\nWHERE {\nINCLUDE %result\n?license rdfs:label ?licenseLabel. FILTER(lang(?licenseLabel)=\"en\")\n}\nGROUP BY ?licenseLabel\nORDER by DESC(?count)",
        "complexity_description": "Multiple subqueries, joins, and filters",
        "complexity": "complex"
    },
    {
        "id": "2565",
        "valid_gpt_response": true,
        "query": "SELECT ?proglang ?proglangLabel ?maxdate ?followers\nWITH {\nSELECT ?proglang (MAX(?date) as ?maxdate) WHERE {\n?proglang wdt:P31 wd:Q9143;\np:P8687 ?socialmedia.\n?socialmedia ps:P8687 ?followers;\npq:P6552 ?twitter;\npq:P585 ?date.\n}\nGROUP by ?proglang\n} AS %result\nWHERE {\nINCLUDE %result\n?proglang wdt:P31 wd:Q9143;\np:P8687 ?socialmedia.\n?socialmedia ps:P8687 ?followers;\npq:P585 ?maxdate.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n} ORDER BY DESC(?followers)",
        "complexity_description": "Multiple subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "2566",
        "valid_gpt_response": true,
        "query": "SELECT ?proglangLabel ?paradigmLabel (Year(?date) as ?year) {\n?proglang wdt:P31/wdt:P279* wd:Q9143;\nwdt:P3966 ?paradigm;\n(wdt:P577 | wdt:P571) ?date.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER by ?year",
        "complexity_description": "Multiple triple patterns, optional and union operators, and a service call",
        "complexity": "medium"
    },
    {
        "id": "2567",
        "valid_gpt_response": true,
        "query": "SELECT ?proglangLabel (count(DISTINCT ?language) as ?count) {\n?proglang wdt:P31/wdt:P279* wd:Q9143;\nwdt:P275 [wdt:P31/wdt:P279* wd:Q3943414].\n?article schema:about ?proglang ;\nschema:inLanguage ?lang.\n?language wdt:P218 ?lang.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP By ?proglangLabel\nHAVING (?count >20)\nORDER by DESC(?count)",
        "complexity_description": "Multiple joins, subqueries, and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "2568",
        "valid_gpt_response": true,
        "query": "SELECT ?p ?pLabel ?pob ?pobLabel ?coor\nWHERE\n{\n?p wdt:P735 wd:Q919943 .\n?p wdt:P19 ?pob .\n?pob wdt:P625 ?coor .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Three triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "2569",
        "valid_gpt_response": true,
        "query": "SELECT ?human ?humanLabel ?humanDescription ?cityLabel ?naissance ?deces WHERE {\n?human wdt:P119 wd:Q311 .\n?human wdt:P19 ?city .\n?city wdt:P17 wd:Q212 .\n?human wdt:P569 ?naissance .\n?human wdt:P570 ?deces .\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"fr,en\" .}\n}\nORDER BY ?countryLabel ?cityLabel",
        "complexity_description": "Multiple triple patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "2570",
        "valid_gpt_response": true,
        "query": "SELECT ?propertyItem ?propertyItemLabel (COUNT(?item) AS ?compte ) WHERE {\n?item wdt:P31 wd:Q16970 ;\n?prop ?saint .\n?saint wdt:P411 wd:Q43115 .\n?propertyItem wikibase:directClaim ?prop . #necessaire pour recuperer le label\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?propertyItem ?propertyItemLabel",
        "complexity_description": "Multiple joins, subqueries and grouping",
        "complexity": "complex"
    },
    {
        "id": "2571",
        "valid_gpt_response": true,
        "query": "SELECT ?prop ?propLabel ?item_count ?stmt_count ?samp ?sampLabel ?valLabel\nWITH {\nSELECT ?prop (COUNT(DISTINCT ?item) AS ?item_count) (COUNT(DISTINCT ?stmt) AS ?stmt_count) (SAMPLE(?item) AS ?samp) (SAMPLE(?value) AS ?val) WHERE {\nhint:Query hint:optimizer \"None\" .\n?item wdt:P1679 ?yp_id .\n?item ?p ?stmt .\n?prop wikibase:claim ?p .\n?prop wikibase:statementProperty ?ps .\n?stmt ?ps ?value .\n} GROUP BY ?prop\n} AS %counts\nWHERE {\nINCLUDE %counts .\nMINUS {\nVALUES ?identifier {wd:Q19847637 wd:Q18614948} . # Wikidata property representing a unique identifier, Wikidata property for authority control\n?prop wdt:P31/wdt:P279* ?identifier .\n}\n?prop rdfs:label ?prop_label . FILTER(lang(?prop_label) = 'en') .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?item_count) DESC(?stmt_count)",
        "complexity_description": "Multiple subqueries, joins, and filters with aggregation",
        "complexity": "complex"
    },
    {
        "id": "2572",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?date ?countryLabel ?image\nWHERE\n{\n{\nSELECT ?item ?date ?image (SAMPLE(?country2) AS ?country) WHERE {\n?item p:P1196/pq:P607/wdt:P361* wd:Q110999040.\nOPTIONAL{ ?item wdt:P570 ?date. }\nOPTIONAL{ ?item wdt:P27 ?country2. }\nOPTIONAL{ ?item wdt:P18 ?image. }\nMINUS{ ?item wdt:P27 wdt:Q15180. } #exclude USSR citizenship from the duplicates\n}\nGROUP BY ?item ?date ?image\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,uk,ru\" . }\n}\nORDER BY DESC(?date)",
        "complexity_description": "Multiple optional patterns, minus clause, group by and service call",
        "complexity": "complex"
    },
    {
        "id": "2573",
        "valid_gpt_response": true,
        "query": "SELECT ?country ?countryLabel ?population {\n?country wdt:P47 wd:Q159.\n?country p:P463 ?stat .\n?stat ps:P463 wd:Q1065 .\n?country wdt:P1082 ?population\nFILTER NOT EXISTS {?stat pq:P583 [] . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } # Helps get the label in your language, if not, then en language\n}",
        "complexity_description": "Multiple triple patterns with filter and service",
        "complexity": "medium"
    },
    {
        "id": "2574",
        "valid_gpt_response": true,
        "query": "SELECT ?xLabel ?clip ?loc WHERE {\n{?x wdt:P131 wd:Q25 }\nUNION { ?x wdt:P131 ?pob . ?pob wdt:P131* wd:Q25 }\n?x wdt:P443 ?clip .\n?x wdt:P625 ?loc .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"cy\". }\n}",
        "complexity_description": "Multiple UNION patterns, multiple triple patterns, and a SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "2575",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?natgalIDLabel ?itemwikipage ?creatorLabel ?creatorwikipage\nWHERE {\n?item wdt:P8946 ?natgalID ;\nwdt:P170 ?creator .\n?creator wdt:P21 wd:Q6581072 .\nOPTIONAL { ?itemwikipage schema:about ?item; schema:isPartOf <https://en.wikipedia.org/> }\nOPTIONAL { ?creatorwikipage schema:about ?creator; schema:isPartOf <https://en.wikipedia.org/>}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, optional blocks and service call",
        "complexity": "medium"
    },
    {
        "id": "2576",
        "valid_gpt_response": true,
        "query": "SELECT ?gender ?genderLabel (count(DISTINCT ?developer) as ?count)\nWITH {\nSELECT DISTINCT ?developer WHERE {\n?software wdt:P31/wdt:P279* wd:Q7397; #software\n(wdt:P178 | wdt:P287 | wdt:P138) ?developer. #developer, designer and the person named after\n}\n} AS %result\nWHERE {\nINCLUDE %result\nVALUES ?gender { wd:Q6581097 wd:Q6581072 wd:Q1052281 wd:Q48270 wd:Q1052281 wd:Q52261234 wd:Q44148 wd:Q2449503 wd:Q12964198 wd:Q505371}.\n?developer wdt:P21 ?gender.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP by ?gender ?genderLabel",
        "complexity_description": "Multiple subqueries, joins and aggregations",
        "complexity": "complex"
    },
    {
        "id": "2577",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?signature ?placeOfBirthCoordinates WITH {\n# get all the actual data\nSELECT ?person (SAMPLE(?signature_) AS ?signature) (SAMPLE(?placeOfBirthCoordinates_) AS ?placeOfBirthCoordinates) WHERE {\n# get some random signature image statements\nSERVICE bd:sample {\n?person wdt:P109 ?signature_.\nbd:serviceParam bd:sample.limit 110 . # a bit over 100 in case some of them happen to be non-humans\n}\n# ensure they're humans (most are but there are some exceptions)\n?person wdt:P31 wd:Q5.\n# for the map display, optionally add the place of birth\nOPTIONAL {\n?person wdt:P19 ?placeOfBirth.\n?placeOfBirth wdt:P625 ?placeOfBirthCoordinates_.\n}\n}\nGROUP BY ?person # avoid multiple results in case of multiple signature / place of death (coordinate) statements\nLIMIT 100\n} AS %results WHERE {\n# add labels\nINCLUDE %results.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple services, subqueries, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "2578",
        "valid_gpt_response": true,
        "query": "SELECT ?WBID (count(?item) as ?count)\n{\n?item wdt:P31/wdt:P279* wd:Q23397 .\n?item wdt:P17 wd:Q145.\nOPTIONAL { ?item wdt:P7548 ?value .}\nBIND(IF(!BOUND(?value),\"No WBID\",\"WBID\") as ?WBID)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n} group by ?WBID",
        "complexity_description": "Multiple triple patterns, optional clause, and aggregation function",
        "complexity": "complex"
    },
    {
        "id": "2579",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?article ?articleLabel ?pubDate (SAMPLE(?image) AS ?image)\nWHERE\n{\n?article wdt:P1433 wd:Q655617.\n?article wdt:P50 wd:Q155112.\n?article wdt:P921 wd:Q1164267.\n?article wdt:P577 ?pubDate.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"de\". }\noptional {\n?article wdt:P18 ?image.\n}\n} GROUP BY ?article ?articleLabel ?pubDate",
        "complexity_description": "Multiple filters, optional clause and grouping",
        "complexity": "medium"
    },
    {
        "id": "2580",
        "valid_gpt_response": true,
        "query": "SELECT ?itemLabel ?img ?ann_date WHERE {\n?item wdt:P361 wd:Q101791498;\nwdt:P18 ?img;\nwdt:P6949 ?ann_date\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Simple query with 3 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "2581",
        "valid_gpt_response": true,
        "query": "SELECT ?religion ?religionLabel (COUNT(?item) as ?count)\nWHERE\n{\n?item wdt:P735 wd:Q25413386.\n?item wdt:P21 wd:Q6581097.\n?item wdt:P140 ?religion.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?religion ?religionLabel",
        "complexity_description": "Multiple filters, service call and group by",
        "complexity": "medium"
    },
    {
        "id": "2582",
        "valid_gpt_response": true,
        "query": "SELECT ?station ?stationLabel ?cds ?line ?layer WHERE {\n{ SERVICE gas:service {\ngas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.BFS\" ; gas:in wd:Q3097173 ; gas:target wd:Q6132101 ; gas:out ?station ; gas:out1 [] ; gas:out2 ?pred .\ngas:program gas:linkType wdt:P197 . } }\nFILTER(?station != wd:Q3097173)\n?pred p:P625/psv:P625/wikibase:geoLatitude ?lat1 ; p:P625/psv:P625/wikibase:geoLongitude ?lon1 .\n?station p:P625/psv:P625/wikibase:geoLatitude ?lat2 ; p:P625/psv:P625/wikibase:geoLongitude ?lon2 .\nBIND(CONCAT('LINESTRING(', STR(?lon1), ' ', STR(?lat1), ',', STR(?lon2), ' ', STR(?lat2), ')') AS ?str) . BIND(STRDT(?str, geo:wktLiteral) AS ?line)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"bn,en\". }\n}",
        "complexity_description": "Multiple services, filters, and complex property paths",
        "complexity": "complex"
    },
    {
        "id": "2583",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT\n?coordinate\n?institution\n?institutionLabel\n?item\n?itemLabel\n?author\n?authorLabel\nWITH {\nSELECT ?item {\nVALUES ?subject {\nwd:Q33002955\nwd:Q593744\nwd:Q515701\n}\n?item wdt:P921 ?subject.\n}\n} AS %0\nWITH {\nSELECT ?item {\nINCLUDE %0.\n?item wdt:P31/wdt:P279* wd:Q47461344.\n}\n} AS %2\n{\nINCLUDE %2.\n?item wdt:P50 ?author.\n?author wdt:P69 ?institution.\n?institution wdt:P625 ?coordinate.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple nested WITH clauses, multiple triple patterns and SERVICE keyword usage",
        "complexity": "complex"
    },
    {
        "id": "2584",
        "valid_gpt_response": true,
        "query": "SELECT ?colony ?colonyLabel ?languageLabel ?iso WHERE {\n?colony p:P31 ?statement;\nwdt:P30 wd:Q15.\n?statement a wikibase:BestRank;\nps:P31 wd:Q133156.\n{ ?colony wdt:P37 ?language. } UNION\n{ ?statement pq:P642/wdt:P37 ?language. }\n?language wdt:P220 ?iso.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?iso",
        "complexity_description": "Multiple joins, unions and filters",
        "complexity": "complex"
    },
    {
        "id": "2585",
        "valid_gpt_response": true,
        "query": "SELECT ?item1 ?image ?item1Label ?item2 ?image2 ?item2Label ?edgeLabel WHERE {\nVALUES ?item1 {wd:Q28873655 wd:Q169390 wd:Q4184 wd:Q1344 wd:Q189729 wd:Q63490060 wd:Q2858869 wd:Q109026069 wd:Q148584 wd:Q3073495 wd:Q105096136 wd:Q5363058 wd:Q105095679 wd:Q215062 wd:Q91 wd:Q200539 wd:Q98534768 wd:Q7725634}\nVALUES ?item2 {wd:Q28873655 wd:Q169390 wd:Q4184 wd:Q1344 wd:Q189729 wd:Q63490060 wd:Q2858869 wd:Q109026069 wd:Q148584 wd:Q3073495 wd:Q105096136 wd:Q5363058 wd:Q105095679 wd:Q215062 wd:Q91 wd:Q200539 wd:Q98534768 wd:Q7725634}\n?item1 ?prop ?item2.\n?edge ?dummy ?prop ; rdf:type wikibase:Property\nOPTIONAL {?item1 wdt:P18 ?image}\nOPTIONAL {?item2 wdt:P18 ?image2}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple VALUES clauses, OPTIONAL patterns and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "2586",
        "valid_gpt_response": true,
        "query": "SELECT ?menteri ?menteriLabel ?jabatan ?jabatanLabel ?negaraLabel ?gambar ?menjabat WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"id,en\". }\n?menteri wdt:P31 wd:Q5.\n?menteri wdt:P21 wd:Q6581072.\n?menteri wdt:P39 ?jabatan.\n?jabatan wdt:P279 wd:Q2518691.\nOPTIONAL { ?jabatan wdt:P17 ?negara. }\nOPTIONAL { ?menteri wdt:P18 ?gambar. }\n?menteri p:P39 ?st.\n?st ps:P39 ?jabatan.\n?st pq:P580 ?mulai.\nBIND(YEAR(?mulai) as ?mulai2).\nOPTIONAL {?st pq:P582 ?selesai.\nBIND(xsd:integer(YEAR(?selesai)) AS ?selesai2).\n}\nBIND(CONCAT(STR(?mulai2),\"-\",If(?selesai2>0,str(?selesai2),\"sekarang\")) as ?menjabat).\n}\n#defaultView:ImageGrid",
        "complexity_description": "Multiple joins, optional patterns, and complex bindings",
        "complexity": "complex"
    },
    {
        "id": "2587",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item1 ?item1Label ?article1 ?item2 ?item2Label ?article2\nWITH { SELECT DISTINCT ?item WHERE {\nVALUES ?membership {wd:Q16707842 wd:Q1801564 wd:Q18018860} .\n?item wdt:P31 wd:Q5 ; wdt:P39/wdt:P279* ?membership .\n} } AS %mps\nWITH { SELECT DISTINCT ?item ?familyname ?firstname_form WHERE {\nINCLUDE %mps .\n?item wdt:P734 ?familyname .\n?firstname_form wdt:P1533 ?familyname .\n} } AS %mps1\nWITH { SELECT DISTINCT ?item ?familyname ?firstname_form ?firstname ?familyname_form WHERE {\nINCLUDE %mps1 .\n?item wdt:P735 ?firstname .\n?firstname wdt:P1533 ?familyname_form .\n} } AS %mps2\nWITH { SELECT (?item AS ?item1) (?firstname AS ?firstname1) (?familyname AS ?familyname1) WHERE {\nINCLUDE %mps2 .\n} } AS %mps2_1\nWITH { SELECT (?item AS ?item2) (?firstname_form AS ?firstname1) (?familyname_form AS ?familyname1) WHERE {\nINCLUDE %mps2 .\n} } AS %mps2_inverted\nWHERE {\nINCLUDE %mps2_1 .\nINCLUDE %mps2_inverted .\nFILTER (?item1 != ?item2) .\noptional { ?article1 schema:about ?item1 ; schema:isPartOf <https://en.wikipedia.org/> }\noptional { ?article2 schema:about ?item2 ; schema:isPartOf <https://en.wikipedia.org/> }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?item2Label",
        "complexity_description": "Multiple nested WITH clauses, multiple FILTER and OPTIONAL patterns",
        "complexity": "complex"
    },
    {
        "id": "2588",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?prop ?propLabel WHERE {\n?s (wdt:P31/(wdt:P279*)) wd:Q235557;\n?props ?o.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n?prop wikibase:directClaim ?props.\n}\nORDER BY (?propLabel)",
        "complexity_description": "Multiple triple patterns, property paths, and service call",
        "complexity": "complex"
    },
    {
        "id": "2589",
        "valid_gpt_response": true,
        "query": "SELECT\n?property\n?propertyLabel\n?count\nWITH {\nSELECT DISTINCT ?item {\n?item wdt:P31/wdt:P279* wd:Q28564.\n}\n} AS %0\nWITH {\nSELECT ?predicate (COUNT(*) AS ?count) {\nINCLUDE %0.\n?item ?predicate [].\n}\nGROUP BY ?predicate\n} AS %1\nWITH {\nSELECT ?predicate ?property {\nINCLUDE %1.\n?property wikibase:claim ?predicate.\n}\n} AS %2\n{\nINCLUDE %1.\nINCLUDE %2.\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\"}.\n}\nORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, joins and grouping",
        "complexity": "complex"
    },
    {
        "id": "2590",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?l ?word ?len WHERE {\n{\n{\n?l rdf:type ontolex:LexicalEntry;\ndct:language wd:Q9027;\nwikibase:lemma ?word.\n}\nUNION\n{\n?l rdf:type ontolex:LexicalEntry;\ndct:language wd:Q188;\nwikibase:lemma ?word.\n}\n}\nBIND(STRLEN(?word) AS ?len)\n?l wikibase:lexicalCategory wd:Q1084.\n}\nORDER BY DESC (?len)\nLIMIT 1000",
        "complexity_description": "Multiple UNION patterns, BIND function, and ORDER BY with LIMIT",
        "complexity": "complex"
    },
    {
        "id": "2591",
        "valid_gpt_response": true,
        "query": "SELECT ?text ?textLabel ?linken ?linkfr WITH { SELECT ?text WHERE {\n?text wdt:P31/wdt:P279* wd:Q47461344 . #instance of written work - using subclass of, even with limit 100 seems to time out\n} LIMIT 1500000 } as %i\nWHERE\n{\nINCLUDE %i\n?linken schema:about ?text . #don't fully understand schema yet but this seems to work\n?linkfr schema:about ?text . #see above\n?linken schema:isPartOf <https://en.wikisource.org/> . #english wikisource\n?linkfr schema:isPartOf <https://fr.wikisource.org/> . #french wikisource\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n#next step figure out how to do \"texts with any number of wikisource links in any language as long as those languages include english and french",
        "complexity_description": "Multiple subqueries, joins, and filters",
        "complexity": "complex"
    },
    {
        "id": "2592",
        "valid_gpt_response": true,
        "query": "SELECT\n?item ?itemLabel\n((?sitelinks * ?sitelinks) as ?links_squared)\nWHERE\n{\n?item wdt:P31 wd:Q103632 .\n?item wikibase:sitelinks ?sitelinks .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY\nDESC (?sitelinks)",
        "complexity_description": "Multiple joins, aggregation and ordering",
        "complexity": "complex"
    },
    {
        "id": "2593",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?propertyLabel (IRI(CONCAT(SUBSTR(?formatter,1,STRLEN(?formatter)-2), ?value)) AS ?URL) WHERE {\nVALUES ?wm { wd:Q22337472 wd:Q15924535 wd:Q24524653 }\n?item wdt:P31 ?wm .\n?property wdt:P31 wd:Q105388954;\nwikibase:directClaim ?wdt;\nwdt:P1630 ?formatter .\n?item ?wdt ?value .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple joins, subqueries and functions",
        "complexity": "complex"
    },
    {
        "id": "2594",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?designationLabel ?img ?id ?coords (?designationLabel AS ?layer) WHERE {\n?item wdt:P31/wdt:P279* wd:Q181348 .\n?item wdt:P1216|wdt:P709|wdt:P1459 ?id .\n?item wdt:P625 ?coords .\n?item wdt:P1435 ?designation .\nOPTIONAL {?item wdt:P18 ?img} .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple filters, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "2595",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription (COUNT(DISTINCT ?page) AS ?nb_pages) WHERE {\nVALUES ?univ { wd:Q1319786 wd:Q1381437 wd:Q612648 wd:Q3551576 }\n?item ?lien ?univ .\n?page schema:about ?item .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?item ?itemLabel ?itemDescription\nHAVING ( ?nb_pages > 1 )\nORDER BY DESC(?nb_pages)",
        "complexity_description": "Multiple triple patterns, VALUES clause, SERVICE keyword, GROUP BY, HAVING and ORDER BY clauses",
        "complexity": "complex"
    },
    {
        "id": "2596",
        "valid_gpt_response": true,
        "query": "select ?lemma ?languageLabel {\n?sense wdt:P5137 wd:Q634 .\n?lexeme ontolex:sense ?sense .\n?lexeme dct:language ?language .\n?lexeme wikibase:lemma ?lemma .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, service call",
        "complexity": "medium"
    },
    {
        "id": "2597",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?pic ?birthplaceLabel ?location\nWHERE\n{\n?item wdt:P106 wd:Q2252262 .\n?item wdt:P19 ?birthplace .\n?birthplace wdt:P625 ?location\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "complexity_description": "Three triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "2598",
        "valid_gpt_response": true,
        "query": "SELECT ?occupation1Label (COUNT(DISTINCT ?researcher) AS ?nb) WHERE {\nVALUES ?univ { wd:Q1319786 wd:Q1381437 wd:Q612648 wd:Q3551576 }\n?researcher (wdt:P108|wdt:P463|wdt:P1416) ?univ .\n?researcher wdt:P106 ?occupation1 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?occupation1Label",
        "complexity_description": "Multiple patterns, aggregation and grouping",
        "complexity": "medium"
    },
    {
        "id": "2599",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?opened ?countryLabel ?coords ?website ?address\n{\n?item wdt:P31 wd:Q10605195 .\noptional { ?item wdt:P17 ?country . }\noptional { ?item wdt:P1619 ?opened . }\noptional { ?item wdt:P625 ?coords . }\noptional { ?item wdt:P856 ?website . }\noptional { ?item wdt:P6375 ?address . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,de,fr,ja,it,sv\" }\n}",
        "complexity_description": "Multiple optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "2600",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?video_game ?video_gameLabel ?first_publication_date (GROUP_CONCAT(DISTINCT ?developerLabel; SEPARATOR = \", \") AS ?developers) (GROUP_CONCAT(DISTINCT ?publisherLabel; SEPARATOR = \", \") AS ?publishers) (GROUP_CONCAT(DISTINCT ?platformLabel; SEPARATOR = \", \") AS ?platforms) WHERE {\n{\nSELECT ?video_game (YEAR(MIN(?publication_date)) AS ?first_publication_date) WHERE {\n?video_game wdt:P31 wd:Q7889; # All video games...\n(wdt:P136/(wdt:P279*)) wd:Q23916; # ...with genre=adventure game (or a subgenre)...\nwdt:P495 wd:Q142. # ...and country of origin = France\nOPTIONAL { ?video_game wdt:P577 ?publication_date. }\n}\nGROUP BY ?video_game\n}\nOPTIONAL { ?video_game wdt:P178 ?developer. }\nOPTIONAL { ?video_game wdt:P123 ?publisher. }\nOPTIONAL { ?video_game wdt:P400 ?platform. }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr\".\n?developer rdfs:label ?developerLabel.\n?publisher rdfs:label ?publisherLabel.\n?platform rdfs:label ?platformLabel.\n?video_game rdfs:label ?video_gameLabel.\n}\n}\nGROUP BY ?video_game ?video_gameLabel ?first_publication_date\nORDER BY (?first_publication_date)",
        "complexity_description": "Multiple subqueries, grouping, and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "2601",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?sitelinken (COUNT(distinct ?sitelink) as ?count)\nWHERE {\n?item wdt:P31 wd:Q5 .\n?item wdt:P21 wd:Q6581072 .\n?item wdt:P27 wd:Q235 .\n?sitelink schema:about ?item .\n?sitelinken schema:about ?item .\n?sitelinken schema:isPartOf <https://en.wikipedia.org/>;\nFILTER NOT EXISTS {\n?wfr schema:about ?item . ?wfr schema:inLanguage \"fr\"\n}\nFILTER EXISTS {\n?wen schema:about ?item . ?wen schema:inLanguage \"en\"\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } # le label viendra de preference dans votre langue, et autrement en anglais\n}\nGROUP BY ?item ?itemLabel ?itemDescription ?sitelinken ORDER BY DESC(?count)",
        "complexity_description": "Multiple filters, service call and group by",
        "complexity": "complex"
    },
    {
        "id": "2602",
        "valid_gpt_response": true,
        "query": "SELECT\n?language\n?languageLabel\n?lexeme\n?lemmas\n?count\nWITH {\nSELECT ?lexeme ?sense {\n?lexeme ontolex:sense ?sense.\n}\n} AS %0\nWITH {\nSELECT ?lexeme (COUNT(*) AS ?count) {\nINCLUDE %0.\n}\nGROUP BY ?lexeme\n} AS %1\nWITH {\nSELECT ?lexeme ?count {\nINCLUDE %1.\n}\nORDER BY DESC(?count)\nLIMIT 100\n} AS %2\nWITH {\nSELECT\n?lexeme\n(GROUP_CONCAT(?lemma; SEPARATOR=', ') AS ?lemmas)\n{\nINCLUDE %2.\n?lexeme wikibase:lemma ?lemma.\n}\nGROUP BY ?lexeme\n} AS %3\n{\nINCLUDE %2.\nINCLUDE %3.\n?lexeme dct:language ?language.\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\"}.\n}\nORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, grouping, and ordering",
        "complexity": "complex"
    },
    {
        "id": "2603",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT\n?coordinates\n?location\n?locationLabel\n?lemma\n?lexeme\n{\n?lexeme\n# INPUT: Insert language here.\ndct:language wd:Q1321;\nwikibase:lemma ?lemma;\nontolex:sense/wdt:P6271 ?location.\n?location\n# INPUT: Insert country here.\nwdt:P131* wd:Q419;\nwdt:P625 ?coordinates.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple joins, filters and service call",
        "complexity": "medium"
    },
    {
        "id": "2604",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?layer ?layerLabel ?dot ?dotLabel ?coord\nWITH {\nSELECT DISTINCT ?somethingelse ?sea WHERE {\n{?somethingelse wdt:P131/wdt:P131 wd:Q22 .} hint:Prior hint:runFirst true.\n?somethingelse wdt:P403|wdt:P201 ?sea .\n}\n} as %i\nWITH {\nSELECT ?sea ?layer WHERE {\nINCLUDE %i .\nFILTER NOT EXISTS {\n?sea wdt:P31/wdt:P279* wd:Q355304 . hint:Prior hint:gearing \"forward\". # exclude watercourse\nFILTER NOT EXISTS {?sea wdt:P31 wd:Q47053. } # unless estuary,\nFILTER NOT EXISTS {?sea wdt:P31 wd:Q1210950. } # or channel\n}\nFILTER NOT EXISTS {?sea wdt:P403?/wdt:P31/wdt:P279* wd:Q23397 . hint:Prior hint:gearing \"forward\". } # lake\n?sea ^wdt:P403|^wdt:P201 ?layer. # ?layer is the river before the sea\n?layer wdt:P131/wdt:P131 wd:Q22 . hint:Prior hint:gearing \"forward\".\n}\n} as %j\nWHERE {\nINCLUDE %j\n{?layer (^wdt:P403|^wdt:P201|wdt:P200)*/(^wdt:P177|^wdt:P206)? ?dot. }\n?dot wdt:P625|((p:P885|p:P403|p:P200|p:P201)/pq:P625) ?coord .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple nested subqueries, complex filtering and property paths",
        "complexity": "complex"
    },
    {
        "id": "2605",
        "valid_gpt_response": true,
        "query": "select distinct ?item ?itemLabel ?itemDescription ?date where {\n?item wdt:P31 wd:Q5; # Any instance of a human.\nwdt:P509 wd:Q9687;\nwdt:P570 ?date.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,nl\" }\n}\nORDER BY ASC(?date)",
        "complexity_description": "Multiple triple patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "2606",
        "valid_gpt_response": true,
        "query": "SELECT ?lieuLabel ?contLabel (COUNT(DISTINCT ?researcher) AS ?nb) WHERE {\nVALUES ?univ { wd:Q2303765 wd:Q1654025 wd:Q746079 }\n?researcher (wdt:P108|wdt:P463|wdt:P1416) ?univ .\n?researcher wdt:P27 ?lieu .\n?lieu wdt:P30 ?cont .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?lieuLabel ?contLabel",
        "complexity_description": "Multiple triple patterns, VALUES clause, SERVICE keyword, and GROUP BY",
        "complexity": "medium"
    },
    {
        "id": "2607",
        "valid_gpt_response": true,
        "query": "SELECT ?propType (COUNT(DISTINCT ?prop) AS ?props) WHERE {\n?prop wikibase:propertyType ?propType .\n}\nGROUP BY ?propType\nORDER BY DESC(?props)",
        "complexity_description": "Aggregation and grouping",
        "complexity": "medium"
    },
    {
        "id": "2608",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT (?item AS ?QNumber) ?P220 ?LanguageLabel ?P1098 ?Qualifier_P585\nWHERE\n{\nVALUES ?instance_of { wd:Q34770 wd:Q33384 } # Language or dialect\n?item wdt:P31 ?instance_of .\nOPTIONAL { ?item wdt:P220 ?P220 . } # ISO 639 3 code\n?item p:P1098 ?no_of_speakers_statement .\n?no_of_speakers_statement wikibase:rank wikibase:PreferredRank . # Has preferred rank\n?no_of_speakers_statement pq:P518 wd:Q36870 . # Has the qualifier applies to part = first language\n?no_of_speakers_statement ps:P1098 ?P1098 . # No of speakers\nOPTIONAL { ?no_of_speakers_statement pq:P585 ?Qualifier_P585 . } # Optional timestamp\nSERVICE wikibase:label\n{\nbd:serviceParam wikibase:language \"en\" .\n?item rdfs:label ?LanguageLabel .\n}\n}\nORDER BY DESC(?P1098)",
        "complexity_description": "Multiple optional patterns, joins and filters",
        "complexity": "complex"
    },
    {
        "id": "2609",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?a ?aLabel ?b ?bLabel\n{?a wdt:P31 wd:Q5;\nwdt:P569 ?birth;\nwdt:P737 ?b .\n?b wdt:P31 wd:Q5 .\nFILTER (?birth > \"1590-01-01\"^^xsd:dateTime && ?birth < \"1750-01-01\"^^xsd:dateTime)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, filter with date range and service call",
        "complexity": "medium"
    },
    {
        "id": "2610",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?namedAfter ?namedAfterLabel WHERE {\n?item wdt:P31 wd:Q6256. # list of all countries (Q6256)\n{\n?item wdt:P138 ?namedAfter. # countries that are named after a person (Q5)\n?namedAfter wdt:P31 wd:Q5.\n}\nUNION\n{\n?item wdt:P138 ?middleNamedAfter. # some countries are named after things that are named after people\n?middleNamedAfter wdt:P138 ?namedAfter.\n?namedAfter wdt:P31 wd:Q5.\n}\nUNION\n{\n?item wdt:P138 ?middleNamedAfter. # some countries are named after things that are named after things that are named after people\n?middleNamedAfter wdt:P138 ?middle2NamedAfter.\n?middle2NamedAfter wdt:P138 ?namedAfter.\n?namedAfter wdt:P31 wd:Q5.\n}\nFILTER(NOT EXISTS { ?namedAfter wdt:P411 wd:Q43115. }) # exclude any Saints (people whose canonisation status is \"Saint\")\nFILTER(NOT EXISTS { ?namedAfter wdt:P411 wd:Q3464126. }) # exclude any Saints (people whose canonisation status is \"Catholic Saint\")\nFILTER(NOT EXISTS { ?namedAfter wdt:P31 wd:Q20643955. }) # exclude any biblical figures (people who are an instance of Human Biblical figures)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY (?namedAfterLabel)",
        "complexity_description": "Multiple UNIONs, FILTERs and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "2611",
        "valid_gpt_response": true,
        "query": "SELECT (count(?work) as ?works) ?P407Label ?P407 WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?work wdt:P31 wd:Q105543609.\nOPTIONAL { ?work wdt:P407 ?P407. }\n}\nGROUP BY ?P407 ?P407Label\nORDER BY DESC(?works) ASC(?P407)\n#Do you know how to improve this query; make it smarter, better, more elegant?\n#If you do, please don't hesitate to drop us a line at User_talk:Moebeus",
        "complexity_description": "Multiple patterns with OPTIONAL clause and GROUP BY",
        "complexity": "medium"
    },
    {
        "id": "2612",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?annuaire_url ?siren\n?portal ?portalLabel ?url WHERE {\n?item wdt:P6671 ?annuaire_id;\nwdt:P8402 ?portal;\nwdt:P1616 ?siren;\nrdfs:label ?itemLabel.\nFILTER((LANG(?itemLabel)) = \"[AUTO_LANGUAGE]\")\n?portal rdfs:label ?portalLabel.\nFILTER((LANG(?portalLabel)) = \"[AUTO_LANGUAGE]\")\n?portal wdt:P856 ?url.\nBIND(IRI(CONCAT('https://lannuaire.service-public.fr/',?annuaire_id)) as ?annuaire_url)\n}",
        "complexity_description": "Multiple filters, bindings and joins",
        "complexity": "medium"
    },
    {
        "id": "2613",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?mayorImage ?mayor ?mayorLabel ?city ?cityLabel ?population\n{\n?city (wdt:P31/(wdt:P279*)) wd:Q515;\np:P6 ?statement.\n?statement ps:P6 ?mayor.\n?mayor wdt:P21 wd:Q6581072.\nFILTER(NOT EXISTS { ?statement pq:P582 ?x. })\n?mayor wdt:P18 ?mayorImage.\n?city wdt:P1082 ?population.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC (?population)\nLIMIT 30",
        "complexity_description": "Multiple triple patterns, filter, and service query",
        "complexity": "complex"
    },
    {
        "id": "2614",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?twitter ?subscribers WHERE {\n?item p:P2002 ?statement.\n?statement ps:P2002 ?twitter;\npq:P3744 ?subscribers.\n}\nORDER BY DESC(?subscribers)",
        "complexity_description": "Multiple triple patterns, ORDER BY clause",
        "complexity": "medium"
    },
    {
        "id": "2615",
        "valid_gpt_response": true,
        "query": "#defaultView:Table\nSELECT ?count ?cited_work ?cited_workLabel\nWITH {\n  SELECT (count(?work) as ?count) ?cited_work WHERE {\n    { ?work wdt:P921/wdt:P31*/wdt:P279* wd:Q23498 . }\n    union { ?work wdt:P921/wdt:P361+ wd:Q23498 . }\n    union { ?work wdt:P921/wdt:P1269+ wd:Q23498 . }\n    ?work wdt:P2860 ?cited_work .\n    ?cited_work wdt:P577 ?publicationdate .\nFILTER (?publicationdate > \"1969-12-31T00:00:00\"^^xsd:dateTime) . #works published on the subject after a certain date\nFILTER (?publicationdate < \"1980-01-01T00:00:00\"^^xsd:dateTime) . #works published on the subject before a certain date\n  }\n\n  GROUP BY ?cited_work\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\" . } \n}\nORDER BY DESC(?count)\nLIMIT 10",
        "complexity_description": "Multiple unions, filters, and subqueries with grouping",
        "complexity": "complex"
    },
    {
        "id": "2616",
        "valid_gpt_response": true,
        "query": "SELECT ?cc ?ccLabel ?date (ROUND((NOW() - ?date)/365.2425) AS ?age)\n{\n?cc wdt:P31 wd:Q13479982.\nOPTIONAL { ?cc wdt:P571 ?date. }\nFILTER(BOUND(?date)).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?date\nLIMIT 100",
        "complexity_description": "Optional clause, filter, and service with ordering and limiting",
        "complexity": "medium"
    },
    {
        "id": "2617",
        "valid_gpt_response": true,
        "query": "SELECT ?watercourse ?watercourseLabel ?confluenceWith ?confluenceWithLabel ?givesRiseTo ?givesRiseToLabel\nWHERE\n{\n?watercourse p:P2789 ?stat .\n?stat pq:P1552 wd:Q111794957 .\n?stat ps:P2789 ?confluenceWith.\nfilter(str(?watercourse) < str(?confluenceWith))\n?watercourse wdt:P403 ?givesRiseTo .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, filter and service call",
        "complexity": "medium"
    },
    {
        "id": "2618",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?circo ?circoLabel (COUNT(*) AS ?count) WHERE {\n?item wdt:P31 wd:Q5;\np:P3602 ?statement.\n?statement ps:P3602 wd:Q106253677.\nOPTIONAL { ?statement pq:P768 ?circo. }\n?sitelink schema:about ?item.\nFILTER (SUBSTR(str(?sitelink), 11, 15) = \".wikipedia.org/\") .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr,en\". }\n}\nGROUP BY ?item ?itemLabel ?circo ?circoLabel\nORDER BY DESC (?count)\nLIMIT 100",
        "complexity_description": "Multiple joins, optional pattern, filter, service call and aggregation",
        "complexity": "complex"
    },
    {
        "id": "2619",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription (COUNT(*) AS ?count) WHERE {\nVALUES ?target {\nwd:Q385468\nwd:Q17524931\nwd:Q18093037\n}\n?item wdt:P31 wd:Q5;\np:P735 ?statement.\n?statement ps:P735 ?target.\nOPTIONAL { ?statement pq:P1545 ?rank. }\nBIND(IF(BOUND(?rank),?rank, 0) AS ?rank2)\nFILTER(xsd:integer(?rank2) < xsd:integer(2))\n?sitelink schema:about ?item.\nFILTER (SUBSTR(str(?sitelink), 11, 15) = \".wikipedia.org/\") .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr,en\". }\n}\nGROUP BY ?item ?itemLabel ?itemDescription\nORDER BY DESC (?count)\nLIMIT 100",
        "complexity_description": "Multiple filters, optional pattern, subqueries and group by",
        "complexity": "complex"
    },
    {
        "id": "2620",
        "valid_gpt_response": true,
        "query": "SELECT ?wikimedian ?wikimedianLabel ?twitch_url {\n?wikimedian wdt:P31 wd:Q5 ; wdt:P106 wd:Q41546637 ; wdt:P5797 ?twitch .\nBIND(URI(CONCAT(\"https://www.twitch.tv/\", ?twitch)) AS ?twitch_url) .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nORDER BY ?twitch_url",
        "complexity_description": "Simple query with 3 triple patterns and a BIND function",
        "complexity": "simple"
    },
    {
        "id": "2621",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?d ?dLabel ?child ?childLabel ?dImage ?childImage\n{?d wdt:P31 wd:Q11688446;\nwdt:P40|^wdt:P22|^wdt:P25 ?child;\nwdt:P18 ?dImage .\n?child wdt:P18 ?childImage .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, UNION operator, and SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "2622",
        "valid_gpt_response": true,
        "query": "SELECT ?dish ?dishLabel (COUNT(DISTINCT ?ingredient) AS ?ingredientCount) (GROUP_CONCAT(?ingredientLabel; separator = \", \") as ?ingredients) {\n{\nSELECT ?dish ?ingredient ?ingredientLabel {\n?dish wdt:P31 wd:Q746549 ; wdt:P527 ?ingredient .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?dish ?dishLabel ORDER BY DESC(?ingredientCount)",
        "complexity_description": "Multiple subqueries, grouping and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "2623",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?place ?placeLabel ?coords ?img ?layer WHERE {\n?item wdt:P31?/wdt:P279* wd:Q2095 .\n?item wdt:P138 ?place .\n?place wdt:P17 wd:Q145 .\n?place wdt:P131 [] .\nOPTIONAL {?place wdt:P625 ?coords} .\nOPTIONAL {?item wdt:P18 ?img} .\nOPTIONAL {?item wdt:P31?/wdt:P279* wd:Q10943 . BIND (wd:Q10943 AS ?type)} .\nOPTIONAL {?item wdt:P31?/wdt:P279* wd:Q3314483 . BIND (wd:Q3314483 AS ?type)} .\nOPTIONAL {?item wdt:P31?/wdt:P279* wd:Q40050 . BIND (wd:Q40050 AS ?type)} .\nOPTIONAL {BIND (wd:Q2095 AS ?type)} .\nOPTIONAL {?type rdfs:label ?layer . FILTER(lang(?layer) = 'en')}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple optional patterns, property paths, and service calls",
        "complexity": "complex"
    },
    {
        "id": "2624",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?positionLabel ?start ?fonction ?fonctionLabel WHERE {\n?item wdt:P31 wd:Q5;\np:P39 ?position_statement.\n?position_statement ps:P39 ?position;\npq:P580 ?start.\nFILTER(?start >= \"1800-01-01T00:00:00Z\"^^xsd:dateTime)\n?position (wdt:P279*) wd:Q15135541.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nOPTIONAL { ?item wdt:P39 ?fonction. }\n}\nORDER BY DESC (?start) (?itemLabel)\nLIMIT 10000",
        "complexity_description": "Multiple joins, filters and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "2625",
        "valid_gpt_response": true,
        "query": "SELECT ?place ?placeLabel ?location WHERE {\nwd:Q933 wdt:P625 ?southPole. # coordinates of south pole\n?place wdt:P30 wd:Q51; # continent: antarctica\nwdt:P625 ?location.\nFILTER(geof:distance(?location, ?southPole) > 3000). # over 3000km away from south pole\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Filter with geospatial function and multiple triple patterns",
        "complexity": "medium"
    },
    {
        "id": "2626",
        "valid_gpt_response": true,
        "query": "SELECT ?item1 ?item1Label ?rgb ?item2 ?item2Label ?image2 # ?edgeLabel\nWHERE {\n?edge wdt:P179 wd:Q99037794 ;\nwdt:P921 ?item2 ;\nwdt:P50 ?item1 .\n?item1 wdt:P102/wdt:P465 ?rgb .\n# OPTIONAL { ?item2 wdt:P18 ?image2. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,sv\". }\n}",
        "complexity_description": "Multiple triple patterns with optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "2627",
        "valid_gpt_response": true,
        "query": "select distinct ?i ?iLabel {\n?i wdt:P31 wd:Q482994 ; p:P407 ?a , ?b .\nfilter(str(?a) < str(?b))\nminus { ?i p:P407/wikibase:rank wikibase:PreferredRank }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, filter, minus clause and service query",
        "complexity": "complex"
    },
    {
        "id": "2628",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?constituency ?constituencyLabel ?party ?partyLabel ?votes WHERE {\n?item wdt:P31 wd:Q5;\np:P3602 ?statement.\n?statement ps:P3602 wd:Q106253677.\nOPTIONAL { ?statement pq:P768 ?constituency. }\nOPTIONAL { ?statement pq:P1268 ?party. }\nOPTIONAL { ?statement pq:P1111 ?votes. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC (?constituencyLabel)",
        "complexity_description": "Multiple optional patterns, service call and ordering",
        "complexity": "complex"
    },
    {
        "id": "2629",
        "valid_gpt_response": true,
        "query": "SELECT ?occupation ?occupationLabel (COUNT(*) AS ?count) WHERE {\nVALUES ?target {\nwd:Q385468\nwd:Q17524931\nwd:Q18093037\n}\n?item wdt:P31 wd:Q5;\nwdt:P106 ?occupation;\np:P735 ?statement.\n?statement ps:P735 ?target.\nOPTIONAL { ?statement pq:P1545 ?rank. }\nBIND(IF(BOUND(?rank),?rank, 0) AS ?rank2)\nFILTER(xsd:integer(?rank2) < xsd:integer(2))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?occupation ?occupationLabel\nORDER BY DESC (?count)\nLIMIT 20",
        "complexity_description": "Multiple joins, subqueries, and filters",
        "complexity": "complex"
    },
    {
        "id": "2630",
        "valid_gpt_response": true,
        "query": "SELECT ?pride ?time ?image {\n?pride (wdt:P31|wdt:P279) wd:Q51404;\nwdt:P571 ?time.\nOPTIONAL {?pride wdt:P18 ?image}\n}",
        "complexity_description": "Two triple patterns, one optional",
        "complexity": "medium"
    },
    {
        "id": "2631",
        "valid_gpt_response": true,
        "query": "SELECT\n?item ?itemLabel\n(COUNT(DISTINCT ?disease) AS ?n_diseases)\nWHERE\n{\n?item wdt:P31 wd:Q7187 .\n?disease wdt:P2293|^wdt:P2293 ?item.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } # Helps get the label in your language, if not, then en language\n}\nGROUP BY\n?item ?itemLabel\nORDER BY\nDESC (?n_diseases)\nLIMIT 20",
        "complexity_description": "Multiple triple patterns, aggregation function and grouping",
        "complexity": "medium"
    },
    {
        "id": "2632",
        "valid_gpt_response": true,
        "query": "SELECT ?biennale ?biennaleLabel WHERE {\nSERVICE wikibase:mwapi {\nbd:serviceParam wikibase:endpoint \"www.wikidata.org\";\nwikibase:api \"Search\";\nmwapi:srsearch \"inlabel:biennale@en\";\nmwapi:srlimit \"max\".\n?biennale wikibase:apiOutputItem mwapi:title.\n}\n?biennale p:P2257/psv:P2257 ?interval.\n?interval wikibase:quantityAmount ?intervalAmount;\nwikibase:quantityUnit ?intervalUnit.\nFILTER(!(?intervalAmount = 2 && ?intervalUnit IN (wd:Q577, wd:Q1092296)))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple services, filters and property paths",
        "complexity": "complex"
    },
    {
        "id": "2633",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?np ?statements\nwith {\nselect distinct ?statements {\n[] wikibase:statements ?statements.\n}\n} as %values\nWHERE {\nhint:Query hint:optimizer \"None\".\nVALUES ?instances {\n# Those are the different groups of \"chemicals\" we can be interested in\n# What I would like would be this query not to timeout without commenting the 4 below.\n# (just letting the last very small group to illustrate)\nwd:Q11173 # chemical compound\nwd:Q59199015 # group of stereoisomers\nwd:Q79529 # chemical substance\nwd:Q17339814 # group of chemical substances\nwd:Q47154513 # structural class of chemical compounds\n}\ninclude %values.\nfilter (?statements > 100).\n?np wikibase:statements ?statements;\nwdt:P31 ?instances;\n(p:P703/ps:P703) ?t. # This filters chemicals found in a taxon as a proxy for \"natural product\"\n}\nORDER BY DESC (?statements)",
        "complexity_description": "Multiple subqueries, VALUES clause, and complex filtering",
        "complexity": "complex"
    },
    {
        "id": "2634",
        "valid_gpt_response": true,
        "query": "SELECT ?occupation ?occupationLabel (COUNT(*) AS ?count) WHERE {\nVALUES ?target {\nwd:Q385468\nwd:Q17524931\nwd:Q18093037\n}\n?item wdt:P31 wd:Q5;\nwdt:P106 ?occupation;\np:P735 ?statement.\n?statement ps:P735 ?target.\nOPTIONAL { ?statement pq:P1545 ?rank. }\nBIND(IF(BOUND(?rank),?rank, 0) AS ?rank2)\nFILTER(xsd:integer(?rank2) < xsd:integer(2))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?occupation ?occupationLabel\nORDER BY DESC (?count)\nLIMIT 20",
        "complexity_description": "Multiple joins, subqueries, and filters",
        "complexity": "complex"
    },
    {
        "id": "2635",
        "valid_gpt_response": true,
        "query": "SELECT ?role (count(distinct ?item) as ?count)\nWITH {\nSELECT DISTINCT ?item ?property ?property_label WHERE {\n?item ?predicate wd:Q380875. hint:Prior hint:runFirst true.\n?item wdt:P31/wdt:P279* wd:Q811430 .hint:Prior hint:gearing \"forward\".\n?property wikibase:directClaim ?predicate .\n?property rdfs:label ?property_label . FILTER(lang(?property_label) = 'en') .\n}\n} AS %items\nWITH {\nSELECT ?item (GROUP_CONCAT(?property_label; separator = ' + ') AS ?role) WHERE {\nINCLUDE %items\n} GROUP BY ?item\n} AS %roles\nWHERE {\nINCLUDE %roles .\n} GROUP BY ?role ORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, grouping, and filtering",
        "complexity": "complex"
    },
    {
        "id": "2636",
        "valid_gpt_response": true,
        "query": "select ?item ?itemLabel ?count ?langExample ?langExampleLabel (sample(?lexeme) as ?lex) ?lemma (sample(?sens) as ?sense) {\n{\nselect ?item (count(distinct ?lang) as ?count) (sample(?lang) as ?langExample) {\n?sens wdt:P5137 ?item .\n?lexeme ontolex:sense ?sens ;\ndct:language ?lang .\n} group by ?item having (?count > 2)\n}\n?lexeme ontolex:sense ?sens ;\ndct:language ?langExample ;\nwikibase:lemma ?lemma .\n?sens wdt:P5137 ?item .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} group by ?item ?itemLabel ?count ?langExample ?lemma ?langExampleLabel order by desc(?count)",
        "complexity_description": "Multiple subqueries, grouping, and filtering",
        "complexity": "complex"
    },
    {
        "id": "2637",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?game ?gameLabel (\"00FFFF\" AS ?rgb) WHERE {\n?item wdt:P31 wd:Q33093124.\n?game wdt:P674 ?item;\n(wdt:P31/(wdt:P279*)) wd:Q7889.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, property paths and service call",
        "complexity": "medium"
    },
    {
        "id": "2638",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?item ?itemLabel ?sitelinks ?coord ?layer ?layerLabel WITH { SELECT ?bridge ?item\nWHERE\n{\n{ ?bridge wdt:P131/wdt:P131 wd:Q22 . } hint:Prior hint:runFirst true.\n?bridge wdt:P2505 ?item.\n?bridge wdt:P31/wdt:P279* wd:Q12280. hint:Prior hint:gearing \"forward\".\n?item wdt:P16 wd:Q387692 .\n} } as %i\nWHERE\n{\nINCLUDE %i\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?bridge wdt:P625 ?coord .\n?bridge wdt:P2505 ?layer .\n} order by desc(?sitelinks) ?itemLabel",
        "complexity_description": "Multiple subqueries, joins, and filters with hints",
        "complexity": "complex"
    },
    {
        "id": "2639",
        "valid_gpt_response": true,
        "query": "select distinct ?o ?fecha ?denominacion where\n{\n{ wd:Q10132 p:P1344 ?o .\nwd:Q10132 wdt:P18 ?pic .\n?o ?l ?t .\noptional { ?t wdt:P585 ?fecha .}\n?t rdfs:label ?denominacion .\n}\nunion\n{ wd:Q10132 p:P166 ?o .\nwd:Q10132 wdt:P109 ?pic .\noptional { ?o pq:P585 ?fecha .}\n?o ?l ?t .\n?t rdfs:label ?denominacion .\n}\nFILTER (lang(?denominacion) = 'es')\n}\norder by ?fecha",
        "complexity_description": "Multiple patterns, optional blocks, and filter",
        "complexity": "complex"
    },
    {
        "id": "2640",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?structure ?structureLabel ?structure_smiles ?reference ?referenceLabel ?reference_doi\nWITH {\nSELECT ?child WHERE {\nVALUES ?taxon {\nwd:Q152 # fishes\nwd:Q93315 # cyanobacteria\nwd:Q103169 # red algae\nwd:Q264543 # chlorohyta\nwd:Q18960 # sponges\nwd:Q28524 # corals\n}\n?child (wdt:P171*) ?taxon.\n}\n}\nAS %child\nWHERE {\nINCLUDE %child\n?structure wdt:P233 ?structure_smiles;\np:P703[\nps:P703 ?child;\n(prov:wasDerivedFrom/pr:P248) ?reference ].\n?reference wdt:P356 ?reference_doi.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple subqueries, joins and filters",
        "complexity": "complex"
    },
    {
        "id": "2641",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?population ?altitude ?populationTimesAltitude WITH {\nSELECT ?item ?population ?altitude {\n?item p:P31 ?pStatement ;\nwdt:P1082 ?population ;\nwdt:P2044 ?altitude .\n?pStatement ps:P31/wdt:P279* wd:Q484170 .\nFILTER NOT EXISTS { ?pStatement pq:P576 ?x }\n}\n} AS %i\nWHERE\n{\nINCLUDE %i\nBIND ( (?population * ?altitude) AS ?populationTimesAltitude)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?populationTimesAltitude)\nLIMIT 100",
        "complexity_description": "Multiple subqueries, filters and service calls",
        "complexity": "complex"
    },
    {
        "id": "2642",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?spouse ?spouseLabel ?grandparent ?grandparentLabel ?linkcount WHERE {\n?person wdt:P31 wd:Q5 . # en manniska\n?person wdt:P26 ?spouse .\n?person wdt:P569 ?date .\nFILTER(datatype(?date)=xsd:dateTime\n&& ?date >= \"1800-01-01T00:00:00\"^^xsd:dateTime)\n?person wikibase:sitelinks ?linkcount .\n?spouse wikibase:sitelinks ?spouselinkcount .\nFILTER (?linkcount >= ?spouselinkcount) # for att inte fa paren tva ganger (utom nar lika \"kanda\")\n?parent wdt:P40 ?person .\n?grandparent wdt:P40 ?parent .\n?spouseparent wdt:P40 ?spouse .\n?grandparent wdt:P40 ?spouseparent .\n?person wikibase:sitelinks ?linkcount . # hur sortera pa t.ex. summa av linkcount?\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"sv,en,de,fr\" }\n}\nGROUP BY ?linkcount ?person ?personLabel ?spouse ?spouseLabel ?grandparent ?grandparentLabel\nORDER BY DESC(?linkcount)",
        "complexity_description": "Multiple filters, joins and subqueries",
        "complexity": "complex"
    },
    {
        "id": "2643",
        "valid_gpt_response": true,
        "query": "SELECT ?actor ?actorLabel ?characterLabel ?count WITH {\nSELECT ?actor ?character (COUNT(DISTINCT ?film) AS ?count) WHERE {\n?film wdt:P31/wdt:P279* wd:Q11424;\np:P161 [\nps:P161 ?actor;\npq:P453 ?character\n].\nFILTER(?actor != ?character)\n?character wdt:P31 wd:Q5;\nwdt:P39 ?position.\n}\nGROUP BY ?actor ?character\nHAVING(?count > 1)\nORDER BY DESC(?count)\nLIMIT 100\n} AS %results WHERE {\nINCLUDE %results.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?count)\nLIMIT 100",
        "complexity_description": "Multiple subqueries, filters, and group by clauses",
        "complexity": "complex"
    },
    {
        "id": "2644",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT\n?item ?itemLabel ?sitelinks (SAMPLE(?pic) as ?sample_pic)\nWHERE\n{\n?item wdt:P1435 [] .\n?item wikibase:sitelinks ?sitelinks . hint:Prior hint:rangeSafe true.\nFILTER (?sitelinks > 50)\n?item wdt:P18 ?pic .\n?item rdfs:label ?itemLabel .\nFILTER (LANG (?itemLabel) = \"en\")\n}\nGROUP BY ?item ?itemLabel ?sitelinks\nORDER BY DESC(?sitelinks)",
        "complexity_description": "Multiple filters, grouping and ordering",
        "complexity": "medium"
    },
    {
        "id": "2645",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?island ?islandLabel ?countryLabel ?size ?coord ?landwatersLabel ?lwnatureLabel\nWHERE\n{\n?island wdt:P31 wd:Q23442 ;\nwdt:P2046 ?size ;\nwdt:P17 ?country ;\nwdt:P625 ?coord .\n?landwaters wdt:P31 ?lwnature .\n?lwnature wdt:P279* wd:Q863944 .\n?landwaters wdt:P276 ?island .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } # le label viendra de preference dans votre langue, et autrement en anglais\n} ORDER BY ?size",
        "complexity_description": "Multiple triple patterns with UNION and SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "2646",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?articlename ?itemLabel ?itemDescription ?sl\nWHERE {\nVALUES ?dod {\"+1966-08-25\"^^xsd:dateTime}\n?dod ^wdt:P569 ?item .\n?item wikibase:sitelinks ?sl .\n?item ^schema:about ?article .\n?article schema:isPartOf <https://en.wikipedia.org/>;\nschema:name ?articlename .\nSERVICE wikibase:label\n{\nbd:serviceParam wikibase:language \"en\" .\n?item rdfs:label ?itemLabel .\n?item schema:description ?itemDescription .\n}\nBIND(REPLACE(?itemLabel, \"^.*(?<! [Vv][ao]n| [Dd][aeiu]| [Dd][e][lns]| [Ll][ae]) (?!([SJ]r\\\\.?|[XVI]+)$)\", \"\") AS ?sortname)\n} ORDER BY ASC(UCASE(?sortname)) ASC(UCASE(?itemLabel))",
        "complexity_description": "Multiple joins, subqueries, and regex usage",
        "complexity": "complex"
    },
    {
        "id": "2647",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?director ?directorLabel (COUNT(*) AS ?count) WHERE {\n?item wdt:P161 wd:Q106204;\nwdt:P57 ?director.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?director ?directorLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, service call, group by and order by",
        "complexity": "medium"
    },
    {
        "id": "2648",
        "valid_gpt_response": true,
        "query": "SELECT ?cemetery ?cemeteryLabel ?churchLabel ?church ?distance {\n?cemetery wdt:P31/wdt:P279* wd:Q39614;\nwdt:P17 wd:Q142;\nwdt:P625 ?cem_coords.\nSERVICE wikibase:around {\n?church wdt:P625 ?chr_coords.\nbd:serviceParam wikibase:center ?cem_coords.\nbd:serviceParam wikibase:radius \"0.02\".\nbd:serviceParam wikibase:distance ?distance.\n}\nFILTER EXISTS {\n?church wdt:P31/wdt:P279* wd:Q16970.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE], en\". }\n}",
        "complexity_description": "Multiple services, filters and joins",
        "complexity": "complex"
    },
    {
        "id": "2649",
        "valid_gpt_response": true,
        "query": "SELECT ?from ?fromLabel ?to ?toLabel ?rgb WHERE {\n{SELECT (?fictional_war AS ?from) (?universe AS ?to) (\"F7FF00\" as ?rgb) WHERE {\n?fictional_war wdt:P31 wd:Q17198419. OPTIONAL{?fictional_war wdt:P1080 ?narr_universe}\nOPTIONAL {?fictional_war wdt:P8345 ?franchise }\nOPTIONAL {?fictional_war wdt:P1441 ?work }\nBIND(COALESCE(?narr_universe, ?franchise, ?work, '') AS ?universe)\n} }\nUNION {SELECT (?participant AS ?from) (?fictional_war AS ?to) (\"7FFF00\" as ?rgb) WHERE {\n?fictional_war wdt:P31 wd:Q17198419.\nOPTIONAL { ?fictional_war wdt:P710 ?participant } } }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple UNION, OPTIONAL, and BIND clauses with nested queries",
        "complexity": "complex"
    },
    {
        "id": "2650",
        "valid_gpt_response": true,
        "query": "#defaultView:BubbleChart\nSELECT ?count ?topic ?taxonname\nWITH {\n  SELECT (COUNT(?publication) AS ?count) ?topic WHERE {\n    ?publication wdt:P921 ?topic .\n    ?topic wdt:P105 wd:Q7432 .\n  }\n  GROUP BY ?topic\n  ORDER BY DESC(?count)\n  LIMIT 100\n} AS %result\nWHERE {\n  INCLUDE %result\n  ?topic wdt:P225 ?taxonname .\n}\nORDER BY DESC(?count)",
        "complexity_description": "Subqueries, grouping, ordering and limiting",
        "complexity": "complex"
    },
    {
        "id": "2651",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?lieu ?date ?coord ?layer ?img WHERE {\n?item wdt:P54 wd:Q297901 ;\nwdt:P19 ?lieu ;\nwdt:P569 ?date .\n?lieu wdt:P625 ?coord .\nOPTIONAL { ?item wdt:P18 ?img }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nBIND ( CONCAT(\"Annees \",STR(FLOOR(YEAR(?date)/10)),\"0\") AS ?layer )\n}",
        "complexity_description": "Multiple triple patterns, OPTIONAL clause, and BIND function",
        "complexity": "medium"
    },
    {
        "id": "2652",
        "valid_gpt_response": true,
        "query": "SELECT (count(?album) as ?albums) ?P407Label ?P407 WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?album wdt:P31 wd:Q482994.\nOPTIONAL { ?album wdt:P407 ?P407. }\n}\nGROUP BY ?P407 ?P407Label\nORDER BY DESC(?albums) ASC(?P407)\n#Do you know how to improve this query; make it smarter, better, more elegant?\n#If you do, please don't hesitate to drop us a line at User_talk:Moebeus or join\n#the conversation over on Telegram: https://t.me/exmusica",
        "complexity_description": "Multiple patterns with OPTIONAL clause and GROUP BY",
        "complexity": "medium"
    },
    {
        "id": "2653",
        "valid_gpt_response": true,
        "query": "SELECT ?ocu ?ocuLabel (COUNT(DISTINCT ?item) AS ?count)\n(SAMPLE(?ocu) as ?ocu_sampled)\nwhere {\nhint:Query hint:optimizer \"None\".\n?item wdt:P2966 ?llgc .\n?item wdt:P106 ?ocu .\n?ocu wdt:P279+ wd:Q639669 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?ocu ?ocuLabel\nORDER BY DESC(?count) ?ocuLabel",
        "complexity_description": "Multiple joins, subqueries, and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "2654",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?site ?siteLabel ?coordinates ?image WHERE {\n?site (wdt:P31/(wdt:P279*)) wd:Q27028153;\nwdt:P17 wd:Q142;\nwdt:P625 ?coordinates.\nOPTIONAL { ?site wdt:P18 ?image. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\". }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service query",
        "complexity": "medium"
    },
    {
        "id": "2655",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?instance ?instanceLabel ?altitude ?coord\nWHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nwd:Q8502 ^(wdt:P279*) ?instance.\n?item wdt:P31 ?instance;\nwdt:P17 wd:Q142;\nwdt:P625 ?coord;\nwdt:P2044 ?altitude.\nFILTER(?altitude >= 2500)\n}\nORDER BY DESC(?altitude)",
        "complexity_description": "Multiple filters, joins and ordering",
        "complexity": "complex"
    },
    {
        "id": "2656",
        "valid_gpt_response": true,
        "query": "SELECT ?tour ?tourLabel ?startdate ?tournumber ?item ?itemLabel ?stagenumber ?winner ?winnerLabel ?country ?countryLabel WHERE {\n?tour wdt:P31 wd:Q33881;\nrdfs:label ?tourLabel.\nFILTER((LANG(?tourLabel)) = \"en\")\n?item wdt:P361 ?tour;\nrdfs:label ?itemLabel.\nFILTER((LANG(?itemLabel)) = \"en\")\n?tour wdt:P580 ?startdate.\n?tour wdt:P393 ?tournumber.\n?item wdt:P1545 ?stagenumber.\n?item p:P1346 ?statement.\n?statement ps:P1346 ?winner.\n?statement pq:P642 wd:Q20882747 .\n?winner rdfs:label ?winnerLabel.\nFILTER((LANG(?winnerLabel)) = \"en\" )\n?winner wdt:P27 ?country.\n?country rdfs:label ?countryLabel.\nFILTER((LANG(?countryLabel)) = \"en\" )\n}",
        "complexity_description": "Multiple filters, multiple joins and subqueries",
        "complexity": "complex"
    },
    {
        "id": "2657",
        "valid_gpt_response": true,
        "query": "SELECT ?annee (COUNT(?equipe) AS ?nombre) WHERE {\n?equipe wdt:P31 wd:Q14645593 ;\nwdt:P17 wd:Q142 .\nOPTIONAL { ?equipe wdt:P571 ?date . }\nBIND ( STR(YEAR(?date)) AS ?year )\nBIND(IF(BOUND(?year),?year,\"sans date\") AS ?annee)\n}\nGROUP BY ?annee",
        "complexity_description": "Uses OPTIONAL, BIND, IF and GROUP BY clauses",
        "complexity": "complex"
    },
    {
        "id": "2658",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person1 ?person1Label ?person2 ?person2Label\nWHERE\n{\n?person1 wdt:P31 wd:Q5 ;\nwdt:P26 ?person2 .\n?person1 p:P39 ?function1Statement .\n?function1Statement ps:P39 wd:Q3044918 .\n?function1Statement pq:P2937 ?legislature1 .\n?person2 wdt:P31 wd:Q5 .\n?person2 p:P39 ?function2Statement .\n?function2Statement ps:P39 wd:Q3044918 .\n?function1Statement pq:P2937 ?legislature2 .\nFILTER(?legislature1 = ?legislature2)\nFILTER(str(?person1) < str(?person2))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr,en\". }\n}",
        "complexity_description": "Multiple filters, joins and subqueries",
        "complexity": "complex"
    },
    {
        "id": "2659",
        "valid_gpt_response": true,
        "query": "SELECT ?country ?countryLabel (COUNT(DISTINCT ?item) AS ?count) WHERE {\n?item (wdt:P31|wdt:P279) wd:Q51404;\nwdt:P17 ?country;\nwdt:P571 ?time.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?country ?countryLabel\nORDER BY (?countryLabel)",
        "complexity_description": "Multiple triple patterns, service call and aggregation",
        "complexity": "medium"
    },
    {
        "id": "2660",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?pic ?birth_date WHERE\n{\nBIND(MONTH(NOW()) AS ?nowMonth)\nBIND(DAY(NOW()) AS ?nowDay)\n?item wdt:P106 wd:Q937857 .\n?item wdt:P18 ?pic .\n?item wikibase:sitelinks ?sitelinks .\nhint:Prior hint:rangeSafe true.\nFILTER(?sitelinks > 20)\n?item wdt:P569 ?birth_date .\nhint:Prior hint:rangeSafe true.\nFILTER (MONTH(?birth_date) = ?nowMonth && DAY(?birth_date) = ?nowDay)\n?item rdfs:label ?itemLabel.\nFILTER(LANG(?itemLabel) = \"en\")\n}\nORDER BY\nDESC(?sitelinks)",
        "complexity_description": "Multiple filters, bindings and hints",
        "complexity": "complex"
    },
    {
        "id": "2661",
        "valid_gpt_response": true,
        "query": "SELECT ?codeInsee ?item ?itemLabel ?itemDescription ?instance ?instanceLabel WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n{\nwd:Q6465 ^(wdt:P279*) ?instance.\n?item p:P31 ?typeStatement.\n?typeStatement ps:P31 ?instance.\nFILTER(NOT EXISTS { ?typeStatement pq:P582 _:b2. })\n}\nUNION\n{\n?item p:P31 ?typeStatement.\n?typeStatement ps:P31 wd:Q22923920;\npq:P2868 wd:Q6465.\n}\n?item wdt:P2586 ?codeInsee\n}\nORDER BY (?codeInsee)",
        "complexity_description": "Multiple UNION patterns, property paths and filters",
        "complexity": "complex"
    },
    {
        "id": "2662",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?date\nWHERE\n{\n?item wdt:P39 wd:Q274948 ;\nwdt:P1196 wd:Q149086 ;\nwdt:P570 ?date .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } # le label viendra de preference dans votre langue, et autrement en anglais\n}\nORDER BY ?date",
        "complexity_description": "Three triple patterns with a service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "2663",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?countryLabel ?itemLabel ?population ?coords ?shape ?layer\nWHERE\n{\n?item wdt:P31/wdt:P279* wd:Q10864048 ;\nwdt:P1082 ?population ;\nwdt:P17 ?country .\nFILTER ( ?population > 10000000 )\nFILTER NOT EXISTS { ?item wdt:P31 wd:Q19953632 }\nFILTER NOT EXISTS { ?item wdt:P576 ?x }\nOPTIONAL { ?item wdt:P625 ?coords }\nOPTIONAL { ?item wdt:P3896 ?shape }\nBIND(\nIF(?population < 20000000, \"10M-20M\",\nIF(?population < 30000000, \"20M-30M\",\nIF(?population < 40000000, \"30M-40M\",\nIF(?population < 50000000, \"40M-50M\",\nIF(?population < 60000000, \"50M-60M\",\nIF(?population < 70000000, \"60M-70M\",\nIF(?population < 80000000, \"70M-80M\",\nIF(?population < 90000000, \"80M-90M\",\nIF(?population < 100000000, \"90M-100M\",\n\"100M+\")))))))))\nAS ?layer)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?population",
        "complexity_description": "Multiple filters, optional patterns, and conditional bindings",
        "complexity": "complex"
    },
    {
        "id": "2664",
        "valid_gpt_response": true,
        "query": "select *\nwith {\nselect ?globe (count(*) as ?total) {\n[] wikibase:geoGlobe ?globe.\n} group by ?globe\n} as %globes\n{\ninclude %globes.\noptional { ?globe rdfs:label ?en filter (lang(?en) = \"en\") }\n} order by desc(?total) ?en",
        "complexity_description": "Multiple subqueries, grouping and optional clause",
        "complexity": "complex"
    },
    {
        "id": "2665",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?instance ?instanceLabel ?date WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nwd:Q215864 ^(wdt:P279*) ?instance.\n?item wdt:P31 ?instance.\nOPTIONAL { ?item wdt:P585 ?date. }\n}\nORDER BY DESC (?date)\nLIMIT 1000",
        "complexity_description": "Multiple triple patterns, optional clause and ordering",
        "complexity": "medium"
    },
    {
        "id": "2666",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?instance ?instanceLabel ?date WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nwd:Q2904148 ^(wdt:P279*) ?instance.\n?item wdt:P31 ?instance.\nOPTIONAL {?item wdt:P585 ?date }\n}\nORDER BY DESC(?date)\nLIMIT 1000",
        "complexity_description": "Multiple triple patterns, optional clause and ordering",
        "complexity": "medium"
    },
    {
        "id": "2667",
        "valid_gpt_response": true,
        "query": "SELECT (count(?item) as ?count) ?heriotzaLabel WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?lehen_ministro wdt:P279 wd:Q14212.\n?item wdt:P31 wd:Q5.\n?item wdt:P39 ?lehen_ministro.\n?item wdt:P509 ?heriotza\n}\nGROUP by ?heriotzaLabel\nORDER by DESC(?count)",
        "complexity_description": "Multiple triple patterns, SERVICE clause, and GROUP BY/ORDER BY",
        "complexity": "complex"
    },
    {
        "id": "2668",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?city ?cityLabel ?pic\nWHERE\n{\n?item wdt:P27 wd:Q155 .\n?item wdt:P19 ?city .\n?item wdt:P106 wd:Q36180 .\n?item wdt:P18 ?pic .\n?item wikibase:sitelinks ?sitelinks .\n?city wdt:P1082 ?pop .\nFILTER (?pop <20000)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } # Helps get the label in your language, if not, then en language\n}\nORDER BY DESC(?sitelinks)",
        "complexity_description": "Multiple triple patterns with filter and service",
        "complexity": "medium"
    },
    {
        "id": "2669",
        "valid_gpt_response": true,
        "query": "SELECT ?lexicalCategory ?lexicalCategoryLabel ?count ?sample WITH {\nSELECT ?lexicalCategory (COUNT(DISTINCT ?language) AS ?count) (SAMPLE(?lexeme) AS ?sample) {\n?lexeme wikibase:lexicalCategory ?lexicalCategory ; dct:language ?language .\n}\nGROUP BY ?lexicalCategory\n} AS %i WHERE {\nINCLUDE %i\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "2670",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?nb WHERE {\n?item wdt:P106 wd:Q14089670 ;\nwikibase:sitelinks ?nb .\nFILTER ( ?nb > 1 )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Filter and service clause",
        "complexity": "medium"
    },
    {
        "id": "2671",
        "valid_gpt_response": true,
        "query": "SELECT ?st ?stLabel ?sl ?coords ?line ?layer ?rgb WHERE {\n?search (wdt:P31/wdt:P279*) wd:Q5503;wdt:P527 ?lignes.\n?lignes wdt:P559 ?termini;(wdt:P31/wdt:P279*) wd:Q107343049.\n?st (wdt:P31/wdt:P279*) wd:Q928830;wdt:P16 ?search;wdt:P625 ?coords;(wdt:P81|wdt:P1192) ?sl;wdt:P197 ?pred;p:P197[ps:P197 ?pred;pq:P5051 ?towards;(pq:P81|pq:P1192) ?line_pq].\n?pred wdt:P625 ?coords_pred;(wdt:P81|wdt:P1192) ?sl_pred.\nFILTER(?sl_pred = ?lignes)FILTER(?sl = ?lignes)FILTER(?towards = ?termini)\n?st wdt:P5817 wd:Q55654238.\n?pred wdt:P5817 wd:Q55654238.\n?lignes wdt:P5817 wd:Q55654238.\n?pred p:P625[psv:P625[wikibase:geoLatitude ?lat1;wikibase:geoLongitude ?lon1]; rdf:type wikibase:BestRank].\n?st p:P625[psv:P625[wikibase:geoLatitude ?lat2;wikibase:geoLongitude ?lon2]; rdf:type wikibase:BestRank].\nBIND(STRDT(CONCAT(\"LINESTRING(\",STR(?lon1),\" \",STR(?lat1),\",\",STR(?lon2),\" \",STR(?lat2),\")\"),geo:wktLiteral)AS ?line)\nOPTIONAL{?sl wdt:P465 ?rgb.}\nSERVICE wikibase:label{bd:serviceParam wikibase:language \"en\". ?sl rdfs:label ?layer. ?st rdfs:label ?stLabel}\n}",
        "complexity_description": "Multiple filters, optional clause, and complex property paths",
        "complexity": "complex"
    },
    {
        "id": "2672",
        "valid_gpt_response": true,
        "query": "SELECT ?st ?itemLabel\nWITH {\nSELECT DISTINCT ?st ?item\nWHERE {\n?refnode pr:P248 ?statedin ;\n^prov:wasDerivedFrom ?st .\n?statedin wdt:P31/wdt:P279* wd:Q82794. # Geographic region\n?item ?p ?st.\n}\nLIMIT 250\n} AS %i\nWHERE {\nINCLUDE %i\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\n}",
        "complexity_description": "Multiple subqueries, joins and filters",
        "complexity": "complex"
    },
    {
        "id": "2673",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?paper ?paperLabel ?licenceLabel ?fulltext WHERE {\n?author wdt:P108 wd:Q503424. # Employee of University of Leeds\n?paper wdt:P31 wd:Q13442814; wdt:P50 ?author. # scholarly article by this author\nVALUES ?freelicence {wd:Q6905323 wd:Q6905942} # CC-BY or CC-BY-SA\n?paper wdt:P275 ?licence . ?licence wdt:P629? ?freelicence. # Article has this licence, or a specific edition such as CC-BY 3.0\n?paper wdt:P953 ?fulltext FILTER(CONTAINS(STR(?fulltext), \"whiterose.ac.uk\"))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\"}\n} ORDER BY ?paper",
        "complexity_description": "Multiple filters, joins and subqueries",
        "complexity": "complex"
    },
    {
        "id": "2674",
        "valid_gpt_response": true,
        "query": "SELECT ?q ?qLabel ?loc ?locLabel { ?q wdt:P19 ?loc . ?loc wdt:P31/wdt:P279* wd:Q4022 . SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } }",
        "complexity_description": "Two triple patterns, one service call and a property path",
        "complexity": "medium"
    },
    {
        "id": "2675",
        "valid_gpt_response": true,
        "query": "SELECT\n?coordinates\n?institution\n?institutionLabel\n?award\n?awardLabel\n?item\n?itemLabel\nWITH {\nSELECT DISTINCT ?item {\n?item wdt:P31 wd:Q5;\nwdt:P103 wd:Q188.\n}\n} AS %0\nWITH {\nSELECT DISTINCT ?item ?award {\nINCLUDE %0.\n?item wdt:P166 ?award.\n}\n} AS %1\nWITH {\nSELECT DISTINCT ?institution ?award {\nINCLUDE %1.\n{?institution wdt:P5460 ?award}\nUNION\n{?award wdt:P1027 ?institution}.\n}\n} AS %2\nWITH {\nSELECT DISTINCT ?institution ?coordinates {\nINCLUDE %2.\nOPTIONAL{?institution wdt:P625 ?P625}.\nOPTIONAL{?institution wdt:P159/wdt:P625 ?P159_P625}.\nOPTIONAL{?institution wdt:P131+/wdt:P625 ?P131_P625}.\nBIND(COALESCE(IF(BOUND(?P625), ?P625, 1/0),\nIF(BOUND(?P159_P625), ?P159_P625, 1/0),\nIF(BOUND(?P131_P625), ?P131_P625, 1/0))\nAS ?coordinates)\nFILTER(BOUND(?coordinates))\n}\n} AS %3\n{\nINCLUDE %1.\nINCLUDE %2.\nINCLUDE %3.\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"en\"}.\n}",
        "complexity_description": "Multiple nested WITH clauses, UNION operator, and complex OPTIONAL patterns",
        "complexity": "complex"
    },
    {
        "id": "2676",
        "valid_gpt_response": true,
        "query": "SELECT ?grammaticalFeature ?grammaticalFeatureLabel (COUNT(DISTINCT ?lexeme) AS ?count) (SAMPLE(?lexeme) AS ?sample) {\n?lexeme dct:language wd:Q150 ; ontolex:lexicalForm/wikibase:grammaticalFeature ?grammaticalFeature .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nGROUP BY ?grammaticalFeature ?grammaticalFeatureLabel\nORDER BY DESC(?count) ?grammaticalFeatureLabel",
        "complexity_description": "Multiple variables, aggregation function, service call and grouping",
        "complexity": "complex"
    },
    {
        "id": "2677",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?linkcount ?birthplace ?birthplaceLabel ?coordinates {\nVALUES ?linkcount {}\n?person wdt:P31 wd:Q5 ; wikibase:sitelinks ?linkcount ; wdt:P19 ?birthplace .\n?birthplace wdt:P625 ?coordinates .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?linkcount)",
        "complexity_description": "Multiple joins, VALUES clause with 320 values, and ORDER BY",
        "complexity": "complex"
    },
    {
        "id": "2678",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?instance ?instanceLabel ?date WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\nwd:Q43059 ^(wdt:P279*) ?instance.\n?item wdt:P31 ?instance.\nOPTIONAL { ?instance wdt:P585 ?date. }\n}\nORDER BY DESC(?date)\nLIMIT 1000",
        "complexity_description": "Multiple triple patterns, optional clause and ordering",
        "complexity": "medium"
    },
    {
        "id": "2679",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person ?personLabel ?coord WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n{\nSELECT DISTINCT ?person WHERE {\n?person wdt:P5008 wd:Q111645234.\n}\n}\nOPTIONAL {?person wdt:P108/wdt:P625 ?coord. }\n}",
        "complexity_description": "Nested query with optional pattern",
        "complexity": "medium"
    },
    {
        "id": "2680",
        "valid_gpt_response": true,
        "query": "SELECT ?date\nWITH {\nSELECT ?date WHERE {\nwd:Q47150325 ^wdt:P31 [wdt:P585 ?date] .\nFILTER(xsd:date(?date) < xsd:date(NOW()))\n}\n} AS %results1\nWITH {\nSELECT ?date WHERE {\nINCLUDE %results1.\nMINUS{[] ps:P570 ?date .}\n}\n} AS %results2\nWHERE {\nINCLUDE %results2.\nMINUS{[] ps:P569 ?date .}\n} ORDER BY DESC(?date) LIMIT 1",
        "complexity_description": "Multiple nested WITH clauses, FILTER and MINUS operations",
        "complexity": "complex"
    },
    {
        "id": "2681",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?geo ?memorial ?memorialLabel ?article ?sitelink WHERE {\n?memorial wdt:P31/wdt:P279* wd:Q575759;\nwdt:P625 ?geo.\nOPTIONAL {?article schema:about ?memorial ;\nschema:isPartOf <https://en.wikipedia.org/> ;\nschema:name ?sitelink . }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "2682",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?itemDescription ?place ?placeLabel ?sitelinks WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n?item wikibase:sitelinks ?sitelinks.\n?item wdt:P19 ?place.\n?place wdt:P131* wd:Q173695.\n}\nORDER BY DESC (?sitelinks)\nLIMIT 200",
        "complexity_description": "Multiple joins, filtering and ordering",
        "complexity": "medium"
    },
    {
        "id": "2683",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?location ?locationLabel\nWHERE\n{\n?item wdt:P138 ?location.\n?item wdt:P31 wd:Q16521 .\n?item wdt:P105 wd:Q7432 .\n{?location wdt:P131* wd:Q43233 .}\nUNION\n{VALUES ?location {wd:Q43233 wd:Q111802884}}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } # Helps get the label in your language, if not, then en language\n}",
        "complexity_description": "Multiple triple patterns with UNION and recursive property",
        "complexity": "medium"
    },
    {
        "id": "2684",
        "valid_gpt_response": true,
        "query": "SELECT ?Vladimir_Lenin ?Vladimir_LeninLabel ?koordenatuak WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?Vladimir_Lenin wdt:P138 wd:Q1394.\nOPTIONAL { ?Vladimir_Lenin wdt:P625 ?koordenatuak. }\n}",
        "complexity_description": "Simple query with one triple pattern and an optional block",
        "complexity": "simple"
    },
    {
        "id": "2685",
        "valid_gpt_response": true,
        "query": "SELECT ?statements ?countz\nWITH {\nSELECT ?statements (count(*) as ?countz) WHERE {\n?item wikibase:statements ?statements\n} group by ?statements\n} AS %counts\nWHERE {\nINCLUDE %counts .\nFILTER (?statements <= 35) .\n} ORDER BY ?statements",
        "complexity_description": "Subquery, grouping, and filtering",
        "complexity": "complex"
    },
    {
        "id": "2686",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?itemDescription ?placediedLabel ?placedied WHERE {\n{ ?item wdt:P106 wd:Q1792450.} UNION { ?item wdt:P31 wd:Q1007870. } UNION { ?item wdt:P106 wd:Q173950.} UNION { ?item wdt:P921 wd:Q328376.} UNION { ?item wdt:P106 wd:Q10732476.} UNION { ?item wdt:P106 wd:Q446966.} UNION { ?item wdt:P106 wd:Q22132694.} UNION { ?item wdt:P106 wd:Q674426.}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n?item wdt:P20 ?placedied.\n{ ?placedied wdt:P31 wd:Q328468.} UNION { ?placedied wdt:P31 wd:Q152081. } UNION { ?placedied wdt:P31 wd:Q153813.} UNION { ?placedied wdt:P31 wd:Q153813.} UNION { ?placedied wdt:P31 wd:Q2583015.}\n# FILTER (YEAR(?birth) = 1860 && YEAR(?birth) <= 1990)\n}\nLIMIT 300",
        "complexity_description": "Multiple UNIONs, SERVICE clause and FILTER",
        "complexity": "complex"
    },
    {
        "id": "2687",
        "valid_gpt_response": true,
        "query": "SELECT ?statements (count(*) as ?countz)\nWHERE\n{\n?item wikibase:statements ?statements\n} group by ?statements order by desc(?countz)",
        "complexity_description": "Grouping and aggregation",
        "complexity": "medium"
    },
    {
        "id": "2688",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?taxonname ?itemLabel ?irudia ?sitelinks WHERE {\n?item wdt:P31 wd:Q16521.\n?item wdt:P105 wd:Q7432.\n?item wdt:P225 ?taxonname.\n?item wdt:P171+ wd:Q27720.\n?item wdt:P171+ ?family.\n?family wdt:P105 wd:Q37517.\n?item wdt:P18 ?irudia.\n?item wikibase:sitelinks ?sitelinks.\n?wen schema:about ?item.\n?wen schema:isPartOf <https://ca.wikipedia.org/>.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"la,eu\". }\nFILTER(NOT EXISTS {\n?weu schema:about ?item.\n?weu schema:inLanguage \"eu\".\n})\n}\nORDER BY DESC(?sitelinks)\nLIMIT 100",
        "complexity_description": "Multiple filters, subqueries and joins",
        "complexity": "complex"
    },
    {
        "id": "2689",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?length ?unit ?unitLabel ?length_in_km WHERE {\n?item (wdt:P31/(wdt:P279*)) wd:Q55659167;\nwdt:P17 wd:Q142;\np:P2043 ?length_statement.\n?length_statement psv:P2043 ?length_value.\n?length_value wikibase:quantityAmount ?length;\nwikibase:quantityUnit ?unit.\n?unit p:P2370 ?unit_statement.\n?unit_statement psv:P2370 ?unit_value.\n?unit_value wikibase:quantityAmount ?conversion;\nwikibase:quantityUnit wd:Q11573.\nBIND(?length * ?conversion / 1000 AS ?length_in_km)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE], en\". }\n}\nORDER BY DESC (?length_in_km)\nLIMIT 100",
        "complexity_description": "Multiple joins, subqueries, and calculations",
        "complexity": "complex"
    },
    {
        "id": "2690",
        "valid_gpt_response": true,
        "query": "select distinct ?form1 ?form1Label ?form2 ?form2Label {\n?item ontolex:lexicalForm ?form1, ?form2;\ndct:language wd:Q9027;\nwikibase:lexicalCategory wd:Q24905.\nfilter(str(?form1) < str(?form2)).\nminus { ?form1 ?thing [] filter (strstarts(str(?thing), str(p:))) }\nminus { ?form2 ?thing [] filter (strstarts(str(?thing), str(p:))) }\n?form1 ontolex:representation ?form1Label.\n?form2 ontolex:representation ?form2Label.\nminus { ?item dct:language wd:Q9027; ontolex:lexicalForm ?form1. ?form1 wikibase:grammaticalFeature ?feat. filter not exists { ?form2 wikibase:grammaticalFeature ?feat } }\nminus { ?item dct:language wd:Q9027; ontolex:lexicalForm ?form2. ?form2 wikibase:grammaticalFeature ?feat. filter not exists { ?form1 wikibase:grammaticalFeature ?feat } }\n}",
        "complexity_description": "Multiple filters, minus clauses and joins",
        "complexity": "complex"
    },
    {
        "id": "2691",
        "valid_gpt_response": true,
        "query": "select distinct ?i ?lemma {\n?i dct:language wd:Q9610 ; wikibase:lemma ?lemma .\n?i wdt:P5238 ?j . ?j wdt:P5191 ?k . ?k dct:language wd:Q11059 .\nminus { ?i wdt:P5191 [] }\nminus { ?i wdt:P5238 ?l .\nminus { ?l wdt:P5191/dct:language wd:Q11059 }\n}\n}\norder by ?lemma",
        "complexity_description": "Multiple joins, minus clauses and filters",
        "complexity": "complex"
    },
    {
        "id": "2692",
        "valid_gpt_response": true,
        "query": "SELECT ?base ?count ?sample_item ?sample_itemLabel ?sample_itemDescription ?sample_url WHERE {\n{\nselect (IRI(CONCAT(?stem, '.uk/')) AS ?base) (count(?item) as ?count) (SAMPLE(?item) AS ?sample_item) (SAMPLE(?url) AS ?sample_url) {\n?item wdt:P973 ?url .\nFILTER(CONTAINS(str(?url), '.uk/')) .\nBIND(STRBEFORE(str(?url), '.uk/') AS ?stem) .\n} group by ?stem\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, grouping, and filtering",
        "complexity": "complex"
    },
    {
        "id": "2693",
        "valid_gpt_response": true,
        "query": "SELECT\n?property\n?propertyLabel\n?count\nWITH {\nSELECT DISTINCT ?property ?wdt {\n?property\na wikibase:Property;\nwdt:P31/wdt:P279* wd:Q105388954;\nwikibase:directClaim ?wdt.\n}\n} AS %0\nWITH {\nSELECT DISTINCT ?item {\n?item wdt:P106 wd:Q5482740.\n}\nLIMIT 1234\n} AS %1\nWITH {\nSELECT ?property (COUNT(*) AS ?count) {\nINCLUDE %0.\nINCLUDE %1.\n?item ?wdt [].\n}\nGROUP BY ?property\n} AS %2\n{\nINCLUDE %2.\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\"}.\n}\nORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, joins, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "2694",
        "valid_gpt_response": true,
        "query": "SELECT ?journal ?journalLabel (COUNT(DISTINCT ?work) AS ?retractions) (GROUP_CONCAT(DISTINCT ?publisherrLabel;separator=\"; \") AS ?publisher) WHERE {\n#SELECT ?journal ?journalLabel (COUNT(DISTINCT ?work) AS ?retractions) ((SAMPLE(?publisherrLabel) AS ?publisher) WHERE {\n{ ?work wdt:P31 wd:Q45182324 . }\nUNION\n{ ?work wdt:P793 wd:Q7316896 . }\nUNION\n{ ?work wdt:P5824 [] . }\n?work wdt:P1433 ?journal .\nOPTIONAL { ?journal wdt:P123 ?publisherr . ?publisherr rdfs:label ?publisherrLabel . FILTER (LANG(?publisherrLabel)=\"en\")}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?journal ?journalLabel\nORDER BY DESC(?retractions)",
        "complexity_description": "Multiple UNIONs, OPTIONAL clause, SERVICE keyword, and aggregate functions",
        "complexity": "complex"
    },
    {
        "id": "2695",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?url ?code ?named_as ?links ?stmts ?item ?itemLabel ?itemDescription\nWITH {\nSELECT DISTINCT ?url ?code ?named_as ?item WHERE {\n{\n?item p:P4652 ?stmt .\nOPTIONAL {?stmt ps:P4652 ?esco .\nwd:P4652 wdt:P1630 ?fmt .\nBIND(IRI(REPLACE(?esco, '(^.*)', ?fmt)) AS ?esco_url) .\nOPTIONAL {?stmt pq:P528 ?code} .\n}\nOPTIONAL {?stmt pq:P4900/p:P4652/pq:P528 ?c1 . BIND(CONCAT(?c1, \".x\") AS ?code)} .\n} UNION {\n?item wdt:P31 wd:Q108300140 .\n?item p:P8283 ?stmt .\n?stmt ps:P8283 ?code .\nwd:P8283 wdt:P1630 ?fmt .\nBIND(IRI(REPLACE(?code, '(^.*)', ?fmt)) AS ?isco_url) .\n} .\nOPTIONAL {?stmt pq:P1810 ?named_as} .\nBIND(COALESCE(?isco_url, ?esco_url) AS ?url) .\n}\n} AS %items\nWHERE {\nINCLUDE %items .\n?item wikibase:statements ?stmts .\n?item wikibase:sitelinks ?links .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?code ?named_as ?itemLabel",
        "complexity_description": "Multiple UNION, OPTIONAL, and BIND clauses with regex patterns",
        "complexity": "complex"
    },
    {
        "id": "2696",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?valueLabel (count(?valueLabel) as ?count)\nWHERE\n{\n?person wdt:P5008 wd:Q111645234 .\n?person p:P106 ?prop . OPTIONAL { ?prop ps:P106 ?value }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?valueLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple joins, optional pattern, and aggregation",
        "complexity": "complex"
    },
    {
        "id": "2697",
        "valid_gpt_response": true,
        "query": "select ?sport ?avg_weight ?avg_height ?sportLabel with {\nselect distinct * where\n{\n?item wdt:P1447 [] .\n}\n} as %sportspeople with {\nselect distinct ?sport (STR(round(avg(?height)*100)/100) as ?avg_height) (STR(round(avg(?weight)*100)/100) as ?avg_weight) where {\ninclude %sportspeople\n?item wdt:P641 ?sport .\n{?sport wdt:P31 wd:Q212434 .} union {?sport wdt:P279 wd:Q212434 .}\n?item\np:P2067 ?weightProp;\np:P2048 ?heightProp;\nwdt:P21 wd:Q6581097 .\nMINUS { ?weightProp wikibase:rank wikibase:DeprecatedRank. }\nMINUS { ?heightProp wikibase:rank wikibase:DeprecatedRank. }\n?weightProp (psn:P2067/wikibase:quantityAmount) ?weight.\n?heightProp (psn:P2048/wikibase:quantityAmount) ?height.\n} group by ?sport } as %results where {\ninclude %results\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple subqueries, unions, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "2698",
        "valid_gpt_response": true,
        "query": "SELECT ?letter ?letterLabel (COUNT(DISTINCT ?alphab) AS ?nb) (GROUP_CONCAT(?alphabLabel ; separator=\", \") as ?alphabets) WHERE {\n?letter wdt:P361 ?alphab .\n?alphab wdt:P31/wdt:P279* wd:Q9779 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\".\n?letter rdfs:label ?letterLabel .\n?alphab rdfs:label ?alphabLabel . }\n}\nGROUP BY ?letter ?letterLabel\nORDER BY DESC(?nb)",
        "complexity_description": "Multiple joins, subqueries, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "2699",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?loc WHERE {\n?item p:P119 ?stmt .\n?stmt ps:P119 wd:Q311 .\n?stmt pq:P625 ?loc .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,en\" }\n} ORDER BY ?itemLabel",
        "complexity_description": "Multiple triple patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "2700",
        "valid_gpt_response": true,
        "query": "select (STR(?year) as ?year1) (min(?age) as ?age1) where {\nwd:Q38111 p:P451 ?s.\n?s ps:P451 ?partner .\n?s pq:P580 ?from .\n?s pq:P582 ?to .\nvalues ?year {1995 1996 1997 1998 1999 2000 2001 2002 2003 2004 2005\n2006 2007 2008 2009 2010 2011 2012 2013 2014\n2015 2016 2017 2018 2019 2020 2021 2022 }\nfilter( (YEAR(?from) <= ?year) && (YEAR(?to) >= ?year ) ) .\n?partner wdt:P569 ?date_of_birth .\nbind((?year - YEAR(?date_of_birth)) as ?age) .\n} group by ?year",
        "complexity_description": "Multiple filters, binds, and grouping",
        "complexity": "complex"
    },
    {
        "id": "2701",
        "valid_gpt_response": true,
        "query": "SELECT ?formationLabel (COUNT(DISTINCT ?prefet) AS ?nb) WHERE {\n?prefet p:P39 ?position.\n?position ps:P39 ?prefetde.\n?prefetde (wdt:P279*) wd:Q1285463.\n?prefet wdt:P69 ?formation .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?formationLabel",
        "complexity_description": "Multiple joins, subqueries and group by",
        "complexity": "complex"
    },
    {
        "id": "2702",
        "valid_gpt_response": true,
        "query": "SELECT ?time ?casRecords WHERE {\nwd:P662 p:P4876 [\nps:P4876 ?casRecords ;\npq:P585 ?time\n]\n}",
        "complexity_description": "Simple query with single property path",
        "complexity": "simple"
    },
    {
        "id": "2703",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?river ?riverLabel ?length ?shape ?layer WHERE {\n{\nSELECT DISTINCT ?river ?riverLabel ?basinNameLabel ?length WHERE {\n?river wdt:P17 wd:Q142 ;\nwdt:P2043 ?l .\nBIND (ROUND(?l) AS ?length)\nFILTER( ?length >= 50 )\nVALUES ?type { wd:Q573344 wd:Q355304 wd:Q4022 wd:Q3073652 }\n?river wdt:P31 ?type .\n?river wdt:P4614+ ?basin .\n?basin wdt:P138 ?basinName .\nFILTER NOT EXISTS { ?basinName wdt:P403/wdt:P31 wd:Q573344 }\nFILTER NOT EXISTS { ?basinName wdt:P403/wdt:P31 wd:Q4022 }\nFILTER NOT EXISTS { ?basinName wdt:P31 wd:Q165 }\nFILTER NOT EXISTS { ?basinName wdt:P31 wd:Q9430 }\nFILTER NOT EXISTS { ?basinName wdt:P31 wd:Q39594 }\nFILTER NOT EXISTS { ?basinName wdt:P31 wd:Q1973404 }\nFILTER NOT EXISTS { ?basin wdt:P31 wd:Q82794 }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n}\nOPTIONAL { ?river wdt:P3896 ?shape }\nBIND(?basinNameLabel AS ?layer)\n}\nORDER BY REPLACE(REPLACE(LCASE(?basinNameLabel), \"e\", \"e\"), \"e\", \"e\") ?riverLabel",
        "complexity_description": "Multiple nested queries, multiple filters and bindings",
        "complexity": "complex"
    },
    {
        "id": "2704",
        "valid_gpt_response": true,
        "query": "SELECT ?player ?playerLabel ?pic\nWHERE\n{\nwd:Q113646122 wdt:P180 ?player .\n?player wdt:P1532 wd:Q155 .\nOPTIONAL{?player wdt:P18 ?pic}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } # Helps get the label in your language, if not, then en language\n}",
        "complexity_description": "Two triple patterns and one optional pattern with a service call",
        "complexity": "medium"
    },
    {
        "id": "2705",
        "valid_gpt_response": true,
        "query": "SELECT ?partof ?itemLabel ?count ?Cameron ?May ?Johnson ?Truss\nWITH {\nSELECT ?partof ?C WHERE {\n?article schema:about wd:Q192;\nschema:isPartOf ?partof.\n?partof wikibase:wikiGroup \"wikipedia\" .\nBIND (\"Cameron\" as ?C)\n} } as %i\nWITH {\nSELECT ?partof ?M WHERE {\n?article schema:about wd:Q264766;\nschema:isPartOf ?partof.\n?partof wikibase:wikiGroup \"wikipedia\" .\nBIND (\"May\" as ?M)\n} } as %j\nWITH {\nSELECT ?partof ?J WHERE {\n?article schema:about wd:Q180589;\nschema:isPartOf ?partof.\n?partof wikibase:wikiGroup \"wikipedia\" .\nBIND (\"Johnson\" as ?J)\n} } as %k\nWITH {\nSELECT ?partof ?T WHERE {\n?article schema:about wd:Q272201;\nschema:isPartOf ?partof.\n?partof wikibase:wikiGroup \"wikipedia\" .\nBIND (\"Truss\" as ?T)\n} } as %l\nWITH {\nSELECT ?partof ?itemLabel (count(*) as ?count) (SAMPLE(?C) as ?Cameron) (SAMPLE(?M) as ?May) (SAMPLE (?J) as ?Johnson) (SAMPLE (?T) as ?Truss) WHERE\n{\n{INCLUDE %i}\nUNION\n{INCLUDE %j}\nUNION\n{INCLUDE %k}\nUNION\n{INCLUDE %l}\n} group by ?partof ?itemLabel } as %m\nWHERE\n{\nINCLUDE %m\n?item wdt:P856 ?partof.\n?item wdt:P31 wd:Q10876391 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple subqueries, UNION operators, and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "2706",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?end ?item ?itemLabel ?position ?positionLabel ?causeLabel ?item2 ?item2Label ?b\nWHERE\n{\nVALUES ?end { \"+2022-07-05\"^^xsd:dateTime \"+2022-07-06\"^^xsd:dateTime \"+2022-07-07\"^^xsd:dateTime }\n?item p:P39 ?ps.\n?ps ps:P39 ?position .\n?ps pq:P582 ?end .\nOPTIONAL { ?ps pq:P1534 ?cause }\n?position wdt:P1001 wd:Q145\nOPTIONAL { ?position wdt:P17 wd:Q145 }\nOPTIONAL { ?item2 p:P39 ?ps2.\n?ps2 ps:P39 ?position .\n?ps2 pq:P580 ?start .\nfilter(?start >= ?end)\nfilter(?start < \"2022-09-06\"^^xsd:dateTime)\nfilter not exists {?ps2 pq:P582 [] .}\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?item2",
        "complexity_description": "Multiple optional patterns, filters and service calls",
        "complexity": "complex"
    },
    {
        "id": "2707",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?pic ?coord ?GBIFlink WHERE {\n?item wdt:P8714 ?GADM .\n?item wdt:P625 ?coord .\nOPTIONAL { ?item wdt:P18 ?pic . }\nBIND(URI(CONCAT(\"https://www.gbif.org/occurrence/map?gadm_gid=\", STR(?GADM))) AS ?GBIFlink)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "2708",
        "valid_gpt_response": true,
        "query": "select distinct ?item ?itemLabel ?itemDescription ?pob ?coord where {\n?item wdt:P31 wd:Q5;\nwdt:P39 wd:Q11116728;\nwdt:P19 ?pob.\n?pob wdt:P625 ?coord.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nORDER BY DESC(?sitelinks)",
        "complexity_description": "Multiple triple patterns, SERVICE clause and ORDER BY",
        "complexity": "medium"
    },
    {
        "id": "2709",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel\nWHERE\n{\n?item wdt:P138 wd:Q9682 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } # Helps get the label in your language, if not, then en language\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "2710",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?sitelinks WHERE {\n?item p:P8324 [ ps:P8324 wd:Q21623039 ;\npq:P6195 wd:Q113788223 ] .\n?item wikibase:sitelinks ?sitelinks .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?sitelinks)",
        "complexity_description": "Multiple triple patterns, service call and ordering",
        "complexity": "medium"
    },
    {
        "id": "2711",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?itemDescription (MIN(?date2) AS ?date) WHERE {\n?item wdt:P57 wd:Q53001;\nwdt:P577 ?date2.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, fr\". }\n}\nGROUP BY ?item ?itemLabel ?itemDescription\nORDER BY (?date)",
        "complexity_description": "Multiple triple patterns, service call, group by and order by",
        "complexity": "medium"
    },
    {
        "id": "2712",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?place ?placeLabel ?coord WHERE {\n?item wdt:P57 wd:Q53001;\nwdt:P840 ?place.\n?place wdt:P625 ?coord\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en, fr\". }\n}\nORDER BY (?year)",
        "complexity_description": "Multiple triple patterns with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "2713",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?distribution ?distributionLabel (COUNT(*) AS ?count) WHERE {\n?item wdt:P57 wd:Q53001;\nwdt:P161 ?distribution.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?distribution ?distributionLabel\nORDER BY DESC (?count)",
        "complexity_description": "Multiple triple patterns, service call, group by and order by",
        "complexity": "medium"
    },
    {
        "id": "2714",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coords WHERE\n{\n?item ?pred wd:Q4667031.\n?item wdt:P625 ?coords.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "2715",
        "valid_gpt_response": true,
        "query": "SELECT ?q (COUNT(?x) AS ?nb) WHERE {\n?q wdt:P19 wd:Q647 .\nOPTIONAL { ?x ?lien ?q }\n}\nGROUP BY ?q\nORDER BY DESC(?nb)",
        "complexity_description": "Optional clause, aggregation and ordering",
        "complexity": "medium"
    },
    {
        "id": "2716",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?place ?placeLabel ?position ?positionLabel ?date ?coords\nWHERE\n{\nBIND(wd:Q142 AS ?requestedCountry)\n?item wdt:P39 ?position ;\nwdt:P19 ?place ;\nwdt:P569 ?date .\n?position wdt:P279* ?head ;\nwdt:P17 ?requestedCountry .\n{ ?head wdt:P279 wd:Q48352 } UNION\n{ ?head wdt:P279 wd:Q2285706 }\n{ ?head wdt:P1001 ?requestedCountry } UNION\n{ FILTER NOT EXISTS { ?head wdt:P1001 ?x } }\n?head wdt:P17 ?requestedCountry .\n?place wdt:P625 ?coords .\nFILTER NOT EXISTS { ?place wdt:P17 ?requestedCountry }\nFILTER ( ?date >= \"+1789-01-01\"^^xsd:dateTime )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?date)",
        "complexity_description": "Multiple filters, unions, and nested triple patterns",
        "complexity": "complex"
    },
    {
        "id": "2717",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?player ?playerLabel ?sticker_number ?image ?birth_place ?birth_placeLabel ?coord\nWHERE\n{\nwd:Q113646122 p:P180 [\nps:P180 ?player ;\npq:P1545 ?sticker_number\n] .\nFILTER (!CONTAINS ( ?sticker_number,\"FWC\"))\n?player wdt:P31 wd:Q5 .\n?player wdt:P19 ?birth_place .\n?birth_place wdt:P625 ?coord .\n?birth_place wdt:P17 ?birth_country .\n?player wdt:P1532 ?sports_country .\nBIND(now() as ?today)\nOPTIONAL{?player wdt:P18 ?image}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } # Helps get the label in your language, if not, then en language\n}",
        "complexity_description": "Multiple joins, filters and optional patterns",
        "complexity": "complex"
    },
    {
        "id": "2718",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?country_for_sports ?country_for_sportsLabel (AVG(?weight) as ?avg_weight) (COUNT(?player) as ?count)\nWHERE\n{\nwd:Q113646122 p:P180 [\nps:P180 ?player ;\npq:P1545 ?sticker_number\n] .\nFILTER (!CONTAINS ( ?sticker_number,\"FWC\"))\n?player wdt:P31 wd:Q5 .\n?player wdt:P1532 ?country_for_sports .\n?player p:P2067 ?weight_triples .\n?weight_triples ps:P2067 ?weight .\n?weight_triples psv:P2067 ?weight_triple_value .\n?weight_triple_value wikibase:quantityUnit wd:Q11570 . #only weight in kilos\nOPTIONAL{?player wdt:P18 ?image}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } # Helps get the label in your language, if not, then en language\n}\nGROUP BY ?country_for_sports ?country_for_sportsLabel\nHAVING (?count > 2)\nORDER BY DESC(?avg_weight)",
        "complexity_description": "Multiple joins, filters, and aggregations with optional clause",
        "complexity": "complex"
    },
    {
        "id": "2719",
        "valid_gpt_response": true,
        "query": "SELECT ?street ?streetLabel ?layer ?coords WHERE {\n?street wdt:P31 wd:Q79007;\nwdt:P131 wd:Q490;\nwdt:P138 ?namedafter;\nwdt:P625 ?coords.\n?namedafter wdt:P21 ?gender.\nBIND(IF(?gender = wd:Q6581072, \"female\", \"male\") AS ?layer)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns with SERVICE and BIND",
        "complexity": "medium"
    },
    {
        "id": "2720",
        "valid_gpt_response": true,
        "query": "SELECT ?theatreLabel ?coords\nWHERE {\n{?theatre wdt:P31/wdt:P279* wd:Q7362268 . }\nUNION\n{?theatre wdt:P31/wdt:P279* wd:Q19757 . }\n?theatre wdt:P625 ?coords .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"de\". }\n}",
        "complexity_description": "Union, multiple triple patterns, and service call",
        "complexity": "medium"
    },
    {
        "id": "2721",
        "valid_gpt_response": true,
        "query": "SELECT (?namesLabel AS ?name) (COUNT(?monarch) AS ?dead_monarchs) (SAMPLE(?cause_of_deathLabel) AS ?causes_of_death) WHERE {\nVALUES ?monarchies {wd:Q9134365 wd:Q111722535 wd:Q110324075 wd:Q18810062}\n?monarch wdt:P39 ?monarchies;\nwdt:P735 ?names.\n?monarch wdt:P1196 ?cause_of_death.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?names rdfs:label ?namesLabel .\n?monarch rdfs:label ?monarchLabel .\n?cause_of_death rdfs:label ?cause_of_deathLabel .}\n} GROUP BY ?namesLabel ?cause_of_death\nORDER BY DESC (?dead_monarchs)",
        "complexity_description": "Multiple variables, SERVICE clause, and GROUP BY/ORDER BY",
        "complexity": "complex"
    },
    {
        "id": "2722",
        "valid_gpt_response": true,
        "query": "SELECT (?partiesLabel AS ?party) (COUNT(?president) AS ?dead_presidents) (SAMPLE(?cause_of_deathLabel) AS ?causes_of_death) WHERE {\n?president wdt:P39 wd:Q11696;\nwdt:P102 ?parties.\n?president wdt:P1196 ?cause_of_death.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?parties rdfs:label ?partiesLabel .\n?president rdfs:label ?presidentLabel .\n?cause_of_death rdfs:label ?cause_of_deathLabel .}\n} GROUP BY ?partiesLabel ?cause_of_death\nORDER BY DESC (?dead_presidents)",
        "complexity_description": "Multiple joins, subqueries, and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "2723",
        "valid_gpt_response": true,
        "query": "SELECT ?localisation ?localisationLabel ?population (COUNT(DISTINCT ?line) AS ?lines) {\n?line wdt:P31/wdt:P279* wd:Q15079663 ; wdt:P131 ?localisation .\n?localisation wdt:P1082 ?population .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?localisation ?localisationLabel ?population\nHAVING (?lines >= 2)\nORDER BY ?population",
        "complexity_description": "Multiple joins, subqueries and grouping",
        "complexity": "complex"
    },
    {
        "id": "2724",
        "valid_gpt_response": true,
        "query": "SELECT ?occupationLabel (COUNT(DISTINCT ?person) as ?personCount)\nWHERE {\n?person wdt:P31 wd:Q5;\nwdt:P19 ?birthPlace;\nwdt:P106 ?occupation.\n?birthPlace wdt:P17 wd:Q664.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?occupationLabel ORDER BY DESC(?personCount)",
        "complexity_description": "Multiple triple patterns, SERVICE clause, GROUP BY and ORDER BY",
        "complexity": "complex"
    },
    {
        "id": "2725",
        "valid_gpt_response": true,
        "query": "SELECT ?person ?personLabel ?birthdate ?pic where {\n?person wdt:P106 wd:Q29840095 .\nOPTIONAL {?person wdt:P18 ?pic . }\n?person wdt:P569 ?birthdate\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],nl,en\". }\n}",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "2726",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?bish ?bishLabel ?dioceseLabel (year(?death) as ?deathYear) ?image\nWHERE {\n?bish wdt:P106 wd:Q42603.\n?bish wdt:P570 ?death.\n?bish wdt:P708 ?diocese.\nOPTIONAL { ?bish wdt:P18 ?image.}\n?diocese wdt:P31 wd:Q18917976 .\nFILTER (?death <= \"1700-01-01T00:00:00Z\"^^xsd:dateTime)\nFILTER (?death >= \"1638-01-01T00:00:00Z\"^^xsd:dateTime)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?bish ?bishLabel ?dioceseLabel ?death ?image",
        "complexity_description": "Multiple filters, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "2727",
        "valid_gpt_response": true,
        "query": "SELECT ?song ?female_name ?title (LANG(?title) AS ?title_language) ?note\nWITH\n{\nSELECT DISTINCT ?song ?title\n{\n?song wdt:P31 / wdt:P279 * wd:Q105543609 .\n?song wdt:P1476 ?title .\n}\n} AS %songs\n{\n{\nINCLUDE %songs\n?female_name wdt:P1705 ?title .\n?female_name wdt:P31 wd:Q11879590 .\n}\nUNION\n{\nINCLUDE %songs\nFILTER (LANG(?title) != \"mul\")\nBIND (STRLANG(STR(?title), \"mul\") AS ?title_mul)\n?female_name wdt:P1705 ?title_mul .\n?female_name wdt:P31 wd:Q11879590 . hint:Prior hint:runLast true.\nBIND (\"match one to multiple\" AS ?note)\n}\n}",
        "complexity_description": "Multiple subqueries, UNION operator, and BIND functions",
        "complexity": "complex"
    },
    {
        "id": "2728",
        "valid_gpt_response": true,
        "query": "SELECT ?song ?songLabel ?performer ?performerLabel (YEAR(?date) AS ?year)\nWHERE\n{\n?song wdt:P921 wd:Q9682 ;\nwdt:P31/wdt:P279* wd:Q105543609 ;\nwdt:P175 ?performer .\nOPTIONAL { ?song wdt:P577 ?date }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?year",
        "complexity_description": "Multiple triple patterns, optional clause, and service call",
        "complexity": "medium"
    },
    {
        "id": "2729",
        "valid_gpt_response": true,
        "query": "SELECT ?author1 ?author1Label ?rgb ?author2 ?author2Label\nWITH {\nSELECT ?author1 ?author2 ?rgb WHERE {\n{ ?author1 wdt:P5008 wd:Q113628913 .}\n{ ?author2 wdt:P5008 wd:Q113628913 .}\n{?author1 wdt:P184 ?author2 }\nUNION\n{?author2 wdt:P185 ?author1 }\n?author1 wdt:P21 ?gender1 .\nBIND ( IF(?gender1 = wd:Q6581097, \"3182BD\", \"E6550D\") AS ?rgb)\n}\n} AS %result\nWHERE {\nINCLUDE %result\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,sv,ru,zh\".\n}\n}",
        "complexity_description": "Multiple UNIONs, BIND, and SERVICE clauses",
        "complexity": "complex"
    },
    {
        "id": "2730",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?language ?languageLabel (SUM(?population) as ?sum_pop)\nWHERE\n{\n?item wdt:P37 ?language .\n?item wdt:P1082 ?population .\n?item wdt:P31 wd:Q3624078 .\n?item wdt:P361* wd:Q72829598 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } # Helps get the label in your language, if not, then en language\n}\nGROUP BY ?language ?languageLabel",
        "complexity_description": "Multiple triple patterns with SERVICE and GROUP BY",
        "complexity": "medium"
    },
    {
        "id": "2731",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?partiLabel ?valkretsLabel WHERE {\n?item wdt:P31 wd:Q5; p:P39 ?parl.\n?parl ps:P39 wd:Q10655178; pq:P580 ?start ; pq:P2937 wd:Q110585041 .\nFILTER NOT EXISTS { ?parl pq:P582 []}\n?parl pq:P768 ?valkrets .\n?parl pq:P4100 ?parti .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"sv\". }\n}\nORDER BY ?item",
        "complexity_description": "Multiple joins, filters and subqueries",
        "complexity": "complex"
    },
    {
        "id": "2732",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?date\nWHERE\n{\n# item must be a copyright license or any subclass of copyright license\n?item wdt:P31/wdt:P279* wd:Q77205602.\n# item must have a date (whatever publication date or inceptin date is fine)\n?item wdt:P577|wdt:P571 ?date\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Medium complexity due to property path and UNION",
        "complexity": "medium"
    },
    {
        "id": "2733",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?title ?wd_coord ?wiki_coord ?dist\nWITH\n{\nSELECT DISTINCT ?item\n{\n?item wdt:P31 / wdt:P279 * wd:Q55488 .\n?item wdt:P17 wd:Q145 .\nFILTER STRENDS(STR(?item), \"0\")\n}\n} AS %get_items\n{\nINCLUDE %get_items\n?item p:P625 ?s .\n?s ps:P625 ?wd_coord .\n?s prov:wasDerivedFrom ?ref .\n?ref pr:P143 wd:Q328 .\n?sitelink schema:about ?item .\n?sitelink schema:isPartOf <https://en.wikipedia.org/> .\n?sitelink schema:name ?title .\nSERVICE wikibase:mwapi\n{\nbd:serviceParam wikibase:endpoint \"en.wikipedia.org\" .\nbd:serviceParam wikibase:api \"Generator\" .\nbd:serviceParam mwapi:generator \"allpages\" .\nbd:serviceParam mwapi:gapfrom ?title .\nbd:serviceParam mwapi:gapto ?title .\nbd:serviceParam mwapi:prop \"coordinates\" .\n?lat wikibase:apiOutput \"coordinates/co/@lat\" .\n?lon wikibase:apiOutput \"coordinates/co/@lon\" .\n}\nBIND (STRDT(CONCAT(\"Point(\", ?lon, \" \", ?lat, \")\"), geo:wktLiteral) AS ?wiki_coord)\nBIND (geof:distance(?wd_coord, ?wiki_coord) AS ?dist)\nFILTER (! BOUND(?dist) || ?dist > 0.0)\n} ORDER BY DESC(?dist)",
        "complexity_description": "Multiple subqueries, filters, and services",
        "complexity": "complex"
    },
    {
        "id": "2734",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?parent ?parentLabel ?prize1Label ?child ?childLabel ?prize2Label WHERE {\n?prize1 wdt:P279?/wdt:P31? wd:Q7191 .\n?parent wdt:P166? ?prize1 ;\nwdt:P40 ?child .\n?prize2 wdt:P279?/wdt:P31? wd:Q7191 .\n?child wdt:P166? ?prize2 .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"sv,en,[AUTO_LANGUAGE]\" .\n}\n}",
        "complexity_description": "Multiple joins, filters and services",
        "complexity": "complex"
    },
    {
        "id": "2735",
        "valid_gpt_response": true,
        "query": "SELECT ?occupation_fr ?rgb (COUNT(DISTINCT ?person) AS ?personCount) WHERE {\n?person wdt:P31 wd:Q5;\nwdt:P6379 wd:Q3329701 ;\nwdt:P106 ?occupation;\nwdt:P21 ?gender.\nbind( if(?gender=wd:Q6581097,\"94D459\",\"4B1270\") as ?rgb ) .\nOPTIONAL {?occupation rdfs:label ?occupation_fr filter (lang(?occupation_fr) = \"fr\")}.\n}\nGROUP BY ?occupation_fr ?rgb\nORDER BY DESC(?personCount)",
        "complexity_description": "Multiple triple patterns, OPTIONAL clause, GROUP BY and ORDER BY",
        "complexity": "complex"
    },
    {
        "id": "2736",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?localityLabel ?cords WHERE {\n?item (wdt:P31/(wdt:P279*)) wd:Q16521.\n?item (wdt:P183/(wdt:P279*)) wd:Q664.\n?item wdt:P5304 ?locality.\n?locality wdt:P625 ?cords.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nLIMIT 1000",
        "complexity_description": "Multiple triple patterns, property paths and service call",
        "complexity": "medium"
    },
    {
        "id": "2737",
        "valid_gpt_response": true,
        "query": "SELECT ?personne ?personneLabel ?locLabel ?coord ?rgb WHERE {\n?personne wdt:P31 wd:Q5 ;\nwdt:P21 wd:Q6581072 ;\nwdt:P19 ?loc .\n?loc wdt:P131* wd:Q3389 ; wdt:P625 ?coord .\nOPTIONAL { ?personne wdt:P18 ?image }\nBIND(IF(BOUND(?image),\"60BB00\",\"666666\") AS ?rgb).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, optional clause and conditional binding",
        "complexity": "complex"
    },
    {
        "id": "2738",
        "valid_gpt_response": true,
        "query": "SELECT ?occupation_en ?rgb (COUNT(DISTINCT ?person) AS ?personCount) WHERE {\n?person wdt:P31 wd:Q5;\nwdt:P1711 ?bm_id;\nwdt:P106 ?occupation;\nwdt:P21 ?gender.\nbind( if(?gender=wd:Q6581097,\"3399FF\",\"FF99FF\") as ?rgb ) .\nOPTIONAL {?occupation rdfs:label ?occupation_en filter (lang(?occupation_en) = \"en\")}.\n}\nGROUP BY ?occupation_en ?rgb\nORDER BY DESC(?personCount)",
        "complexity_description": "Multiple triple patterns, OPTIONAL clause, GROUP BY and ORDER BY",
        "complexity": "complex"
    },
    {
        "id": "2739",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?title\nWHERE {\n?item wdt:P31 wd:Q11424;\nwdt:P1476 ?title.\nFILTER (CONTAINS(?title, ' it ') || CONTAINS(?title, ' It '))\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nOPTIONAL { ?item wdt:P18 ?_image. }\n}\nORDER BY (?title)",
        "complexity_description": "Multiple filters, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "2740",
        "valid_gpt_response": true,
        "query": "SELECT ?building ?buildingLabel (COUNT(DISTINCT ?item) AS ?count) (SAMPLE(?image) AS ?image) (SAMPLE(?coords) AS ?coords)\nWHERE\n{\n?item wdt:P31 wd:Q3305213 ;\nwdt:P180 ?building .\n?building wdt:P31/wdt:P279* wd:Q41176 .\nOPTIONAL { ?building wdt:P625 ?coords }\nOPTIONAL { ?building wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?building ?buildingLabel\nHAVING (?count >= 5)\nORDER BY DESC(?count) ?buildingLabel",
        "complexity_description": "Multiple optional patterns, service call, group by, having and order by clauses",
        "complexity": "complex"
    },
    {
        "id": "2741",
        "valid_gpt_response": true,
        "query": "SELECT ?language ?languageLabel ?lexemes ?withExternalId ?percent WITH {\nSELECT ?language (COUNT(*) AS ?count) { ?lexeme dct:language ?language }\nGROUP BY ?language\nORDER BY DESC(COUNT(*))\nLIMIT 20\n} AS %languages WITH {\nSELECT ?language ?lexemes ?withExternalId (ROUND(10000 / ?lexemes * ?withExternalId) / 100 AS ?percent) {\nSELECT ?language (COUNT(*) AS ?lexemes) (SUM(?hasExternalId) AS ?withExternalId) {\nINCLUDE %languages\n?lexeme dct:language ?language .\nBIND(IF(EXISTS {\n?property wikibase:propertyType wikibase:ExternalId ; wikibase:directClaim ?wdt .\n?lexeme ?wdt [] .\n}, 1, 0) AS ?hasExternalId) .\n}\nGROUP BY ?language\n}\nGROUP BY ?language ?lexemes ?withExternalId\n} AS %stats WHERE {\nINCLUDE %stats\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nORDER BY DESC(?lexemes)",
        "complexity_description": "Multiple nested subqueries, aggregation functions and conditional statements",
        "complexity": "complex"
    },
    {
        "id": "2742",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?coords ?esgobLabel ?layer\nwhere {\n?item wdt:P31 wd:Q102496 .\n?item wdt:P7352 ?id .\n?item wdt:P625 ?coords .\nOPTIONAL { ?item wdt:P708 ?esgob . }\nVALUES ?gender { wd:Q6581097 wd:Q6581072 }\nBIND (\nIF(?esgob = wd:Q3028621, \"St Asaph\",\nIF(?esgob = wd:Q2376211, \"St Davids\",\nIF(?esgob = wd:Q1403394, \"Bangor\",\nIF(?esgob = wd:Q1230651, \"Llandaf\",\n\"\")))) AS ?layer).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?esgobLabel",
        "complexity_description": "Multiple triple patterns, OPTIONAL clause, VALUES clause, BIND with nested IFs, and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "2743",
        "valid_gpt_response": true,
        "query": "SELECT (MIN(?dates) AS ?date) ?work ?workLabel (GROUP_CONCAT(DISTINCT ?winnerLabel; SEPARATOR = \", \") AS ?winners) (COUNT(DISTINCT(?winnerLabel)) AS ?count) WHERE {\nVALUES ?nobel {\nwd:Q7191\nwd:Q80061\nwd:Q44585\nwd:Q38104\n}\n?work wdt:P50/wdt:P496 \"0000-0001-9472-2589\" ; # REPLACE WITH YOUR ORCID id\nwdt:P577 ?datetimes.\n[] wdt:P2860 ?work;\nwdt:P50 ?winner.\n?winner wdt:P166 ?nobel.\nBIND(xsd:date(?datetimes) AS ?dates)\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\".\n?winner rdfs:label ?winnerLabel.\n?work rdfs:label ?workLabel.\n}\n}\nGROUP BY ?work ?workLabel\nORDER BY DESC (?count)",
        "complexity_description": "Multiple aggregations, subqueries, and joins",
        "complexity": "complex"
    },
    {
        "id": "2744",
        "valid_gpt_response": true,
        "query": "select distinct ?personLabel ?partyLabel (min(year(?start)) as ?first_elected) ?thesisLabel ?year ?institutionLabel ?ethos ?available where\n{\n?person wdt:P31 wd:Q5 .\n?person p:P39 ?ps . ?ps ps:P39 ?term . ?term wdt:P279 wd:Q16707842 . filter not exists { ?ps pq:P582 ?end }\noptional { ?ps pq:P4100 ?party }\n?person p:P39 ?ps2 . ?ps2 ps:P39 ?term2 . ?term2 wdt:P279 wd:Q16707842 . ?ps2 pq:P580 ?start .\n?thesis wdt:P50 ?person . ?thesis wdt:P31 ?type . ?type wdt:P279* wd:Q187685 .\noptional { ?thesis wdt:P4536 ?ethos } optional { ?thesis wdt:P953 ?available }\noptional { ?thesis wdt:P577 ?date . bind(year(?date) as ?year) }\noptional { ?thesis wdt:P4101 ?institution }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} group by ?personLabel ?partyLabel ?thesisLabel ?year ?institutionLabel ?ethos ?available\norder by ?year",
        "complexity_description": "Multiple optional patterns, subqueries, and filters",
        "complexity": "complex"
    },
    {
        "id": "2745",
        "valid_gpt_response": true,
        "query": "SELECT ?voie ?voieLabel (SAMPLE(?coord) AS ?loc) (SAMPLE(?plaque) AS ?panneau) ?rgb {\nhint:Query hint:optimizer \"None\" .\n?voie wdt:P131+ wd:Q647 ; wdt:P625 ?coord ; wdt:P31/wdt:P279* wd:Q83620 .\nOPTIONAL { ?voie wdt:P1766 ?plaque }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\" }\nBIND(IF(BOUND(?plaque), \"00F\", \"F00\") AS ?rgb) .\n}\nGROUP BY ?voie ?voieLabel ?rgb",
        "complexity_description": "Multiple joins, optional clause, and grouping",
        "complexity": "complex"
    },
    {
        "id": "2746",
        "valid_gpt_response": true,
        "query": "SELECT ?propertyLabel ?propertyDescription ?count WHERE {\n{\nSELECT ?propertyclaim (COUNT(*) AS ?count) where {\n?item wdt:P31 wd:Q5;\nwdt:P1907 ?adb_id.\n?item ?propertyclaim [] .\n} GROUP BY ?propertyclaim\n}\n?property wikibase:propertyType wikibase:ExternalId .\n?property wikibase:directClaim ?propertyclaim .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC (?count)",
        "complexity_description": "Multiple subqueries, grouping and ordering",
        "complexity": "complex"
    },
    {
        "id": "2747",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?band ?bandLabel ?workingtime (COUNT(?members) as ?numberOfMembers) WHERE {\n?band wdt:P31 wd:Q215380 .\n?band p:P527 ?members.\nOPTIONAL {?band wdt:P2031 ?inception.\n?band wdt:P2032 ?end.\nbind(year(?end)-year(?inception) as ?workingtime)}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\ngroup by ?band ?bandLabel ?workingtime\norder by DESC (?numberOfMembers)",
        "complexity_description": "Multiple joins, optional clause, and aggregation function",
        "complexity": "complex"
    },
    {
        "id": "2748",
        "valid_gpt_response": true,
        "query": "select ?profession ?professionLabel (avg(?diff) as ?avg_difference) with {\nselect ?profession (count(?item) as ?count) where {\n?item wdt:P106 ?profession .\n?item wdt:P26 [] .\n} group by ?profession having (?count > 100) } as %professions with {\nselect ?item ?person1 ?profession where {\ninclude %professions\n?person1 wdt:P106 ?profession .\n?person1 wdt:P21 wd:Q6581097 .\n} limit 700000 } as %sample with {\nselect ?profession ?diff where {\ninclude %sample\n?person1 wdt:P26 ?person2 .\n?person1 wdt:P569 ?date1 .\nbind(year(?date1) as ?year1) .\n?person2 wdt:P569 ?date2 .\nbind(year(?date2) as ?year2) .\nbind((?year1-?year2) as ?diff) .\n} } as %results where {\ninclude %results\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n} group by ?profession ?professionLabel",
        "complexity_description": "Multiple subqueries, grouping, and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "2749",
        "valid_gpt_response": true,
        "query": "SELECT ?chancellorLabel ?chancellor ?start_time ?end_time ?days_in_office ?replacesLabel ?replacedbyLabel WHERE {\n?chancellor p:P39 ?term.\n?term ps:P39 wd:Q531471 .\nOPTIONAL { ?term pq:P580 ?start_time. }\nOPTIONAL { ?term pq:P582 ?end_time. }\nOPTIONAL { ?term pq:P1365 ?replaces. }\nOPTIONAL { ?term pq:P1366 ?replacedby. }\nBIND(FLOOR((?end_time - ?start_time)) AS ?days_in_office).\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\".\n}\n}\nORDER BY ?days_in_office",
        "complexity_description": "Multiple optional patterns, service call and bind function",
        "complexity": "medium"
    },
    {
        "id": "2750",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?street1Label ?street2Label\nWHERE\n{\n?street1 wdt:P361 wd:Q16024163 ;\nwdt:P47 ?street2 .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\". }\n}\nORDER BY ?street1Label ?street2Label",
        "complexity_description": "Simple query with 2 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "2751",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?player ?playerLabel ?national_team ?national_teamLabel (YEAR(MIN(?national_team_debut)) as ?national_team_debut_year) (SAMPLE(?image) as ?sample_image)\nWHERE\n{\nwd:Q113646122 p:P180 [\nps:P180 ?player ;\npq:P1545 ?sticker_number\n] .\nFILTER (!CONTAINS ( ?sticker_number,\"FWC\"))\n?player wdt:P31 wd:Q5 .\n?player wdt:P1532 ?any .\n?player p:P54 [ ps:P54 ?national_team ;\npq:P580 ?national_team_debut\n] .\n?national_team wdt:P31 wd:Q6979593 .\n?national_team rdfs:label ?national_team_label .\nFILTER(LANG(?national_team_label) = \"en\")\nFILTER (!CONTAINS ( ?national_team_label,\"under\"))\nFILTER (!CONTAINS ( ?national_team_label,\"Olympic\"))\nOPTIONAL{?player wdt:P18 ?image .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } # Helps get the label in your language, if not, then en language\n}\nGROUP BY ?player ?playerLabel ?national_team ?national_teamLabel\nORDER BY ASC (?national_team_debut_year)",
        "complexity_description": "Multiple filters, optional clause, and grouping",
        "complexity": "complex"
    },
    {
        "id": "2752",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(DISTINCT ?lexeme) AS ?lexeme_count) ?dictionaries_count (SAMPLE(?lexeme) AS ?sample) {\nSELECT ?lexeme (COUNT(DISTINCT ?wdt) AS ?dictionaries_count) {\n?lexeme dct:language wd:Q150 .\nOPTIONAL {\n?lexeme ?wdt [] .\nVALUES ?wdt { wdt:P7722 wdt:P7724 wdt:P7732 wdt:P7766 wdt:P10338 wdt:P11118 }\n}\n}\nGROUP BY ?lexeme\n}\nGROUP BY ?dictionaries_count\nORDER BY ?dictionaries_count",
        "complexity_description": "Multiple nested queries, grouping and aggregation",
        "complexity": "complex"
    },
    {
        "id": "2753",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n{\nSELECT DISTINCT ?item WHERE {\n{\n?item p:P19 ?bornSplit.\n?bornSplit (ps:P19) wd:Q1663.\n}\nUNION\n{\n?item p:P19 ?bornSibenik.\n?bornSibenik (ps:P19/(wdt:P279*)) wd:Q3549.\n}\n?item p:P1412 ?useLatin.\n?useLatin (ps:P1412/(wdt:P279*)) wd:Q397.\n}\nLIMIT 100\n}\n}",
        "complexity_description": "Multiple UNIONs, nested queries, and property paths",
        "complexity": "complex"
    },
    {
        "id": "2754",
        "valid_gpt_response": true,
        "query": "#defaultView:Map\nSELECT DISTINCT ?author ?geo\nWITH {\nSELECT DISTINCT ?author_ ?author WHERE {\n  {\n    ?target p:P50 ?author_statement ; wdt:P1433 wd:Q6294930 .\n    ?author_statement ps:P50 ?author_ .\n    ?author_ rdfs:label ?author .\n    FILTER (LANG(?author) = 'en')\n    BIND(CONCAT(\"../author/\", SUBSTR(STR(?author_), 32)) AS ?authorUrl)\n    OPTIONAL {\n      ?author_statement pq:P1545 ?order_ .\n      BIND(xsd:integer(?order_) AS ?order)\n    }\n  }\n  UNION\n  {\n    ?target p:P2093 ?authorstring_statement ; wdt:P1433 wd:Q6294930 .\n    ?authorstring_statement ps:P2093 ?author_\n    BIND(CONCAT(?author_, \" \u2197\") AS ?author)\n    OPTIONAL {\n      ?authorstring_statement pq:P1545 ?order_ .\n      BIND(xsd:integer(?order_) AS ?order)\n    }\n  }\n  FILTER (?order = 1)\n}\n} AS %AUTHORS WHERE {\n  INCLUDE %AUTHORS\n  ?author_ ( wdt:P108 | wdt:P1416 ) / wdt:P361* ?organization . \n  ?organization wdt:P625 ?geo.\n}",
        "complexity_description": "Multiple UNION, OPTIONAL, and FILTER clauses with complex filtering conditions",
        "complexity": "complex"
    },
    {
        "id": "2755",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coord\nWHERE\n{\n?item wdt:P31 wd:Q5 . # human\n?item wdt:P39 wd:Q104253535. # who have held the position President of the American Medical Association\n?item wdt:P19 ?place.\n?place wdt:P625 ?coord.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple joins, filters and service call",
        "complexity": "medium"
    },
    {
        "id": "2756",
        "valid_gpt_response": true,
        "query": "SELECT ?Nationalflagge ?NationalflaggeLabel ?Bild WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de\". }\n?Nationalflagge wdt:P31 wd:Q186516.\n?Nationalflagge wdt:P18 ?Bild.\n?Nationalflagge wdt:P462 ?Farbe1.\n?Nationalflagge wdt:P462 ?Farbe2.\n# ?Farbe2 wdt:P279 wd:Q3257809.\n# FILTER (?Farbe1 in (wd:Q3257809)). #Purpur\nFILTER (?Farbe1 in (wd:Q23444)). #Weiss\nFILTER (?Farbe2 in (wd:Q943)). #Gelb\n}\nLIMIT 100",
        "complexity_description": "Multiple filters and joins with multiple variables",
        "complexity": "medium"
    },
    {
        "id": "2757",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel\nWHERE\n{\nVALUES (?aiModel) {\n(wd:Q85810444)\n(wd:Q2202883)\n(wd:Q5532625)\n(wd:Q3621696)\n}\n?item wdt:P31 ?aiModel\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?itemLabel",
        "complexity_description": "Uses VALUES, SERVICE and ORDER BY",
        "complexity": "medium"
    },
    {
        "id": "2758",
        "valid_gpt_response": true,
        "query": "select distinct ?person ?personLabel ?deathLabel ?coord where {\nVALUES ?country { wd:Q34 } # If you want another country, put the country/countries you want to see in here\n?person wdt:p1595|wdt:P7781|wdt:P1399 wd:Q259745 .\nOPTIONAL { ?person wdt:P27 ?citizen }\nOPTIONAL { ?person wdt:P509 ?death . }\nOPTIONAL { ?person wdt:P20 ?deathplace . ?deathplace wdt:P17 ?c1 }\nOPTIONAL { ?person wdt:P19 ?birth . ?birth wdt:P17 ?c2 }\nBIND(IF(?c1 = ?country || ?c2 = ?country || ?citizen = ?country,?country,'') AS ?countrycheck)\nFILTER (?countrycheck = ?country )\nOPTIONAL { ?person wdt:P20 ?dp . ?dp wdt:P625 ?coord }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en,sv.\" }\n}",
        "complexity_description": "Multiple optional patterns, filters and service calls",
        "complexity": "complex"
    },
    {
        "id": "2759",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?itemDescription ?itemgpn ?ns ?nsLabel ?nsgLabel\nWHERE {\n?item wdt:P31/wdt:P279* wd:Q1348589.\n?item wdt:P2824 ?itemgpn.\n?item wdt:P138 ?ns.\n?ns wdt:P21 ?nsg\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, property paths and service call",
        "complexity": "complex"
    },
    {
        "id": "2760",
        "valid_gpt_response": true,
        "query": "SELECT ?location ?locationLabel ?coord ?date ?timeLabel ?page\nWHERE {\nwd:Q113121949 p:P276 ?statement.\n?statement ps:P276 ?location.\n?location wdt:P625 ?coord.\n?statement pq:P585 ?date.\nOPTIONAL {\n?statement pq:P4241 ?time.\n?statement pq:P856 ?page.\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, optional clause and service call",
        "complexity": "complex"
    },
    {
        "id": "2761",
        "valid_gpt_response": true,
        "query": "SELECT ?hLabel ?presidentLabel (YEAR(?birthday) as ?birthYear) WHERE {\n?h wdt:P31 wd:Q47566; # instance of (P31) U.S. presidential election (Q47566)\nwdt:P585 ?electionDate; # point in time (P585)\nwdt:P991 ?president. # successful candidate (P991)\n?president wdt:P569 ?birthday # date of birth (P569)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?electionDate",
        "complexity_description": "Multiple triple patterns, service call and ORDER BY",
        "complexity": "medium"
    },
    {
        "id": "2762",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?album) AS ?albums) ?P407Label ?P407 WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?album wdt:P31 wd:Q482994.\nOPTIONAL { ?album wdt:P407 ?P407. }\n}\nGROUP BY ?P407 ?P407Label\nORDER BY DESC (?albums) (?P407)",
        "complexity_description": "Multiple patterns, optional clause, and aggregation",
        "complexity": "complex"
    },
    {
        "id": "2763",
        "valid_gpt_response": true,
        "query": "SELECT ?prefet ?prefetLabel ?date_naissance ?date_mort ?signature\n(GROUP_CONCAT(?prefetdeLabel ; SEPARATOR = \", \") as ?prefetdeconc) WHERE {\n?prefet p:P39 ?position.\n?position ps:P39 ?prefetde.\n?prefetde (wdt:P279*) wd:Q1285463.\n?prefet wdt:P27 wd:Q142.\n?prefet wdt:P109 ?signature.\nOPTIONAL { ?prefet wdt:P569 ?date_naissance. }\nOPTIONAL { ?prefet wdt:P570 ?date_mort. }\nOPTIONAL { ?prefetde wdt:P39 ?fonction. }\nOPTIONAL { ?prefet wdt:P109 ?signature. }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"fr,en\".\n?prefet rdfs:label ?prefetLabel .\n?prefetde rdfs:label ?prefetdeLabel .}\n}\nGROUP BY ?prefet ?prefetLabel ?date_naissance ?date_mort ?signature",
        "complexity_description": "Multiple joins, optional patterns, and group concat",
        "complexity": "complex"
    },
    {
        "id": "2764",
        "valid_gpt_response": true,
        "query": "SELECT ?composerLabel (COUNT(?item) as ?count) WHERE {\n?item wdt:P31 wd:Q105543609 .\n?item wdt:P136 wd:Q544440 .\n?item wdt:P86 ?composer .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nGROUP BY ?composerLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple filters, service call and aggregation",
        "complexity": "medium"
    },
    {
        "id": "2765",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?highestPoint ?highestPointLabel ?coords\nWHERE\n{\n{ ?item wdt:P31 wd:Q162620 } UNION\n{ ?item wdt:P31 wd:Q10742 } UNION\n{ ?item wdt:P31 wd:Q16532593 }\nFILTER NOT EXISTS { ?item wdt:P31 wd:Q55379806 }\nOPTIONAL {\n?item wdt:P610 ?highestPoint .\nOPTIONAL {\n?highestPoint wdt:P625 ?coords .\n}\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } # le label viendra de preference dans votre langue, et autrement en anglais\n}",
        "complexity_description": "Multiple UNIONs and OPTIONAL clauses with FILTER NOT EXISTS",
        "complexity": "complex"
    },
    {
        "id": "2766",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?Mastodon_address ?Twitter_username WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?item wdt:P4033 ?Mastodon_address.\n?item wdt:P2002 ?Twitter_username.\n}",
        "complexity_description": "Two triple patterns with one service call",
        "complexity": "medium"
    },
    {
        "id": "2767",
        "valid_gpt_response": true,
        "query": "SELECT ?Representative_List_of_the_Intangible_Cultural_Heritage_of_Humanity ?Representative_List_of_the_Intangible_Cultural_Heritage_of_HumanityLabel ?instance_of ?instance_ofLabel WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?Representative_List_of_the_Intangible_Cultural_Heritage_of_Humanity wdt:P3259 wd:Q110319947.\nOPTIONAL { ?Representative_List_of_the_Intangible_Cultural_Heritage_of_Humanity wdt:P31 ?instance_of. }\n}\nLIMIT 1000",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "2768",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?mastodon ?wikimedia WHERE {\n?item wdt:P4033 ?mastodon;\nwdt:P4174 ?wikimedia.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "2769",
        "valid_gpt_response": true,
        "query": "SELECT ?politicianLabel ?mastodon ?countryLabel\nWHERE\n{\n?politician wdt:P4033 ?mastodon .\n?politician wdt:P106 wd:Q82955 . # occupation politician\n?politician wdt:P27 ?country .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?countryLabel",
        "complexity_description": "Simple query with 3 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "2770",
        "valid_gpt_response": true,
        "query": "SELECT ?item1 ?image1 ?item1Label ?item2 ?image2 ?item2Label ?size ?rgb ?edgeLabel\nWHERE\n{\nVALUES ?book { wd:Q112075048 }\n{ # Get characters in the We Are Here book\n# VALUES ?rgb { \"FFBD33\" }\n# VALUES ?size { 2 }\nVALUES ?item1 { wd:Q112075048 }\n?item1 wdt:P674 ?item2 .\nOPTIONAL { ?item1 wdt:P18 ?image1. }\nOPTIONAL { ?item2 wdt:P18 ?image2. }\n}\nUNION\n{ # Occupations\n# VALUES ?rgb { \"fff033\" }\n# VALUES ?size { 1 }\n?book wdt:P674 ?item1 .\n?item1 wdt:P106 ?item2 .\n?item2 wikibase:sitelinks ?size\nOPTIONAL { ?item1 wdt:P18 ?image1. }\nBIND(COALESCE(\nIF(?size >= 100, \"fff033\", 1/0),\nIF(?size >= 65, \"ddf033\", 1/0),\nIF(?size >= 25, \"ccf033\", 1/0),\nIF(?distNum >= 1, \"ffffff\", \"ffffff\")) AS ?rgb).\n}\nUNION\n{ # Get relationships\n?book wdt:P674 ?item1 .\n?book wdt:P674 ?item2 .\n?item1 wdt:P26 ?item2 .\nBIND (\"spouse\" AS ?edgeLabel )\nOPTIONAL { ?item1 wdt:P18 ?image1. }\nOPTIONAL { ?item2 wdt:P18 ?image2. }\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} LIMIT 1000",
        "complexity_description": "Multiple UNIONs, OPTIONAL clauses, BIND and COALESCE functions",
        "complexity": "complex"
    },
    {
        "id": "2771",
        "valid_gpt_response": true,
        "query": "SELECT ?element ?elementLabel ?coord WHERE {\n?element wdt:P1343 wd:Q109662197 .\n?element wdt:P19/wdt:P625 ?coord .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Two triple patterns, one service call",
        "complexity": "medium"
    },
    {
        "id": "2772",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?p ?pLabel ?pDescription\n(GROUP_CONCAT(DISTINCT ?cLabel ; separator=\"; \") AS ?country)\n(GROUP_CONCAT(DISTINCT ?bpLabel ; separator=\"; \") AS ?birthplace)\n(GROUP_CONCAT(DISTINCT YEAR(?bd) ; separator=\"; \") AS ?born)\n(GROUP_CONCAT(DISTINCT YEAR(?dd) ; separator=\"; \") AS ?died)\n?gLabel ?num_statements\nWHERE\n{ ?p wdt:P31 wd:Q5 ;\nwdt:P1344 wd:Q208191 ;\nwikibase:statements ?num_statements .\nOPTIONAL { ?p wdt:P27 ?c . ?c rdfs:label ?cLabel .\nFILTER ( LANG ( ?cLabel ) = \"en\" ) } .\nOPTIONAL { ?p wdt:P19 ?bp . ?bp rdfs:label ?bpLabel .\nFILTER ( LANG ( ?bpLabel ) = \"en\" ) } .\nOPTIONAL { ?p wdt:P569 ?bd } .\nOPTIONAL { ?p wdt:P570 ?dd } .\nOPTIONAL { ?p wdt:P21 ?g } .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nGROUP BY ?p ?pLabel ?pDescription ?country ?birthplace ?born ?died ?gLabel ?num_statements\nORDER BY DESC(?num_statements)",
        "complexity_description": "Multiple GROUP_CONCAT, OPTIONAL clauses, and SERVICE keyword usage",
        "complexity": "complex"
    },
    {
        "id": "2773",
        "valid_gpt_response": true,
        "query": "select ?domain (count(?domain) as ?count) {\n{\nselect (replace(?value,\"[^@]+@([^@]+)$\",\"$1\") AS ?domain) {\n?item wdt:P4033 ?value\n}\n}\n}\ngroup by ?domain order by desc(?count)",
        "complexity_description": "Nested queries, regex, aggregation and ordering",
        "complexity": "complex"
    },
    {
        "id": "2774",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel (GROUP_CONCAT(?fieldLabel; SEPARATOR = \"; \") AS ?fields) ?orcid ?twitter ?mastodon WHERE {\nSELECT ?item ?itemLabel ?fieldLabel ?orcid ?twitter ?mastodon\nWHERE\n{\n?item wdt:P496 ?orcid.\nOPTIONAL { ?item wdt:P2002 ?twitter.}\nOPTIONAL { ?item wdt:P106 ?field .}\n?item wdt:P4033 ?mastodon .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nLIMIT 20000\n}\nGROUP BY ?item ?itemLabel ?orcid ?twitter ?mastodon",
        "complexity_description": "Multiple optional patterns, service call, and group concat",
        "complexity": "complex"
    },
    {
        "id": "2775",
        "valid_gpt_response": true,
        "query": "SELECT ?server ?count\nWHERE {\n{\nSELECT\n?server (COUNT(?server) AS ?count)\nWHERE\n{\n?item wdt:P31 wd:Q5 ;\nwdt:P4033 ?mastodon .\nBIND(strafter(?mastodon,\"@\") AS ?server)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } # Helps get the label in your language, if not, then en language\n}\nGROUP BY ?server\n}\nFILTER(?count > 2)\n}\nORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, grouping and filtering",
        "complexity": "complex"
    },
    {
        "id": "2776",
        "valid_gpt_response": true,
        "query": "SELECT * WHERE {\n?item wdt:P4033 ?mastodon; wdt:P19 ?pob. ?pob wdt:P625 ?coords.\n}",
        "complexity_description": "Three triple patterns with no filters or optional blocks",
        "complexity": "simple"
    },
    {
        "id": "2777",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?island ?islandLabel ?summit ?summitLabel ?coords ?elevation\nWHERE\n{\n?island wdt:P31 wd:Q23442 ;\nwdt:P610 ?summit .\n{ ?island wdt:P30 wd:Q46 } UNION\n{ ?island wdt:P30 wd:Q30 } UNION\n{ ?island wdt:P17/wdt:P30 wd:Q46 } UNION\n{ ?island wdt:P17/wdt:P30 wd:Q30 }\nFILTER NOT EXISTS { ?island wdt:P17 wd:Q756617 }\n?summit p:P625 [\npsv:P625 [\nwikibase:geoLatitude ?lat ;\nwikibase:geoLongitude ?lon ;\n] ;\nps:P625 ?coords ;\n] ;\np:P2044 [ a wikibase:BestRank ; psv:P2044 [ wikibase:quantityAmount ?elevation ; wikibase:quantityUnit ?unit ] ] .\nFILTER( (?elevation >= 1000 && ?unit = wd:Q11573)\n|| (?elevation >= 3281 && ?unit = wd:Q3710) ).\nFILTER (?lat > 33 && ?lon < 60)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?elevation)",
        "complexity_description": "Multiple UNIONs, FILTER NOT EXISTS, and complex FILTER conditions with multiple variables",
        "complexity": "complex"
    },
    {
        "id": "2778",
        "valid_gpt_response": true,
        "query": "SELECT ?lac ?lacLabel ?coordonnees_geographiques WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?lac wdt:P31/wdt:P279* wd:Q3391202;\nwdt:P17 wd:Q142.\nOPTIONAL { ?lac wdt:P625 ?coordonnees_geographiques. }\n}\nLIMIT 10000",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "2779",
        "valid_gpt_response": true,
        "query": "SELECT (COUNT(?item) AS ?count) ?otheraward ?otherawardLabel WHERE {\nVALUES ?award{wd:Q160082 wd:Q2052291}\n?item wdt:P166 ?award.\n#UNION{ ?item wdt:P1411 ?award. BIND(\"nominated\" AS ?rel) }\n?item wdt:P31 wd:Q5.\n?item p:P166 ?s.?s ps:P166 ?otheraward FILTER(?otheraward NOT IN(wd:Q160082, wd:Q2052291))\nOPTIONAL{?s pq:P585 ?time}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} GROUP BY ?otheraward ?otherawardLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple patterns, UNION, OPTIONAL clause, and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "2780",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?image ?date\nWHERE\n{\n{\n# query without labels\nSELECT ?item (SAMPLE(?image) as ?image) (MIN(?whatever_date) as ?date)\nWHERE\n{\n# item must be a videogame or any subclass of copyright license\nwd:Q7889 ^wdt:P279*/^wdt:P31 ?item.\n# item must has a license\n?item wdt:P275 ?license.\n# the license must be a libre license\n?libre_license ^wdt:P279*/^wdt:P31 ?license.\nVALUES ?libre_license {\nwd:Q97044024 # open source\nwd:Q3943414 # free software\nwd:Q97662661 # free license\nwd:Q196294 # open license\n}\nOPTIONAL {\n?item wdt:P18 ?image.\n}\n# item must have a date (whatever publication date or inception date is fine)\n?item wdt:P577|wdt:P571 ?whatever_date.\n}\nGROUP BY ?item\n}\n# apply labels after the group by\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple nested queries, optional patterns, and grouping",
        "complexity": "complex"
    },
    {
        "id": "2781",
        "valid_gpt_response": true,
        "query": "select ?item ?itemLabel ?string ?content ?timestamp ?user {\n?item wdt:P31 wd:Q146. # find cats\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nBIND(STRAFTER(wikibase:decodeUri(str(?item)), \"http://www.wikidata.org/entity/\") AS ?string)\n# need to make the ID something the API can understand\nSERVICE wikibase:mwapi {\nbd:serviceParam wikibase:endpoint \"www.wikidata.org\";\nwikibase:api \"Generator\";\nwikibase:limit \"once\";\nmwapi:generator \"allpages\";\nmwapi:gapfrom ?string;\nmwapi:gapnamespace 0 ; # main namespace\nmwapi:gaplimit 1; # only one\nmwapi:prop \"revisions\";\nmwapi:rvdir \"newer\"; # FIRST revision\nmwapi:rvprop \"timestamp|content|user\".\n?content wikibase:apiOutput 'revisions/rev/text()' . # text of first\n?timestamp wikibase:apiOutput 'revisions/rev/@timestamp' . # timestamp\n?user wikibase:apiOutput 'revisions/rev/@user' . # user who created it\n}\n}",
        "complexity_description": "Multiple services, subqueries, and API calls",
        "complexity": "complex"
    },
    {
        "id": "2782",
        "valid_gpt_response": true,
        "query": "SELECT ?twit ?item ?itemLabel ?itemDescription ?id WHERE {\n?item wdt:P4033 ?id.\nOPTIONAL {?item wdt:P2002 ?twit}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?itemLabel",
        "complexity_description": "Optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "2783",
        "valid_gpt_response": true,
        "query": "SELECT ?award ?awardLabel (ROUND(?women * 1000/(?men + ?women) )/ 10 AS ?percent) WHERE {\n{ SELECT (COUNT(?recipient_male) AS ?men) (COUNT(?recipient_female) AS ?women) ?award WHERE {\n?award wdt:P31 wd:Q378427 .\n{\n?recipient_male wdt:P166 ?award .\n?recipient_male wdt:P21 wd:Q6581097 .\n}\nUNION\n{\n?recipient_female wdt:P166 ?award .\n?recipient_female wdt:P21 wd:Q6581072 .\n}\n}\nGROUP BY ?award HAVING(?men + ?women > 50)\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?percent",
        "complexity_description": "Multiple subqueries, UNION, GROUP BY and HAVING clauses",
        "complexity": "complex"
    },
    {
        "id": "2784",
        "valid_gpt_response": true,
        "query": "SELECT ?language_code ?count WITH {\nSELECT ?language_code (COUNT(*) AS ?count) WHERE {\n?property wikibase:propertyType ?propertyType .\n?property rdfs:label ?lang_label.\nBIND (LANG(?lang_label) AS ?language_code)\n} GROUP BY ?language_code\n} AS %RESULTS {\nINCLUDE %RESULTS\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?count)",
        "complexity_description": "Multiple subqueries, grouping and binding",
        "complexity": "complex"
    },
    {
        "id": "2785",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?country ?countryLabel ?place ?placeLabel (YEAR(?date) AS ?year) ?height ?image ?coords {\n?item wdt:P31/wdt:P279* wd:Q170980 ;\np:P2048/psn:P2048/wikibase:quantityAmount ?h .\nBIND (ROUND(?h * 10) / 10 AS ?height)\nFILTER ( ?height >= 40 )\nOPTIONAL { ?item wdt:P17 ?country }\nOPTIONAL { ?item wdt:P131 ?place }\nOPTIONAL { ?item wdt:P571 ?date }\nOPTIONAL { ?item wdt:P18 ?image }\nOPTIONAL { ?item wdt:P625 ?coords }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?height)",
        "complexity_description": "Multiple optional patterns, filter and bind operations",
        "complexity": "complex"
    },
    {
        "id": "2786",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?person1 ?person2 ?person1Label ?person2Label ?person1wp ?person2wp WHERE {\n?person1 wdt:P5008 wd:Q111645234 . #person1 is in NZThesisProject and has enWp page\n?person1 wdt:P31 wd:Q5 .\n?person1wp schema:about ?person1;\nschema:isPartOf <https://en.wikipedia.org/>.\n?person2 wdt:P31 wd:Q5 . #person2 is human and has enWp page\n?person2wp schema:about ?person2;\nschema:isPartOf <https://en.wikipedia.org/>.\n{?person1 wdt:P184 ?person2 } #person1 is doctoral advisor of person2\nUNION\n{?person2 wdt:P184 ?person1 } #person2 is doctoral advisor of person1\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY (?person1Label)",
        "complexity_description": "Multiple triple patterns, UNION operator, and SERVICE clause",
        "complexity": "complex"
    },
    {
        "id": "2787",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?mastodon {\n?item wdt:P31*/wdt:P279* wd:Q5926733 ; wdt:P4033 ?mastodon .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nORDER BY ?itemLabel",
        "complexity_description": "Multiple triple patterns, property paths and service call",
        "complexity": "medium"
    },
    {
        "id": "2788",
        "valid_gpt_response": true,
        "query": "SELECT ?year (COUNT(?herrialdea) AS ?count) (SAMPLE(?herrialdeaLabel) AS ?label) WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"eu,es,fr,en\". }\n?Bertsosaio wdt:P31 wd:Q8247090.\n?Bertsosaio wdt:P710 ?bertsolari.\n?bertsolari wdt:P19 ?jaiolekua.\n?jaiolekua (wdt:P131*) ?herrialdea.\n{?herrialdea wdt:P31 wd:Q162620.}\nUNION\n{?herrialdea wdt:P31 wd:Q34876.}\n?Bertsosaio wdt:P582 ?data.\nBIND(STR(YEAR(?data)) AS ?year)\n?herrialdea rdfs:label ?herrialdeaLabel FILTER((LANG(?herrialdeaLabel)) = \"eu\") .\n}\nGROUP BY ?herrialdeaLabel ?year",
        "complexity_description": "Multiple joins, unions, and subqueries with filters",
        "complexity": "complex"
    },
    {
        "id": "2789",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?human ?humanLabel ?mastodon ?url (GROUP_CONCAT(?domain_label;separator=\" | \") AS ?domains) WHERE {\n?human wdt:P31 wd:Q5 .\n?human wdt:P4033 ?mastodon .\n?human wdt:P106 wd:Q1650915 .\n?human wdt:P101 ?domain .\n?domain rdfs:label ?domain_label .\nFILTER (LANG(?domain_label) = \"en\")\nBIND(REPLACE(?mastodon, \"@.*\", \"\") AS ?userhandle)\nBIND(REPLACE(?mastodon, \".*@\", \"\") AS ?host)\nBIND(URI(CONCAT(\"https://\", ?host, \"/@\", ?userhandle)) AS ?url)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?human ?humanLabel ?mastodon ?url\nORDER BY ?domains",
        "complexity_description": "Multiple joins, filters, and functions",
        "complexity": "complex"
    },
    {
        "id": "2790",
        "valid_gpt_response": true,
        "query": "SELECT\n?language\n?languageLabel\n?count\n?langLemmas\nWITH {\nSELECT DISTINCT ?language {\n[] dct:language ?language.\n}\n} AS %0\nWITH {\nSELECT DISTINCT ?language ?langLemma {\nINCLUDE %0.\n[]\ndct:language ?language;\nwikibase:lemma ?lemma.\nBIND(LANG(?lemma) AS ?langLemma).\n}\n} AS %1\nWITH {\nSELECT ?language (COUNT(*) AS ?count) {\nINCLUDE %1.\n}\nGROUP BY ?language\n} AS %2\nWITH {\nSELECT\n?language\n(GROUP_CONCAT(CONCAT(?langLemma); SEPARATOR = \", \") AS ?langLemmas)\n{\nINCLUDE %1.\n}\nGROUP BY ?language\n} AS %3\n{\nINCLUDE %2.\nINCLUDE %3.\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\"}.\n}\nORDER BY DESC(?count) ASC(LCASE(?languageLabel))",
        "complexity_description": "Multiple subqueries, grouping, and aggregation functions",
        "complexity": "complex"
    },
    {
        "id": "2791",
        "valid_gpt_response": true,
        "query": "SELECT ?eponym ?eponymLabel ?eponymDescription WHERE {\nwd:Q1443306 wdt:P31/wdt:P279* wd:Q3114762;\nwdt:P138 ?eponym.\nwd:Q85767253 wdt:P31/wdt:P279* wd:Q259864;\nwdt:P138 ?eponym.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns with UNION and SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "2792",
        "valid_gpt_response": true,
        "query": "SELECT ?employerLabel ?logoImage ?NoVBIBFix (COUNT(?vbib) AS ?NoVBIB) WITH {\nSELECT DISTINCT ?employer ?vbib ?logoImage WHERE {\n?vbib wdt:P179 wd:Q108784175.\n?presentation wdt:P5072 ?vbib;\nwdt:P585 ?pit.\nBIND(YEAR(?pit) AS ?year)\n?presentation wdt:P50 ?author.\n?author p:P108 ?employerStmt.\n?employerStmt ps:P108 ?employer.\nOPTIONAL { ?employerStmt pq:P580 ?empStart.\n}\nFILTER (?pit > ?empStart)\nOPTIONAL { ?employerStmt pq:P582 ?empEnd.\n}\nFILTER ((bound(?empEnd) && ?pit < ?empEnd) || (!bound(?empEnd) && ?pit > ?empStart) )\nOPTIONAL {?employer wdt:P154 ?logoImage.}\n}\n}AS %results\nWHERE {\nINCLUDE %results.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n{\nSELECT (COUNT(?vbib) AS ?NoVBIBFix) WHERE {\n?vbib wdt:P179 wd:Q108784175.\n}\n}\n}\nGROUP BY ?employerLabel ?NoVBIBFix ?logoImage\nHAVING (COUNT(?vbib)=?NoVBIBFix)",
        "complexity_description": "Multiple subqueries, optional patterns, and filters",
        "complexity": "complex"
    },
    {
        "id": "2793",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel WHERE {\n?item wdt:P17 wd:Q189. hint:Prior hint:runFirst true.\n?item p:P31/ps:P31/wdt:P279* wd:Q8502.\nFILTER NOT EXISTS {?article schema:about ?item ;\nschema:isPartOf <https://ceb.wikipedia.org/> .}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\n}",
        "complexity_description": "Multiple triple patterns, filter not exists and service call",
        "complexity": "complex"
    },
    {
        "id": "2794",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?countryLabel ?item ?itemLabel ?masto_ac WHERE {\n?item wdt:P31/wdt:P279* wd:Q3918 .\n#?item wdt:P131 ?council .\n#?council wdt:P31 wd:Q15060255 .\n?item wdt:P17 ?country .\n?item wdt:P4033 ?masto_ac .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?countryLabel ?itemLabel",
        "complexity_description": "Multiple triple patterns, optional and union operators absent",
        "complexity": "medium"
    },
    {
        "id": "2795",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?label_es ?label_en ?label_pt_br ?namedAfter ?namedAfterLabel ?image WHERE {\n?item wdt:P279* wd:Q115690264 .\nOPTIONAL { ?item wdt:P18 ?image . }\nOPTIONAL {?item wdt:P138 ?namedAfter }\nOPTIONAL {?item rdfs:label ?label_es .\nFILTER (LANG(?label_es) = \"es\")\n}\nOPTIONAL{\n?item rdfs:label ?label_en .\nFILTER (LANG(?label_en) = \"en\")\n}\nOPTIONAL {\n?item rdfs:label ?label_pt_br .\nFILTER (LANG(?label_pt_br) = \"pt-br\")\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple optional patterns, language filters and service call",
        "complexity": "complex"
    },
    {
        "id": "2796",
        "valid_gpt_response": true,
        "query": "SELECT ?conceptLabel (count(*) as ?individuals)\nWHERE\n{\n?individual wdt:P31 ?concept ;\nwdt:P4033 ?mastodon .\n?concept rdfs:label ?conceptLabel .\nFILTER(lang(?conceptLabel) = \"en\")\n}\nGROUP BY ?concept ?conceptLabel\nORDER BY desc(?individuals)",
        "complexity_description": "Multiple triple patterns, filter, group by and order by",
        "complexity": "medium"
    },
    {
        "id": "2797",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?name ?followers ?subscribers WHERE\n{\n{\n?item p:P4033 ?stat .\n?stat ps:P4033 ?name .\nOPTIONAL {?stat pq:P8687 ?followers . }\nOPTIONAL {?stat pq:P3744 ?subscribers . }\n}\nUNION\n{\n?item p:P8687 ?stat .\n?stat ps:P8687 ?followers .\n?stat pq:P4033 ?name .\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY (!bound(?followers)) ?followers (!bound(?subscribers)) ?subscribers",
        "complexity_description": "Multiple UNION patterns, OPTIONAL clauses, and SERVICE keyword usage",
        "complexity": "complex"
    },
    {
        "id": "2798",
        "valid_gpt_response": true,
        "query": "select ?sense ?lemma ?catLabel ?section ?page {\n{ ?sense ^ontolex:sense ?elem . ?elem wikibase:lemma ?lemma ; wikibase:lexicalCategory ?cat . }\nunion\n{ ?sense rdfs:label ?lemma . filter(lang(?lemma)=\"en\") }\n?sense p:P1343 [ ps:P1343 wd:Q115683766 ; pq:P958 ?section ; pq:P304 ?page ] .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} order by xsd:integer(?page)",
        "complexity_description": "Multiple unions, filters and service calls",
        "complexity": "complex"
    },
    {
        "id": "2799",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?org ?orgLabel ?orgDescription ?mastodonName ?pic\nWHERE {\n?org wdt:P4033 ?mastodonName .\n?org wdt:P31 ?type .\n?type wdt:P279* wd:Q163740 .\nOPTIONAL { ?org wdt:P18 ?pic . }\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"en\"\n}\n}",
        "complexity_description": "Multiple triple patterns, optional block and service query",
        "complexity": "medium"
    },
    {
        "id": "2800",
        "valid_gpt_response": true,
        "query": "SELECT (count(?album) as ?albums) ?P407Label ?P407 WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?album wdt:P31 wd:Q482994.\nOPTIONAL { ?album wdt:P407 ?P407. }\n}\nGROUP BY ?P407 ?P407Label\nORDER BY DESC(?albums) ASC(?P407)\n#Do you know how to improve this query; make it smarter, better, more elegant?\n#If you do, please don't hesitate to drop us a line at User_talk:Moebeus or join\n#the conversation over on Telegram: https://t.me/exmusica",
        "complexity_description": "Multiple patterns with OPTIONAL clause and GROUP BY",
        "complexity": "medium"
    },
    {
        "id": "2801",
        "valid_gpt_response": true,
        "query": "SELECT ?state ?stateLabel ?alpha3 WHERE {\n?state p:P463 ?memberOfStatement.\n?memberOfStatement a wikibase:BestRank;\nps:P463 wd:Q458.\nMINUS { ?memberOfStatement pq:P582 ?endTime. }\n?state wdt:P298 ?alpha3.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, MINUS clause and SERVICE keyword",
        "complexity": "complex"
    },
    {
        "id": "2802",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?nomLabel ?lieuLabel WHERE {\n?item wdt:P31/wdt:P279* wd:Q3305213 . # peintures\n?item wdt:P170 ?nom .\n?nom wdt:P21 wd:Q6581072 . # oeuvre cree par une femme\n?item wdt:P195 wd:Q3044768 . # departement des peintures du musee du Louvre\nOPTIONAL{?item wdt:P276 ?lieu}. # emplacement des oeuvres\nMINUS{?item wdt:P195 wd:Q19013512}. # retrait des oeuvres spoliees\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"fr\" . }\n}\nORDER BY ?lieuLabel",
        "complexity_description": "Multiple joins, optional clause and minus filter",
        "complexity": "medium"
    },
    {
        "id": "2803",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?l ?lLabel ?coord ?number ?layer\nWITH\n{\nSELECT DISTINCT ?l ?lLabel ?coord (COUNT(DISTINCT ?item) AS ?number)\nWHERE\n{\n?item wdt:P396 [] ; wdt:P19 ?l ; wdt:P27 wd:Q38 . ?l wdt:P625 ?coord .\n}\nGROUP BY ?l ?lLabel ?coord ?number\n} AS %what\nWHERE\n{\nINCLUDE %what\n# BIND( IF(?number < 6, \"1-5\", IF(?number < 21, \"6-20\", IF(?number < 51, \"21-50\",\"51+\"))) AS ?layer)\nBIND( IF(?number < 31, \"1-30\", IF(?number < 51, \"31-50\",\"51+\")) AS ?layer)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"it\". }\n}\nGROUP BY ?l ?lLabel ?coord ?number ?layer\nORDER BY DESC(?number)",
        "complexity_description": "Multiple subqueries, grouping, and conditional bindings",
        "complexity": "complex"
    },
    {
        "id": "2804",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?lighthouse ?lighthouseName ?countryLabel (concat(str(?latitude), \", \", str(?longitude)) AS ?coordinates) ?height ?builtDateLabel ?functionalLabel ?wikipediaUrl\nWHERE\n{\n?lighthouse wdt:P31 wd:Q39715. # find all instances of lighthouse\n?country wdt:P30 wd:Q18. # find all instances of country in South America\n?lighthouse wdt:P17 ?country. # find lighthouses in South American countries\nOPTIONAL {\n?lighthouse wdt:P17 ?country.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nOPTIONAL {\n?lighthouse wdt:P625 ?coordinates.\nBIND(xsd:float(STRAFTER(STR(?coordinates), \"Point(\")) AS ?longitude)\nBIND(xsd:float(STRAFTER(STR(?coordinates), \" \" )) AS ?latitude)\n}\nOPTIONAL { ?lighthouse wdt:P2048 ?height. }\nOPTIONAL { ?lighthouse wdt:P571 ?builtDate. }\nOPTIONAL {\n?lighthouse p:P1433/ps:P1433 ?wikipediaUrl. # get the English Wikipedia page URL\nFILTER (LANG(?wikipediaUrl) = '' || LANG(?wikipediaUrl) = 'en')\n}\nOPTIONAL {\n?lighthouse p:P1317 ?functionalClaim.\n?functionalClaim ps:P1317 ?functional.\nBIND(IF(?functional, \"Operational\", \"Not operational\") AS ?functionalLabel)\n}\nOPTIONAL {\n?lighthouse rdfs:label ?lighthouseName.\nFILTER (LANG(?lighthouseName) = 'en')\n}\nOPTIONAL {\n?lighthouse schema:description ?lighthouseName.\nFILTER (LANG(?lighthouseName) = 'en')\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?lighthouseName",
        "complexity_description": "Multiple optional patterns, complex filtering and binding",
        "complexity": "complex"
    },
    {
        "id": "2805",
        "valid_gpt_response": true,
        "query": "SELECT\n?parent ?parentLabel ?parent_born ?parent_genderLabel ?parent_positionLabel ?child ?childLabel ?child_born ?child_genderLabel ?child_positionLabel\nWHERE\n{?parent wdt:P31 wd:Q5;\nwdt:P106 wd:Q11774891; # occupation = ice hockey player\nwdt:P27 wd:Q33; # country of citizenship = Finland\nwdt:P569 ?parent_born;\nwdt:P40 ?child . # has child\nOPTIONAL {?parent wdt:P21 ?parent_gender.}\nOPTIONAL {?parent wdt:P413 ?parent_position .}\n?child wdt:P31 wd:Q5 ;\nwdt:P106 wd:Q11774891; # child's occupation = ice hockey player\nwdt:P569 ?child_born;\nOPTIONAL {?child wdt:P21 ?child_gender.}\nOPTIONAL {?child wdt:P413 ?child_position.}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple filters, optional patterns and service call",
        "complexity": "medium"
    },
    {
        "id": "2806",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?autore ?autoreLabel ?autoreDescription ?datanascita ?datamorte ?luogonascita ?luogonascitaLabel ?coord\nWHERE {\n?autore wdt:P27 ?p ; wdt:P570 ?datamorte ; ?id [] . VALUES ?p { wd:Q172579 wd:Q38 } . VALUES ?id { wdt:P214 wdt:P396 } .\nFILTER (\"1951-12-31\"^^xsd:dateTime < ?datamorte && ?datamorte < \"1953-01-01\"^^xsd:dateTime)\nOPTIONAL { ?autore wdt:P569 ?datanascita } .\nOPTIONAL { ?autore wdt:P19 ?luogonascita . ?luogonascita wdt:P625 ?coord } .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"it,en\". }\n}",
        "complexity_description": "Multiple filters, optional patterns and service call",
        "complexity": "complex"
    },
    {
        "id": "2807",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?antonym ?itemLabel ?antonymLabel\nWHERE\n{\n?item wdt:P461 ?antonym.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Simple query with single triple pattern and service call",
        "complexity": "simple"
    },
    {
        "id": "2808",
        "valid_gpt_response": true,
        "query": "SELECT ?ratio (COUNT(?q) AS ?nombre) WHERE {\n?q wdt:P31 wd:Q3305213 ; #tableau\nwdt:P195 wd:Q3329701 ; #au musee de Bretagne\nwdt:P2048 ?hauteur ; #avec une hauteur\nwdt:P2049 ?largeur . #avec une largeur\nBIND ( STR(?hauteur/?largeur) AS ?ratio ) #ratio de la hauteur et de la largeur\n}\nGROUP BY ?ratio",
        "complexity_description": "Uses BIND, COUNT, and GROUP BY",
        "complexity": "medium"
    },
    {
        "id": "2809",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?cheese ?cheeseLabel ?town ?townLabel ?image {\n?cheese wdt:P31*/wdt:P279* wd:Q10943 ; wdt:P138 ?town .\n?town wdt:P31*/wdt:P279* wd:Q486972 .\nOPTIONAL { ?cheese wdt:P18 ?image }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr,en\" }\n}\nORDER BY ?townLabel",
        "complexity_description": "Multiple triple patterns, optional clause and service call",
        "complexity": "medium"
    },
    {
        "id": "2810",
        "valid_gpt_response": true,
        "query": "SELECT ?item (SAMPLE(?coords) AS ?coord) ?itemLabel ?out WITH {\nSELECT DISTINCT ?out ?depth WHERE {\nSERVICE <https://query.wikidata.org/bigdata/namespace/categories/sparql> {\nSERVICE mediawiki:categoryTree {\nbd:serviceParam mediawiki:start <https://commons.wikimedia.org/wiki/Category:Villages_in_Saale-Holzland-Kreis> .\nbd:serviceParam mediawiki:direction 'Reverse' .\nbd:serviceParam mediawiki:depth 1 . # direct subcategories only\n}\n}\n}\n} AS %subquery WHERE {\nINCLUDE %subquery .\nFILTER(?depth = 1) . # remove the host category from results\nOPTIONAL {\n?out schema:about/wdt:P301? ?item .\nFILTER NOT EXISTS { ?item wdt:P31 wd:Q4167836 } # remove category items from results set\nOPTIONAL {\n?item wdt:P625 ?coords .\n}\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language 'de' }\n} GROUP BY ?item ?itemLabel ?out # to aggregate sample coordinates in case there are multiple P625 values in items",
        "complexity_description": "Multiple services, subqueries, and filters",
        "complexity": "complex"
    },
    {
        "id": "2811",
        "valid_gpt_response": true,
        "query": "SELECT ?project ?total_redirects ?intentional_redirects ?pct_intentional ?other_redirects ?pct_other\nWHERE {\n{\nSELECT ?project (COUNT(DISTINCT ?intentional_sitelink) AS ?intentional_redirects) (COUNT(DISTINCT ?other_sitelink) AS ?other_redirects) WHERE {\n{\n?intentional_sitelink schema:isPartOf ?project; wikibase:badge wd:Q70894304 .\n} UNION {\n?other_sitelink schema:isPartOf ?project; wikibase:badge wd:Q70893996 .\n}\n} GROUP BY ?project\n}\nBIND (?intentional_redirects + ?other_redirects AS ?total_redirects) .\nBIND ((ROUND(1000.0 * ?intentional_redirects / ?total_redirects) / 10.0) AS ?pct_intentional) .\nBIND ((ROUND(1000.0 * ?other_redirects / ?total_redirects) / 10.0) AS ?pct_other) .\n} ORDER BY DESC(?total_redirects)",
        "complexity_description": "Multiple subqueries, UNION operator, and BIND functions",
        "complexity": "complex"
    },
    {
        "id": "2812",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?airport ?airportLabel ?airportCountry ?airportCountryLabel ?person ?personLabel (sample(?birth) as ?birth) (SAMPLE(?death) as ?death) WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n?airport (wdt:P31/(wdt:P279*)) wd:Q1248784;\nwdt:P17 ?airportCountry;\np:P138 ?statement.\n?statement ps:P138 ?person.\n?person wdt:P31 wd:Q5;\nwdt:P106 wd:Q49757.\nOPTIONAL { ?person wdt:P569 ?birth }\nOPTIONAL { ?person wdt:P570 ?death }\nFILTER(NOT EXISTS { ?statement pq:P582 ?endTime. })\n} group by ?airport ?airportLabel ?airportCountry ?airportCountryLabel ?person ?personLabel ?personImage",
        "complexity_description": "Multiple joins, subqueries, and filters",
        "complexity": "complex"
    },
    {
        "id": "2813",
        "valid_gpt_response": true,
        "query": "SELECT ?loc ?locLabel ?item ?itemLabel ?coord ?layer WHERE {\n?loc wdt:P131 wd:Q647 ;\nwdt:P138 ?item .\n?item wdt:P31 ?type ; wdt:P625 ?coord .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?type rdfs:label ?layer }\n}",
        "complexity_description": "Multiple joins, service call and filter",
        "complexity": "medium"
    },
    {
        "id": "2814",
        "valid_gpt_response": true,
        "query": "SELECT ?loc ?locLabel ?item ?itemLabel ?coordRennes ?dist ?rgb WHERE {\n?loc wdt:P131 wd:Q647 ;\nwdt:P138 ?item ;\nwdt:P625 ?coordRennes .\n?item wdt:P31 ?type ; wdt:P625 ?coord .\nBIND(ROUND(geof:distance(?coordRennes, ?coord)*10)/10 AS ?dist ).\nBIND( IF( ?dist < 400 , \"FBB806\", IF ( ?dist < 1000 , \"DE4710\" , IF ( ?dist < 2000 , \"DE4710\" , \"940E0E\" ) ) ) AS ?rgb).\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple joins, geospatial function, conditional binding",
        "complexity": "complex"
    },
    {
        "id": "2815",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?itemDescription ?depth {\nSERVICE gas:service {\ngas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.SSSP\" ;\ngas:in wd:Q312032 ;\ngas:traversalDirection \"Forward\" ;\ngas:out ?item ;\ngas:out1 ?depth ;\ngas:linkType wdt:P40 .\n}\nFILTER NOT EXISTS {?item wdt:P4638 []}\nSERVICE wikibase:label {bd:serviceParam wikibase:language \"en\" }\n}\nORDER BY DESC(?depth)\nLIMIT 100",
        "complexity_description": "Multiple services, filter and order by",
        "complexity": "complex"
    },
    {
        "id": "2816",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?geo ?type ?typeLabel (SAMPLE(?_image) AS ?image) WHERE {\n?type wdt:P279* wd:Q3839081 .\n?item wdt:P31 ?type ;\nwdt:P625 ?geo .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\nOPTIONAL { ?item wdt:P18 ?_image }\n}\nGROUP BY ?item ?itemLabel ?geo ?type ?typeLabel",
        "complexity_description": "Multiple joins, optional clause and group by",
        "complexity": "complex"
    },
    {
        "id": "2817",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?butir ?nama ?koord ?lat ?lon\nWHERE\n{\nhint:Query hint:optimizer \"None\" .\n?butir wdt:P17* wd:Q833 .\n?butir wdt:P31/wdt:P279* wd:Q33506 .\n?butir wdt:P625 ?koord .\n?butir p:P625 ?coordinate .\n?coordinate psv:P625 ?coordinate_node .\n?coordinate_node wikibase:geoLatitude ?lat .\n?coordinate_node wikibase:geoLongitude ?lon .\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"ms\" .\n?butir rdfs:label ?nama\n}\n}\nORDER BY ASC (?nama)",
        "complexity_description": "Multiple joins, subqueries and filters",
        "complexity": "complex"
    },
    {
        "id": "2818",
        "valid_gpt_response": true,
        "query": "SELECT ?loc ?locLabel ?item ?itemLabel ?coord ?layer WHERE {\n?loc wdt:P131 wd:Q1773;\nwdt:P138 ?item.\n?item wdt:P31 ?type;\nwdt:P625 ?coord.\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"lv,en\".\n?type rdfs:label ?layer.\n}\nSERVICE wikibase:label {\nbd:serviceParam wikibase:language \"lv,en\".\n}\n}",
        "complexity_description": "Multiple services, multiple triple patterns",
        "complexity": "medium"
    },
    {
        "id": "2819",
        "valid_gpt_response": true,
        "query": "SELECT distinct ?country ?countryLabel ?area\nWHERE {\n{SELECT distinct ?country WHERE {\n?country wdt:P31/wdt:P279* wd:Q3624078.\n} }\nMINUS\n{SELECT distinct ?country #(COUNT(?river) AS ?cnt)\nWHERE {\n?river wdt:P31/wdt:P279* wd:Q4022.\n?river p:P17 [ps:P17 ?country].\n} GROUP BY ?country\n}\nMINUS {?country wdt:P31 wd:Q3024240}\nMINUS {?country wdt:P31 wd:Q11514315}\nMINUS {?country wdt:P31 wd:Q7840353}\nMINUS {?country wdt:P31 wd:Q11514315}\nMINUS {?country wdt:P31 wd:Q1790360}\nOPTIONAL {?country wdt:P2046 ?area}\n# MINUS %includes\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?area",
        "complexity_description": "Multiple nested queries, multiple MINUS clauses, and OPTIONAL clause",
        "complexity": "complex"
    },
    {
        "id": "2820",
        "valid_gpt_response": true,
        "query": "SELECT ?p ?pLabel ?url WHERE {\n?p wdt:P1630 ?url .\nFILTER ( REGEX ( ?url , \"http://data.culture.fr/thesaurus/page/ark:/67717/\" ) )\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?p",
        "complexity_description": "Filter and service usage",
        "complexity": "medium"
    },
    {
        "id": "2821",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel\nWHERE\n{\n?item wdt:P31 wd:Q5 ;\nwdt:P19/wdt:P17* wd:Q237 .\nFILTER NOT EXISTS { ?item wdt:P19 wd:Q145694 }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Multiple triple patterns, property paths and filter",
        "complexity": "medium"
    },
    {
        "id": "2822",
        "valid_gpt_response": true,
        "query": "SELECT ?station ?stationLabel ?cds ?line ?layer WHERE {\n{ SERVICE gas:service {\ngas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.BFS\" ;\ngas:in wd:Q3374603 ; # Umea central station\n# gas:target wd:Q18337797 ; # Didymoteicho railway station. From here on, adjacent stations rapidly vanish\ngas:out ?station ;\ngas:out1 [] ;\ngas:out2 ?pred .\ngas:program gas:linkType wdt:P197 . } # adjacent station\n}\nFILTER(?station != wd:Q3374603)\n?pred p:P625/psv:P625/wikibase:geoLatitude ?lat1 ;\np:P625/psv:P625/wikibase:geoLongitude ?lon1 .\n?station p:P625/psv:P625/wikibase:geoLatitude ?lat2 ;\np:P625/psv:P625/wikibase:geoLongitude ?lon2 .\nBIND(CONCAT('LINESTRING(', STR(?lon1), ' ', STR(?lat1), ',', STR(?lon2), ' ', STR(?lat2), ')') AS ?str) .\nBIND(STRDT(?str, geo:wktLiteral) AS ?line)\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple services, filters, and bindings with geospatial calculations",
        "complexity": "complex"
    },
    {
        "id": "2823",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel WHERE\n{\n?item wdt:P31/wdt:P279* wd:Q978.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "complexity_description": "Simple query with a single triple pattern and a service call",
        "complexity": "simple"
    },
    {
        "id": "2824",
        "valid_gpt_response": true,
        "query": "SELECT (count(?thing) as ?things) ?P407Label ?P407 WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?thing wdt:P31 wd:Q7725634.\nOPTIONAL { ?thing wdt:P407 ?P407. }\n}\nGROUP BY ?P407 ?P407Label\nORDER BY DESC(?things) ASC(?P407)\n#Do you know how to improve this query; make it smarter, better, more elegant?\n#If you do, please don't hesitate to drop us a line at User_talk:Moebeus or join\n#the conversation over on Telegram: https://t.me/exmusica",
        "complexity_description": "Multiple patterns with OPTIONAL clause and GROUP BY",
        "complexity": "medium"
    },
    {
        "id": "2825",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?human ?humanLabel (GROUP_CONCAT(DISTINCT ?propertyLabel; separator=\", \") as ?relationship) WHERE {\n?human ?predicate ?statement .\n?statement ?predicate2 wd:Q503424. hint:Prior hint:runFirst true.\n?property wikibase:claim ?predicate.\nFILTER NOT EXISTS { ?human wdt:P496 []. }\n?human wdt:P31 wd:Q5.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".\n?human rdfs:label ?humanLabel .\n?property rdfs:label ?propertyLabel .}\n} group by ?human ?humanLabel",
        "complexity_description": "Multiple joins, filters, and aggregations",
        "complexity": "complex"
    },
    {
        "id": "2826",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?item ?itemLabel ?itemCountry ?itemCountryLabel ?work ?workLabel WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n?item wdt:P31/wdt:P279* wd:Q55488;\nwdt:P17 ?itemCountry;\np:P138 ?statement.\n?statement ps:P138/wdt:P138* ?work.\n?work wdt:P31/wdt:P279* wd:Q7725634.\n}",
        "complexity_description": "Multiple joins, property paths and service calls",
        "complexity": "complex"
    },
    {
        "id": "2827",
        "valid_gpt_response": true,
        "query": "SELECT (count(?album) as ?albums) ?P407Label ?P407 WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?album wdt:P31 wd:Q482994.\nOPTIONAL { ?album wdt:P407 ?P407. }\n}\nGROUP BY ?P407 ?P407Label\nORDER BY DESC(?albums) ASC(?P407)\n#Do you know how to improve this query; make it smarter, better, more elegant?\n#If you do, please don't hesitate to drop us a line at User_talk:Moebeus or join\n#the conversation over on Telegram: https://t.me/exmusica",
        "complexity_description": "Multiple patterns with OPTIONAL clause and GROUP BY",
        "complexity": "medium"
    },
    {
        "id": "2828",
        "valid_gpt_response": true,
        "query": "SELECT\n?P277\n?P277Label\n?P31\n?P31Label\n?software\n?softwareLabel\nWITH {\nSELECT DISTINCT ?license {\n?license wdt:P629*/wdt:P31/wdt:P279* wd:Q3943414.\n}\n} AS %0\nWITH {\nSELECT DISTINCT ?software {\nINCLUDE %0.\n# \"GNU Emacs\" (Q1252773) has copyright license \"GPLv3+\" (Q27016754)\n# \"GPLv3+\" (Q27016754) is en edition or translation of \"GNU GPL\" (Q7603)\n# \"GNU GPL\" (Q7603) is an instance of \"free software license\" (Q3943414)\n{?software wdt:P275 ?license}\nUNION\n# \"Vim\" is an instance of \"free and open-source software\" (Q506883)\n# \"free and open-source software\" (Q506883) is a subclass of \"free software\" (Q341)\n{?software wdt:P31/wdt:P279* wd:Q341}.\n}\n} AS %1\nWITH {\nSELECT DISTINCT ?software ?P31 ?P277 {\nINCLUDE %1.\n?software\nwdt:P31 ?P31;\nwdt:P277 ?P277.\n}\n} AS %2\n{\nINCLUDE %2.\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\"}\n}\nORDER BY\nASC(LCASE(?P277Label))\nASC(LCASE(?P31Label))",
        "complexity_description": "Multiple nested WITH clauses, UNION operator, and SERVICE keyword usage",
        "complexity": "complex"
    },
    {
        "id": "2829",
        "valid_gpt_response": true,
        "query": "SELECT ?WorldPride ?label ?time ?image WHERE {\n?WorldPride wdt:P31 wd:Q4127414;\nrdfs:label ?label.\n{ ?WorldPride wdt:P585 ?time. }\nUNION\n{ ?WorldPride wdt:P580 ?time. }\nOPTIONAL { ?WorldPride wdt:P18 ?image. }\nFILTER((LANG(?label)) = \"en\")\n}\nLIMIT 20",
        "complexity_description": "Multiple patterns, UNION and OPTIONAL clauses",
        "complexity": "medium"
    },
    {
        "id": "2830",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?character ?characterLabel WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?item wdt:P31 wd:Q35666 .\n?item wdt:P138 ?character .\n?character wdt:P1441 wd:Q174596 .\n}",
        "complexity_description": "Multiple triple patterns with SERVICE clause",
        "complexity": "medium"
    },
    {
        "id": "2831",
        "valid_gpt_response": true,
        "query": "SELECT ?licLabel (COUNT(?lic) AS ?count) WHERE {\n?item wdt:P31/wdt:P279* wd:Q7397 ;\nwdt:P275 ?lic .\nFILTER EXISTS { ?lic wdt:P31/wdt:P279* wd:Q196294 } .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n} GROUP BY ?licLabel\nORDER BY DESC(?count)",
        "complexity_description": "Multiple triple patterns, EXISTS filter, SERVICE clause, and aggregation",
        "complexity": "complex"
    },
    {
        "id": "2832",
        "valid_gpt_response": true,
        "query": "select *\nwith {\nselect distinct ?l {\n?l dct:language wd:Q188;\nwikibase:lexicalCategory wd:Q1084;\nwikibase:lemma ?lemma;\nwdt:P5238 ?comb1;\nwdt:P5238 ?comb2 filter (?comb1 != ?comb2).\n?comb1 wikibase:lemma ?combl1.\noptional {\n?comb1 ontolex:lexicalForm [\nwikibase:grammaticalFeature wd:Q107614077;\nontolex:representation ?combf1\n]\n}\n?comb2 wikibase:lemma ?combl2.\nbind(concat(replace(coalesce(?combf1, ?combl1), \"-$\", \"\"), lcase(replace(?combl2, \"^-\", \"\"))) as ?genlemma).\nfilter(?lemma = ?genlemma).\n}\n} as %ok\nwhere {\n?l dct:language wd:Q188;\nwikibase:lexicalCategory wd:Q1084;\nwikibase:lemma ?lemma;\nwdt:P5238 ?comb.\n?comb wikibase:lemma ?combl.\nminus { include %ok }\n} order by ?lemma ?comb",
        "complexity_description": "Multiple filters, optional clause, and subqueries",
        "complexity": "complex"
    },
    {
        "id": "2833",
        "valid_gpt_response": true,
        "query": "select ?feat ?en (count(*) as ?total)\nwith {\nselect * {\nvalues ?lexcat { wd:Q1084 wd:Q147276 }\n?l dct:language wd:Q1860;\nwikibase:lexicalCategory ?lexcat;\nontolex:lexicalForm ?f.\n?f wikibase:grammaticalFeature ?feat.\n}\n} as %feats\n{\ninclude %feats.\n?feat rdfs:label ?en filter (lang(?en) = \"en\").\n} group by ?feat ?en order by desc(?total) ?en",
        "complexity_description": "Multiple subqueries, grouping and filtering",
        "complexity": "complex"
    },
    {
        "id": "2834",
        "valid_gpt_response": true,
        "query": "SELECT ?country ?countryLabel ?lifeExpectancy\nWHERE\n{\n?country wdt:P31 wd:Q6256. # instance of country\n?country p:P2250/ps:P2250 ?lifeExpectancy. # life expectancy\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}\nORDER BY DESC(?lifeExpectancy)",
        "complexity_description": "Simple query with 2 triple patterns and a service call",
        "complexity": "simple"
    },
    {
        "id": "2835",
        "valid_gpt_response": true,
        "query": "SELECT ?item ?itemLabel ?coord ?image\nWHERE\n{\n?item wdt:P31 wd:Q39486269 .\n?item wdt:P17 ?o .\nVALUES ?o{ wd:Q183 wd:Q40 }\n?item wdt:P625 ?coord .\n?item wdt:P18 ?image .\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "complexity_description": "Multiple triple patterns, VALUES clause and SERVICE keyword",
        "complexity": "medium"
    },
    {
        "id": "2836",
        "valid_gpt_response": true,
        "query": "SELECT DISTINCT ?train_wreck ?train_wreckLabel ?number_of_deaths ?countryLabel WHERE {\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n?train_wreck wdt:P31 wd:Q1078765;\nwdt:P1120 ?number_of_deaths.\nOPTIONAL { ?train_wreck wdt:P17 ?country. }\n}\nORDER BY DESC (?number_of_deaths)\nLIMIT 124",
        "complexity_description": "Multiple triple patterns, optional clause and ordering",
        "complexity": "medium"
    },
    {
        "id": "2837",
        "valid_gpt_response": true,
        "query": "select distinct ?item1 ?article1 ?item2 ?article2 where\n{\n{ ?item1 wdt:P26 ?item2 } union { ?item2 wdt:P26 ?item1 }\nfilter(str(?item1) > str(?item2)) .\n?item1 wdt:P31 wd:Q5 . ?item2 wdt:P31 wd:Q5 .\n?article1 schema:about ?item1 . ?article1 schema:isPartOf <https://en.wikipedia.org/> .\n?article2 schema:about ?item2 . ?article2 schema:isPartOf <https://en.wikipedia.org/> .\n}",
        "complexity_description": "Multiple filters, unions and multiple triple patterns",
        "complexity": "complex"
    }
]